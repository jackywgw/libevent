cscope 15 $HOME/test/libevent/libevent-2.0.21-stable -q 0000006240 0001323495
	@WIN32-Code/event2/event-config.h

10 #i‚de‡
_EVENT_CONFIG_H_


11 
	#_EVENT_CONFIG_H_


	)

26 
	#_EVENT_DNS_USE_FTIME_FOR_ID
 1

	)

56 
	#_EVENT_HAVE_FCNTL_H
 1

	)

59 
	#_EVENT_HAVE_GETADDRINFO
 1

	)

62 
	#_EVENT_HAVE_GETNAMEINFO
 1

	)

65 
	#_EVENT_HAVE_GETPROTOBYNUMBER
 1

	)

68 
	#_EVENT_HAVE_GETSERVBYNAME
 1

	)

92 
	#_EVENT_HAVE_MEMORY_H
 1

	)

140 
	#_EVENT_HAVE_SIGNAL
 1

	)

146 
	#_EVENT_HAVE_STDARG_H
 1

	)

149 
	#_EVENT_HAVE_STDDEF_H
 1

	)

155 
	#_EVENT_HAVE_STDLIB_H
 1

	)

158 
	#_EVENT_HAVE_STRINGS_H
 1

	)

161 
	#_EVENT_HAVE_STRING_H
 1

	)

175 
	#_EVENT_HAVE_STRUCT_ADDRINFO
 1

	)

178 
	#_EVENT_HAVE_STRUCT_IN6_ADDR
 1

	)

181 
	#_EVENT_HAVE_STRUCT_IN6_ADDR_S6_ADDR16
 1

	)

184 
	#_EVENT_HAVE_STRUCT_IN6_ADDR_S6_ADDR32
 1

	)

187 
	#_EVENT_HAVE_STRUCT_SOCKADDR_IN6
 1

	)

196 
	#_EVENT_HAVE_STRUCT_SOCKADDR_STORAGE
 1

	)

232 
	#_EVENT_HAVE_SYS_STAT_H
 1

	)

238 
	#_EVENT_HAVE_SYS_TYPES_H
 1

	)

250 
	#_EVENT_HAVE_TIMERCLEAR
 1

	)

253 
	#_EVENT_HAVE_TIMERCMP
 1

	)

256 
	#_EVENT_HAVE_TIMERISSET
 1

	)

280 
	#_EVENT_NUMERIC_VERSION
 0x02001500

	)

283 
	#_EVENT_PACKAGE
 "libevít"

	)

286 
	#_EVENT_PACKAGE_BUGREPORT
 ""

	)

289 
	#_EVENT_PACKAGE_NAME
 ""

	)

292 
	#_EVENT_PACKAGE_STRING
 ""

	)

295 
	#_EVENT_PACKAGE_TARNAME
 ""

	)

298 
	#_EVENT_PACKAGE_VERSION
 ""

	)

305 
	#_EVENT_SIZEOF_INT
 4

	)

308 
	#_EVENT_SIZEOF_LONG
 4

	)

311 
	#_EVENT_SIZEOF_LONG_LONG
 8

	)

314 
	#_EVENT_SIZEOF_SHORT
 2

	)

317 #ifde‡
_WIN64


318 
	#_EVENT_SIZEOF_SIZE_T
 8

	)

320 
	#_EVENT_SIZEOF_SIZE_T
 4

	)

324 #ifde‡
_WIN64


325 
	#_EVENT_SIZEOF_VOID_P
 8

	)

327 
	#_EVENT_SIZEOF_VOID_P
 4

	)

331 
	#_EVENT_STDC_HEADERS
 1

	)

334 
	#_EVENT_TIME_WITH_SYS_TIME
 1

	)

337 
	#_EVENT_VERSION
 "2.0.21-°abÀ"

	)

340 
	#_EVENT___func__
 
__FUNCTION__


	)

347 #i‚de‡
_EVENT___˝lu•lus


348 
	#_EVENT_ölöe
 
__ölöe


	)

358 
	#_EVENT_sockÀn_t
 

	)

361 
	#_EVENT_ssize_t
 
SSIZE_T


	)

	@WIN32-Code/tree.h

27 #i‚def 
_SYS_TREE_H_


28 
	#_SYS_TREE_H_


	)

57 
	#SPLAY_HEAD
(
«me
, 
ty≥
) \

58 
	s«me
 { \

59 
ty≥
 *
•h_roŸ
; \

60 }

	)

62 
	#SPLAY_INITIALIZER
(
roŸ
) \

63 { 
NULL
 }

	)

65 
	#SPLAY_INIT
(
roŸ
) do { \

66 (
roŸ
)->
•h_roŸ
 = 
NULL
; \

67 } 0)

	)

69 
	#SPLAY_ENTRY
(
ty≥
) \

71 
ty≥
 *
•e_À·
; \

72 
ty≥
 *
•e_right
; \

73 }

	)

75 
	#SPLAY_LEFT
(
ñm
, 
fõld
Ë”lm)->fõld.
•e_À·


	)

76 
	#SPLAY_RIGHT
(
ñm
, 
fõld
Ë”lm)->fõld.
•e_right


	)

77 
	#SPLAY_ROOT
(
hód
Ë(hód)->
•h_roŸ


	)

78 
	#SPLAY_EMPTY
(
hód
Ë(
	`SPLAY_ROOT
(hódË=
NULL
)

	)

81 
	#SPLAY_ROTATE_RIGHT
(
hód
, 
tmp
, 
fõld
) do { \

82 
	`SPLAY_LEFT
((
hód
)->
•h_roŸ
, 
fõld
Ë
	`SPLAY_RIGHT
(
tmp
, field); \

83 
	`SPLAY_RIGHT
(
tmp
, 
fõld
Ë(
hód
)->
•h_roŸ
; \

84 (
hód
)->
•h_roŸ
 = 
tmp
; \

85 } 0)

	)

87 
	#SPLAY_ROTATE_LEFT
(
hód
, 
tmp
, 
fõld
) do { \

88 
	`SPLAY_RIGHT
((
hód
)->
•h_roŸ
, 
fõld
Ë
	`SPLAY_LEFT
(
tmp
, field); \

89 
	`SPLAY_LEFT
(
tmp
, 
fõld
Ë(
hód
)->
•h_roŸ
; \

90 (
hód
)->
•h_roŸ
 = 
tmp
; \

91 } 0)

	)

93 
	#SPLAY_LINKLEFT
(
hód
, 
tmp
, 
fõld
) do { \

94 
	`SPLAY_LEFT
(
tmp
, 
fõld
Ë(
hód
)->
•h_roŸ
; \

95 
tmp
 = (
hód
)->
•h_roŸ
; \

96 (
hód
)->
•h_roŸ
 = 
	`SPLAY_LEFT
((hód)->•h_roŸ, 
fõld
); \

97 } 0)

	)

99 
	#SPLAY_LINKRIGHT
(
hód
, 
tmp
, 
fõld
) do { \

100 
	`SPLAY_RIGHT
(
tmp
, 
fõld
Ë(
hód
)->
•h_roŸ
; \

101 
tmp
 = (
hód
)->
•h_roŸ
; \

102 (
hód
)->
•h_roŸ
 = 
	`SPLAY_RIGHT
((hód)->•h_roŸ, 
fõld
); \

103 } 0)

	)

105 
	#SPLAY_ASSEMBLE
(
hód
, 
node
, 
À·
, 
right
, 
fõld
) do { \

106 
	`SPLAY_RIGHT
(
À·
, 
fõld
Ë
	`SPLAY_LEFT
((
hód
)->
•h_roŸ
, field); \

107 
	`SPLAY_LEFT
(
right
, 
fõld
Ë
	`SPLAY_RIGHT
((
hód
)->
•h_roŸ
, field);\

108 
	`SPLAY_LEFT
((
hód
)->
•h_roŸ
, 
fõld
Ë
	`SPLAY_RIGHT
(
node
, field); \

109 
	`SPLAY_RIGHT
((
hód
)->
•h_roŸ
, 
fõld
Ë
	`SPLAY_LEFT
(
node
, field); \

110 } 0)

	)

114 
	#SPLAY_PROTOTYPE
(
«me
, 
ty≥
, 
fõld
, 
cmp
) \

115 
«me
##
	`_SPLAY
(«mê*, 
ty≥
 *); \

116 
«me
##
	`_SPLAY_MINMAX
(name *, ); \

117 
ty≥
 *
«me
##
	`_SPLAY_INSERT
(name *, type *); \

118 
ty≥
 *
«me
##
	`_SPLAY_REMOVE
(name *, type *); \

121 
__ölöe
 
ty≥
 * \

122 
«me
##
	`_SPLAY_FIND
(«mê*
hód
, 
ty≥
 *
ñm
) \

124 i‡(
	`SPLAY_EMPTY
(
hód
)) \

125 (
NULL
); \

126 
«me
##
	`_SPLAY
(
hód
, 
ñm
); \

127 i‡((
cmp
)(
ñm
, (
hód
)->
•h_roŸ
) == 0) \

128  (
hód
->
•h_roŸ
); \

129  (
NULL
); \

132 
__ölöe
 
ty≥
 * \

133 
«me
##
	`_SPLAY_NEXT
(«mê*
hód
, 
ty≥
 *
ñm
) \

135 
«me
##
	`_SPLAY
(
hód
, 
ñm
); \

136 i‡(
	`SPLAY_RIGHT
(
ñm
, 
fõld
Ë!
NULL
) { \

137 
ñm
 = 
	`SPLAY_RIGHT
”lm, 
fõld
); \

138 
	`SPLAY_LEFT
(
ñm
, 
fõld
Ë!
NULL
) { \

139 
ñm
 = 
	`SPLAY_LEFT
”lm, 
fõld
); \

142 
ñm
 = 
NULL
; \

143  (
ñm
); \

146 
__ölöe
 
ty≥
 * \

147 
«me
##
	`_SPLAY_MIN_MAX
(«mê*
hód
, 
vÆ
) \

149 
«me
##
	`_SPLAY_MINMAX
(
hód
, 
vÆ
); \

150  (
	`SPLAY_ROOT
(
hód
)); \

151 }

	)

156 
	#SPLAY_GENERATE
(
«me
, 
ty≥
, 
fõld
, 
cmp
) \

157 
ty≥
 * \

158 
«me
##
	`_SPLAY_INSERT
(«mê*
hód
, 
ty≥
 *
ñm
) \

160 i‡(
	`SPLAY_EMPTY
(
hód
)) { \

161 
	`SPLAY_LEFT
(
ñm
, 
fõld
Ë
	`SPLAY_RIGHT
”lm, fõldË
NULL
; \

163 
__comp
; \

164 
«me
##
	`_SPLAY
(
hód
, 
ñm
); \

165 
__comp
 = (
cmp
)(
ñm
, (
hód
)->
•h_roŸ
); \

166 if(
__comp
 < 0) { \

167 
	`SPLAY_LEFT
(
ñm
, 
fõld
ËSPLAY_LEFT((
hód
)->
•h_roŸ
, field);\

168 
	`SPLAY_RIGHT
(
ñm
, 
fõld
Ë(
hód
)->
•h_roŸ
; \

169 
	`SPLAY_LEFT
((
hód
)->
•h_roŸ
, 
fõld
Ë
NULL
; \

170 } i‡(
__comp
 > 0) { \

171 
	`SPLAY_RIGHT
(
ñm
, 
fõld
ËSPLAY_RIGHT((
hód
)->
•h_roŸ
, field);\

172 
	`SPLAY_LEFT
(
ñm
, 
fõld
Ë(
hód
)->
•h_roŸ
; \

173 
	`SPLAY_RIGHT
((
hód
)->
•h_roŸ
, 
fõld
Ë
NULL
; \

175  ((
hód
)->
•h_roŸ
); \

177 (
hód
)->
•h_roŸ
 = (
ñm
); \

178  (
NULL
); \

181 
ty≥
 * \

182 
«me
##
	`_SPLAY_REMOVE
(«mê*
hód
, 
ty≥
 *
ñm
) \

184 
ty≥
 *
__tmp
; \

185 i‡(
	`SPLAY_EMPTY
(
hód
)) \

186  (
NULL
); \

187 
«me
##
	`_SPLAY
(
hód
, 
ñm
); \

188 i‡((
cmp
)(
ñm
, (
hód
)->
•h_roŸ
) == 0) { \

189 i‡(
	`SPLAY_LEFT
((
hód
)->
•h_roŸ
, 
fõld
Ë=
NULL
) { \

190 (
hód
)->
•h_roŸ
 = 
	`SPLAY_RIGHT
((hód)->•h_roŸ, 
fõld
);\

192 
__tmp
 = 
	`SPLAY_RIGHT
((
hód
)->
•h_roŸ
, 
fõld
); \

193 (
hód
)->
•h_roŸ
 = 
	`SPLAY_LEFT
((hód)->•h_roŸ, 
fõld
);\

194 
«me
##
	`_SPLAY
(
hód
, 
ñm
); \

195 
	`SPLAY_RIGHT
((
hód
)->
•h_roŸ
, 
fõld
Ë
__tmp
; \

197  (
ñm
); \

199  (
NULL
); \

203 
«me
##
	`_SPLAY
(«mê*
hód
, 
ty≥
 *
ñm
) \

205 
ty≥
 
__node
, *
__À·
, *
__right
, *
__tmp
; \

206 
__comp
; \

208 
	`SPLAY_LEFT
(&
__node
, 
fõld
Ë
	`SPLAY_RIGHT
(&__node, fõldË
NULL
;\

209 
__À·
 = 
__right
 = &
__node
; \

211 (
__comp
 = (
cmp
)(
ñm
, (
hód
)->
•h_roŸ
))) { \

212 i‡(
__comp
 < 0) { \

213 
__tmp
 = 
	`SPLAY_LEFT
((
hód
)->
•h_roŸ
, 
fõld
); \

214 i‡(
__tmp
 =
NULL
) \

216 i‡((
cmp
)(
ñm
, 
__tmp
) < 0){ \

217 
	`SPLAY_ROTATE_RIGHT
(
hód
, 
__tmp
, 
fõld
); \

218 i‡(
	`SPLAY_LEFT
((
hód
)->
•h_roŸ
, 
fõld
Ë=
NULL
)\

221 
	`SPLAY_LINKLEFT
(
hód
, 
__right
, 
fõld
); \

222 } i‡(
__comp
 > 0) { \

223 
__tmp
 = 
	`SPLAY_RIGHT
((
hód
)->
•h_roŸ
, 
fõld
); \

224 i‡(
__tmp
 =
NULL
) \

226 i‡((
cmp
)(
ñm
, 
__tmp
) > 0){ \

227 
	`SPLAY_ROTATE_LEFT
(
hód
, 
__tmp
, 
fõld
); \

228 i‡(
	`SPLAY_RIGHT
((
hód
)->
•h_roŸ
, 
fõld
Ë=
NULL
)\

231 
	`SPLAY_LINKRIGHT
(
hód
, 
__À·
, 
fõld
); \

234 
	`SPLAY_ASSEMBLE
(
hód
, &
__node
, 
__À·
, 
__right
, 
fõld
); \

240 
«me
##
	`_SPLAY_MINMAX
(«mê*
hód
, 
__comp
) \

242 
ty≥
 
__node
, *
__À·
, *
__right
, *
__tmp
; \

244 
	`SPLAY_LEFT
(&
__node
, 
fõld
Ë
	`SPLAY_RIGHT
(&__node, fõldË
NULL
;\

245 
__À·
 = 
__right
 = &
__node
; \

248 i‡(
__comp
 < 0) { \

249 
__tmp
 = 
	`SPLAY_LEFT
((
hód
)->
•h_roŸ
, 
fõld
); \

250 i‡(
__tmp
 =
NULL
) \

252 i‡(
__comp
 < 0){ \

253 
	`SPLAY_ROTATE_RIGHT
(
hód
, 
__tmp
, 
fõld
); \

254 i‡(
	`SPLAY_LEFT
((
hód
)->
•h_roŸ
, 
fõld
Ë=
NULL
)\

257 
	`SPLAY_LINKLEFT
(
hód
, 
__right
, 
fõld
); \

258 } i‡(
__comp
 > 0) { \

259 
__tmp
 = 
	`SPLAY_RIGHT
((
hód
)->
•h_roŸ
, 
fõld
); \

260 i‡(
__tmp
 =
NULL
) \

262 i‡(
__comp
 > 0) { \

263 
	`SPLAY_ROTATE_LEFT
(
hód
, 
__tmp
, 
fõld
); \

264 i‡(
	`SPLAY_RIGHT
((
hód
)->
•h_roŸ
, 
fõld
Ë=
NULL
)\

267 
	`SPLAY_LINKRIGHT
(
hód
, 
__À·
, 
fõld
); \

270 
	`SPLAY_ASSEMBLE
(
hód
, &
__node
, 
__À·
, 
__right
, 
fõld
); \

271 }

	)

273 
	#SPLAY_NEGINF
 -1

	)

274 
	#SPLAY_INF
 1

	)

276 
	#SPLAY_INSERT
(
«me
, 
x
, 
y
Ë«me##
	`_SPLAY_INSERT
(x, y)

	)

277 
	#SPLAY_REMOVE
(
«me
, 
x
, 
y
Ë«me##
	`_SPLAY_REMOVE
(x, y)

	)

278 
	#SPLAY_FIND
(
«me
, 
x
, 
y
Ë«me##
	`_SPLAY_FIND
(x, y)

	)

279 
	#SPLAY_NEXT
(
«me
, 
x
, 
y
Ë«me##
	`_SPLAY_NEXT
(x, y)

	)

280 
	#SPLAY_MIN
(
«me
, 
x
Ë(
	`SPLAY_EMPTY
(xË? 
NULL
 \

281 : 
«me
##
	`_SPLAY_MIN_MAX
(
x
, 
SPLAY_NEGINF
))

	)

282 
	#SPLAY_MAX
(
«me
, 
x
Ë(
	`SPLAY_EMPTY
(xË? 
NULL
 \

283 : 
«me
##
	`_SPLAY_MIN_MAX
(
x
, 
SPLAY_INF
))

	)

285 
	#SPLAY_FOREACH
(
x
, 
«me
, 
hód
) \

286 (
x
Ë
	`SPLAY_MIN
(
«me
, 
hód
); \

287 (
x
Ë!
NULL
; \

288 (
x
Ë
	`SPLAY_NEXT
(
«me
, 
hód
, x))

	)

291 
	#RB_HEAD
(
«me
, 
ty≥
) \

292 
	s«me
 { \

293 
ty≥
 *
rbh_roŸ
; \

294 }

	)

296 
	#RB_INITIALIZER
(
roŸ
) \

297 { 
NULL
 }

	)

299 
	#RB_INIT
(
roŸ
) do { \

300 (
roŸ
)->
rbh_roŸ
 = 
NULL
; \

301 } 0)

	)

303 
	#RB_BLACK
 0

	)

304 
	#RB_RED
 1

	)

305 
	#RB_ENTRY
(
ty≥
) \

307 
ty≥
 *
rbe_À·
; \

308 
ty≥
 *
rbe_right
; \

309 
ty≥
 *
rbe_∑ª¡
; \

310 
rbe_cﬁ‹
; \

311 }

	)

313 
	#RB_LEFT
(
ñm
, 
fõld
Ë”lm)->fõld.
rbe_À·


	)

314 
	#RB_RIGHT
(
ñm
, 
fõld
Ë”lm)->fõld.
rbe_right


	)

315 
	#RB_PARENT
(
ñm
, 
fõld
Ë”lm)->fõld.
rbe_∑ª¡


	)

316 
	#RB_COLOR
(
ñm
, 
fõld
Ë”lm)->fõld.
rbe_cﬁ‹


	)

317 
	#RB_ROOT
(
hód
Ë(hód)->
rbh_roŸ


	)

318 
	#RB_EMPTY
(
hód
Ë(
	`RB_ROOT
(hódË=
NULL
)

	)

320 
	#RB_SET
(
ñm
, 
∑ª¡
, 
fõld
) do { \

321 
	`RB_PARENT
(
ñm
, 
fõld
Ë
∑ª¡
; \

322 
	`RB_LEFT
(
ñm
, 
fõld
Ë
	`RB_RIGHT
”lm, fõldË
NULL
; \

323 
	`RB_COLOR
(
ñm
, 
fõld
Ë
RB_RED
; \

324 } 0)

	)

326 
	#RB_SET_BLACKRED
(
bœck
, 
ªd
, 
fõld
) do { \

327 
	`RB_COLOR
(
bœck
, 
fõld
Ë
RB_BLACK
; \

328 
	`RB_COLOR
(
ªd
, 
fõld
Ë
RB_RED
; \

329 } 0)

	)

331 #i‚de‡
RB_AUGMENT


332 
	#RB_AUGMENT
(
x
)

	)

335 
	#RB_ROTATE_LEFT
(
hód
, 
ñm
, 
tmp
, 
fõld
) do { \

336 (
tmp
Ë
	`RB_RIGHT
(
ñm
, 
fõld
); \

337 i‡((
	`RB_RIGHT
(
ñm
, 
fõld
Ë
	`RB_LEFT
(
tmp
, field))) { \

338 
	`RB_PARENT
(
	`RB_LEFT
(
tmp
, 
fõld
), fõldË(
ñm
); \

340 
	`RB_AUGMENT
(
ñm
); \

341 i‡((
	`RB_PARENT
(
tmp
, 
fõld
ËRB_PARENT(
ñm
, field))) { \

342 i‡((
ñm
Ë=
	`RB_LEFT
(
	`RB_PARENT
”lm, 
fõld
), field)) \

343 
	`RB_LEFT
(
	`RB_PARENT
(
ñm
, 
fõld
), fõldË(
tmp
); \

345 
	`RB_RIGHT
(
	`RB_PARENT
(
ñm
, 
fõld
), fõldË(
tmp
); \

347 (
hód
)->
rbh_roŸ
 = (
tmp
); \

348 
	`RB_LEFT
(
tmp
, 
fõld
Ë(
ñm
); \

349 
	`RB_PARENT
(
ñm
, 
fõld
Ë(
tmp
); \

350 
	`RB_AUGMENT
(
tmp
); \

351 i‡((
	`RB_PARENT
(
tmp
, 
fõld
))) \

352 
	`RB_AUGMENT
(
	`RB_PARENT
(
tmp
, 
fõld
)); \

353 } 0)

	)

355 
	#RB_ROTATE_RIGHT
(
hód
, 
ñm
, 
tmp
, 
fõld
) do { \

356 (
tmp
Ë
	`RB_LEFT
(
ñm
, 
fõld
); \

357 i‡((
	`RB_LEFT
(
ñm
, 
fõld
Ë
	`RB_RIGHT
(
tmp
, field))) { \

358 
	`RB_PARENT
(
	`RB_RIGHT
(
tmp
, 
fõld
), fõldË(
ñm
); \

360 
	`RB_AUGMENT
(
ñm
); \

361 i‡((
	`RB_PARENT
(
tmp
, 
fõld
ËRB_PARENT(
ñm
, field))) { \

362 i‡((
ñm
Ë=
	`RB_LEFT
(
	`RB_PARENT
”lm, 
fõld
), field)) \

363 
	`RB_LEFT
(
	`RB_PARENT
(
ñm
, 
fõld
), fõldË(
tmp
); \

365 
	`RB_RIGHT
(
	`RB_PARENT
(
ñm
, 
fõld
), fõldË(
tmp
); \

367 (
hód
)->
rbh_roŸ
 = (
tmp
); \

368 
	`RB_RIGHT
(
tmp
, 
fõld
Ë(
ñm
); \

369 
	`RB_PARENT
(
ñm
, 
fõld
Ë(
tmp
); \

370 
	`RB_AUGMENT
(
tmp
); \

371 i‡((
	`RB_PARENT
(
tmp
, 
fõld
))) \

372 
	`RB_AUGMENT
(
	`RB_PARENT
(
tmp
, 
fõld
)); \

373 } 0)

	)

376 
	#RB_PROTOTYPE
(
«me
, 
ty≥
, 
fõld
, 
cmp
) \

377 
«me
##
	`_RB_INSERT_COLOR
(«mê*, 
ty≥
 *); \

378 
«me
##
	`_RB_REMOVE_COLOR
(«mê*, 
ty≥
 *, type *);\

379 
ty≥
 *
«me
##
	`_RB_REMOVE
(name *, type *); \

380 
ty≥
 *
«me
##
	`_RB_INSERT
(name *, type *); \

381 
ty≥
 *
«me
##
	`_RB_FIND
(name *, type *); \

382 
ty≥
 *
«me
##
	`_RB_NEXT
(type *); \

383 
ty≥
 *
«me
##
	`_RB_MINMAX
(name *, ); \

385 

	)

389 
	#RB_GENERATE
(
«me
, 
ty≥
, 
fõld
, 
cmp
) \

391 
«me
##
	`_RB_INSERT_COLOR
(«mê*
hód
, 
ty≥
 *
ñm
) \

393 
ty≥
 *
∑ª¡
, *
g∑ª¡
, *
tmp
; \

394 (
∑ª¡
 = 
	`RB_PARENT
(
ñm
, 
fõld
)) && \

395 
	`RB_COLOR
(
∑ª¡
, 
fõld
Ë=
RB_RED
) { \

396 
g∑ª¡
 = 
	`RB_PARENT
(
∑ª¡
, 
fõld
); \

397 i‡(
∑ª¡
 =
	`RB_LEFT
(
g∑ª¡
, 
fõld
)) { \

398 
tmp
 = 
	`RB_RIGHT
(
g∑ª¡
, 
fõld
); \

399 i‡(
tmp
 && 
	`RB_COLOR
—mp, 
fõld
Ë=
RB_RED
) { \

400 
	`RB_COLOR
(
tmp
, 
fõld
Ë
RB_BLACK
; \

401 
	`RB_SET_BLACKRED
(
∑ª¡
, 
g∑ª¡
, 
fõld
);\

402 
ñm
 = 
g∑ª¡
; \

405 i‡(
	`RB_RIGHT
(
∑ª¡
, 
fõld
Ë=
ñm
) { \

406 
	`RB_ROTATE_LEFT
(
hód
, 
∑ª¡
, 
tmp
, 
fõld
);\

407 
tmp
 = 
∑ª¡
; \

408 
∑ª¡
 = 
ñm
; \

409 
ñm
 = 
tmp
; \

411 
	`RB_SET_BLACKRED
(
∑ª¡
, 
g∑ª¡
, 
fõld
); \

412 
	`RB_ROTATE_RIGHT
(
hód
, 
g∑ª¡
, 
tmp
, 
fõld
); \

414 
tmp
 = 
	`RB_LEFT
(
g∑ª¡
, 
fõld
); \

415 i‡(
tmp
 && 
	`RB_COLOR
—mp, 
fõld
Ë=
RB_RED
) { \

416 
	`RB_COLOR
(
tmp
, 
fõld
Ë
RB_BLACK
; \

417 
	`RB_SET_BLACKRED
(
∑ª¡
, 
g∑ª¡
, 
fõld
);\

418 
ñm
 = 
g∑ª¡
; \

421 i‡(
	`RB_LEFT
(
∑ª¡
, 
fõld
Ë=
ñm
) { \

422 
	`RB_ROTATE_RIGHT
(
hód
, 
∑ª¡
, 
tmp
, 
fõld
);\

423 
tmp
 = 
∑ª¡
; \

424 
∑ª¡
 = 
ñm
; \

425 
ñm
 = 
tmp
; \

427 
	`RB_SET_BLACKRED
(
∑ª¡
, 
g∑ª¡
, 
fõld
); \

428 
	`RB_ROTATE_LEFT
(
hód
, 
g∑ª¡
, 
tmp
, 
fõld
); \

431 
	`RB_COLOR
(
hód
->
rbh_roŸ
, 
fõld
Ë
RB_BLACK
; \

435 
«me
##
	`_RB_REMOVE_COLOR
(«mê*
hód
, 
ty≥
 *
∑ª¡
, ty≥ *
ñm
) \

437 
ty≥
 *
tmp
; \

438 (
ñm
 =
NULL
 || 
	`RB_COLOR
”lm, 
fõld
Ë=
RB_BLACK
) && \

439 
ñm
 !
	`RB_ROOT
(
hód
)) { \

440 i‡(
	`RB_LEFT
(
∑ª¡
, 
fõld
Ë=
ñm
) { \

441 
tmp
 = 
	`RB_RIGHT
(
∑ª¡
, 
fõld
); \

442 i‡(
	`RB_COLOR
(
tmp
, 
fõld
Ë=
RB_RED
) { \

443 
	`RB_SET_BLACKRED
(
tmp
, 
∑ª¡
, 
fõld
); \

444 
	`RB_ROTATE_LEFT
(
hód
, 
∑ª¡
, 
tmp
, 
fõld
);\

445 
tmp
 = 
	`RB_RIGHT
(
∑ª¡
, 
fõld
); \

447 i‡((
	`RB_LEFT
(
tmp
, 
fõld
Ë=
NULL
 || \

448 
	`RB_COLOR
(
	`RB_LEFT
(
tmp
, 
fõld
), fõldË=
RB_BLACK
) &&\

449 (
	`RB_RIGHT
(
tmp
, 
fõld
Ë=
NULL
 || \

450 
	`RB_COLOR
(
	`RB_RIGHT
(
tmp
, 
fõld
), fõldË=
RB_BLACK
)) {\

451 
	`RB_COLOR
(
tmp
, 
fõld
Ë
RB_RED
; \

452 
ñm
 = 
∑ª¡
; \

453 
∑ª¡
 = 
	`RB_PARENT
(
ñm
, 
fõld
); \

455 i‡(
	`RB_RIGHT
(
tmp
, 
fõld
Ë=
NULL
 || \

456 
	`RB_COLOR
(
	`RB_RIGHT
(
tmp
, 
fõld
), fõldË=
RB_BLACK
) {\

457 
ty≥
 *
ﬁe·
; \

458 i‡((
ﬁe·
 = 
	`RB_LEFT
(
tmp
, 
fõld
)))\

459 
	`RB_COLOR
(
ﬁe·
, 
fõld
Ë
RB_BLACK
;\

460 
	`RB_COLOR
(
tmp
, 
fõld
Ë
RB_RED
; \

461 
	`RB_ROTATE_RIGHT
(
hód
, 
tmp
, 
ﬁe·
, 
fõld
);\

462 
tmp
 = 
	`RB_RIGHT
(
∑ª¡
, 
fõld
); \

464 
	`RB_COLOR
(
tmp
, 
fõld
ËRB_COLOR(
∑ª¡
, field);\

465 
	`RB_COLOR
(
∑ª¡
, 
fõld
Ë
RB_BLACK
; \

466 i‡(
	`RB_RIGHT
(
tmp
, 
fõld
)) \

467 
	`RB_COLOR
(
	`RB_RIGHT
(
tmp
, 
fõld
), fõldË
RB_BLACK
;\

468 
	`RB_ROTATE_LEFT
(
hód
, 
∑ª¡
, 
tmp
, 
fõld
);\

469 
ñm
 = 
	`RB_ROOT
(
hód
); \

473 
tmp
 = 
	`RB_LEFT
(
∑ª¡
, 
fõld
); \

474 i‡(
	`RB_COLOR
(
tmp
, 
fõld
Ë=
RB_RED
) { \

475 
	`RB_SET_BLACKRED
(
tmp
, 
∑ª¡
, 
fõld
); \

476 
	`RB_ROTATE_RIGHT
(
hód
, 
∑ª¡
, 
tmp
, 
fõld
);\

477 
tmp
 = 
	`RB_LEFT
(
∑ª¡
, 
fõld
); \

479 i‡((
	`RB_LEFT
(
tmp
, 
fõld
Ë=
NULL
 || \

480 
	`RB_COLOR
(
	`RB_LEFT
(
tmp
, 
fõld
), fõldË=
RB_BLACK
) &&\

481 (
	`RB_RIGHT
(
tmp
, 
fõld
Ë=
NULL
 || \

482 
	`RB_COLOR
(
	`RB_RIGHT
(
tmp
, 
fõld
), fõldË=
RB_BLACK
)) {\

483 
	`RB_COLOR
(
tmp
, 
fõld
Ë
RB_RED
; \

484 
ñm
 = 
∑ª¡
; \

485 
∑ª¡
 = 
	`RB_PARENT
(
ñm
, 
fõld
); \

487 i‡(
	`RB_LEFT
(
tmp
, 
fõld
Ë=
NULL
 || \

488 
	`RB_COLOR
(
	`RB_LEFT
(
tmp
, 
fõld
), fõldË=
RB_BLACK
) {\

489 
ty≥
 *
‹ight
; \

490 i‡((
‹ight
 = 
	`RB_RIGHT
(
tmp
, 
fõld
)))\

491 
	`RB_COLOR
(
‹ight
, 
fõld
Ë
RB_BLACK
;\

492 
	`RB_COLOR
(
tmp
, 
fõld
Ë
RB_RED
; \

493 
	`RB_ROTATE_LEFT
(
hód
, 
tmp
, 
‹ight
, 
fõld
);\

494 
tmp
 = 
	`RB_LEFT
(
∑ª¡
, 
fõld
); \

496 
	`RB_COLOR
(
tmp
, 
fõld
ËRB_COLOR(
∑ª¡
, field);\

497 
	`RB_COLOR
(
∑ª¡
, 
fõld
Ë
RB_BLACK
; \

498 i‡(
	`RB_LEFT
(
tmp
, 
fõld
)) \

499 
	`RB_COLOR
(
	`RB_LEFT
(
tmp
, 
fõld
), fõldË
RB_BLACK
;\

500 
	`RB_ROTATE_RIGHT
(
hód
, 
∑ª¡
, 
tmp
, 
fõld
);\

501 
ñm
 = 
	`RB_ROOT
(
hód
); \

506 i‡(
ñm
) \

507 
	`RB_COLOR
(
ñm
, 
fõld
Ë
RB_BLACK
; \

510 
ty≥
 * \

511 
«me
##
	`_RB_REMOVE
(«mê*
hód
, 
ty≥
 *
ñm
) \

513 
ty≥
 *
chûd
, *
∑ª¡
, *
ﬁd
 = 
ñm
; \

514 
cﬁ‹
; \

515 i‡(
	`RB_LEFT
(
ñm
, 
fõld
Ë=
NULL
) \

516 
chûd
 = 
	`RB_RIGHT
(
ñm
, 
fõld
); \

517 i‡(
	`RB_RIGHT
(
ñm
, 
fõld
Ë=
NULL
) \

518 
chûd
 = 
	`RB_LEFT
(
ñm
, 
fõld
); \

520 
ty≥
 *
À·
; \

521 
ñm
 = 
	`RB_RIGHT
”lm, 
fõld
); \

522 (
À·
 = 
	`RB_LEFT
(
ñm
, 
fõld
))) \

523 
ñm
 = 
À·
; \

524 
chûd
 = 
	`RB_RIGHT
(
ñm
, 
fõld
); \

525 
∑ª¡
 = 
	`RB_PARENT
(
ñm
, 
fõld
); \

526 
cﬁ‹
 = 
	`RB_COLOR
(
ñm
, 
fõld
); \

527 i‡(
chûd
) \

528 
	`RB_PARENT
(
chûd
, 
fõld
Ë
∑ª¡
; \

529 i‡(
∑ª¡
) { \

530 i‡(
	`RB_LEFT
(
∑ª¡
, 
fõld
Ë=
ñm
) \

531 
	`RB_LEFT
(
∑ª¡
, 
fõld
Ë
chûd
; \

533 
	`RB_RIGHT
(
∑ª¡
, 
fõld
Ë
chûd
; \

534 
	`RB_AUGMENT
(
∑ª¡
); \

536 
	`RB_ROOT
(
hód
Ë
chûd
; \

537 i‡(
	`RB_PARENT
(
ñm
, 
fõld
Ë=
ﬁd
) \

538 
∑ª¡
 = 
ñm
; \

539 (
ñm
)->
fõld
 = (
ﬁd
)->field; \

540 i‡(
	`RB_PARENT
(
ﬁd
, 
fõld
)) { \

541 i‡(
	`RB_LEFT
(
	`RB_PARENT
(
ﬁd
, 
fõld
), field) == old)\

542 
	`RB_LEFT
(
	`RB_PARENT
(
ﬁd
, 
fõld
), fõldË
ñm
;\

544 
	`RB_RIGHT
(
	`RB_PARENT
(
ﬁd
, 
fõld
), fõldË
ñm
;\

545 
	`RB_AUGMENT
(
	`RB_PARENT
(
ﬁd
, 
fõld
)); \

547 
	`RB_ROOT
(
hód
Ë
ñm
; \

548 
	`RB_PARENT
(
	`RB_LEFT
(
ﬁd
, 
fõld
), fõldË
ñm
; \

549 i‡(
	`RB_RIGHT
(
ﬁd
, 
fõld
)) \

550 
	`RB_PARENT
(
	`RB_RIGHT
(
ﬁd
, 
fõld
), fõldË
ñm
; \

551 i‡(
∑ª¡
) { \

552 
À·
 = 
∑ª¡
; \

554 
	`RB_AUGMENT
(
À·
); \

555 } (
À·
 = 
	`RB_PARENT
÷e·, 
fõld
))); \

557 
cﬁ‹
; \

559 
∑ª¡
 = 
	`RB_PARENT
(
ñm
, 
fõld
); \

560 
cﬁ‹
 = 
	`RB_COLOR
(
ñm
, 
fõld
); \

561 i‡(
chûd
) \

562 
	`RB_PARENT
(
chûd
, 
fõld
Ë
∑ª¡
; \

563 i‡(
∑ª¡
) { \

564 i‡(
	`RB_LEFT
(
∑ª¡
, 
fõld
Ë=
ñm
) \

565 
	`RB_LEFT
(
∑ª¡
, 
fõld
Ë
chûd
; \

567 
	`RB_RIGHT
(
∑ª¡
, 
fõld
Ë
chûd
; \

568 
	`RB_AUGMENT
(
∑ª¡
); \

570 
	`RB_ROOT
(
hód
Ë
chûd
; \

571 
cﬁ‹
: \

572 i‡(
cﬁ‹
 =
RB_BLACK
) \

573 
«me
##
	`_RB_REMOVE_COLOR
(
hód
, 
∑ª¡
, 
chûd
); \

574  (
ﬁd
); \

578 
ty≥
 * \

579 
«me
##
	`_RB_INSERT
(«mê*
hód
, 
ty≥
 *
ñm
) \

581 
ty≥
 *
tmp
; \

582 
ty≥
 *
∑ª¡
 = 
NULL
; \

583 
comp
 = 0; \

584 
tmp
 = 
	`RB_ROOT
(
hód
); \

585 
tmp
) { \

586 
∑ª¡
 = 
tmp
; \

587 
comp
 = (
cmp
)(
ñm
, 
∑ª¡
); \

588 i‡(
comp
 < 0) \

589 
tmp
 = 
	`RB_LEFT
—mp, 
fõld
); \

590 i‡(
comp
 > 0) \

591 
tmp
 = 
	`RB_RIGHT
—mp, 
fõld
); \

593  (
tmp
); \

595 
	`RB_SET
(
ñm
, 
∑ª¡
, 
fõld
); \

596 i‡(
∑ª¡
 !
NULL
) { \

597 i‡(
comp
 < 0) \

598 
	`RB_LEFT
(
∑ª¡
, 
fõld
Ë
ñm
; \

600 
	`RB_RIGHT
(
∑ª¡
, 
fõld
Ë
ñm
; \

601 
	`RB_AUGMENT
(
∑ª¡
); \

603 
	`RB_ROOT
(
hód
Ë
ñm
; \

604 
«me
##
	`_RB_INSERT_COLOR
(
hód
, 
ñm
); \

605  (
NULL
); \

609 
ty≥
 * \

610 
«me
##
	`_RB_FIND
(«mê*
hód
, 
ty≥
 *
ñm
) \

612 
ty≥
 *
tmp
 = 
	`RB_ROOT
(
hód
); \

613 
comp
; \

614 
tmp
) { \

615 
comp
 = 
	`cmp
(
ñm
, 
tmp
); \

616 i‡(
comp
 < 0) \

617 
tmp
 = 
	`RB_LEFT
—mp, 
fõld
); \

618 i‡(
comp
 > 0) \

619 
tmp
 = 
	`RB_RIGHT
—mp, 
fõld
); \

621  (
tmp
); \

623  (
NULL
); \

626 
ty≥
 * \

627 
«me
##
	`_RB_NEXT
(
ty≥
 *
ñm
) \

629 i‡(
	`RB_RIGHT
(
ñm
, 
fõld
)) { \

630 
ñm
 = 
	`RB_RIGHT
”lm, 
fõld
); \

631 
	`RB_LEFT
(
ñm
, 
fõld
)) \

632 
ñm
 = 
	`RB_LEFT
”lm, 
fõld
); \

634 i‡(
	`RB_PARENT
(
ñm
, 
fõld
) && \

635 (
ñm
 =
	`RB_LEFT
(
	`RB_PARENT
”lm, 
fõld
), field))) \

636 
ñm
 = 
	`RB_PARENT
”lm, 
fõld
); \

638 
	`RB_PARENT
(
ñm
, 
fõld
) && \

639 (
ñm
 =
	`RB_RIGHT
(
	`RB_PARENT
”lm, 
fõld
), field)))\

640 
ñm
 = 
	`RB_PARENT
”lm, 
fõld
); \

641 
ñm
 = 
	`RB_PARENT
”lm, 
fõld
); \

644  (
ñm
); \

647 
ty≥
 * \

648 
«me
##
	`_RB_MINMAX
(«mê*
hód
, 
vÆ
) \

650 
ty≥
 *
tmp
 = 
	`RB_ROOT
(
hód
); \

651 
ty≥
 *
∑ª¡
 = 
NULL
; \

652 
tmp
) { \

653 
∑ª¡
 = 
tmp
; \

654 i‡(
vÆ
 < 0) \

655 
tmp
 = 
	`RB_LEFT
—mp, 
fõld
); \

657 
tmp
 = 
	`RB_RIGHT
—mp, 
fõld
); \

659  (
∑ª¡
); \

660 }

	)

662 
	#RB_NEGINF
 -1

	)

663 
	#RB_INF
 1

	)

665 
	#RB_INSERT
(
«me
, 
x
, 
y
Ë«me##
	`_RB_INSERT
(x, y)

	)

666 
	#RB_REMOVE
(
«me
, 
x
, 
y
Ë«me##
	`_RB_REMOVE
(x, y)

	)

667 
	#RB_FIND
(
«me
, 
x
, 
y
Ë«me##
	`_RB_FIND
(x, y)

	)

668 
	#RB_NEXT
(
«me
, 
x
, 
y
Ë«me##
	`_RB_NEXT
(y)

	)

669 
	#RB_MIN
(
«me
, 
x
Ë«me##
	`_RB_MINMAX
(x, 
RB_NEGINF
)

	)

670 
	#RB_MAX
(
«me
, 
x
Ë«me##
	`_RB_MINMAX
(x, 
RB_INF
)

	)

672 
	#RB_FOREACH
(
x
, 
«me
, 
hód
) \

673 (
x
Ë
	`RB_MIN
(
«me
, 
hód
); \

674 (
x
Ë!
NULL
; \

675 (
x
Ë
«me
##
	`_RB_NEXT
(x))

	)

704 #i‚def 
_SYS_TREE_H_


705 
	#_SYS_TREE_H_


	)

734 
	#SPLAY_HEAD
(
«me
, 
ty≥
) \

735 
	s«me
 { \

736 
ty≥
 *
•h_roŸ
; \

737 }

	)

739 
	#SPLAY_INITIALIZER
(
roŸ
) \

740 { 
NULL
 }

	)

742 
	#SPLAY_INIT
(
roŸ
) do { \

743 (
roŸ
)->
•h_roŸ
 = 
NULL
; \

744 } 0)

	)

746 
	#SPLAY_ENTRY
(
ty≥
) \

748 
ty≥
 *
•e_À·
; \

749 
ty≥
 *
•e_right
; \

750 }

	)

752 
	#SPLAY_LEFT
(
ñm
, 
fõld
Ë”lm)->fõld.
•e_À·


	)

753 
	#SPLAY_RIGHT
(
ñm
, 
fõld
Ë”lm)->fõld.
•e_right


	)

754 
	#SPLAY_ROOT
(
hód
Ë(hód)->
•h_roŸ


	)

755 
	#SPLAY_EMPTY
(
hód
Ë(
	`SPLAY_ROOT
(hódË=
NULL
)

	)

758 
	#SPLAY_ROTATE_RIGHT
(
hód
, 
tmp
, 
fõld
) do { \

759 
	`SPLAY_LEFT
((
hód
)->
•h_roŸ
, 
fõld
Ë
	`SPLAY_RIGHT
(
tmp
, field); \

760 
	`SPLAY_RIGHT
(
tmp
, 
fõld
Ë(
hód
)->
•h_roŸ
; \

761 (
hód
)->
•h_roŸ
 = 
tmp
; \

762 } 0)

	)

764 
	#SPLAY_ROTATE_LEFT
(
hód
, 
tmp
, 
fõld
) do { \

765 
	`SPLAY_RIGHT
((
hód
)->
•h_roŸ
, 
fõld
Ë
	`SPLAY_LEFT
(
tmp
, field); \

766 
	`SPLAY_LEFT
(
tmp
, 
fõld
Ë(
hód
)->
•h_roŸ
; \

767 (
hód
)->
•h_roŸ
 = 
tmp
; \

768 } 0)

	)

770 
	#SPLAY_LINKLEFT
(
hód
, 
tmp
, 
fõld
) do { \

771 
	`SPLAY_LEFT
(
tmp
, 
fõld
Ë(
hód
)->
•h_roŸ
; \

772 
tmp
 = (
hód
)->
•h_roŸ
; \

773 (
hód
)->
•h_roŸ
 = 
	`SPLAY_LEFT
((hód)->•h_roŸ, 
fõld
); \

774 } 0)

	)

776 
	#SPLAY_LINKRIGHT
(
hód
, 
tmp
, 
fõld
) do { \

777 
	`SPLAY_RIGHT
(
tmp
, 
fõld
Ë(
hód
)->
•h_roŸ
; \

778 
tmp
 = (
hód
)->
•h_roŸ
; \

779 (
hód
)->
•h_roŸ
 = 
	`SPLAY_RIGHT
((hód)->•h_roŸ, 
fõld
); \

780 } 0)

	)

782 
	#SPLAY_ASSEMBLE
(
hód
, 
node
, 
À·
, 
right
, 
fõld
) do { \

783 
	`SPLAY_RIGHT
(
À·
, 
fõld
Ë
	`SPLAY_LEFT
((
hód
)->
•h_roŸ
, field); \

784 
	`SPLAY_LEFT
(
right
, 
fõld
Ë
	`SPLAY_RIGHT
((
hód
)->
•h_roŸ
, field);\

785 
	`SPLAY_LEFT
((
hód
)->
•h_roŸ
, 
fõld
Ë
	`SPLAY_RIGHT
(
node
, field); \

786 
	`SPLAY_RIGHT
((
hód
)->
•h_roŸ
, 
fõld
Ë
	`SPLAY_LEFT
(
node
, field); \

787 } 0)

	)

791 
	#SPLAY_PROTOTYPE
(
«me
, 
ty≥
, 
fõld
, 
cmp
) \

792 
«me
##
	`_SPLAY
(«mê*, 
ty≥
 *); \

793 
«me
##
	`_SPLAY_MINMAX
(name *, ); \

794 
ty≥
 *
«me
##
	`_SPLAY_INSERT
(name *, type *); \

795 
ty≥
 *
«me
##
	`_SPLAY_REMOVE
(name *, type *); \

798 
__ölöe
 
ty≥
 * \

799 
«me
##
	`_SPLAY_FIND
(«mê*
hód
, 
ty≥
 *
ñm
) \

801 i‡(
	`SPLAY_EMPTY
(
hód
)) \

802 (
NULL
); \

803 
«me
##
	`_SPLAY
(
hód
, 
ñm
); \

804 i‡((
cmp
)(
ñm
, (
hód
)->
•h_roŸ
) == 0) \

805  (
hód
->
•h_roŸ
); \

806  (
NULL
); \

809 
__ölöe
 
ty≥
 * \

810 
«me
##
	`_SPLAY_NEXT
(«mê*
hód
, 
ty≥
 *
ñm
) \

812 
«me
##
	`_SPLAY
(
hód
, 
ñm
); \

813 i‡(
	`SPLAY_RIGHT
(
ñm
, 
fõld
Ë!
NULL
) { \

814 
ñm
 = 
	`SPLAY_RIGHT
”lm, 
fõld
); \

815 
	`SPLAY_LEFT
(
ñm
, 
fõld
Ë!
NULL
) { \

816 
ñm
 = 
	`SPLAY_LEFT
”lm, 
fõld
); \

819 
ñm
 = 
NULL
; \

820  (
ñm
); \

823 
__ölöe
 
ty≥
 * \

824 
«me
##
	`_SPLAY_MIN_MAX
(«mê*
hód
, 
vÆ
) \

826 
«me
##
	`_SPLAY_MINMAX
(
hód
, 
vÆ
); \

827  (
	`SPLAY_ROOT
(
hód
)); \

828 }

	)

833 
	#SPLAY_GENERATE
(
«me
, 
ty≥
, 
fõld
, 
cmp
) \

834 
ty≥
 * \

835 
«me
##
	`_SPLAY_INSERT
(«mê*
hód
, 
ty≥
 *
ñm
) \

837 i‡(
	`SPLAY_EMPTY
(
hód
)) { \

838 
	`SPLAY_LEFT
(
ñm
, 
fõld
Ë
	`SPLAY_RIGHT
”lm, fõldË
NULL
; \

840 
__comp
; \

841 
«me
##
	`_SPLAY
(
hód
, 
ñm
); \

842 
__comp
 = (
cmp
)(
ñm
, (
hód
)->
•h_roŸ
); \

843 if(
__comp
 < 0) { \

844 
	`SPLAY_LEFT
(
ñm
, 
fõld
ËSPLAY_LEFT((
hód
)->
•h_roŸ
, field);\

845 
	`SPLAY_RIGHT
(
ñm
, 
fõld
Ë(
hód
)->
•h_roŸ
; \

846 
	`SPLAY_LEFT
((
hód
)->
•h_roŸ
, 
fõld
Ë
NULL
; \

847 } i‡(
__comp
 > 0) { \

848 
	`SPLAY_RIGHT
(
ñm
, 
fõld
ËSPLAY_RIGHT((
hód
)->
•h_roŸ
, field);\

849 
	`SPLAY_LEFT
(
ñm
, 
fõld
Ë(
hód
)->
•h_roŸ
; \

850 
	`SPLAY_RIGHT
((
hód
)->
•h_roŸ
, 
fõld
Ë
NULL
; \

852  ((
hód
)->
•h_roŸ
); \

854 (
hód
)->
•h_roŸ
 = (
ñm
); \

855  (
NULL
); \

858 
ty≥
 * \

859 
«me
##
	`_SPLAY_REMOVE
(«mê*
hód
, 
ty≥
 *
ñm
) \

861 
ty≥
 *
__tmp
; \

862 i‡(
	`SPLAY_EMPTY
(
hód
)) \

863  (
NULL
); \

864 
«me
##
	`_SPLAY
(
hód
, 
ñm
); \

865 i‡((
cmp
)(
ñm
, (
hód
)->
•h_roŸ
) == 0) { \

866 i‡(
	`SPLAY_LEFT
((
hód
)->
•h_roŸ
, 
fõld
Ë=
NULL
) { \

867 (
hód
)->
•h_roŸ
 = 
	`SPLAY_RIGHT
((hód)->•h_roŸ, 
fõld
);\

869 
__tmp
 = 
	`SPLAY_RIGHT
((
hód
)->
•h_roŸ
, 
fõld
); \

870 (
hód
)->
•h_roŸ
 = 
	`SPLAY_LEFT
((hód)->•h_roŸ, 
fõld
);\

871 
«me
##
	`_SPLAY
(
hód
, 
ñm
); \

872 
	`SPLAY_RIGHT
((
hód
)->
•h_roŸ
, 
fõld
Ë
__tmp
; \

874  (
ñm
); \

876  (
NULL
); \

880 
«me
##
	`_SPLAY
(«mê*
hód
, 
ty≥
 *
ñm
) \

882 
ty≥
 
__node
, *
__À·
, *
__right
, *
__tmp
; \

883 
__comp
; \

885 
	`SPLAY_LEFT
(&
__node
, 
fõld
Ë
	`SPLAY_RIGHT
(&__node, fõldË
NULL
;\

886 
__À·
 = 
__right
 = &
__node
; \

888 (
__comp
 = (
cmp
)(
ñm
, (
hód
)->
•h_roŸ
))) { \

889 i‡(
__comp
 < 0) { \

890 
__tmp
 = 
	`SPLAY_LEFT
((
hód
)->
•h_roŸ
, 
fõld
); \

891 i‡(
__tmp
 =
NULL
) \

893 i‡((
cmp
)(
ñm
, 
__tmp
) < 0){ \

894 
	`SPLAY_ROTATE_RIGHT
(
hód
, 
__tmp
, 
fõld
); \

895 i‡(
	`SPLAY_LEFT
((
hód
)->
•h_roŸ
, 
fõld
Ë=
NULL
)\

898 
	`SPLAY_LINKLEFT
(
hód
, 
__right
, 
fõld
); \

899 } i‡(
__comp
 > 0) { \

900 
__tmp
 = 
	`SPLAY_RIGHT
((
hód
)->
•h_roŸ
, 
fõld
); \

901 i‡(
__tmp
 =
NULL
) \

903 i‡((
cmp
)(
ñm
, 
__tmp
) > 0){ \

904 
	`SPLAY_ROTATE_LEFT
(
hód
, 
__tmp
, 
fõld
); \

905 i‡(
	`SPLAY_RIGHT
((
hód
)->
•h_roŸ
, 
fõld
Ë=
NULL
)\

908 
	`SPLAY_LINKRIGHT
(
hód
, 
__À·
, 
fõld
); \

911 
	`SPLAY_ASSEMBLE
(
hód
, &
__node
, 
__À·
, 
__right
, 
fõld
); \

917 
«me
##
	`_SPLAY_MINMAX
(«mê*
hód
, 
__comp
) \

919 
ty≥
 
__node
, *
__À·
, *
__right
, *
__tmp
; \

921 
	`SPLAY_LEFT
(&
__node
, 
fõld
Ë
	`SPLAY_RIGHT
(&__node, fõldË
NULL
;\

922 
__À·
 = 
__right
 = &
__node
; \

925 i‡(
__comp
 < 0) { \

926 
__tmp
 = 
	`SPLAY_LEFT
((
hód
)->
•h_roŸ
, 
fõld
); \

927 i‡(
__tmp
 =
NULL
) \

929 i‡(
__comp
 < 0){ \

930 
	`SPLAY_ROTATE_RIGHT
(
hód
, 
__tmp
, 
fõld
); \

931 i‡(
	`SPLAY_LEFT
((
hód
)->
•h_roŸ
, 
fõld
Ë=
NULL
)\

934 
	`SPLAY_LINKLEFT
(
hód
, 
__right
, 
fõld
); \

935 } i‡(
__comp
 > 0) { \

936 
__tmp
 = 
	`SPLAY_RIGHT
((
hód
)->
•h_roŸ
, 
fõld
); \

937 i‡(
__tmp
 =
NULL
) \

939 i‡(
__comp
 > 0) { \

940 
	`SPLAY_ROTATE_LEFT
(
hód
, 
__tmp
, 
fõld
); \

941 i‡(
	`SPLAY_RIGHT
((
hód
)->
•h_roŸ
, 
fõld
Ë=
NULL
)\

944 
	`SPLAY_LINKRIGHT
(
hód
, 
__À·
, 
fõld
); \

947 
	`SPLAY_ASSEMBLE
(
hód
, &
__node
, 
__À·
, 
__right
, 
fõld
); \

948 }

	)

950 
	#SPLAY_NEGINF
 -1

	)

951 
	#SPLAY_INF
 1

	)

953 
	#SPLAY_INSERT
(
«me
, 
x
, 
y
Ë«me##
	`_SPLAY_INSERT
(x, y)

	)

954 
	#SPLAY_REMOVE
(
«me
, 
x
, 
y
Ë«me##
	`_SPLAY_REMOVE
(x, y)

	)

955 
	#SPLAY_FIND
(
«me
, 
x
, 
y
Ë«me##
	`_SPLAY_FIND
(x, y)

	)

956 
	#SPLAY_NEXT
(
«me
, 
x
, 
y
Ë«me##
	`_SPLAY_NEXT
(x, y)

	)

957 
	#SPLAY_MIN
(
«me
, 
x
Ë(
	`SPLAY_EMPTY
(xË? 
NULL
 \

958 : 
«me
##
	`_SPLAY_MIN_MAX
(
x
, 
SPLAY_NEGINF
))

	)

959 
	#SPLAY_MAX
(
«me
, 
x
Ë(
	`SPLAY_EMPTY
(xË? 
NULL
 \

960 : 
«me
##
	`_SPLAY_MIN_MAX
(
x
, 
SPLAY_INF
))

	)

962 
	#SPLAY_FOREACH
(
x
, 
«me
, 
hód
) \

963 (
x
Ë
	`SPLAY_MIN
(
«me
, 
hód
); \

964 (
x
Ë!
NULL
; \

965 (
x
Ë
	`SPLAY_NEXT
(
«me
, 
hód
, x))

	)

968 
	#RB_HEAD
(
«me
, 
ty≥
) \

969 
	s«me
 { \

970 
ty≥
 *
rbh_roŸ
; \

971 }

	)

973 
	#RB_INITIALIZER
(
roŸ
) \

974 { 
NULL
 }

	)

976 
	#RB_INIT
(
roŸ
) do { \

977 (
roŸ
)->
rbh_roŸ
 = 
NULL
; \

978 } 0)

	)

980 
	#RB_BLACK
 0

	)

981 
	#RB_RED
 1

	)

982 
	#RB_ENTRY
(
ty≥
) \

984 
ty≥
 *
rbe_À·
; \

985 
ty≥
 *
rbe_right
; \

986 
ty≥
 *
rbe_∑ª¡
; \

987 
rbe_cﬁ‹
; \

988 }

	)

990 
	#RB_LEFT
(
ñm
, 
fõld
Ë”lm)->fõld.
rbe_À·


	)

991 
	#RB_RIGHT
(
ñm
, 
fõld
Ë”lm)->fõld.
rbe_right


	)

992 
	#RB_PARENT
(
ñm
, 
fõld
Ë”lm)->fõld.
rbe_∑ª¡


	)

993 
	#RB_COLOR
(
ñm
, 
fõld
Ë”lm)->fõld.
rbe_cﬁ‹


	)

994 
	#RB_ROOT
(
hód
Ë(hód)->
rbh_roŸ


	)

995 
	#RB_EMPTY
(
hód
Ë(
	`RB_ROOT
(hódË=
NULL
)

	)

997 
	#RB_SET
(
ñm
, 
∑ª¡
, 
fõld
) do { \

998 
	`RB_PARENT
(
ñm
, 
fõld
Ë
∑ª¡
; \

999 
	`RB_LEFT
(
ñm
, 
fõld
Ë
	`RB_RIGHT
”lm, fõldË
NULL
; \

1000 
	`RB_COLOR
(
ñm
, 
fõld
Ë
RB_RED
; \

1001 } 0)

	)

1003 
	#RB_SET_BLACKRED
(
bœck
, 
ªd
, 
fõld
) do { \

1004 
	`RB_COLOR
(
bœck
, 
fõld
Ë
RB_BLACK
; \

1005 
	`RB_COLOR
(
ªd
, 
fõld
Ë
RB_RED
; \

1006 } 0)

	)

1008 #i‚de‡
RB_AUGMENT


1009 
	#RB_AUGMENT
(
x
)

	)

1012 
	#RB_ROTATE_LEFT
(
hód
, 
ñm
, 
tmp
, 
fõld
) do { \

1013 (
tmp
Ë
	`RB_RIGHT
(
ñm
, 
fõld
); \

1014 i‡((
	`RB_RIGHT
(
ñm
, 
fõld
Ë
	`RB_LEFT
(
tmp
, field))) { \

1015 
	`RB_PARENT
(
	`RB_LEFT
(
tmp
, 
fõld
), fõldË(
ñm
); \

1017 
	`RB_AUGMENT
(
ñm
); \

1018 i‡((
	`RB_PARENT
(
tmp
, 
fõld
ËRB_PARENT(
ñm
, field))) { \

1019 i‡((
ñm
Ë=
	`RB_LEFT
(
	`RB_PARENT
”lm, 
fõld
), field)) \

1020 
	`RB_LEFT
(
	`RB_PARENT
(
ñm
, 
fõld
), fõldË(
tmp
); \

1022 
	`RB_RIGHT
(
	`RB_PARENT
(
ñm
, 
fõld
), fõldË(
tmp
); \

1024 (
hód
)->
rbh_roŸ
 = (
tmp
); \

1025 
	`RB_LEFT
(
tmp
, 
fõld
Ë(
ñm
); \

1026 
	`RB_PARENT
(
ñm
, 
fõld
Ë(
tmp
); \

1027 
	`RB_AUGMENT
(
tmp
); \

1028 i‡((
	`RB_PARENT
(
tmp
, 
fõld
))) \

1029 
	`RB_AUGMENT
(
	`RB_PARENT
(
tmp
, 
fõld
)); \

1030 } 0)

	)

1032 
	#RB_ROTATE_RIGHT
(
hód
, 
ñm
, 
tmp
, 
fõld
) do { \

1033 (
tmp
Ë
	`RB_LEFT
(
ñm
, 
fõld
); \

1034 i‡((
	`RB_LEFT
(
ñm
, 
fõld
Ë
	`RB_RIGHT
(
tmp
, field))) { \

1035 
	`RB_PARENT
(
	`RB_RIGHT
(
tmp
, 
fõld
), fõldË(
ñm
); \

1037 
	`RB_AUGMENT
(
ñm
); \

1038 i‡((
	`RB_PARENT
(
tmp
, 
fõld
ËRB_PARENT(
ñm
, field))) { \

1039 i‡((
ñm
Ë=
	`RB_LEFT
(
	`RB_PARENT
”lm, 
fõld
), field)) \

1040 
	`RB_LEFT
(
	`RB_PARENT
(
ñm
, 
fõld
), fõldË(
tmp
); \

1042 
	`RB_RIGHT
(
	`RB_PARENT
(
ñm
, 
fõld
), fõldË(
tmp
); \

1044 (
hód
)->
rbh_roŸ
 = (
tmp
); \

1045 
	`RB_RIGHT
(
tmp
, 
fõld
Ë(
ñm
); \

1046 
	`RB_PARENT
(
ñm
, 
fõld
Ë(
tmp
); \

1047 
	`RB_AUGMENT
(
tmp
); \

1048 i‡((
	`RB_PARENT
(
tmp
, 
fõld
))) \

1049 
	`RB_AUGMENT
(
	`RB_PARENT
(
tmp
, 
fõld
)); \

1050 } 0)

	)

1053 
	#RB_PROTOTYPE
(
«me
, 
ty≥
, 
fõld
, 
cmp
) \

1054 
«me
##
	`_RB_INSERT_COLOR
(«mê*, 
ty≥
 *); \

1055 
«me
##
	`_RB_REMOVE_COLOR
(«mê*, 
ty≥
 *, type *);\

1056 
ty≥
 *
«me
##
	`_RB_REMOVE
(name *, type *); \

1057 
ty≥
 *
«me
##
	`_RB_INSERT
(name *, type *); \

1058 
ty≥
 *
«me
##
	`_RB_FIND
(name *, type *); \

1059 
ty≥
 *
«me
##
	`_RB_NEXT
(type *); \

1060 
ty≥
 *
«me
##
	`_RB_MINMAX
(name *, ); \

1062 

	)

1066 
	#RB_GENERATE
(
«me
, 
ty≥
, 
fõld
, 
cmp
) \

1068 
«me
##
	`_RB_INSERT_COLOR
(«mê*
hód
, 
ty≥
 *
ñm
) \

1070 
ty≥
 *
∑ª¡
, *
g∑ª¡
, *
tmp
; \

1071 (
∑ª¡
 = 
	`RB_PARENT
(
ñm
, 
fõld
)) && \

1072 
	`RB_COLOR
(
∑ª¡
, 
fõld
Ë=
RB_RED
) { \

1073 
g∑ª¡
 = 
	`RB_PARENT
(
∑ª¡
, 
fõld
); \

1074 i‡(
∑ª¡
 =
	`RB_LEFT
(
g∑ª¡
, 
fõld
)) { \

1075 
tmp
 = 
	`RB_RIGHT
(
g∑ª¡
, 
fõld
); \

1076 i‡(
tmp
 && 
	`RB_COLOR
—mp, 
fõld
Ë=
RB_RED
) { \

1077 
	`RB_COLOR
(
tmp
, 
fõld
Ë
RB_BLACK
; \

1078 
	`RB_SET_BLACKRED
(
∑ª¡
, 
g∑ª¡
, 
fõld
);\

1079 
ñm
 = 
g∑ª¡
; \

1082 i‡(
	`RB_RIGHT
(
∑ª¡
, 
fõld
Ë=
ñm
) { \

1083 
	`RB_ROTATE_LEFT
(
hód
, 
∑ª¡
, 
tmp
, 
fõld
);\

1084 
tmp
 = 
∑ª¡
; \

1085 
∑ª¡
 = 
ñm
; \

1086 
ñm
 = 
tmp
; \

1088 
	`RB_SET_BLACKRED
(
∑ª¡
, 
g∑ª¡
, 
fõld
); \

1089 
	`RB_ROTATE_RIGHT
(
hód
, 
g∑ª¡
, 
tmp
, 
fõld
); \

1091 
tmp
 = 
	`RB_LEFT
(
g∑ª¡
, 
fõld
); \

1092 i‡(
tmp
 && 
	`RB_COLOR
—mp, 
fõld
Ë=
RB_RED
) { \

1093 
	`RB_COLOR
(
tmp
, 
fõld
Ë
RB_BLACK
; \

1094 
	`RB_SET_BLACKRED
(
∑ª¡
, 
g∑ª¡
, 
fõld
);\

1095 
ñm
 = 
g∑ª¡
; \

1098 i‡(
	`RB_LEFT
(
∑ª¡
, 
fõld
Ë=
ñm
) { \

1099 
	`RB_ROTATE_RIGHT
(
hód
, 
∑ª¡
, 
tmp
, 
fõld
);\

1100 
tmp
 = 
∑ª¡
; \

1101 
∑ª¡
 = 
ñm
; \

1102 
ñm
 = 
tmp
; \

1104 
	`RB_SET_BLACKRED
(
∑ª¡
, 
g∑ª¡
, 
fõld
); \

1105 
	`RB_ROTATE_LEFT
(
hód
, 
g∑ª¡
, 
tmp
, 
fõld
); \

1108 
	`RB_COLOR
(
hód
->
rbh_roŸ
, 
fõld
Ë
RB_BLACK
; \

1112 
«me
##
	`_RB_REMOVE_COLOR
(«mê*
hód
, 
ty≥
 *
∑ª¡
, ty≥ *
ñm
) \

1114 
ty≥
 *
tmp
; \

1115 (
ñm
 =
NULL
 || 
	`RB_COLOR
”lm, 
fõld
Ë=
RB_BLACK
) && \

1116 
ñm
 !
	`RB_ROOT
(
hód
)) { \

1117 i‡(
	`RB_LEFT
(
∑ª¡
, 
fõld
Ë=
ñm
) { \

1118 
tmp
 = 
	`RB_RIGHT
(
∑ª¡
, 
fõld
); \

1119 i‡(
	`RB_COLOR
(
tmp
, 
fõld
Ë=
RB_RED
) { \

1120 
	`RB_SET_BLACKRED
(
tmp
, 
∑ª¡
, 
fõld
); \

1121 
	`RB_ROTATE_LEFT
(
hód
, 
∑ª¡
, 
tmp
, 
fõld
);\

1122 
tmp
 = 
	`RB_RIGHT
(
∑ª¡
, 
fõld
); \

1124 i‡((
	`RB_LEFT
(
tmp
, 
fõld
Ë=
NULL
 || \

1125 
	`RB_COLOR
(
	`RB_LEFT
(
tmp
, 
fõld
), fõldË=
RB_BLACK
) &&\

1126 (
	`RB_RIGHT
(
tmp
, 
fõld
Ë=
NULL
 || \

1127 
	`RB_COLOR
(
	`RB_RIGHT
(
tmp
, 
fõld
), fõldË=
RB_BLACK
)) {\

1128 
	`RB_COLOR
(
tmp
, 
fõld
Ë
RB_RED
; \

1129 
ñm
 = 
∑ª¡
; \

1130 
∑ª¡
 = 
	`RB_PARENT
(
ñm
, 
fõld
); \

1132 i‡(
	`RB_RIGHT
(
tmp
, 
fõld
Ë=
NULL
 || \

1133 
	`RB_COLOR
(
	`RB_RIGHT
(
tmp
, 
fõld
), fõldË=
RB_BLACK
) {\

1134 
ty≥
 *
ﬁe·
; \

1135 i‡((
ﬁe·
 = 
	`RB_LEFT
(
tmp
, 
fõld
)))\

1136 
	`RB_COLOR
(
ﬁe·
, 
fõld
Ë
RB_BLACK
;\

1137 
	`RB_COLOR
(
tmp
, 
fõld
Ë
RB_RED
; \

1138 
	`RB_ROTATE_RIGHT
(
hód
, 
tmp
, 
ﬁe·
, 
fõld
);\

1139 
tmp
 = 
	`RB_RIGHT
(
∑ª¡
, 
fõld
); \

1141 
	`RB_COLOR
(
tmp
, 
fõld
ËRB_COLOR(
∑ª¡
, field);\

1142 
	`RB_COLOR
(
∑ª¡
, 
fõld
Ë
RB_BLACK
; \

1143 i‡(
	`RB_RIGHT
(
tmp
, 
fõld
)) \

1144 
	`RB_COLOR
(
	`RB_RIGHT
(
tmp
, 
fõld
), fõldË
RB_BLACK
;\

1145 
	`RB_ROTATE_LEFT
(
hód
, 
∑ª¡
, 
tmp
, 
fõld
);\

1146 
ñm
 = 
	`RB_ROOT
(
hód
); \

1150 
tmp
 = 
	`RB_LEFT
(
∑ª¡
, 
fõld
); \

1151 i‡(
	`RB_COLOR
(
tmp
, 
fõld
Ë=
RB_RED
) { \

1152 
	`RB_SET_BLACKRED
(
tmp
, 
∑ª¡
, 
fõld
); \

1153 
	`RB_ROTATE_RIGHT
(
hód
, 
∑ª¡
, 
tmp
, 
fõld
);\

1154 
tmp
 = 
	`RB_LEFT
(
∑ª¡
, 
fõld
); \

1156 i‡((
	`RB_LEFT
(
tmp
, 
fõld
Ë=
NULL
 || \

1157 
	`RB_COLOR
(
	`RB_LEFT
(
tmp
, 
fõld
), fõldË=
RB_BLACK
) &&\

1158 (
	`RB_RIGHT
(
tmp
, 
fõld
Ë=
NULL
 || \

1159 
	`RB_COLOR
(
	`RB_RIGHT
(
tmp
, 
fõld
), fõldË=
RB_BLACK
)) {\

1160 
	`RB_COLOR
(
tmp
, 
fõld
Ë
RB_RED
; \

1161 
ñm
 = 
∑ª¡
; \

1162 
∑ª¡
 = 
	`RB_PARENT
(
ñm
, 
fõld
); \

1164 i‡(
	`RB_LEFT
(
tmp
, 
fõld
Ë=
NULL
 || \

1165 
	`RB_COLOR
(
	`RB_LEFT
(
tmp
, 
fõld
), fõldË=
RB_BLACK
) {\

1166 
ty≥
 *
‹ight
; \

1167 i‡((
‹ight
 = 
	`RB_RIGHT
(
tmp
, 
fõld
)))\

1168 
	`RB_COLOR
(
‹ight
, 
fõld
Ë
RB_BLACK
;\

1169 
	`RB_COLOR
(
tmp
, 
fõld
Ë
RB_RED
; \

1170 
	`RB_ROTATE_LEFT
(
hód
, 
tmp
, 
‹ight
, 
fõld
);\

1171 
tmp
 = 
	`RB_LEFT
(
∑ª¡
, 
fõld
); \

1173 
	`RB_COLOR
(
tmp
, 
fõld
ËRB_COLOR(
∑ª¡
, field);\

1174 
	`RB_COLOR
(
∑ª¡
, 
fõld
Ë
RB_BLACK
; \

1175 i‡(
	`RB_LEFT
(
tmp
, 
fõld
)) \

1176 
	`RB_COLOR
(
	`RB_LEFT
(
tmp
, 
fõld
), fõldË
RB_BLACK
;\

1177 
	`RB_ROTATE_RIGHT
(
hód
, 
∑ª¡
, 
tmp
, 
fõld
);\

1178 
ñm
 = 
	`RB_ROOT
(
hód
); \

1183 i‡(
ñm
) \

1184 
	`RB_COLOR
(
ñm
, 
fõld
Ë
RB_BLACK
; \

1187 
ty≥
 * \

1188 
«me
##
	`_RB_REMOVE
(«mê*
hód
, 
ty≥
 *
ñm
) \

1190 
ty≥
 *
chûd
, *
∑ª¡
, *
ﬁd
 = 
ñm
; \

1191 
cﬁ‹
; \

1192 i‡(
	`RB_LEFT
(
ñm
, 
fõld
Ë=
NULL
) \

1193 
chûd
 = 
	`RB_RIGHT
(
ñm
, 
fõld
); \

1194 i‡(
	`RB_RIGHT
(
ñm
, 
fõld
Ë=
NULL
) \

1195 
chûd
 = 
	`RB_LEFT
(
ñm
, 
fõld
); \

1197 
ty≥
 *
À·
; \

1198 
ñm
 = 
	`RB_RIGHT
”lm, 
fõld
); \

1199 (
À·
 = 
	`RB_LEFT
(
ñm
, 
fõld
))) \

1200 
ñm
 = 
À·
; \

1201 
chûd
 = 
	`RB_RIGHT
(
ñm
, 
fõld
); \

1202 
∑ª¡
 = 
	`RB_PARENT
(
ñm
, 
fõld
); \

1203 
cﬁ‹
 = 
	`RB_COLOR
(
ñm
, 
fõld
); \

1204 i‡(
chûd
) \

1205 
	`RB_PARENT
(
chûd
, 
fõld
Ë
∑ª¡
; \

1206 i‡(
∑ª¡
) { \

1207 i‡(
	`RB_LEFT
(
∑ª¡
, 
fõld
Ë=
ñm
) \

1208 
	`RB_LEFT
(
∑ª¡
, 
fõld
Ë
chûd
; \

1210 
	`RB_RIGHT
(
∑ª¡
, 
fõld
Ë
chûd
; \

1211 
	`RB_AUGMENT
(
∑ª¡
); \

1213 
	`RB_ROOT
(
hód
Ë
chûd
; \

1214 i‡(
	`RB_PARENT
(
ñm
, 
fõld
Ë=
ﬁd
) \

1215 
∑ª¡
 = 
ñm
; \

1216 (
ñm
)->
fõld
 = (
ﬁd
)->field; \

1217 i‡(
	`RB_PARENT
(
ﬁd
, 
fõld
)) { \

1218 i‡(
	`RB_LEFT
(
	`RB_PARENT
(
ﬁd
, 
fõld
), field) == old)\

1219 
	`RB_LEFT
(
	`RB_PARENT
(
ﬁd
, 
fõld
), fõldË
ñm
;\

1221 
	`RB_RIGHT
(
	`RB_PARENT
(
ﬁd
, 
fõld
), fõldË
ñm
;\

1222 
	`RB_AUGMENT
(
	`RB_PARENT
(
ﬁd
, 
fõld
)); \

1224 
	`RB_ROOT
(
hód
Ë
ñm
; \

1225 
	`RB_PARENT
(
	`RB_LEFT
(
ﬁd
, 
fõld
), fõldË
ñm
; \

1226 i‡(
	`RB_RIGHT
(
ﬁd
, 
fõld
)) \

1227 
	`RB_PARENT
(
	`RB_RIGHT
(
ﬁd
, 
fõld
), fõldË
ñm
; \

1228 i‡(
∑ª¡
) { \

1229 
À·
 = 
∑ª¡
; \

1231 
	`RB_AUGMENT
(
À·
); \

1232 } (
À·
 = 
	`RB_PARENT
÷e·, 
fõld
))); \

1234 
cﬁ‹
; \

1236 
∑ª¡
 = 
	`RB_PARENT
(
ñm
, 
fõld
); \

1237 
cﬁ‹
 = 
	`RB_COLOR
(
ñm
, 
fõld
); \

1238 i‡(
chûd
) \

1239 
	`RB_PARENT
(
chûd
, 
fõld
Ë
∑ª¡
; \

1240 i‡(
∑ª¡
) { \

1241 i‡(
	`RB_LEFT
(
∑ª¡
, 
fõld
Ë=
ñm
) \

1242 
	`RB_LEFT
(
∑ª¡
, 
fõld
Ë
chûd
; \

1244 
	`RB_RIGHT
(
∑ª¡
, 
fõld
Ë
chûd
; \

1245 
	`RB_AUGMENT
(
∑ª¡
); \

1247 
	`RB_ROOT
(
hód
Ë
chûd
; \

1248 
cﬁ‹
: \

1249 i‡(
cﬁ‹
 =
RB_BLACK
) \

1250 
«me
##
	`_RB_REMOVE_COLOR
(
hód
, 
∑ª¡
, 
chûd
); \

1251  (
ﬁd
); \

1255 
ty≥
 * \

1256 
«me
##
	`_RB_INSERT
(«mê*
hód
, 
ty≥
 *
ñm
) \

1258 
ty≥
 *
tmp
; \

1259 
ty≥
 *
∑ª¡
 = 
NULL
; \

1260 
comp
 = 0; \

1261 
tmp
 = 
	`RB_ROOT
(
hód
); \

1262 
tmp
) { \

1263 
∑ª¡
 = 
tmp
; \

1264 
comp
 = (
cmp
)(
ñm
, 
∑ª¡
); \

1265 i‡(
comp
 < 0) \

1266 
tmp
 = 
	`RB_LEFT
—mp, 
fõld
); \

1267 i‡(
comp
 > 0) \

1268 
tmp
 = 
	`RB_RIGHT
—mp, 
fõld
); \

1270  (
tmp
); \

1272 
	`RB_SET
(
ñm
, 
∑ª¡
, 
fõld
); \

1273 i‡(
∑ª¡
 !
NULL
) { \

1274 i‡(
comp
 < 0) \

1275 
	`RB_LEFT
(
∑ª¡
, 
fõld
Ë
ñm
; \

1277 
	`RB_RIGHT
(
∑ª¡
, 
fõld
Ë
ñm
; \

1278 
	`RB_AUGMENT
(
∑ª¡
); \

1280 
	`RB_ROOT
(
hód
Ë
ñm
; \

1281 
«me
##
	`_RB_INSERT_COLOR
(
hód
, 
ñm
); \

1282  (
NULL
); \

1286 
ty≥
 * \

1287 
«me
##
	`_RB_FIND
(«mê*
hód
, 
ty≥
 *
ñm
) \

1289 
ty≥
 *
tmp
 = 
	`RB_ROOT
(
hód
); \

1290 
comp
; \

1291 
tmp
) { \

1292 
comp
 = 
	`cmp
(
ñm
, 
tmp
); \

1293 i‡(
comp
 < 0) \

1294 
tmp
 = 
	`RB_LEFT
—mp, 
fõld
); \

1295 i‡(
comp
 > 0) \

1296 
tmp
 = 
	`RB_RIGHT
—mp, 
fõld
); \

1298  (
tmp
); \

1300  (
NULL
); \

1303 
ty≥
 * \

1304 
«me
##
	`_RB_NEXT
(
ty≥
 *
ñm
) \

1306 i‡(
	`RB_RIGHT
(
ñm
, 
fõld
)) { \

1307 
ñm
 = 
	`RB_RIGHT
”lm, 
fõld
); \

1308 
	`RB_LEFT
(
ñm
, 
fõld
)) \

1309 
ñm
 = 
	`RB_LEFT
”lm, 
fõld
); \

1311 i‡(
	`RB_PARENT
(
ñm
, 
fõld
) && \

1312 (
ñm
 =
	`RB_LEFT
(
	`RB_PARENT
”lm, 
fõld
), field))) \

1313 
ñm
 = 
	`RB_PARENT
”lm, 
fõld
); \

1315 
	`RB_PARENT
(
ñm
, 
fõld
) && \

1316 (
ñm
 =
	`RB_RIGHT
(
	`RB_PARENT
”lm, 
fõld
), field)))\

1317 
ñm
 = 
	`RB_PARENT
”lm, 
fõld
); \

1318 
ñm
 = 
	`RB_PARENT
”lm, 
fõld
); \

1321  (
ñm
); \

1324 
ty≥
 * \

1325 
«me
##
	`_RB_MINMAX
(«mê*
hód
, 
vÆ
) \

1327 
ty≥
 *
tmp
 = 
	`RB_ROOT
(
hód
); \

1328 
ty≥
 *
∑ª¡
 = 
NULL
; \

1329 
tmp
) { \

1330 
∑ª¡
 = 
tmp
; \

1331 i‡(
vÆ
 < 0) \

1332 
tmp
 = 
	`RB_LEFT
—mp, 
fõld
); \

1334 
tmp
 = 
	`RB_RIGHT
—mp, 
fõld
); \

1336  (
∑ª¡
); \

1337 }

	)

1339 
	#RB_NEGINF
 -1

	)

1340 
	#RB_INF
 1

	)

1342 
	#RB_INSERT
(
«me
, 
x
, 
y
Ë«me##
	`_RB_INSERT
(x, y)

	)

1343 
	#RB_REMOVE
(
«me
, 
x
, 
y
Ë«me##
	`_RB_REMOVE
(x, y)

	)

1344 
	#RB_FIND
(
«me
, 
x
, 
y
Ë«me##
	`_RB_FIND
(x, y)

	)

1345 
	#RB_NEXT
(
«me
, 
x
, 
y
Ë«me##
	`_RB_NEXT
(y)

	)

1346 
	#RB_MIN
(
«me
, 
x
Ë«me##
	`_RB_MINMAX
(x, 
RB_NEGINF
)

	)

1347 
	#RB_MAX
(
«me
, 
x
Ë«me##
	`_RB_MINMAX
(x, 
RB_INF
)

	)

1349 
	#RB_FOREACH
(
x
, 
«me
, 
hód
) \

1350 (
x
Ë
	`RB_MIN
(
«me
, 
hód
); \

1351 (
x
Ë!
NULL
; \

1352 (
x
Ë
«me
##
	`_RB_NEXT
(x))

	)

	@arc4random.c

44 #i‚de‡
ARC4RANDOM_EXPORT


45 
	#ARC4RANDOM_EXPORT


	)

48 #i‚de‡
ARC4RANDOM_UINT32


49 
	#ARC4RANDOM_UINT32
 
uöt32_t


	)

52 #i‚de‡
ARC4RANDOM_NO_INCLUDES


53 #ifde‡
WIN32


54 
	~<wö¸y±.h
>

55 
	~<¥o˚ss.h
>

57 
	~<f˙é.h
>

58 
	~<uni°d.h
>

59 
	~<sys/∑øm.h
>

60 
	~<sys/time.h
>

61 #ifde‡
_EVENT_HAVE_SYS_SYSCTL_H


62 
	~<sys/sys˘l.h
>

65 
	~<limôs.h
>

66 
	~<°dlib.h
>

67 
	~<°rög.h
>

71 
	#ADD_ENTROPY
 32

	)

74 
	#BYTES_BEFORE_RESEED
 1600000

	)

76 
	s¨c4_°ªam
 {

77 
	mi
;

78 
	mj
;

79 
	ms
[256];

82 #ifde‡
WIN32


83 
	#gëpid
 
_gëpid


	)

84 
	#pid_t
 

	)

87 
	grs_öôülized
;

88 
¨c4_°ªam
 
	grs
;

89 
pid_t
 
	g¨c4_°ú_pid
;

90 
	g¨c4_cou¡
;

91 
	g¨c4_£eded_ok
;

93 
ölöe
 
¨c4_gëbyã
();

95 
ölöe
 

96 
	$¨c4_öô
()

98 
n
;

100 
n
 = 0;Ç < 256;Ç++)

101 
rs
.
s
[
n
] =Ç;

102 
rs
.
i
 = 0;

103 
rs
.
j
 = 0;

104 
	}
}

106 
ölöe
 

107 
	$¨c4_addøndom
(c⁄° *
d©
, 
d©Àn
)

109 
n
;

110 
si
;

112 
rs
.
i
--;

113 
n
 = 0;Ç < 256;Ç++) {

114 
rs
.
i
 = (rs.i + 1);

115 
si
 = 
rs
.
s
[rs.
i
];

116 
rs
.
j
 = (rs.j + 
si
 + 
d©
[
n
 % 
d©Àn
]);

117 
rs
.
s
[rs.
i
] =Ñs.s[rs.
j
];

118 
rs
.
s
[rs.
j
] = 
si
;

120 
rs
.
j
 =Ñs.
i
;

121 
	}
}

123 #i‚de‡
WIN32


124 
ssize_t


125 
	$ªad_Æl
(
fd
, *
buf
, 
size_t
 
cou¡
)

127 
size_t
 
numªad
 = 0;

128 
ssize_t
 
ªsu…
;

130 
numªad
 < 
cou¡
) {

131 
ªsu…
 = 
	`ªad
(
fd
, 
buf
+
numªad
, 
cou¡
-numread);

132 i‡(
ªsu…
<0)

134 i‡(
ªsu…
 == 0)

136 
numªad
 +
ªsu…
;

139  (
ssize_t
)
numªad
;

140 
	}
}

143 #ifde‡
WIN32


144 
	#TRY_SEED_WIN32


	)

146 
	$¨c4_£ed_wö32
()

149 
¥ovidî_£t
 = 0;

150 
HCRYPTPROV
 
¥ovidî
;

151 
buf
[
ADD_ENTROPY
];

153 i‡(!
¥ovidî_£t
) {

154 i‡(!
	`Cry±AcquúeC⁄ãxt
(&
¥ovidî
, 
NULL
, NULL, 
PROV_RSA_FULL
,

155 
CRYPT_VERIFYCONTEXT
)) {

156 i‡(
	`GëLa°Eº‹
(Ë!(
DWORD
)
NTE_BAD_KEYSET
)

159 
¥ovidî_£t
 = 1;

161 i‡(!
	`Cry±GíR™dom
(
¥ovidî
, (
buf
), buf))

163 
	`¨c4_addøndom
(
buf
, (buf));

164 
	`mem£t
(
buf
, 0, (buf));

165 
¨c4_£eded_ok
 = 1;

167 
	}
}

170 #i‡
deföed
(
_EVENT_HAVE_SYS_SYSCTL_H
Ë&& deföed(
_EVENT_HAVE_SYSCTL
)

171 #i‡
_EVENT_HAVE_DECL_CTL_KERN
 && 
_EVENT_HAVE_DECL_KERN_RANDOM
 && 
_EVENT_HAVE_DECL_RANDOM_UUID


172 
	#TRY_SEED_SYSCTL_LINUX


	)

174 
	$¨c4_£ed_sys˘l_löux
()

180 
mib
[] = { 
CTL_KERN
, 
KERN_RANDOM
, 
RANDOM_UUID
 };

181 
buf
[
ADD_ENTROPY
];

182 
size_t
 
Àn
, 
n
;

183 
i
;

184 
™y_£t
;

186 
	`mem£t
(
buf
, 0, (buf));

188 
Àn
 = 0;Üí < (
buf
);Üí +
n
) {

189 
n
 = (
buf
Ë- 
Àn
;

191 i‡(0 !
	`sys˘l
(
mib
, 3, &
buf
[
Àn
], &
n
, 
NULL
, 0))

195 
i
=0,
™y_£t
=0; i<(
buf
); ++i) {

196 
™y_£t
 |
buf
[
i
];

198 i‡(!
™y_£t
)

201 
	`¨c4_addøndom
(
buf
, (buf));

202 
	`mem£t
(
buf
, 0, (buf));

203 
¨c4_£eded_ok
 = 1;

205 
	}
}

208 #i‡
_EVENT_HAVE_DECL_CTL_KERN
 && 
_EVENT_HAVE_DECL_KERN_ARND


209 
	#TRY_SEED_SYSCTL_BSD


	)

211 
	$¨c4_£ed_sys˘l_bsd
()

217 
mib
[] = { 
CTL_KERN
, 
KERN_ARND
 };

218 
buf
[
ADD_ENTROPY
];

219 
size_t
 
Àn
, 
n
;

220 
i
, 
™y_£t
;

222 
	`mem£t
(
buf
, 0, (buf));

224 
Àn
 = (
buf
);

225 i‡(
	`sys˘l
(
mib
, 2, 
buf
, &
Àn
, 
NULL
, 0) == -1) {

226 
Àn
 = 0;Üí < (
buf
);Üen += ()) {

227 
n
 = ();

228 i‡(
n
 + 
Àn
 > (
buf
))

229 
n
 = 
Àn
 - (
buf
);

230 i‡(
	`sys˘l
(
mib
, 2, &
buf
[
Àn
], &
n
, 
NULL
, 0) == -1)

235 
i
=
™y_£t
=0; i<(
buf
); ++i) {

236 
™y_£t
 |
buf
[
i
];

238 i‡(!
™y_£t
)

241 
	`¨c4_addøndom
(
buf
, (buf));

242 
	`mem£t
(
buf
, 0, (buf));

243 
¨c4_£eded_ok
 = 1;

245 
	}
}

249 #ifde‡
__löux__


250 
	#TRY_SEED_PROC_SYS_KERNEL_RANDOM_UUID


	)

252 
	$¨c4_£ed_¥oc_sys_kî√l_øndom_uuid
()

258 
fd
;

259 
buf
[128];

260 
íå›y
[64];

261 
byãs
, 
n
, 
i
, 
nybbÀs
;

262 
byãs
 = 0; byãs<
ADD_ENTROPY
; ) {

263 
fd
 = 
	`evutû_›í_˛o£⁄exec
("/¥oc/sys/kî√l/øndom/uuid", 
O_RDONLY
, 0);

264 i‡(
fd
 < 0)

266 
n
 = 
	`ªad
(
fd
, 
buf
, (buf));

267 
	`˛o£
(
fd
);

268 i‡(
n
<=0)

270 
	`mem£t
(
íå›y
, 0, (entropy));

271 
i
=
nybbÀs
=0; i<
n
; ++i) {

272 i‡(
	`EVUTIL_ISXDIGIT
(
buf
[
i
])) {

273 
nyb
 = 
	`evutû_hex_ch¨_to_öt
(
buf
[
i
]);

274 i‡(
nybbÀs
 & 1) {

275 
íå›y
[
nybbÀs
/2] |
nyb
;

277 
íå›y
[
nybbÀs
/2] |
nyb
<<4;

279 ++
nybbÀs
;

282 i‡(
nybbÀs
 < 2)

284 
	`¨c4_addøndom
(
íå›y
, 
nybbÀs
/2);

285 
byãs
 +
nybbÀs
/2;

287 
	`mem£t
(
íå›y
, 0, (entropy));

288 
	`mem£t
(
buf
, 0, (buf));

290 
	}
}

293 #i‚de‡
WIN32


294 
	#TRY_SEED_URANDOM


	)

296 
	$¨c4_£ed_uøndom
()

299 c⁄° *
fûíames
[] = {

300 "/dev/§™dom", "/dev/uøndom", "/dev/øndom", 
NULL


302 
buf
[
ADD_ENTROPY
];

303 
fd
, 
i
;

304 
size_t
 
n
;

306 
i
 = 0; 
fûíames
[i]; ++i) {

307 
fd
 = 
	`evutû_›í_˛o£⁄exec
(
fûíames
[
i
], 
O_RDONLY
, 0);

308 i‡(
fd
<0)

310 
n
 = 
	`ªad_Æl
(
fd
, 
buf
, (buf));

311 
	`˛o£
(
fd
);

312 i‡(
n
 !(
buf
))

314 
	`¨c4_addøndom
(
buf
, (buf));

315 
	`mem£t
(
buf
, 0, (buf));

316 
¨c4_£eded_ok
 = 1;

321 
	}
}

325 
	$¨c4_£ed
()

327 
ok
 = 0;

331 #ifde‡
TRY_SEED_WIN32


332 i‡(0 =
	`¨c4_£ed_wö32
())

333 
ok
 = 1;

335 #ifde‡
TRY_SEED_URANDOM


336 i‡(0 =
	`¨c4_£ed_uøndom
())

337 
ok
 = 1;

339 #ifde‡
TRY_SEED_PROC_SYS_KERNEL_RANDOM_UUID


340 i‡(0 =
	`¨c4_£ed_¥oc_sys_kî√l_øndom_uuid
())

341 
ok
 = 1;

343 #ifde‡
TRY_SEED_SYSCTL_LINUX


346 i‡(!
ok
 && 0 =
	`¨c4_£ed_sys˘l_löux
())

347 
ok
 = 1;

349 #ifde‡
TRY_SEED_SYSCTL_BSD


350 i‡(0 =
	`¨c4_£ed_sys˘l_bsd
())

351 
ok
 = 1;

353  
ok
 ? 0 : -1;

354 
	}
}

357 
	$¨c4_°ú
()

359 
i
;

361 i‡(!
rs_öôülized
) {

362 
	`¨c4_öô
();

363 
rs_öôülized
 = 1;

366 
	`¨c4_£ed
();

367 i‡(!
¨c4_£eded_ok
)

388 
i
 = 0; i < 12*256; i++)

389 ()
	`¨c4_gëbyã
();

390 
¨c4_cou¡
 = 
BYTES_BEFORE_RESEED
;

393 
	}
}

397 
	$¨c4_°ú_if_√eded
()

399 
pid_t
 
pid
 = 
	`gëpid
();

401 i‡(
¨c4_cou¡
 <0 || !
rs_öôülized
 || 
¨c4_°ú_pid
 !
pid
)

403 
¨c4_°ú_pid
 = 
pid
;

404 
	`¨c4_°ú
();

406 
	}
}

408 
ölöe
 

409 
	$¨c4_gëbyã
()

411 
si
, 
sj
;

413 
rs
.
i
 = (rs.i + 1);

414 
si
 = 
rs
.
s
[rs.
i
];

415 
rs
.
j
 = (rs.j + 
si
);

416 
sj
 = 
rs
.
s
[rs.
j
];

417 
rs
.
s
[rs.
i
] = 
sj
;

418 
rs
.
s
[rs.
j
] = 
si
;

419  (
rs
.
s
[(
si
 + 
sj
) & 0xff]);

420 
	}
}

422 
ölöe
 

423 
	$¨c4_gëw‹d
()

425 
vÆ
;

427 
vÆ
 = 
	`¨c4_gëbyã
() << 24;

428 
vÆ
 |
	`¨c4_gëbyã
() << 16;

429 
vÆ
 |
	`¨c4_gëbyã
() << 8;

430 
vÆ
 |
	`¨c4_gëbyã
();

432  
vÆ
;

433 
	}
}

435 #i‚de‡
ARC4RANDOM_NOSTIR


436 
ARC4RANDOM_EXPORT
 

437 
	$¨c4øndom_°ú
()

439 
vÆ
;

440 
	`_ARC4_LOCK
();

441 
vÆ
 = 
	`¨c4_°ú
();

442 
	`_ARC4_UNLOCK
();

443  
vÆ
;

444 
	}
}

447 #i‚de‡
ARC4RANDOM_NOADDRANDOM


448 
ARC4RANDOM_EXPORT
 

449 
	$¨c4øndom_addøndom
(c⁄° *
d©
, 
d©Àn
)

451 
j
;

452 
	`_ARC4_LOCK
();

453 i‡(!
rs_öôülized
)

454 
	`¨c4_°ú
();

455 
j
 = 0; j < 
d©Àn
; j += 256) {

460 
	`¨c4_addøndom
(
d©
 + 
j
, 
d©Àn
 - j);

462 
	`_ARC4_UNLOCK
();

463 
	}
}

466 #i‚de‡
ARC4RANDOM_NORANDOM


467 
ARC4RANDOM_EXPORT
 
ARC4RANDOM_UINT32


468 
	$¨c4øndom
()

470 
ARC4RANDOM_UINT32
 
vÆ
;

471 
	`_ARC4_LOCK
();

472 
¨c4_cou¡
 -= 4;

473 
	`¨c4_°ú_if_√eded
();

474 
vÆ
 = 
	`¨c4_gëw‹d
();

475 
	`_ARC4_UNLOCK
();

476  
vÆ
;

477 
	}
}

480 
ARC4RANDOM_EXPORT
 

481 
	$¨c4øndom_buf
(*
_buf
, 
size_t
 
n
)

483 *
buf
 = 
_buf
;

484 
	`_ARC4_LOCK
();

485 
	`¨c4_°ú_if_√eded
();

486 
n
--) {

487 i‡(--
¨c4_cou¡
 <= 0)

488 
	`¨c4_°ú
();

489 
buf
[
n
] = 
	`¨c4_gëbyã
();

491 
	`_ARC4_UNLOCK
();

492 
	}
}

494 #i‚de‡
ARC4RANDOM_NOUNIFORM


505 
ARC4RANDOM_EXPORT
 

506 
	$¨c4øndom_unif‹m
(
uµî_bound
)

508 
ARC4RANDOM_UINT32
 
r
, 
mö
;

510 i‡(
uµî_bound
 < 2)

513 #i‡(
UINT_MAX
 > 0xffffffffUL)

514 
mö
 = 0x100000000UL % 
uµî_bound
;

517 i‡(
uµî_bound
 > 0x80000000)

518 
mö
 = 1 + ~
uµî_bound
;

521 
mö
 = ((0xfffffff‡- (
uµî_bound
 * 2)) + 1) % upper_bound;

532 
r
 = 
	`¨c4øndom
();

533 i‡(
r
 >
mö
)

537  
r
 % 
uµî_bound
;

538 
	}
}

	@buffer.c

28 
	~"evít2/evít-c⁄fig.h
"

30 #ifde‡
WIN32


31 
	~<wösock2.h
>

32 
	~<wödows.h
>

33 
	~<io.h
>

36 #ifde‡
_EVENT_HAVE_VASPRINTF


38 
	#_GNU_SOURCE


	)

41 
	~<sys/ty≥s.h
>

43 #ifde‡
_EVENT_HAVE_SYS_TIME_H


44 
	~<sys/time.h
>

47 #ifde‡
_EVENT_HAVE_SYS_SOCKET_H


48 
	~<sys/sockë.h
>

51 #ifde‡
_EVENT_HAVE_SYS_UIO_H


52 
	~<sys/uio.h
>

55 #ifde‡
_EVENT_HAVE_SYS_IOCTL_H


56 
	~<sys/io˘l.h
>

59 #ifde‡
_EVENT_HAVE_SYS_MMAN_H


60 
	~<sys/mm™.h
>

63 #ifde‡
_EVENT_HAVE_SYS_SENDFILE_H


64 
	~<sys/£ndfûe.h
>

67 
	~<î∫o.h
>

68 
	~<°dio.h
>

69 
	~<°dlib.h
>

70 
	~<°rög.h
>

71 #ifde‡
_EVENT_HAVE_STDARG_H


72 
	~<°d¨g.h
>

74 #ifde‡
_EVENT_HAVE_UNISTD_H


75 
	~<uni°d.h
>

77 
	~<limôs.h
>

79 
	~"evít2/evít.h
"

80 
	~"evít2/buf„r.h
"

81 
	~"evít2/buf„r_com∑t.h
"

82 
	~"evít2/buf„ªvít.h
"

83 
	~"evít2/buf„ªvít_com∑t.h
"

84 
	~"evít2/buf„ªvít_°ru˘.h
"

85 
	~"evít2/thªad.h
"

86 
	~"evít2/evít-c⁄fig.h
"

87 
	~"log-öã∫Æ.h
"

88 
	~"mm-öã∫Æ.h
"

89 
	~"utû-öã∫Æ.h
"

90 
	~"evthªad-öã∫Æ.h
"

91 
	~"evbuf„r-öã∫Æ.h
"

92 
	~"buf„ªvít-öã∫Æ.h
"

95 #i‚de‡
MAP_FAILED


96 
	#MAP_FAILED
 ((*)-1)

	)

100 #i‡
deföed
(
_EVENT_HAVE_SYS_SENDFILE_H
Ë&& deföed(
_EVENT_HAVE_SENDFILE
Ë&& deföed(
__löux__
)

101 
	#USE_SENDFILE
 1

	)

102 
	#SENDFILE_IS_LINUX
 1

	)

103 #ñi‡
deföed
(
_EVENT_HAVE_SENDFILE
Ë&& deföed(
__FªeBSD__
)

104 
	#USE_SENDFILE
 1

	)

105 
	#SENDFILE_IS_FREEBSD
 1

	)

106 #ñi‡
deföed
(
_EVENT_HAVE_SENDFILE
Ë&& deföed(
__APPLE__
)

107 
	#USE_SENDFILE
 1

	)

108 
	#SENDFILE_IS_MACOSX
 1

	)

109 #ñi‡
deföed
(
_EVENT_HAVE_SENDFILE
Ë&& deföed(
__sun__
Ë&& deföed(
__svr4__
)

110 
	#USE_SENDFILE
 1

	)

111 
	#SENDFILE_IS_SOLARIS
 1

	)

114 #ifde‡
USE_SENDFILE


115 
	gu£_£ndfûe
 = 1;

117 #ifde‡
_EVENT_HAVE_MMAP


118 
	gu£_mm≠
 = 1;

123 
	#EVBUFFER_CB_USER_FLAGS
 0xffff

	)

125 
	#EVBUFFER_CB_INTERNAL_FLAGS
 0xffff0000

	)

128 
	#EVBUFFER_CB_OBSOLETE
 0x00040000

	)

131 
	#CHAIN_SPACE_PTR
(
ch
Ë((ch)->
buf„r
 + (ch)->
mißlign
 + (ch)->
off
)

	)

132 
	#CHAIN_SPACE_LEN
(
ch
Ë((ch)->
Êags
 & 
EVBUFFER_IMMUTABLE
 ? \

133 0 : (
ch
)->
buf„r_Àn
 - ((ch)->
mißlign
 + (ch)->
off
))

	)

135 
	#CHAIN_PINNED
(
ch
Ë(((ch)->
Êags
 & 
EVBUFFER_MEM_PINNED_ANY
Ë!0)

	)

136 
	#CHAIN_PINNED_R
(
ch
Ë(((ch)->
Êags
 & 
EVBUFFER_MEM_PINNED_R
Ë!0)

	)

138 
evbuf„r_chaö_Æign
(
evbuf„r_chaö
 *
chaö
);

139 
evbuf„r_chaö_should_ªÆign
(
evbuf„r_chaö
 *
chaö
,

140 
size_t
 
d©Æí
);

141 
evbuf„r_de„ºed_ˇŒback
(
de„ºed_cb
 *
cb
, *
¨g
);

142 
evbuf„r_±r_memcmp
(c⁄° 
evbuf„r
 *
buf
,

143 c⁄° 
evbuf„r_±r
 *
pos
, c⁄° *
mem
, 
size_t
 
Àn
);

144 
evbuf„r_chaö
 *
evbuf„r_ex∑nd_sögÀchaö
(
evbuf„r
 *
buf
,

145 
size_t
 
d©Àn
);

147 #ifde‡
WIN32


148 
evbuf„r_ªadfûe
(
evbuf„r
 *
buf
, 
evutû_sockë_t
 
fd
,

149 
ev_ssize_t
 
howmuch
);

151 
	#evbuf„r_ªadfûe
 
evbuf„r_ªad


	)

154 
evbuf„r_chaö
 *

155 
	$evbuf„r_chaö_√w
(
size_t
 
size
)

157 
evbuf„r_chaö
 *
chaö
;

158 
size_t
 
to_Æloc
;

160 
size
 +
EVBUFFER_CHAIN_SIZE
;

163 
to_Æloc
 = 
MIN_BUFFER_SIZE
;

164 
to_Æloc
 < 
size
)

165 
to_Æloc
 <<= 1;

168 i‡((
chaö
 = 
	`mm_mÆloc
(
to_Æloc
)Ë=
NULL
)

169  (
NULL
);

171 
	`mem£t
(
chaö
, 0, 
EVBUFFER_CHAIN_SIZE
);

173 
chaö
->
buf„r_Àn
 = 
to_Æloc
 - 
EVBUFFER_CHAIN_SIZE
;

178 
chaö
->
buf„r
 = 
	`EVBUFFER_CHAIN_EXTRA
(
u_ch¨
, chain);

180  (
chaö
);

181 
	}
}

183 
ölöe
 

184 
	$evbuf„r_chaö_‰ì
(
evbuf„r_chaö
 *
chaö
)

186 i‡(
	`CHAIN_PINNED
(
chaö
)) {

187 
chaö
->
Êags
 |
EVBUFFER_DANGLING
;

190 i‡(
chaö
->
Êags
 & (
EVBUFFER_MMAP
|
EVBUFFER_SENDFILE
|

191 
EVBUFFER_REFERENCE
)) {

192 i‡(
chaö
->
Êags
 & 
EVBUFFER_REFERENCE
) {

193 
evbuf„r_chaö_ª„ªn˚
 *
öfo
 =

194 
	`EVBUFFER_CHAIN_EXTRA
(

195 
evbuf„r_chaö_ª„ªn˚
,

196 
chaö
);

197 i‡(
öfo
->
˛ónup‚
)

198 (*
öfo
->
˛ónup‚
)(
chaö
->
buf„r
,

199 
chaö
->
buf„r_Àn
,

200 
öfo
->
exåa
);

202 #ifde‡
_EVENT_HAVE_MMAP


203 i‡(
chaö
->
Êags
 & 
EVBUFFER_MMAP
) {

204 
evbuf„r_chaö_fd
 *
öfo
 =

205 
	`EVBUFFER_CHAIN_EXTRA
(
evbuf„r_chaö_fd
,

206 
chaö
);

207 i‡(
	`munm≠
(
chaö
->
buf„r
, chaö->
buf„r_Àn
) == -1)

208 
	`evít_w¨n
("%s: munm≠ faûed", 
__func__
);

209 i‡(
	`˛o£
(
öfo
->
fd
) == -1)

210 
	`evít_w¨n
("%s: close(%d) failed",

211 
__func__
, 
öfo
->
fd
);

214 #ifde‡
USE_SENDFILE


215 i‡(
chaö
->
Êags
 & 
EVBUFFER_SENDFILE
) {

216 
evbuf„r_chaö_fd
 *
öfo
 =

217 
	`EVBUFFER_CHAIN_EXTRA
(
evbuf„r_chaö_fd
,

218 
chaö
);

219 i‡(
	`˛o£
(
öfo
->
fd
) == -1)

220 
	`evít_w¨n
("%s: close(%d) failed",

221 
__func__
, 
öfo
->
fd
);

226 
	`mm_‰ì
(
chaö
);

227 
	}
}

230 
	$evbuf„r_‰ì_Æl_chaös
(
evbuf„r_chaö
 *
chaö
)

232 
evbuf„r_chaö
 *
√xt
;

233 ; 
chaö
; chaö = 
√xt
) {

234 
√xt
 = 
chaö
->next;

235 
	`evbuf„r_chaö_‰ì
(
chaö
);

237 
	}
}

239 #i‚de‡
NDEBUG


241 
	$evbuf„r_chaös_Æl_em±y
(
evbuf„r_chaö
 *
chaö
)

243 ; 
chaö
; chaö = chaö->
√xt
) {

244 i‡(
chaö
->
off
)

248 
	}
}

252 
ölöe
 
	$evbuf„r_chaös_Æl_em±y
(
evbuf„r_chaö
 *
chaö
) {

254 
	}
}

264 
evbuf„r_chaö
 **

265 
	$evbuf„r_‰ì_åaûög_em±y_chaös
(
evbuf„r
 *
buf
)

267 
evbuf„r_chaö
 **
ch
 = 
buf
->
œ°_wôh_d©≠
;

269 (*
ch
Ë&& ((*ch)->
off
 !0 || 
	`CHAIN_PINNED
(*ch)))

270 
ch
 = &(*ch)->
√xt
;

271 i‡(*
ch
) {

272 
	`EVUTIL_ASSERT
(
	`evbuf„r_chaös_Æl_em±y
(*
ch
));

273 
	`evbuf„r_‰ì_Æl_chaös
(*
ch
);

274 *
ch
 = 
NULL
;

276  
ch
;

277 
	}
}

283 
	$evbuf„r_chaö_ö£π
(
evbuf„r
 *
buf
,

284 
evbuf„r_chaö
 *
chaö
)

286 
	`ASSERT_EVBUFFER_LOCKED
(
buf
);

287 i‡(*
buf
->
œ°_wôh_d©≠
 =
NULL
) {

289 
	`EVUTIL_ASSERT
(
buf
->
œ°_wôh_d©≠
 =&buf->
fú°
);

290 
	`EVUTIL_ASSERT
(
buf
->
fú°
 =
NULL
);

291 
buf
->
fú°
 = buf->
œ°
 = 
chaö
;

293 
evbuf„r_chaö
 **
ch
 = 
buf
->
œ°_wôh_d©≠
;

295 (*
ch
Ë&& ((*ch)->
off
 !0 || 
	`CHAIN_PINNED
(*ch)))

296 
ch
 = &(*ch)->
√xt
;

297 i‡(*
ch
 =
NULL
) {

299 
buf
->
œ°
->
√xt
 = 
chaö
;

300 i‡(
chaö
->
off
)

301 
buf
->
œ°_wôh_d©≠
 = &buf->
œ°
->
√xt
;

304 
	`EVUTIL_ASSERT
(
	`evbuf„r_chaös_Æl_em±y
(*
ch
));

305 
	`evbuf„r_‰ì_Æl_chaös
(*
ch
);

306 *
ch
 = 
chaö
;

308 
buf
->
œ°
 = 
chaö
;

310 
buf
->
tŸÆ_Àn
 +
chaö
->
off
;

311 
	}
}

313 
ölöe
 
evbuf„r_chaö
 *

314 
	$evbuf„r_chaö_ö£π_√w
(
evbuf„r
 *
buf
, 
size_t
 
d©Àn
)

316 
evbuf„r_chaö
 *
chaö
;

317 i‡((
chaö
 = 
	`evbuf„r_chaö_√w
(
d©Àn
)Ë=
NULL
)

318  
NULL
;

319 
	`evbuf„r_chaö_ö£π
(
buf
, 
chaö
);

320  
chaö
;

321 
	}
}

324 
	$_evbuf„r_chaö_pö
(
evbuf„r_chaö
 *
chaö
, 
Êag
)

326 
	`EVUTIL_ASSERT
((
chaö
->
Êags
 & 
Êag
) == 0);

327 
chaö
->
Êags
 |
Êag
;

328 
	}
}

331 
	$_evbuf„r_chaö_u≈ö
(
evbuf„r_chaö
 *
chaö
, 
Êag
)

333 
	`EVUTIL_ASSERT
((
chaö
->
Êags
 & 
Êag
) != 0);

334 
chaö
->
Êags
 &~
Êag
;

335 i‡(
chaö
->
Êags
 & 
EVBUFFER_DANGLING
)

336 
	`evbuf„r_chaö_‰ì
(
chaö
);

337 
	}
}

339 
evbuf„r
 *

340 
	$evbuf„r_√w
()

342 
evbuf„r
 *
buf„r
;

344 
buf„r
 = 
	`mm_ˇŒoc
(1, (
evbuf„r
));

345 i‡(
buf„r
 =
NULL
)

346  (
NULL
);

348 
	`TAILQ_INIT
(&
buf„r
->
ˇŒbacks
);

349 
buf„r
->
ªf˙t
 = 1;

350 
buf„r
->
œ°_wôh_d©≠
 = &buf„r->
fú°
;

352  (
buf„r
);

353 
	}
}

356 
	$evbuf„r_£t_Êags
(
evbuf„r
 *
buf
, 
ev_uöt64_t
 
Êags
)

358 
	`EVBUFFER_LOCK
(
buf
);

359 
buf
->
Êags
 |(
ev_uöt32_t
)flags;

360 
	`EVBUFFER_UNLOCK
(
buf
);

362 
	}
}

365 
	$evbuf„r_˛ór_Êags
(
evbuf„r
 *
buf
, 
ev_uöt64_t
 
Êags
)

367 
	`EVBUFFER_LOCK
(
buf
);

368 
buf
->
Êags
 &~(
ev_uöt32_t
)flags;

369 
	`EVBUFFER_UNLOCK
(
buf
);

371 
	}
}

374 
	$_evbuf„r_ö¸ef
(
evbuf„r
 *
buf
)

376 
	`EVBUFFER_LOCK
(
buf
);

377 ++
buf
->
ªf˙t
;

378 
	`EVBUFFER_UNLOCK
(
buf
);

379 
	}
}

382 
	$_evbuf„r_ö¸ef_™d_lock
(
evbuf„r
 *
buf
)

384 
	`EVBUFFER_LOCK
(
buf
);

385 ++
buf
->
ªf˙t
;

386 
	}
}

389 
	$evbuf„r_de„r_ˇŒbacks
(
evbuf„r
 *
buf„r
, 
evít_ba£
 *
ba£
)

391 
	`EVBUFFER_LOCK
(
buf„r
);

392 
buf„r
->
cb_queue
 = 
	`evít_ba£_gë_de„ºed_cb_queue
(
ba£
);

393 
buf„r
->
de„ºed_cbs
 = 1;

394 
	`evít_de„ºed_cb_öô
(&
buf„r
->
de„ºed
,

395 
evbuf„r_de„ºed_ˇŒback
, 
buf„r
);

396 
	`EVBUFFER_UNLOCK
(
buf„r
);

398 
	}
}

401 
	$evbuf„r_íabÀ_lockög
(
evbuf„r
 *
buf
, *
lock
)

403 #ifde‡
_EVENT_DISABLE_THREAD_SUPPORT


406 i‡(
buf
->
lock
)

409 i‡(!
lock
) {

410 
	`EVTHREAD_ALLOC_LOCK
(
lock
, 
EVTHREAD_LOCKTYPE_RECURSIVE
);

411 i‡(!
lock
)

413 
buf
->
lock
 =Üock;

414 
buf
->
own_lock
 = 1;

416 
buf
->
lock
 =Üock;

417 
buf
->
own_lock
 = 0;

422 
	}
}

425 
	$evbuf„r_£t_∑ª¡
(
evbuf„r
 *
buf
, 
buf„ªvít
 *
bev
)

427 
	`EVBUFFER_LOCK
(
buf
);

428 
buf
->
∑ª¡
 = 
bev
;

429 
	`EVBUFFER_UNLOCK
(
buf
);

430 
	}
}

433 
	$evbuf„r_run_ˇŒbacks
(
evbuf„r
 *
buf„r
, 
ru¬ög_de„ºed
)

435 
evbuf„r_cb_íåy
 *
cbít
, *
√xt
;

436 
evbuf„r_cb_öfo
 
öfo
;

437 
size_t
 
√w_size
;

438 
ev_uöt32_t
 
mask
, 
masked_vÆ
;

439 
˛ór
 = 1;

441 i‡(
ru¬ög_de„ºed
) {

442 
mask
 = 
EVBUFFER_CB_NODEFER
|
EVBUFFER_CB_ENABLED
;

443 
masked_vÆ
 = 
EVBUFFER_CB_ENABLED
;

444 } i‡(
buf„r
->
de„ºed_cbs
) {

445 
mask
 = 
EVBUFFER_CB_NODEFER
|
EVBUFFER_CB_ENABLED
;

446 
masked_vÆ
 = 
EVBUFFER_CB_NODEFER
|
EVBUFFER_CB_ENABLED
;

449 
˛ór
 = 0;

451 
mask
 = 
EVBUFFER_CB_ENABLED
;

452 
masked_vÆ
 = 
EVBUFFER_CB_ENABLED
;

455 
	`ASSERT_EVBUFFER_LOCKED
(
buf„r
);

457 i‡(
	`TAILQ_EMPTY
(&
buf„r
->
ˇŒbacks
)) {

458 
buf„r
->
n_add_f‹_cb
 = buf„r->
n_dñ_f‹_cb
 = 0;

461 i‡(
buf„r
->
n_add_f‹_cb
 =0 && buf„r->
n_dñ_f‹_cb
 == 0)

464 
√w_size
 = 
buf„r
->
tŸÆ_Àn
;

465 
öfo
.
‹ig_size
 = 
√w_size
 + 
buf„r
->
n_dñ_f‹_cb
 - buf„r->
n_add_f‹_cb
;

466 
öfo
.
n_added
 = 
buf„r
->
n_add_f‹_cb
;

467 
öfo
.
n_dñëed
 = 
buf„r
->
n_dñ_f‹_cb
;

468 i‡(
˛ór
) {

469 
buf„r
->
n_add_f‹_cb
 = 0;

470 
buf„r
->
n_dñ_f‹_cb
 = 0;

472 
cbít
 = 
	`TAILQ_FIRST
(&
buf„r
->
ˇŒbacks
);

473 
cbít
 !
	`TAILQ_END
(&
buf„r
->
ˇŒbacks
);

474 
cbít
 = 
√xt
) {

477 
√xt
 = 
	`TAILQ_NEXT
(
cbít
,Çext);

479 i‡((
cbít
->
Êags
 & 
mask
Ë!
masked_vÆ
)

482 i‡((
cbít
->
Êags
 & 
EVBUFFER_CB_OBSOLETE
))

483 
cbít
->
cb
.
	`cb_obsﬁëe
(
buf„r
,

484 
öfo
.
‹ig_size
, 
√w_size
, 
cbít
->
cb¨g
);

486 
cbít
->
cb
.
	`cb_func
(
buf„r
, &
öfo
, cbít->
cb¨g
);

488 
	}
}

491 
	$evbuf„r_övoke_ˇŒbacks
(
evbuf„r
 *
buf„r
)

493 i‡(
	`TAILQ_EMPTY
(&
buf„r
->
ˇŒbacks
)) {

494 
buf„r
->
n_add_f‹_cb
 = buf„r->
n_dñ_f‹_cb
 = 0;

498 i‡(
buf„r
->
de„ºed_cbs
) {

499 i‡(
buf„r
->
de„ºed
.
queued
)

501 
	`_evbuf„r_ö¸ef_™d_lock
(
buf„r
);

502 i‡(
buf„r
->
∑ª¡
)

503 
	`buf„ªvít_ö¸ef
(
buf„r
->
∑ª¡
);

504 
	`EVBUFFER_UNLOCK
(
buf„r
);

505 
	`evít_de„ºed_cb_scheduÀ
(
buf„r
->
cb_queue
, &buf„r->
de„ºed
);

508 
	`evbuf„r_run_ˇŒbacks
(
buf„r
, 0);

509 
	}
}

512 
	$evbuf„r_de„ºed_ˇŒback
(
de„ºed_cb
 *
cb
, *
¨g
)

514 
buf„ªvít
 *
∑ª¡
 = 
NULL
;

515 
evbuf„r
 *
buf„r
 = 
¨g
;

519 
	`EVBUFFER_LOCK
(
buf„r
);

520 
∑ª¡
 = 
buf„r
->parent;

521 
	`evbuf„r_run_ˇŒbacks
(
buf„r
, 1);

522 
	`_evbuf„r_de¸ef_™d_u∆ock
(
buf„r
);

523 i‡(
∑ª¡
)

524 
	`buf„ªvít_de¸ef
(
∑ª¡
);

525 
	}
}

528 
	$evbuf„r_ªmove_Æl_ˇŒbacks
(
evbuf„r
 *
buf„r
)

530 
evbuf„r_cb_íåy
 *
cbít
;

532 (
cbít
 = 
	`TAILQ_FIRST
(&
buf„r
->
ˇŒbacks
))) {

533 
	`TAILQ_REMOVE
(&
buf„r
->
ˇŒbacks
, 
cbít
, 
√xt
);

534 
	`mm_‰ì
(
cbít
);

536 
	}
}

539 
	$_evbuf„r_de¸ef_™d_u∆ock
(
evbuf„r
 *
buf„r
)

541 
evbuf„r_chaö
 *
chaö
, *
√xt
;

542 
	`ASSERT_EVBUFFER_LOCKED
(
buf„r
);

544 
	`EVUTIL_ASSERT
(
buf„r
->
ªf˙t
 > 0);

546 i‡(--
buf„r
->
ªf˙t
 > 0) {

547 
	`EVBUFFER_UNLOCK
(
buf„r
);

551 
chaö
 = 
buf„r
->
fú°
; chaö !
NULL
; chaö = 
√xt
) {

552 
√xt
 = 
chaö
->next;

553 
	`evbuf„r_chaö_‰ì
(
chaö
);

555 
	`evbuf„r_ªmove_Æl_ˇŒbacks
(
buf„r
);

556 i‡(
buf„r
->
de„ºed_cbs
)

557 
	`evít_de„ºed_cb_ˇn˚l
(
buf„r
->
cb_queue
, &buf„r->
de„ºed
);

559 
	`EVBUFFER_UNLOCK
(
buf„r
);

560 i‡(
buf„r
->
own_lock
)

561 
	`EVTHREAD_FREE_LOCK
(
buf„r
->
lock
, 
EVTHREAD_LOCKTYPE_RECURSIVE
);

562 
	`mm_‰ì
(
buf„r
);

563 
	}
}

566 
	$evbuf„r_‰ì
(
evbuf„r
 *
buf„r
)

568 
	`EVBUFFER_LOCK
(
buf„r
);

569 
	`_evbuf„r_de¸ef_™d_u∆ock
(
buf„r
);

570 
	}
}

573 
	$evbuf„r_lock
(
evbuf„r
 *
buf
)

575 
	`EVBUFFER_LOCK
(
buf
);

576 
	}
}

579 
	$evbuf„r_u∆ock
(
evbuf„r
 *
buf
)

581 
	`EVBUFFER_UNLOCK
(
buf
);

582 
	}
}

584 
size_t


585 
	$evbuf„r_gë_Àngth
(c⁄° 
evbuf„r
 *
buf„r
)

587 
size_t
 
ªsu…
;

589 
	`EVBUFFER_LOCK
(
buf„r
);

591 
ªsu…
 = (
buf„r
->
tŸÆ_Àn
);

593 
	`EVBUFFER_UNLOCK
(
buf„r
);

595  
ªsu…
;

596 
	}
}

598 
size_t


599 
	$evbuf„r_gë_c⁄tiguous_•a˚
(c⁄° 
evbuf„r
 *
buf
)

601 
evbuf„r_chaö
 *
chaö
;

602 
size_t
 
ªsu…
;

604 
	`EVBUFFER_LOCK
(
buf
);

605 
chaö
 = 
buf
->
fú°
;

606 
ªsu…
 = (
chaö
 !
NULL
 ? chaö->
off
 : 0);

607 
	`EVBUFFER_UNLOCK
(
buf
);

609  
ªsu…
;

610 
	}
}

613 
	$evbuf„r_ª£rve_•a˚
(
evbuf„r
 *
buf
, 
ev_ssize_t
 
size
,

614 
evbuf„r_iovec
 *
vec
, 
n_vecs
)

616 
evbuf„r_chaö
 *
chaö
, **
chaöp
;

617 
n
 = -1;

619 
	`EVBUFFER_LOCK
(
buf
);

620 i‡(
buf
->
‰ìze_íd
)

621 
d⁄e
;

622 i‡(
n_vecs
 < 1)

623 
d⁄e
;

624 i‡(
n_vecs
 == 1) {

625 i‡((
chaö
 = 
	`evbuf„r_ex∑nd_sögÀchaö
(
buf
, 
size
)Ë=
NULL
)

626 
d⁄e
;

628 
vec
[0].
iov_ba£
 = 
	`CHAIN_SPACE_PTR
(
chaö
);

629 
vec
[0].
iov_Àn
 = (
size_t
Ë
	`CHAIN_SPACE_LEN
(
chaö
);

630 
	`EVUTIL_ASSERT
(
size
<0 || (
size_t
)
vec
[0].
iov_Àn
 >= (size_t)size);

631 
n
 = 1;

633 i‡(
	`_evbuf„r_ex∑nd_Á°
(
buf
, 
size
, 
n_vecs
)<0)

634 
d⁄e
;

635 
n
 = 
	`_evbuf„r_ªad_£tup_vecs
(
buf
, 
size
, 
vec
, 
n_vecs
,

636 &
chaöp
, 0);

639 
d⁄e
:

640 
	`EVBUFFER_UNLOCK
(
buf
);

641  
n
;

643 
	}
}

646 
	$adv™˚_œ°_wôh_d©a
(
evbuf„r
 *
buf
)

648 
n
 = 0;

649 
	`ASSERT_EVBUFFER_LOCKED
(
buf
);

651 i‡(!*
buf
->
œ°_wôh_d©≠
)

654 (*
buf
->
œ°_wôh_d©≠
)->
√xt
 && (*buf->œ°_wôh_d©≠)->√xt->
off
) {

655 
buf
->
œ°_wôh_d©≠
 = &(*buf->œ°_wôh_d©≠)->
√xt
;

656 ++
n
;

658  
n
;

659 
	}
}

662 
	$evbuf„r_commô_•a˚
(
evbuf„r
 *
buf
,

663 
evbuf„r_iovec
 *
vec
, 
n_vecs
)

665 
evbuf„r_chaö
 *
chaö
, **
fú°chaöp
, **
chaöp
;

666 
ªsu…
 = -1;

667 
size_t
 
added
 = 0;

668 
i
;

670 
	`EVBUFFER_LOCK
(
buf
);

672 i‡(
buf
->
‰ìze_íd
)

673 
d⁄e
;

674 i‡(
n_vecs
 == 0) {

675 
ªsu…
 = 0;

676 
d⁄e
;

677 } i‡(
n_vecs
 == 1 &&

678 (
buf
->
œ°
 && 
vec
[0].
iov_ba£
 =(*)
	`CHAIN_SPACE_PTR
(buf->last))) {

681 i‡((
size_t
)
vec
[0].
iov_Àn
 > (size_t)
	`CHAIN_SPACE_LEN
(
buf
->
œ°
))

682 
d⁄e
;

683 
buf
->
œ°
->
off
 +
vec
[0].
iov_Àn
;

684 
added
 = 
vec
[0].
iov_Àn
;

685 i‡(
added
)

686 
	`adv™˚_œ°_wôh_d©a
(
buf
);

687 
okay
;

691 
fú°chaöp
 = 
buf
->
œ°_wôh_d©≠
;

692 i‡(!*
fú°chaöp
)

693 
d⁄e
;

694 i‡(
	`CHAIN_SPACE_LEN
(*
fú°chaöp
) == 0) {

695 
fú°chaöp
 = &(*fú°chaöp)->
√xt
;

698 
chaö
 = *
fú°chaöp
;

701 
i
=0; i<
n_vecs
; ++i) {

702 i‡(!
chaö
)

703 
d⁄e
;

704 i‡(
vec
[
i
].
iov_ba£
 !(*)
	`CHAIN_SPACE_PTR
(
chaö
) ||

705 (
size_t
)
vec
[
i
].
iov_Àn
 > 
	`CHAIN_SPACE_LEN
(
chaö
))

706 
d⁄e
;

707 
chaö
 = chaö->
√xt
;

710 
chaöp
 = 
fú°chaöp
;

711 
i
=0; i<
n_vecs
; ++i) {

712 (*
chaöp
)->
off
 +
vec
[
i
].
iov_Àn
;

713 
added
 +
vec
[
i
].
iov_Àn
;

714 i‡(
vec
[
i
].
iov_Àn
) {

715 
buf
->
œ°_wôh_d©≠
 = 
chaöp
;

717 
chaöp
 = &(*chaöp)->
√xt
;

720 
okay
:

721 
buf
->
tŸÆ_Àn
 +
added
;

722 
buf
->
n_add_f‹_cb
 +
added
;

723 
ªsu…
 = 0;

724 
	`evbuf„r_övoke_ˇŒbacks
(
buf
);

726 
d⁄e
:

727 
	`EVBUFFER_UNLOCK
(
buf
);

728  
ªsu…
;

729 
	}
}

731 
ölöe
 

732 
	$HAS_PINNED_R
(
evbuf„r
 *
buf
)

734  (
buf
->
œ°
 && 
	`CHAIN_PINNED_R
(buf->last));

735 
	}
}

737 
ölöe
 

738 
	$ZERO_CHAIN
(
evbuf„r
 *
d°
)

740 
	`ASSERT_EVBUFFER_LOCKED
(
d°
);

741 
d°
->
fú°
 = 
NULL
;

742 
d°
->
œ°
 = 
NULL
;

743 
d°
->
œ°_wôh_d©≠
 = &(d°)->
fú°
;

744 
d°
->
tŸÆ_Àn
 = 0;

745 
	}
}

752 
	$PRESERVE_PINNED
(
evbuf„r
 *
§c
, 
evbuf„r_chaö
 **
fú°
,

753 
evbuf„r_chaö
 **
œ°
)

755 
evbuf„r_chaö
 *
chaö
, **
pö√d
;

757 
	`ASSERT_EVBUFFER_LOCKED
(
§c
);

759 i‡(!
	`HAS_PINNED_R
(
§c
)) {

760 *
fú°
 = *
œ°
 = 
NULL
;

764 
pö√d
 = 
§c
->
œ°_wôh_d©≠
;

765 i‡(!
	`CHAIN_PINNED_R
(*
pö√d
))

766 
pö√d
 = &(*pö√d)->
√xt
;

767 
	`EVUTIL_ASSERT
(
	`CHAIN_PINNED_R
(*
pö√d
));

768 
chaö
 = *
fú°
 = *
pö√d
;

769 *
œ°
 = 
§c
->last;

773 i‡(
chaö
->
off
) {

774 
evbuf„r_chaö
 *
tmp
;

776 
	`EVUTIL_ASSERT
(
pö√d
 =
§c
->
œ°_wôh_d©≠
);

777 
tmp
 = 
	`evbuf„r_chaö_√w
(
chaö
->
off
);

778 i‡(!
tmp
)

780 
	`mem˝y
(
tmp
->
buf„r
, 
chaö
->buf„∏+ chaö->
mißlign
,

781 
chaö
->
off
);

782 
tmp
->
off
 = 
chaö
->off;

783 *
§c
->
œ°_wôh_d©≠
 = 
tmp
;

784 
§c
->
œ°
 = 
tmp
;

785 
chaö
->
mißlign
 +chaö->
off
;

786 
chaö
->
off
 = 0;

788 
§c
->
œ°
 = *§c->
œ°_wôh_d©≠
;

789 *
pö√d
 = 
NULL
;

793 
	}
}

795 
ölöe
 

796 
	$RESTORE_PINNED
(
evbuf„r
 *
§c
, 
evbuf„r_chaö
 *
pö√d
,

797 
evbuf„r_chaö
 *
œ°
)

799 
	`ASSERT_EVBUFFER_LOCKED
(
§c
);

801 i‡(!
pö√d
) {

802 
	`ZERO_CHAIN
(
§c
);

806 
§c
->
fú°
 = 
pö√d
;

807 
§c
->
œ°
 =Üast;

808 
§c
->
œ°_wôh_d©≠
 = &§c->
fú°
;

809 
§c
->
tŸÆ_Àn
 = 0;

810 
	}
}

812 
ölöe
 

813 
	$COPY_CHAIN
(
evbuf„r
 *
d°
, evbuf„∏*
§c
)

815 
	`ASSERT_EVBUFFER_LOCKED
(
d°
);

816 
	`ASSERT_EVBUFFER_LOCKED
(
§c
);

817 
d°
->
fú°
 = 
§c
->first;

818 i‡(
§c
->
œ°_wôh_d©≠
 =&§c->
fú°
)

819 
d°
->
œ°_wôh_d©≠
 = &d°->
fú°
;

821 
d°
->
œ°_wôh_d©≠
 = 
§c
->last_with_datap;

822 
d°
->
œ°
 = 
§c
->last;

823 
d°
->
tŸÆ_Àn
 = 
§c
->total_len;

824 
	}
}

827 
	$APPEND_CHAIN
(
evbuf„r
 *
d°
, evbuf„∏*
§c
)

829 
	`ASSERT_EVBUFFER_LOCKED
(
d°
);

830 
	`ASSERT_EVBUFFER_LOCKED
(
§c
);

831 
d°
->
œ°
->
√xt
 = 
§c
->
fú°
;

832 i‡(
§c
->
œ°_wôh_d©≠
 =&§c->
fú°
)

833 
d°
->
œ°_wôh_d©≠
 = &d°->
œ°
->
√xt
;

835 
d°
->
œ°_wôh_d©≠
 = 
§c
->last_with_datap;

836 
d°
->
œ°
 = 
§c
->last;

837 
d°
->
tŸÆ_Àn
 +
§c
->total_len;

838 
	}
}

841 
	$PREPEND_CHAIN
(
evbuf„r
 *
d°
, evbuf„∏*
§c
)

843 
	`ASSERT_EVBUFFER_LOCKED
(
d°
);

844 
	`ASSERT_EVBUFFER_LOCKED
(
§c
);

845 
§c
->
œ°
->
√xt
 = 
d°
->
fú°
;

846 
d°
->
fú°
 = 
§c
->first;

847 
d°
->
tŸÆ_Àn
 +
§c
->total_len;

848 i‡(*
d°
->
œ°_wôh_d©≠
 =
NULL
) {

849 i‡(
§c
->
œ°_wôh_d©≠
 =&(§c)->
fú°
)

850 
d°
->
œ°_wôh_d©≠
 = &d°->
fú°
;

852 
d°
->
œ°_wôh_d©≠
 = 
§c
->last_with_datap;

853 } i‡(
d°
->
œ°_wôh_d©≠
 =&d°->
fú°
) {

854 
d°
->
œ°_wôh_d©≠
 = &
§c
->
œ°
->
√xt
;

856 
	}
}

859 
	$evbuf„r_add_buf„r
(
evbuf„r
 *
outbuf
, evbuf„∏*
öbuf
)

861 
evbuf„r_chaö
 *
pö√d
, *
œ°
;

862 
size_t
 
ö_tŸÆ_Àn
, 
out_tŸÆ_Àn
;

863 
ªsu…
 = 0;

865 
	`EVBUFFER_LOCK2
(
öbuf
, 
outbuf
);

866 
ö_tŸÆ_Àn
 = 
öbuf
->
tŸÆ_Àn
;

867 
out_tŸÆ_Àn
 = 
outbuf
->
tŸÆ_Àn
;

869 i‡(
ö_tŸÆ_Àn
 =0 || 
outbuf
 =
öbuf
)

870 
d⁄e
;

872 i‡(
outbuf
->
‰ìze_íd
 || 
öbuf
->
‰ìze_°¨t
) {

873 
ªsu…
 = -1;

874 
d⁄e
;

877 i‡(
	`PRESERVE_PINNED
(
öbuf
, &
pö√d
, &
œ°
) < 0) {

878 
ªsu…
 = -1;

879 
d⁄e
;

882 i‡(
out_tŸÆ_Àn
 == 0) {

885 
	`evbuf„r_‰ì_Æl_chaös
(
outbuf
->
fú°
);

886 
	`COPY_CHAIN
(
outbuf
, 
öbuf
);

888 
	`APPEND_CHAIN
(
outbuf
, 
öbuf
);

891 
	`RESTORE_PINNED
(
öbuf
, 
pö√d
, 
œ°
);

893 
öbuf
->
n_dñ_f‹_cb
 +
ö_tŸÆ_Àn
;

894 
outbuf
->
n_add_f‹_cb
 +
ö_tŸÆ_Àn
;

896 
	`evbuf„r_övoke_ˇŒbacks
(
öbuf
);

897 
	`evbuf„r_övoke_ˇŒbacks
(
outbuf
);

899 
d⁄e
:

900 
	`EVBUFFER_UNLOCK2
(
öbuf
, 
outbuf
);

901  
ªsu…
;

902 
	}
}

905 
	$evbuf„r_¥ïíd_buf„r
(
evbuf„r
 *
outbuf
, evbuf„∏*
öbuf
)

907 
evbuf„r_chaö
 *
pö√d
, *
œ°
;

908 
size_t
 
ö_tŸÆ_Àn
, 
out_tŸÆ_Àn
;

909 
ªsu…
 = 0;

911 
	`EVBUFFER_LOCK2
(
öbuf
, 
outbuf
);

913 
ö_tŸÆ_Àn
 = 
öbuf
->
tŸÆ_Àn
;

914 
out_tŸÆ_Àn
 = 
outbuf
->
tŸÆ_Àn
;

916 i‡(!
ö_tŸÆ_Àn
 || 
öbuf
 =
outbuf
)

917 
d⁄e
;

919 i‡(
outbuf
->
‰ìze_°¨t
 || 
öbuf
->freeze_start) {

920 
ªsu…
 = -1;

921 
d⁄e
;

924 i‡(
	`PRESERVE_PINNED
(
öbuf
, &
pö√d
, &
œ°
) < 0) {

925 
ªsu…
 = -1;

926 
d⁄e
;

929 i‡(
out_tŸÆ_Àn
 == 0) {

932 
	`evbuf„r_‰ì_Æl_chaös
(
outbuf
->
fú°
);

933 
	`COPY_CHAIN
(
outbuf
, 
öbuf
);

935 
	`PREPEND_CHAIN
(
outbuf
, 
öbuf
);

938 
	`RESTORE_PINNED
(
öbuf
, 
pö√d
, 
œ°
);

940 
öbuf
->
n_dñ_f‹_cb
 +
ö_tŸÆ_Àn
;

941 
outbuf
->
n_add_f‹_cb
 +
ö_tŸÆ_Àn
;

943 
	`evbuf„r_övoke_ˇŒbacks
(
öbuf
);

944 
	`evbuf„r_övoke_ˇŒbacks
(
outbuf
);

945 
d⁄e
:

946 
	`EVBUFFER_UNLOCK2
(
öbuf
, 
outbuf
);

947  
ªsu…
;

948 
	}
}

951 
	$evbuf„r_døö
(
evbuf„r
 *
buf
, 
size_t
 
Àn
)

953 
evbuf„r_chaö
 *
chaö
, *
√xt
;

954 
size_t
 
ªmaöög
, 
ﬁd_Àn
;

955 
ªsu…
 = 0;

957 
	`EVBUFFER_LOCK
(
buf
);

958 
ﬁd_Àn
 = 
buf
->
tŸÆ_Àn
;

960 i‡(
ﬁd_Àn
 == 0)

961 
d⁄e
;

963 i‡(
buf
->
‰ìze_°¨t
) {

964 
ªsu…
 = -1;

965 
d⁄e
;

968 i‡(
Àn
 >
ﬁd_Àn
 && !
	`HAS_PINNED_R
(
buf
)) {

969 
Àn
 = 
ﬁd_Àn
;

970 
chaö
 = 
buf
->
fú°
; chaö !
NULL
; chaö = 
√xt
) {

971 
√xt
 = 
chaö
->next;

972 
	`evbuf„r_chaö_‰ì
(
chaö
);

975 
	`ZERO_CHAIN
(
buf
);

977 i‡(
Àn
 >
ﬁd_Àn
)

978 
Àn
 = 
ﬁd_Àn
;

980 
buf
->
tŸÆ_Àn
 -
Àn
;

981 
ªmaöög
 = 
Àn
;

982 
chaö
 = 
buf
->
fú°
;

983 
ªmaöög
 >
chaö
->
off
;

984 
chaö
 = 
√xt
) {

985 
√xt
 = 
chaö
->next;

986 
ªmaöög
 -
chaö
->
off
;

988 i‡(
chaö
 =*
buf
->
œ°_wôh_d©≠
) {

989 
buf
->
œ°_wôh_d©≠
 = &buf->
fú°
;

991 i‡(&
chaö
->
√xt
 =
buf
->
œ°_wôh_d©≠
)

992 
buf
->
œ°_wôh_d©≠
 = &buf->
fú°
;

994 i‡(
	`CHAIN_PINNED_R
(
chaö
)) {

995 
	`EVUTIL_ASSERT
(
ªmaöög
 == 0);

996 
chaö
->
mißlign
 +chaö->
off
;

997 
chaö
->
off
 = 0;

1000 
	`evbuf„r_chaö_‰ì
(
chaö
);

1003 
buf
->
fú°
 = 
chaö
;

1004 i‡(
chaö
) {

1005 
chaö
->
mißlign
 +
ªmaöög
;

1006 
chaö
->
off
 -
ªmaöög
;

1010 
buf
->
n_dñ_f‹_cb
 +
Àn
;

1012 
	`evbuf„r_övoke_ˇŒbacks
(
buf
);

1014 
d⁄e
:

1015 
	`EVBUFFER_UNLOCK
(
buf
);

1016  
ªsu…
;

1017 
	}
}

1021 
	$evbuf„r_ªmove
(
evbuf„r
 *
buf
, *
d©a_out
, 
size_t
 
d©Àn
)

1023 
ev_ssize_t
 
n
;

1024 
	`EVBUFFER_LOCK
(
buf
);

1025 
n
 = 
	`evbuf„r_c›yout
(
buf
, 
d©a_out
, 
d©Àn
);

1026 i‡(
n
 > 0) {

1027 i‡(
	`evbuf„r_døö
(
buf
, 
n
)<0)

1028 
n
 = -1;

1030 
	`EVBUFFER_UNLOCK
(
buf
);

1031  ()
n
;

1032 
	}
}

1034 
ev_ssize_t


1035 
	$evbuf„r_c›yout
(
evbuf„r
 *
buf
, *
d©a_out
, 
size_t
 
d©Àn
)

1038 
evbuf„r_chaö
 *
chaö
;

1039 *
d©a
 = 
d©a_out
;

1040 
size_t
 
ƒód
;

1041 
ev_ssize_t
 
ªsu…
 = 0;

1043 
	`EVBUFFER_LOCK
(
buf
);

1045 
chaö
 = 
buf
->
fú°
;

1047 i‡(
d©Àn
 >
buf
->
tŸÆ_Àn
)

1048 
d©Àn
 = 
buf
->
tŸÆ_Àn
;

1050 i‡(
d©Àn
 == 0)

1051 
d⁄e
;

1053 i‡(
buf
->
‰ìze_°¨t
) {

1054 
ªsu…
 = -1;

1055 
d⁄e
;

1058 
ƒód
 = 
d©Àn
;

1060 
d©Àn
 && d©À¿>
chaö
->
off
) {

1061 
	`mem˝y
(
d©a
, 
chaö
->
buf„r
 + chaö->
mißlign
, chaö->
off
);

1062 
d©a
 +
chaö
->
off
;

1063 
d©Àn
 -
chaö
->
off
;

1065 
chaö
 = chaö->
√xt
;

1066 
	`EVUTIL_ASSERT
(
chaö
 || 
d©Àn
==0);

1069 i‡(
d©Àn
) {

1070 
	`EVUTIL_ASSERT
(
chaö
);

1071 
	`mem˝y
(
d©a
, 
chaö
->
buf„r
 + chaö->
mißlign
, 
d©Àn
);

1074 
ªsu…
 = 
ƒód
;

1075 
d⁄e
:

1076 
	`EVBUFFER_UNLOCK
(
buf
);

1077  
ªsu…
;

1078 
	}
}

1084 
	$evbuf„r_ªmove_buf„r
(
evbuf„r
 *
§c
, evbuf„∏*
d°
,

1085 
size_t
 
d©Àn
)

1090 
evbuf„r_chaö
 *
chaö
, *
¥evious
;

1091 
size_t
 
ƒód
 = 0;

1092 
ªsu…
;

1094 
	`EVBUFFER_LOCK2
(
§c
, 
d°
);

1096 
chaö
 = 
¥evious
 = 
§c
->
fú°
;

1098 i‡(
d©Àn
 =0 || 
d°
 =
§c
) {

1099 
ªsu…
 = 0;

1100 
d⁄e
;

1103 i‡(
d°
->
‰ìze_íd
 || 
§c
->
‰ìze_°¨t
) {

1104 
ªsu…
 = -1;

1105 
d⁄e
;

1109 i‡(
d©Àn
 >
§c
->
tŸÆ_Àn
) {

1110 
d©Àn
 = 
§c
->
tŸÆ_Àn
;

1111 
	`evbuf„r_add_buf„r
(
d°
, 
§c
);

1112 
ªsu…
 = ()
d©Àn
;

1113 
d⁄e
;

1117 
chaö
->
off
 <
d©Àn
) {

1121 
	`EVUTIL_ASSERT
(
chaö
 !*
§c
->
œ°_wôh_d©≠
);

1122 
ƒód
 +
chaö
->
off
;

1123 
d©Àn
 -
chaö
->
off
;

1124 
¥evious
 = 
chaö
;

1125 i‡(
§c
->
œ°_wôh_d©≠
 =&
chaö
->
√xt
)

1126 
§c
->
œ°_wôh_d©≠
 = &§c->
fú°
;

1127 
chaö
 = chaö->
√xt
;

1130 i‡(
ƒód
) {

1132 
evbuf„r_chaö
 **
chp
;

1133 
chp
 = 
	`evbuf„r_‰ì_åaûög_em±y_chaös
(
d°
);

1135 i‡(
d°
->
fú°
 =
NULL
) {

1136 
d°
->
fú°
 = 
§c
->first;

1138 *
chp
 = 
§c
->
fú°
;

1140 
d°
->
œ°
 = 
¥evious
;

1141 
¥evious
->
√xt
 = 
NULL
;

1142 
§c
->
fú°
 = 
chaö
;

1143 
	`adv™˚_œ°_wôh_d©a
(
d°
);

1145 
d°
->
tŸÆ_Àn
 +
ƒód
;

1146 
d°
->
n_add_f‹_cb
 +
ƒód
;

1151 
	`evbuf„r_add
(
d°
, 
chaö
->
buf„r
 + chaö->
mißlign
, 
d©Àn
);

1152 
chaö
->
mißlign
 +
d©Àn
;

1153 
chaö
->
off
 -
d©Àn
;

1154 
ƒód
 +
d©Àn
;

1159 
§c
->
tŸÆ_Àn
 -
ƒód
;

1160 
§c
->
n_dñ_f‹_cb
 +
ƒód
;

1162 i‡(
ƒód
) {

1163 
	`evbuf„r_övoke_ˇŒbacks
(
d°
);

1164 
	`evbuf„r_övoke_ˇŒbacks
(
§c
);

1166 
ªsu…
 = ()
ƒód
;

1168 
d⁄e
:

1169 
	`EVBUFFER_UNLOCK2
(
§c
, 
d°
);

1170  
ªsu…
;

1171 
	}
}

1174 
	$evbuf„r_puŒup
(
evbuf„r
 *
buf
, 
ev_ssize_t
 
size
)

1176 
evbuf„r_chaö
 *
chaö
, *
√xt
, *
tmp
, *
œ°_wôh_d©a
;

1177 *
buf„r
, *
ªsu…
 = 
NULL
;

1178 
ev_ssize_t
 
ªmaöög
;

1179 
ªmoved_œ°_wôh_d©a
 = 0;

1180 
ªmoved_œ°_wôh_d©≠
 = 0;

1182 
	`EVBUFFER_LOCK
(
buf
);

1184 
chaö
 = 
buf
->
fú°
;

1186 i‡(
size
 < 0)

1187 
size
 = 
buf
->
tŸÆ_Àn
;

1191 i‡(
size
 =0 || (
size_t
)sizê> 
buf
->
tŸÆ_Àn
)

1192 
d⁄e
;

1196 i‡(
chaö
->
off
 >(
size_t
)
size
) {

1197 
ªsu…
 = 
chaö
->
buf„r
 + chaö->
mißlign
;

1198 
d⁄e
;

1202 
ªmaöög
 = 
size
 - 
chaö
->
off
;

1203 
	`EVUTIL_ASSERT
(
ªmaöög
 >= 0);

1204 
tmp
=
chaö
->
√xt
;Åmp;Åmp=tmp->next) {

1205 i‡(
	`CHAIN_PINNED
(
tmp
))

1206 
d⁄e
;

1207 i‡(
tmp
->
off
 >(
size_t
)
ªmaöög
)

1209 
ªmaöög
 -
tmp
->
off
;

1212 i‡(
	`CHAIN_PINNED
(
chaö
)) {

1213 
size_t
 
ﬁd_off
 = 
chaö
->
off
;

1214 i‡(
	`CHAIN_SPACE_LEN
(
chaö
Ë< 
size
 - chaö->
off
) {

1216 
d⁄e
;

1218 
buf„r
 = 
	`CHAIN_SPACE_PTR
(
chaö
);

1219 
tmp
 = 
chaö
;

1220 
tmp
->
off
 = 
size
;

1221 
size
 -
ﬁd_off
;

1222 
chaö
 = chaö->
√xt
;

1223 } i‡(
chaö
->
buf„r_Àn
 - chaö->
mißlign
 >(
size_t
)
size
) {

1225 
size_t
 
ﬁd_off
 = 
chaö
->
off
;

1226 
buf„r
 = 
chaö
->buf„∏+ chaö->
mißlign
 + chaö->
off
;

1227 
tmp
 = 
chaö
;

1228 
tmp
->
off
 = 
size
;

1229 
size
 -
ﬁd_off
;

1230 
chaö
 = chaö->
√xt
;

1232 i‡((
tmp
 = 
	`evbuf„r_chaö_√w
(
size
)Ë=
NULL
) {

1233 
	`evít_w¨n
("%s: ouào‡mem‹y", 
__func__
);

1234 
d⁄e
;

1236 
buf„r
 = 
tmp
->buffer;

1237 
tmp
->
off
 = 
size
;

1238 
buf
->
fú°
 = 
tmp
;

1244 
œ°_wôh_d©a
 = *
buf
->
œ°_wôh_d©≠
;

1245 ; 
chaö
 !
NULL
 && (
size_t
)
size
 >chaö->
off
; chaö = 
√xt
) {

1246 
√xt
 = 
chaö
->next;

1248 
	`mem˝y
(
buf„r
, 
chaö
->buf„∏+ chaö->
mißlign
, chaö->
off
);

1249 
size
 -
chaö
->
off
;

1250 
buf„r
 +
chaö
->
off
;

1251 i‡(
chaö
 =
œ°_wôh_d©a
)

1252 
ªmoved_œ°_wôh_d©a
 = 1;

1253 i‡(&
chaö
->
√xt
 =
buf
->
œ°_wôh_d©≠
)

1254 
ªmoved_œ°_wôh_d©≠
 = 1;

1256 
	`evbuf„r_chaö_‰ì
(
chaö
);

1259 i‡(
chaö
 !
NULL
) {

1260 
	`mem˝y
(
buf„r
, 
chaö
->buf„∏+ chaö->
mißlign
, 
size
);

1261 
chaö
->
mißlign
 +
size
;

1262 
chaö
->
off
 -
size
;

1264 
buf
->
œ°
 = 
tmp
;

1267 
tmp
->
√xt
 = 
chaö
;

1269 i‡(
ªmoved_œ°_wôh_d©a
) {

1270 
buf
->
œ°_wôh_d©≠
 = &buf->
fú°
;

1271 } i‡(
ªmoved_œ°_wôh_d©≠
) {

1272 i‡(
buf
->
fú°
->
√xt
 && buf->fú°->√xt->
off
)

1273 
buf
->
œ°_wôh_d©≠
 = &buf->
fú°
->
√xt
;

1275 
buf
->
œ°_wôh_d©≠
 = &buf->
fú°
;

1278 
ªsu…
 = (
tmp
->
buf„r
 +Åmp->
mißlign
);

1280 
d⁄e
:

1281 
	`EVBUFFER_UNLOCK
(
buf
);

1282  
ªsu…
;

1283 
	}
}

1290 
	$evbuf„r_ªadlöe
(
evbuf„r
 *
buf„r
)

1292  
	`evbuf„r_ªad 
(
buf„r
, 
NULL
, 
EVBUFFER_EOL_ANY
);

1293 
	}
}

1295 
ölöe
 
ev_ssize_t


1296 
	$evbuf„r_°rchr
(
evbuf„r_±r
 *
ô
, c⁄° 
chr
)

1298 
evbuf„r_chaö
 *
chaö
 = 
ô
->
_öã∫Æ
.chain;

1299 
size_t
 
i
 = 
ô
->
_öã∫Æ
.
pos_ö_chaö
;

1300 
chaö
 !
NULL
) {

1301 *
buf„r
 = (*)
chaö
->buf„∏+ chaö->
mißlign
;

1302 *
˝
 = 
	`memchr
(
buf„r
+
i
, 
chr
, 
chaö
->
off
-i);

1303 i‡(
˝
) {

1304 
ô
->
_öã∫Æ
.
chaö
 = chain;

1305 
ô
->
_öã∫Æ
.
pos_ö_chaö
 = 
˝
 - 
buf„r
;

1306 
ô
->
pos
 +(
˝
 - 
buf„r
 - 
i
);

1307  
ô
->
pos
;

1309 
ô
->
pos
 +
chaö
->
off
 - 
i
;

1310 
i
 = 0;

1311 
chaö
 = chaö->
√xt
;

1315 
	}
}

1317 
ölöe
 *

1318 
	$föd_eﬁ_ch¨
(*
s
, 
size_t
 
Àn
)

1320 
	#CHUNK_SZ
 128

	)

1324 *
s_íd
, *
¸
, *
lf
;

1325 
s_íd
 = 
s
+
Àn
;

1326 
s
 < 
s_íd
) {

1327 
size_t
 
chunk
 = (
s
 + 
CHUNK_SZ
 < 
s_íd
) ? CHUNK_SZ : (s_end - s);

1328 
¸
 = 
	`memchr
(
s
, '\r', 
chunk
);

1329 
lf
 = 
	`memchr
(
s
, '\n', 
chunk
);

1330 i‡(
¸
) {

1331 i‡(
lf
 &&Ü‡< 
¸
)

1332  
lf
;

1333  
¸
;

1334 } i‡(
lf
) {

1335  
lf
;

1337 
s
 +
CHUNK_SZ
;

1340  
NULL
;

1341 #unde‡
CHUNK_SZ


1342 
	}
}

1344 
ev_ssize_t


1345 
	$evbuf„r_föd_eﬁ_ch¨
(
evbuf„r_±r
 *
ô
)

1347 
evbuf„r_chaö
 *
chaö
 = 
ô
->
_öã∫Æ
.chain;

1348 
size_t
 
i
 = 
ô
->
_öã∫Æ
.
pos_ö_chaö
;

1349 
chaö
 !
NULL
) {

1350 *
buf„r
 = (*)
chaö
->buf„∏+ chaö->
mißlign
;

1351 *
˝
 = 
	`föd_eﬁ_ch¨
(
buf„r
+
i
, 
chaö
->
off
-i);

1352 i‡(
˝
) {

1353 
ô
->
_öã∫Æ
.
chaö
 = chain;

1354 
ô
->
_öã∫Æ
.
pos_ö_chaö
 = 
˝
 - 
buf„r
;

1355 
ô
->
pos
 +(
˝
 - 
buf„r
Ë- 
i
;

1356  
ô
->
pos
;

1358 
ô
->
pos
 +
chaö
->
off
 - 
i
;

1359 
i
 = 0;

1360 
chaö
 = chaö->
√xt
;

1364 
	}
}

1366 
ölöe
 

1367 
	$evbuf„r_°r•n
(

1368 
evbuf„r_±r
 *
±r
, c⁄° *
chr£t
)

1370 
cou¡
 = 0;

1371 
evbuf„r_chaö
 *
chaö
 = 
±r
->
_öã∫Æ
.chain;

1372 
size_t
 
i
 = 
±r
->
_öã∫Æ
.
pos_ö_chaö
;

1374 i‡(!
chaö
)

1378 *
buf„r
 = (*)
chaö
->buf„∏+ chaö->
mißlign
;

1379 ; 
i
 < 
chaö
->
off
; ++i) {

1380 c⁄° *
p
 = 
chr£t
;

1381 *
p
) {

1382 i‡(
buf„r
[
i
] =*
p
++)

1383 
√xt
;

1385 
±r
->
_öã∫Æ
.
chaö
 = chain;

1386 
±r
->
_öã∫Æ
.
pos_ö_chaö
 = 
i
;

1387 
±r
->
pos
 +
cou¡
;

1388  
cou¡
;

1389 
√xt
:

1390 ++
cou¡
;

1392 
i
 = 0;

1394 i‡(! 
chaö
->
√xt
) {

1395 
±r
->
_öã∫Æ
.
chaö
 = chain;

1396 
±r
->
_öã∫Æ
.
pos_ö_chaö
 = 
i
;

1397 
±r
->
pos
 +
cou¡
;

1398  
cou¡
;

1401 
chaö
 = chaö->
√xt
;

1403 
	}
}

1406 
ölöe
 

1407 
	$evbuf„r_gëchr
(
evbuf„r_±r
 *
ô
)

1409 
evbuf„r_chaö
 *
chaö
 = 
ô
->
_öã∫Æ
.chain;

1410 
size_t
 
off
 = 
ô
->
_öã∫Æ
.
pos_ö_chaö
;

1412  
chaö
->
buf„r
[chaö->
mißlign
 + 
off
];

1413 
	}
}

1415 
evbuf„r_±r


1416 
	$evbuf„r_£¨ch_eﬁ
(
evbuf„r
 *
buf„r
,

1417 
evbuf„r_±r
 *
°¨t
, 
size_t
 *
eﬁ_Àn_out
,

1418 
evbuf„r_eﬁ_°yÀ
 
eﬁ_°yÀ
)

1420 
evbuf„r_±r
 
ô
, 
ô2
;

1421 
size_t
 
exåa_døö
 = 0;

1422 
ok
 = 0;

1424 
	`EVBUFFER_LOCK
(
buf„r
);

1426 i‡(
°¨t
) {

1427 
	`mem˝y
(&
ô
, 
°¨t
, (it));

1429 
ô
.
pos
 = 0;

1430 
ô
.
_öã∫Æ
.
chaö
 = 
buf„r
->
fú°
;

1431 
ô
.
_öã∫Æ
.
pos_ö_chaö
 = 0;

1436 
eﬁ_°yÀ
) {

1437 
EVBUFFER_EOL_ANY
:

1438 i‡(
	`evbuf„r_föd_eﬁ_ch¨
(&
ô
) < 0)

1439 
d⁄e
;

1440 
	`mem˝y
(&
ô2
, &
ô
, (it));

1441 
exåa_døö
 = 
	`evbuf„r_°r•n
(&
ô2
, "\r\n");

1443 
EVBUFFER_EOL_CRLF_STRICT
: {

1444 
ô
 = 
	`evbuf„r_£¨ch
(
buf„r
, "\r\n", 2, &it);

1445 i‡(
ô
.
pos
 < 0)

1446 
d⁄e
;

1447 
exåa_døö
 = 2;

1450 
EVBUFFER_EOL_CRLF
:

1452 i‡(
	`evbuf„r_föd_eﬁ_ch¨
(&
ô
) < 0)

1453 
d⁄e
;

1454 i‡(
	`evbuf„r_gëchr
(&
ô
) == '\n') {

1455 
exåa_døö
 = 1;

1457 } i‡(!
	`evbuf„r_±r_memcmp
(

1458 
buf„r
, &
ô
, "\r\n", 2)) {

1459 
exåa_døö
 = 2;

1462 i‡(
	`evbuf„r_±r_£t
(
buf„r
, &
ô
, 1,

1463 
EVBUFFER_PTR_ADD
)<0)

1464 
d⁄e
;

1468 
EVBUFFER_EOL_LF
:

1469 i‡(
	`evbuf„r_°rchr
(&
ô
, '\n') < 0)

1470 
d⁄e
;

1471 
exåa_døö
 = 1;

1474 
d⁄e
;

1477 
ok
 = 1;

1478 
d⁄e
:

1479 
	`EVBUFFER_UNLOCK
(
buf„r
);

1481 i‡(!
ok
) {

1482 
ô
.
pos
 = -1;

1484 i‡(
eﬁ_Àn_out
)

1485 *
eﬁ_Àn_out
 = 
exåa_døö
;

1487  
ô
;

1488 
	}
}

1491 
	$evbuf„r_ªad 
(
evbuf„r
 *
buf„r
, 
size_t
 *
n_ªad_out
,

1492 
evbuf„r_eﬁ_°yÀ
 
eﬁ_°yÀ
)

1494 
evbuf„r_±r
 
ô
;

1495 *
löe
;

1496 
size_t
 
n_to_c›y
=0, 
exåa_døö
=0;

1497 *
ªsu…
 = 
NULL
;

1499 
	`EVBUFFER_LOCK
(
buf„r
);

1501 i‡(
buf„r
->
‰ìze_°¨t
) {

1502 
d⁄e
;

1505 
ô
 = 
	`evbuf„r_£¨ch_eﬁ
(
buf„r
, 
NULL
, &
exåa_døö
, 
eﬁ_°yÀ
);

1506 i‡(
ô
.
pos
 < 0)

1507 
d⁄e
;

1508 
n_to_c›y
 = 
ô
.
pos
;

1510 i‡((
löe
 = 
	`mm_mÆloc
(
n_to_c›y
+1)Ë=
NULL
) {

1511 
	`evít_w¨n
("%s: ouào‡mem‹y", 
__func__
);

1512 
d⁄e
;

1515 
	`evbuf„r_ªmove
(
buf„r
, 
löe
, 
n_to_c›y
);

1516 
löe
[
n_to_c›y
] = '\0';

1518 
	`evbuf„r_døö
(
buf„r
, 
exåa_døö
);

1519 
ªsu…
 = 
löe
;

1520 
d⁄e
:

1521 
	`EVBUFFER_UNLOCK
(
buf„r
);

1523 i‡(
n_ªad_out
)

1524 *
n_ªad_out
 = 
ªsu…
 ? 
n_to_c›y
 : 0;

1526  
ªsu…
;

1527 
	}
}

1529 
	#EVBUFFER_CHAIN_MAX_AUTO_SIZE
 4096

	)

1534 
	$evbuf„r_add
(
evbuf„r
 *
buf
, c⁄° *
d©a_ö
, 
size_t
 
d©Àn
)

1536 
evbuf„r_chaö
 *
chaö
, *
tmp
;

1537 c⁄° *
d©a
 = 
d©a_ö
;

1538 
size_t
 
ªmaö
, 
to_Æloc
;

1539 
ªsu…
 = -1;

1541 
	`EVBUFFER_LOCK
(
buf
);

1543 i‡(
buf
->
‰ìze_íd
) {

1544 
d⁄e
;

1547 
chaö
 = 
buf
->
œ°
;

1551 i‡(
chaö
 =
NULL
) {

1552 
chaö
 = 
	`evbuf„r_chaö_√w
(
d©Àn
);

1553 i‡(!
chaö
)

1554 
d⁄e
;

1555 
	`evbuf„r_chaö_ö£π
(
buf
, 
chaö
);

1558 i‡((
chaö
->
Êags
 & 
EVBUFFER_IMMUTABLE
) == 0) {

1559 
ªmaö
 = (
size_t
)(
chaö
->
buf„r_Àn
 - chaö->
mißlign
 - chaö->
off
);

1560 i‡(
ªmaö
 >
d©Àn
) {

1563 
	`mem˝y
(
chaö
->
buf„r
 + chaö->
mißlign
 + chaö->
off
,

1564 
d©a
, 
d©Àn
);

1565 
chaö
->
off
 +
d©Àn
;

1566 
buf
->
tŸÆ_Àn
 +
d©Àn
;

1567 
buf
->
n_add_f‹_cb
 +
d©Àn
;

1568 
out
;

1569 } i‡(!
	`CHAIN_PINNED
(
chaö
) &&

1570 
	`evbuf„r_chaö_should_ªÆign
(
chaö
, 
d©Àn
)) {

1572 
	`evbuf„r_chaö_Æign
(
chaö
);

1574 
	`mem˝y
(
chaö
->
buf„r
 + chaö->
off
, 
d©a
, 
d©Àn
);

1575 
chaö
->
off
 +
d©Àn
;

1576 
buf
->
tŸÆ_Àn
 +
d©Àn
;

1577 
buf
->
n_add_f‹_cb
 +
d©Àn
;

1578 
out
;

1582 
ªmaö
 = 0;

1586 
to_Æloc
 = 
chaö
->
buf„r_Àn
;

1587 i‡(
to_Æloc
 <
EVBUFFER_CHAIN_MAX_AUTO_SIZE
/2)

1588 
to_Æloc
 <<= 1;

1589 i‡(
d©Àn
 > 
to_Æloc
)

1590 
to_Æloc
 = 
d©Àn
;

1591 
tmp
 = 
	`evbuf„r_chaö_√w
(
to_Æloc
);

1592 i‡(
tmp
 =
NULL
)

1593 
d⁄e
;

1595 i‡(
ªmaö
) {

1596 
	`mem˝y
(
chaö
->
buf„r
 + chaö->
mißlign
 + chaö->
off
,

1597 
d©a
, 
ªmaö
);

1598 
chaö
->
off
 +
ªmaö
;

1599 
buf
->
tŸÆ_Àn
 +
ªmaö
;

1600 
buf
->
n_add_f‹_cb
 +
ªmaö
;

1603 
d©a
 +
ªmaö
;

1604 
d©Àn
 -
ªmaö
;

1606 
	`mem˝y
(
tmp
->
buf„r
, 
d©a
, 
d©Àn
);

1607 
tmp
->
off
 = 
d©Àn
;

1608 
	`evbuf„r_chaö_ö£π
(
buf
, 
tmp
);

1609 
buf
->
n_add_f‹_cb
 +
d©Àn
;

1611 
out
:

1612 
	`evbuf„r_övoke_ˇŒbacks
(
buf
);

1613 
ªsu…
 = 0;

1614 
d⁄e
:

1615 
	`EVBUFFER_UNLOCK
(
buf
);

1616  
ªsu…
;

1617 
	}
}

1620 
	$evbuf„r_¥ïíd
(
evbuf„r
 *
buf
, c⁄° *
d©a
, 
size_t
 
d©Àn
)

1622 
evbuf„r_chaö
 *
chaö
, *
tmp
;

1623 
ªsu…
 = -1;

1625 
	`EVBUFFER_LOCK
(
buf
);

1627 i‡(
buf
->
‰ìze_°¨t
) {

1628 
d⁄e
;

1631 
chaö
 = 
buf
->
fú°
;

1633 i‡(
chaö
 =
NULL
) {

1634 
chaö
 = 
	`evbuf„r_chaö_√w
(
d©Àn
);

1635 i‡(!
chaö
)

1636 
d⁄e
;

1637 
	`evbuf„r_chaö_ö£π
(
buf
, 
chaö
);

1641 i‡((
chaö
->
Êags
 & 
EVBUFFER_IMMUTABLE
) == 0) {

1644 i‡(
chaö
->
off
 == 0)

1645 
chaö
->
mißlign
 = chaö->
buf„r_Àn
;

1647 i‡((
size_t
)
chaö
->
mißlign
 >
d©Àn
) {

1649 
	`mem˝y
(
chaö
->
buf„r
 + chaö->
mißlign
 - 
d©Àn
,

1650 
d©a
, 
d©Àn
);

1651 
chaö
->
off
 +
d©Àn
;

1652 
chaö
->
mißlign
 -
d©Àn
;

1653 
buf
->
tŸÆ_Àn
 +
d©Àn
;

1654 
buf
->
n_add_f‹_cb
 +
d©Àn
;

1655 
out
;

1656 } i‡(
chaö
->
mißlign
) {

1658 
	`mem˝y
(
chaö
->
buf„r
,

1659 (*)
d©a
 + 
d©Àn
 - 
chaö
->
mißlign
,

1660 (
size_t
)
chaö
->
mißlign
);

1661 
chaö
->
off
 +(
size_t
)chaö->
mißlign
;

1662 
buf
->
tŸÆ_Àn
 +(
size_t
)
chaö
->
mißlign
;

1663 
buf
->
n_add_f‹_cb
 +(
size_t
)
chaö
->
mißlign
;

1664 
d©Àn
 -(
size_t
)
chaö
->
mißlign
;

1665 
chaö
->
mißlign
 = 0;

1670 i‡((
tmp
 = 
	`evbuf„r_chaö_√w
(
d©Àn
)Ë=
NULL
)

1671 
d⁄e
;

1672 
buf
->
fú°
 = 
tmp
;

1673 i‡(
buf
->
œ°_wôh_d©≠
 =&buf->
fú°
)

1674 
buf
->
œ°_wôh_d©≠
 = &
tmp
->
√xt
;

1676 
tmp
->
√xt
 = 
chaö
;

1678 
tmp
->
off
 = 
d©Àn
;

1679 
tmp
->
mißlign
 =Åmp->
buf„r_Àn
 - 
d©Àn
;

1681 
	`mem˝y
(
tmp
->
buf„r
 +Åmp->
mißlign
, 
d©a
, 
d©Àn
);

1682 
buf
->
tŸÆ_Àn
 +
d©Àn
;

1683 
buf
->
n_add_f‹_cb
 +(
size_t
)
chaö
->
mißlign
;

1685 
out
:

1686 
	`evbuf„r_övoke_ˇŒbacks
(
buf
);

1687 
ªsu…
 = 0;

1688 
d⁄e
:

1689 
	`EVBUFFER_UNLOCK
(
buf
);

1690  
ªsu…
;

1691 
	}
}

1695 
	$evbuf„r_chaö_Æign
(
evbuf„r_chaö
 *
chaö
)

1697 
	`EVUTIL_ASSERT
(!(
chaö
->
Êags
 & 
EVBUFFER_IMMUTABLE
));

1698 
	`EVUTIL_ASSERT
(!(
chaö
->
Êags
 & 
EVBUFFER_MEM_PINNED_ANY
));

1699 
	`memmove
(
chaö
->
buf„r
, chaö->buf„∏+ chaö->
mißlign
, chaö->
off
);

1700 
chaö
->
mißlign
 = 0;

1701 
	}
}

1703 
	#MAX_TO_COPY_IN_EXPAND
 4096

	)

1704 
	#MAX_TO_REALIGN_IN_EXPAND
 2048

	)

1709 
	$evbuf„r_chaö_should_ªÆign
(
evbuf„r_chaö
 *
chaö
,

1710 
size_t
 
d©Àn
)

1712  
chaö
->
buf„r_Àn
 - chaö->
off
 >
d©Àn
 &&

1713 (
chaö
->
off
 < chaö->
buf„r_Àn
 / 2) &&

1714 (
chaö
->
off
 <
MAX_TO_REALIGN_IN_EXPAND
);

1715 
	}
}

1719 
evbuf„r_chaö
 *

1720 
	$evbuf„r_ex∑nd_sögÀchaö
(
evbuf„r
 *
buf
, 
size_t
 
d©Àn
)

1722 
evbuf„r_chaö
 *
chaö
, **
chaöp
;

1723 
evbuf„r_chaö
 *
ªsu…
 = 
NULL
;

1724 
	`ASSERT_EVBUFFER_LOCKED
(
buf
);

1726 
chaöp
 = 
buf
->
œ°_wôh_d©≠
;

1731 i‡(*
chaöp
 && 
	`CHAIN_SPACE_LEN
(*chainp) == 0)

1732 
chaöp
 = &(*chaöp)->
√xt
;

1736 
chaö
 = *
chaöp
;

1738 i‡(
chaö
 =
NULL
 ||

1739 (
chaö
->
Êags
 & (
EVBUFFER_IMMUTABLE
|
EVBUFFER_MEM_PINNED_ANY
))) {

1742 
ö£π_√w
;

1746 i‡(
	`CHAIN_SPACE_LEN
(
chaö
Ë>
d©Àn
) {

1747 
ªsu…
 = 
chaö
;

1748 
ok
;

1753 i‡(
chaö
->
off
 == 0) {

1754 
ö£π_√w
;

1763 i‡(
	`evbuf„r_chaö_should_ªÆign
(
chaö
, 
d©Àn
)) {

1764 
	`evbuf„r_chaö_Æign
(
chaö
);

1765 
ªsu…
 = 
chaö
;

1766 
ok
;

1776 i‡(
	`CHAIN_SPACE_LEN
(
chaö
Ë< chaö->
buf„r_Àn
 / 8 ||

1777 
chaö
->
off
 > 
MAX_TO_COPY_IN_EXPAND
) {

1780 i‡(
chaö
->
√xt
 && 
	`CHAIN_SPACE_LEN
(chaö->√xtË>
d©Àn
) {

1783 
ªsu…
 = 
chaö
->
√xt
;

1784 
ok
;

1788 
ö£π_√w
;

1796 
size_t
 
Àngth
 = 
chaö
->
off
 + 
d©Àn
;

1797 
evbuf„r_chaö
 *
tmp
 = 
	`evbuf„r_chaö_√w
(
Àngth
);

1798 i‡(
tmp
 =
NULL
)

1799 
îr
;

1802 
tmp
->
off
 = 
chaö
->off;

1803 
	`mem˝y
(
tmp
->
buf„r
, 
chaö
->buf„∏+ chaö->
mißlign
,

1804 
chaö
->
off
);

1806 
	`EVUTIL_ASSERT
(*
chaöp
 =
chaö
);

1807 
ªsu…
 = *
chaöp
 = 
tmp
;

1809 i‡(
buf
->
œ°
 =
chaö
)

1810 
buf
->
œ°
 = 
tmp
;

1812 
tmp
->
√xt
 = 
chaö
->next;

1813 
	`evbuf„r_chaö_‰ì
(
chaö
);

1814 
ok
;

1817 
ö£π_√w
:

1818 
ªsu…
 = 
	`evbuf„r_chaö_ö£π_√w
(
buf
, 
d©Àn
);

1819 i‡(!
ªsu…
)

1820 
îr
;

1821 
ok
:

1822 
	`EVUTIL_ASSERT
(
ªsu…
);

1823 
	`EVUTIL_ASSERT
(
	`CHAIN_SPACE_LEN
(
ªsu…
Ë>
d©Àn
);

1824 
îr
:

1825  
ªsu…
;

1826 
	}
}

1831 
	$_evbuf„r_ex∑nd_Á°
(
evbuf„r
 *
buf
, 
size_t
 
d©Àn
, 
n
)

1833 
evbuf„r_chaö
 *
chaö
 = 
buf
->
œ°
, *
tmp
, *
√xt
;

1834 
size_t
 
avaû
;

1835 
u£d
;

1837 
	`ASSERT_EVBUFFER_LOCKED
(
buf
);

1838 
	`EVUTIL_ASSERT
(
n
 >= 2);

1840 i‡(
chaö
 =
NULL
 || (chaö->
Êags
 & 
EVBUFFER_IMMUTABLE
)) {

1843 
chaö
 = 
	`evbuf„r_chaö_√w
(
d©Àn
);

1844 i‡(
chaö
 =
NULL
)

1847 
	`evbuf„r_chaö_ö£π
(
buf
, 
chaö
);

1851 
u£d
 = 0;

1852 
avaû
 = 0;

1856 
chaö
 = *
buf
->
œ°_wôh_d©≠
; chaö; chaö = chaö->
√xt
) {

1857 i‡(
chaö
->
off
) {

1858 
size_t
 
•a˚
 = (size_tË
	`CHAIN_SPACE_LEN
(
chaö
);

1859 
	`EVUTIL_ASSERT
(
chaö
 =*
buf
->
œ°_wôh_d©≠
);

1860 i‡(
•a˚
) {

1861 
avaû
 +
•a˚
;

1862 ++
u£d
;

1866 
chaö
->
mißlign
 = 0;

1867 
avaû
 +
chaö
->
buf„r_Àn
;

1868 ++
u£d
;

1870 i‡(
avaû
 >
d©Àn
) {

1874 i‡(
u£d
 =
n
)

1881 i‡(
u£d
 < 
n
) {

1884 
	`EVUTIL_ASSERT
(
chaö
 =
NULL
);

1886 
tmp
 = 
	`evbuf„r_chaö_√w
(
d©Àn
 - 
avaû
);

1887 i‡(
tmp
 =
NULL
)

1890 
buf
->
œ°
->
√xt
 = 
tmp
;

1891 
buf
->
œ°
 = 
tmp
;

1898 
rmv_Æl
 = 0;

1899 
chaö
 = *
buf
->
œ°_wôh_d©≠
;

1900 i‡(!
chaö
->
off
) {

1901 
	`EVUTIL_ASSERT
(
chaö
 =
buf
->
fú°
);

1902 
rmv_Æl
 = 1;

1903 
avaû
 = 0;

1905 
avaû
 = (
size_t
Ë
	`CHAIN_SPACE_LEN
(
chaö
);

1906 
chaö
 = chaö->
√xt
;

1910 ; 
chaö
; chaö = 
√xt
) {

1911 
√xt
 = 
chaö
->next;

1912 
	`EVUTIL_ASSERT
(
chaö
->
off
 == 0);

1913 
	`evbuf„r_chaö_‰ì
(
chaö
);

1915 
tmp
 = 
	`evbuf„r_chaö_√w
(
d©Àn
 - 
avaû
);

1916 i‡(
tmp
 =
NULL
) {

1917 i‡(
rmv_Æl
) {

1918 
	`ZERO_CHAIN
(
buf
);

1920 
buf
->
œ°
 = *buf->
œ°_wôh_d©≠
;

1921 (*
buf
->
œ°_wôh_d©≠
)->
√xt
 = 
NULL
;

1926 i‡(
rmv_Æl
) {

1927 
buf
->
fú°
 = buf->
œ°
 = 
tmp
;

1928 
buf
->
œ°_wôh_d©≠
 = &buf->
fú°
;

1930 (*
buf
->
œ°_wôh_d©≠
)->
√xt
 = 
tmp
;

1931 
buf
->
œ°
 = 
tmp
;

1935 
	}
}

1938 
	$evbuf„r_ex∑nd
(
evbuf„r
 *
buf
, 
size_t
 
d©Àn
)

1940 
evbuf„r_chaö
 *
chaö
;

1942 
	`EVBUFFER_LOCK
(
buf
);

1943 
chaö
 = 
	`evbuf„r_ex∑nd_sögÀchaö
(
buf
, 
d©Àn
);

1944 
	`EVBUFFER_UNLOCK
(
buf
);

1945  
chaö
 ? 0 : -1;

1946 
	}
}

1952 #i‡
deföed
(
_EVENT_HAVE_SYS_UIO_H
Ë|| deföed(
WIN32
)

1953 
	#USE_IOVEC_IMPL


	)

1956 #ifde‡
USE_IOVEC_IMPL


1958 #ifde‡
_EVENT_HAVE_SYS_UIO_H


1962 
	#DEFAULT_WRITE_IOVEC
 128

	)

1964 #i‡
deföed
(
UIO_MAXIOV
Ë&& UIO_MAXIOV < 
DEFAULT_WRITE_IOVEC


1965 
	#NUM_WRITE_IOVEC
 
UIO_MAXIOV


	)

1966 #ñi‡
deföed
(
IOV_MAX
Ë&& IOV_MAX < 
DEFAULT_WRITE_IOVEC


1967 
	#NUM_WRITE_IOVEC
 
IOV_MAX


	)

1969 
	#NUM_WRITE_IOVEC
 
DEFAULT_WRITE_IOVEC


	)

1972 
	#IOV_TYPE
 
iovec


	)

1973 
	#IOV_PTR_FIELD
 
iov_ba£


	)

1974 
	#IOV_LEN_FIELD
 
iov_Àn


	)

1975 
	#IOV_LEN_TYPE
 
size_t


	)

1977 
	#NUM_WRITE_IOVEC
 16

	)

1978 
	#IOV_TYPE
 
WSABUF


	)

1979 
	#IOV_PTR_FIELD
 
buf


	)

1980 
	#IOV_LEN_FIELD
 
Àn


	)

1981 
	#IOV_LEN_TYPE
 

	)

1984 
	#NUM_READ_IOVEC
 4

	)

1986 
	#EVBUFFER_MAX_READ
 4096

	)

2002 
	$_evbuf„r_ªad_£tup_vecs
(
evbuf„r
 *
buf
, 
ev_ssize_t
 
howmuch
,

2003 
evbuf„r_iovec
 *
vecs
, 
n_vecs_avaû
,

2004 
evbuf„r_chaö
 ***
chaöp
, 
exa˘
)

2006 
evbuf„r_chaö
 *
chaö
;

2007 
evbuf„r_chaö
 **
fú°chaöp
;

2008 
size_t
 
so_Ár
;

2009 
i
;

2010 
	`ASSERT_EVBUFFER_LOCKED
(
buf
);

2012 i‡(
howmuch
 < 0)

2015 
so_Ár
 = 0;

2017 
fú°chaöp
 = 
buf
->
œ°_wôh_d©≠
;

2018 i‡(
	`CHAIN_SPACE_LEN
(*
fú°chaöp
) == 0) {

2019 
fú°chaöp
 = &(*fú°chaöp)->
√xt
;

2022 
chaö
 = *
fú°chaöp
;

2023 
i
 = 0; i < 
n_vecs_avaû
 && 
so_Ár
 < (
size_t
)
howmuch
; ++i) {

2024 
size_t
 
avaû
 = (size_tË
	`CHAIN_SPACE_LEN
(
chaö
);

2025 i‡(
avaû
 > (
howmuch
 - 
so_Ár
Ë&& 
exa˘
)

2026 
avaû
 = 
howmuch
 - 
so_Ár
;

2027 
vecs
[
i
].
iov_ba£
 = 
	`CHAIN_SPACE_PTR
(
chaö
);

2028 
vecs
[
i
].
iov_Àn
 = 
avaû
;

2029 
so_Ár
 +
avaû
;

2030 
chaö
 = chaö->
√xt
;

2033 *
chaöp
 = 
fú°chaöp
;

2034  
i
;

2035 
	}
}

2038 
	$gë_n_byãs_ªadabÀ_⁄_sockë
(
evutû_sockë_t
 
fd
)

2040 #i‡
	`deföed
(
FIONREAD
Ë&& deföed(
WIN32
)

2041 
 g
 = 
EVBUFFER_MAX_READ
;

2042 i‡(
	`io˘lsockë
(
fd
, 
FIONREAD
, &
 g
) < 0)

2044  ()
 g
;

2045 #ñi‡
	`deföed
(
FIONREAD
)

2046 
n
 = 
EVBUFFER_MAX_READ
;

2047 i‡(
	`io˘l
(
fd
, 
FIONREAD
, &
n
) < 0)

2049  
n
;

2051  
EVBUFFER_MAX_READ
;

2053 
	}
}

2058 
	$evbuf„r_ªad
(
evbuf„r
 *
buf
, 
evutû_sockë_t
 
fd
, 
howmuch
)

2060 
evbuf„r_chaö
 **
chaöp
;

2061 
n
;

2062 
ªsu…
;

2064 #ifde‡
USE_IOVEC_IMPL


2065 
nvecs
, 
i
, 
ªmaöög
;

2067 
evbuf„r_chaö
 *
chaö
;

2068 *
p
;

2071 
	`EVBUFFER_LOCK
(
buf
);

2073 i‡(
buf
->
‰ìze_íd
) {

2074 
ªsu…
 = -1;

2075 
d⁄e
;

2078 
n
 = 
	`gë_n_byãs_ªadabÀ_⁄_sockë
(
fd
);

2079 i‡(
n
 <0 ||Ç > 
EVBUFFER_MAX_READ
)

2080 
n
 = 
EVBUFFER_MAX_READ
;

2081 i‡(
howmuch
 < 0 || howmuch > 
n
)

2082 
howmuch
 = 
n
;

2084 #ifde‡
USE_IOVEC_IMPL


2087 i‡(
	`_evbuf„r_ex∑nd_Á°
(
buf
, 
howmuch
, 
NUM_READ_IOVEC
) == -1) {

2088 
ªsu…
 = -1;

2089 
d⁄e
;

2091 
IOV_TYPE
 
vecs
[
NUM_READ_IOVEC
];

2092 #ifde‡
_EVBUFFER_IOVEC_IS_NATIVE


2093 
nvecs
 = 
	`_evbuf„r_ªad_£tup_vecs
(
buf
, 
howmuch
, 
vecs
,

2094 
NUM_READ_IOVEC
, &
chaöp
, 1);

2098 
evbuf„r_iovec
 
ev_vecs
[
NUM_READ_IOVEC
];

2099 
nvecs
 = 
	`_evbuf„r_ªad_£tup_vecs
(
buf
, 
howmuch
, 
ev_vecs
, 2,

2100 &
chaöp
, 1);

2102 
i
=0; i < 
nvecs
; ++i)

2103 
	`WSABUF_FROM_EVBUFFER_IOV
(&
vecs
[
i
], &
ev_vecs
[i]);

2106 #ifde‡
WIN32


2108 
DWORD
 
byãsRód
;

2109 
DWORD
 
Êags
=0;

2110 i‡(
	`WSARecv
(
fd
, 
vecs
, 
nvecs
, &
byãsRód
, &
Êags
, 
NULL
, NULL)) {

2113 i‡(
	`WSAGëLa°Eº‹
(Ë=
WSAECONNABORTED
)

2114 
n
 = 0;

2116 
n
 = -1;

2118 
n
 = 
byãsRód
;

2121 
n
 = 
	`ªadv
(
fd
, 
vecs
, 
nvecs
);

2129 i‡((
chaö
 = 
	`evbuf„r_ex∑nd_sögÀchaö
(
buf
, 
howmuch
)Ë=
NULL
) {

2130 
ªsu…
 = -1;

2131 
d⁄e
;

2135 
p
 = 
chaö
->
buf„r
 + chaö->
mißlign
 + chaö->
off
;

2137 #i‚de‡
WIN32


2138 
n
 = 
	`ªad
(
fd
, 
p
, 
howmuch
);

2140 
n
 = 
	`ªcv
(
fd
, 
p
, 
howmuch
, 0);

2144 i‡(
n
 == -1) {

2145 
ªsu…
 = -1;

2146 
d⁄e
;

2148 i‡(
n
 == 0) {

2149 
ªsu…
 = 0;

2150 
d⁄e
;

2153 #ifde‡
USE_IOVEC_IMPL


2154 
ªmaöög
 = 
n
;

2155 
i
=0; i < 
nvecs
; ++i) {

2156 
ev_ssize_t
 
•a˚
 = (ev_ssize_tË
	`CHAIN_SPACE_LEN
(*
chaöp
);

2157 i‡(
•a˚
 < 
ªmaöög
) {

2158 (*
chaöp
)->
off
 +
•a˚
;

2159 
ªmaöög
 -()
•a˚
;

2161 (*
chaöp
)->
off
 +
ªmaöög
;

2162 
buf
->
œ°_wôh_d©≠
 = 
chaöp
;

2165 
chaöp
 = &(*chaöp)->
√xt
;

2168 
chaö
->
off
 +
n
;

2169 
	`adv™˚_œ°_wôh_d©a
(
buf
);

2171 
buf
->
tŸÆ_Àn
 +
n
;

2172 
buf
->
n_add_f‹_cb
 +
n
;

2175 
	`evbuf„r_övoke_ˇŒbacks
(
buf
);

2176 
ªsu…
 = 
n
;

2177 
d⁄e
:

2178 
	`EVBUFFER_UNLOCK
(
buf
);

2179  
ªsu…
;

2180 
	}
}

2182 #ifde‡
WIN32


2184 
	$evbuf„r_ªadfûe
(
evbuf„r
 *
buf
, 
evutû_sockë_t
 
fd
, 
ev_ssize_t
 
howmuch
)

2186 
ªsu…
;

2187 
nchaös
, 
n
;

2188 
evbuf„r_iovec
 
v
[2];

2190 
	`EVBUFFER_LOCK
(
buf
);

2192 i‡(
buf
->
‰ìze_íd
) {

2193 
ªsu…
 = -1;

2194 
d⁄e
;

2197 i‡(
howmuch
 < 0)

2198 
howmuch
 = 16384;

2203 
nchaös
 = 
	`evbuf„r_ª£rve_•a˚
(
buf
, 
howmuch
, 
v
, 2);

2204 i‡(
nchaös
 < 1 ||Çchains > 2) {

2205 
ªsu…
 = -1;

2206 
d⁄e
;

2208 
n
 = 
	`ªad
(()
fd
, 
v
[0].
iov_ba£
, ()v[0].
iov_Àn
);

2209 i‡(
n
 <= 0) {

2210 
ªsu…
 = 
n
;

2211 
d⁄e
;

2213 
v
[0].
iov_Àn
 = (
IOV_LEN_TYPE
Ë
n
;

2214 i‡(
nchaös
 > 1) {

2215 
n
 = 
	`ªad
(()
fd
, 
v
[1].
iov_ba£
, ()v[1].
iov_Àn
);

2216 i‡(
n
 <= 0) {

2217 
ªsu…
 = (Ë
v
[0].
iov_Àn
;

2218 
	`evbuf„r_commô_•a˚
(
buf
, 
v
, 1);

2219 
d⁄e
;

2221 
v
[1].
iov_Àn
 = 
n
;

2223 
	`evbuf„r_commô_•a˚
(
buf
, 
v
, 
nchaös
);

2225 
ªsu…
 = 
n
;

2226 
d⁄e
:

2227 
	`EVBUFFER_UNLOCK
(
buf
);

2228  
ªsu…
;

2229 
	}
}

2232 #ifde‡
USE_IOVEC_IMPL


2233 
ölöe
 

2234 
	$evbuf„r_wrôe_iovec
(
evbuf„r
 *
buf„r
, 
evutû_sockë_t
 
fd
,

2235 
ev_ssize_t
 
howmuch
)

2237 
IOV_TYPE
 
iov
[
NUM_WRITE_IOVEC
];

2238 
evbuf„r_chaö
 *
chaö
 = 
buf„r
->
fú°
;

2239 
n
, 
i
 = 0;

2241 i‡(
howmuch
 < 0)

2244 
	`ASSERT_EVBUFFER_LOCKED
(
buf„r
);

2248 
chaö
 !
NULL
 && 
i
 < 
NUM_WRITE_IOVEC
 && 
howmuch
) {

2249 #ifde‡
USE_SENDFILE


2251 i‡(
chaö
->
Êags
 & 
EVBUFFER_SENDFILE
)

2254 
iov
[
i
].
IOV_PTR_FIELD
 = (*Ë(
chaö
->
buf„r
 + chaö->
mißlign
);

2255 i‡((
size_t
)
howmuch
 >
chaö
->
off
) {

2257 
iov
[
i
++].
IOV_LEN_FIELD
 = (
IOV_LEN_TYPE
)
chaö
->
off
;

2258 
howmuch
 -
chaö
->
off
;

2261 
iov
[
i
++].
IOV_LEN_FIELD
 = (
IOV_LEN_TYPE
)
howmuch
;

2264 
chaö
 = chaö->
√xt
;

2266 i‡(! 
i
)

2268 #ifde‡
WIN32


2270 
DWORD
 
byãsSít
;

2271 i‡(
	`WSASíd
(
fd
, 
iov
, 
i
, &
byãsSít
, 0, 
NULL
, NULL))

2272 
n
 = -1;

2274 
n
 = 
byãsSít
;

2277 
n
 = 
	`wrôev
(
fd
, 
iov
, 
i
);

2279  (
n
);

2280 
	}
}

2283 #ifde‡
USE_SENDFILE


2284 
ölöe
 

2285 
	$evbuf„r_wrôe_£ndfûe
(
evbuf„r
 *
buf„r
, 
evutû_sockë_t
 
fd
,

2286 
ev_ssize_t
 
howmuch
)

2288 
evbuf„r_chaö
 *
chaö
 = 
buf„r
->
fú°
;

2289 
evbuf„r_chaö_fd
 *
öfo
 =

2290 
	`EVBUFFER_CHAIN_EXTRA
(
evbuf„r_chaö_fd
, 
chaö
);

2291 #i‡
	`deföed
(
SENDFILE_IS_MACOSX
Ë|| deföed(
SENDFILE_IS_FREEBSD
)

2292 
ªs
;

2293 
off_t
 
Àn
 = 
chaö
->
off
;

2294 #ñi‡
	`deföed
(
SENDFILE_IS_LINUX
Ë|| deföed(
SENDFILE_IS_SOLARIS
)

2295 
ev_ssize_t
 
ªs
;

2296 
off_t
 
off£t
 = 
chaö
->
mißlign
;

2299 
	`ASSERT_EVBUFFER_LOCKED
(
buf„r
);

2301 #i‡
	`deföed
(
SENDFILE_IS_MACOSX
)

2302 
ªs
 = 
	`£ndfûe
(
öfo
->
fd
, fd, 
chaö
->
mißlign
, &
Àn
, 
NULL
, 0);

2303 i‡(
ªs
 =-1 && !
	`EVUTIL_ERR_RW_RETRIABLE
(
î∫o
))

2306  (
Àn
);

2307 #ñi‡
	`deföed
(
SENDFILE_IS_FREEBSD
)

2308 
ªs
 = 
	`£ndfûe
(
öfo
->
fd
, fd, 
chaö
->
mißlign
, chaö->
off
, 
NULL
, &
Àn
, 0);

2309 i‡(
ªs
 =-1 && !
	`EVUTIL_ERR_RW_RETRIABLE
(
î∫o
))

2312  (
Àn
);

2313 #ñi‡
	`deföed
(
SENDFILE_IS_LINUX
)

2315 
ªs
 = 
	`£ndfûe
(
fd
, 
öfo
->fd, &
off£t
, 
chaö
->
off
);

2316 i‡(
ªs
 =-1 && 
	`EVUTIL_ERR_RW_RETRIABLE
(
î∫o
)) {

2320  (
ªs
);

2321 #ñi‡
	`deföed
(
SENDFILE_IS_SOLARIS
)

2323 c⁄° 
off_t
 
off£t_‹ig
 = 
off£t
;

2324 
ªs
 = 
	`£ndfûe
(
fd
, 
öfo
->fd, &
off£t
, 
chaö
->
off
);

2325 i‡(
ªs
 =-1 && 
	`EVUTIL_ERR_RW_RETRIABLE
(
î∫o
)) {

2326 i‡(
off£t
 - 
off£t_‹ig
)

2327  
off£t
 - 
off£t_‹ig
;

2332  (
ªs
);

2335 
	}
}

2339 
	$evbuf„r_wrôe_©mo°
(
evbuf„r
 *
buf„r
, 
evutû_sockë_t
 
fd
,

2340 
ev_ssize_t
 
howmuch
)

2342 
n
 = -1;

2344 
	`EVBUFFER_LOCK
(
buf„r
);

2346 i‡(
buf„r
->
‰ìze_°¨t
) {

2347 
d⁄e
;

2350 i‡(
howmuch
 < 0 || (
size_t
)howmuch > 
buf„r
->
tŸÆ_Àn
)

2351 
howmuch
 = 
buf„r
->
tŸÆ_Àn
;

2353 i‡(
howmuch
 > 0) {

2354 #ifde‡
USE_SENDFILE


2355 
evbuf„r_chaö
 *
chaö
 = 
buf„r
->
fú°
;

2356 i‡(
chaö
 !
NULL
 && (chaö->
Êags
 & 
EVBUFFER_SENDFILE
))

2357 
n
 = 
	`evbuf„r_wrôe_£ndfûe
(
buf„r
, 
fd
, 
howmuch
);

2360 #ifde‡
USE_IOVEC_IMPL


2361 
n
 = 
	`evbuf„r_wrôe_iovec
(
buf„r
, 
fd
, 
howmuch
);

2362 #ñi‡
	`deföed
(
WIN32
)

2365 *
p
 = 
	`evbuf„r_puŒup
(
buf„r
, 
howmuch
);

2366 
n
 = 
	`£nd
(
fd
, 
p
, 
howmuch
, 0);

2368 *
p
 = 
	`evbuf„r_puŒup
(
buf„r
, 
howmuch
);

2369 
n
 = 
	`wrôe
(
fd
, 
p
, 
howmuch
);

2371 #ifde‡
USE_SENDFILE


2376 i‡(
n
 > 0)

2377 
	`evbuf„r_døö
(
buf„r
, 
n
);

2379 
d⁄e
:

2380 
	`EVBUFFER_UNLOCK
(
buf„r
);

2381  (
n
);

2382 
	}
}

2385 
	$evbuf„r_wrôe
(
evbuf„r
 *
buf„r
, 
evutû_sockë_t
 
fd
)

2387  
	`evbuf„r_wrôe_©mo°
(
buf„r
, 
fd
, -1);

2388 
	}
}

2391 
	$evbuf„r_föd
(
evbuf„r
 *
buf„r
, c⁄° *
wh©
, 
size_t
 
Àn
)

2393 *
£¨ch
;

2394 
evbuf„r_±r
 
±r
;

2396 
	`EVBUFFER_LOCK
(
buf„r
);

2398 
±r
 = 
	`evbuf„r_£¨ch
(
buf„r
, (c⁄° *)
wh©
, 
Àn
, 
NULL
);

2399 i‡(
±r
.
pos
 < 0) {

2400 
£¨ch
 = 
NULL
;

2402 
£¨ch
 = 
	`evbuf„r_puŒup
(
buf„r
, 
±r
.
pos
 + 
Àn
);

2403 i‡(
£¨ch
)

2404 
£¨ch
 +
±r
.
pos
;

2406 
	`EVBUFFER_UNLOCK
(
buf„r
);

2407  
£¨ch
;

2408 
	}
}

2411 
	$evbuf„r_±r_£t
(
evbuf„r
 *
buf
, 
evbuf„r_±r
 *
pos
,

2412 
size_t
 
posôi⁄
, 
evbuf„r_±r_how
 
how
)

2414 
size_t
 
À·
 = 
posôi⁄
;

2415 
evbuf„r_chaö
 *
chaö
 = 
NULL
;

2417 
	`EVBUFFER_LOCK
(
buf
);

2419 
how
) {

2420 
EVBUFFER_PTR_SET
:

2421 
chaö
 = 
buf
->
fú°
;

2422 
pos
->po†
posôi⁄
;

2423 
posôi⁄
 = 0;

2425 
EVBUFFER_PTR_ADD
:

2428 
chaö
 = 
pos
->
_öã∫Æ
.chain;

2429 
pos
->po†+
posôi⁄
;

2430 
posôi⁄
 = 
pos
->
_öã∫Æ
.
pos_ö_chaö
;

2434 
chaö
 && 
posôi⁄
 + 
À·
 >chaö->
off
) {

2435 
À·
 -
chaö
->
off
 - 
posôi⁄
;

2436 
chaö
 = chaö->
√xt
;

2437 
posôi⁄
 = 0;

2439 i‡(
chaö
) {

2440 
pos
->
_öã∫Æ
.
chaö
 = chain;

2441 
pos
->
_öã∫Æ
.
pos_ö_chaö
 = 
posôi⁄
 + 
À·
;

2443 
pos
->
_öã∫Æ
.
chaö
 = 
NULL
;

2444 
pos
->pos = -1;

2447 
	`EVBUFFER_UNLOCK
(
buf
);

2449  
chaö
 !
NULL
 ? 0 : -1;

2450 
	}
}

2457 
	$evbuf„r_±r_memcmp
(c⁄° 
evbuf„r
 *
buf
, c⁄° 
evbuf„r_±r
 *
pos
,

2458 c⁄° *
mem
, 
size_t
 
Àn
)

2460 
evbuf„r_chaö
 *
chaö
;

2461 
size_t
 
posôi⁄
;

2462 
r
;

2464 
	`ASSERT_EVBUFFER_LOCKED
(
buf
);

2466 i‡(
pos
->po†+ 
Àn
 > 
buf
->
tŸÆ_Àn
)

2469 
chaö
 = 
pos
->
_öã∫Æ
.chain;

2470 
posôi⁄
 = 
pos
->
_öã∫Æ
.
pos_ö_chaö
;

2471 
Àn
 && 
chaö
) {

2472 
size_t
 
n_com∑øbÀ
;

2473 i‡(
Àn
 + 
posôi⁄
 > 
chaö
->
off
)

2474 
n_com∑øbÀ
 = 
chaö
->
off
 - 
posôi⁄
;

2476 
n_com∑øbÀ
 = 
Àn
;

2477 
r
 = 
	`memcmp
(
chaö
->
buf„r
 + chaö->
mißlign
 + 
posôi⁄
, 
mem
,

2478 
n_com∑øbÀ
);

2479 i‡(
r
)

2480  
r
;

2481 
mem
 +
n_com∑øbÀ
;

2482 
Àn
 -
n_com∑øbÀ
;

2483 
posôi⁄
 = 0;

2484 
chaö
 = chaö->
√xt
;

2488 
	}
}

2490 
evbuf„r_±r


2491 
	$evbuf„r_£¨ch
(
evbuf„r
 *
buf„r
, c⁄° *
wh©
, 
size_t
 
Àn
, c⁄° 
evbuf„r_±r
 *
°¨t
)

2493  
	`evbuf„r_£¨ch_ønge
(
buf„r
, 
wh©
, 
Àn
, 
°¨t
, 
NULL
);

2494 
	}
}

2496 
evbuf„r_±r


2497 
	$evbuf„r_£¨ch_ønge
(
evbuf„r
 *
buf„r
, c⁄° *
wh©
, 
size_t
 
Àn
, c⁄° 
evbuf„r_±r
 *
°¨t
, c⁄° evbuf„r_±∏*
íd
)

2499 
evbuf„r_±r
 
pos
;

2500 
evbuf„r_chaö
 *
chaö
, *
œ°_chaö
 = 
NULL
;

2501 c⁄° *
p
;

2502 
fú°
;

2504 
	`EVBUFFER_LOCK
(
buf„r
);

2506 i‡(
°¨t
) {

2507 
	`mem˝y
(&
pos
, 
°¨t
, (pos));

2508 
chaö
 = 
pos
.
_öã∫Æ
.chain;

2510 
pos
.pos = 0;

2511 
chaö
 = 
pos
.
_öã∫Æ
.chaö = 
buf„r
->
fú°
;

2512 
pos
.
_öã∫Æ
.
pos_ö_chaö
 = 0;

2515 i‡(
íd
)

2516 
œ°_chaö
 = 
íd
->
_öã∫Æ
.
chaö
;

2518 i‡(!
Àn
 ||Üí > 
EV_SSIZE_MAX
)

2519 
d⁄e
;

2521 
fú°
 = 
wh©
[0];

2523 
chaö
) {

2524 c⁄° *
°¨t_©
 =

2525 
chaö
->
buf„r
 + chaö->
mißlign
 +

2526 
pos
.
_öã∫Æ
.
pos_ö_chaö
;

2527 
p
 = 
	`memchr
(
°¨t_©
, 
fú°
,

2528 
chaö
->
off
 - 
pos
.
_öã∫Æ
.
pos_ö_chaö
);

2529 i‡(
p
) {

2530 
pos
.po†+
p
 - 
°¨t_©
;

2531 
pos
.
_öã∫Æ
.
pos_ö_chaö
 +
p
 - 
°¨t_©
;

2532 i‡(!
	`evbuf„r_±r_memcmp
(
buf„r
, &
pos
, 
wh©
, 
Àn
)) {

2533 i‡(
íd
 && 
pos
.po†+ (
ev_ssize_t
)
Àn
 >Énd->pos)

2534 
nŸ_found
;

2536 
d⁄e
;

2538 ++
pos
.pos;

2539 ++
pos
.
_öã∫Æ
.
pos_ö_chaö
;

2540 i‡(
pos
.
_öã∫Æ
.
pos_ö_chaö
 =
chaö
->
off
) {

2541 
chaö
 = 
pos
.
_öã∫Æ
.chaö = chaö->
√xt
;

2542 
pos
.
_öã∫Æ
.
pos_ö_chaö
 = 0;

2545 i‡(
chaö
 =
œ°_chaö
)

2546 
nŸ_found
;

2547 
pos
.po†+
chaö
->
off
 -Öos.
_öã∫Æ
.
pos_ö_chaö
;

2548 
chaö
 = 
pos
.
_öã∫Æ
.chaö = chaö->
√xt
;

2549 
pos
.
_öã∫Æ
.
pos_ö_chaö
 = 0;

2553 
nŸ_found
:

2554 
pos
.pos = -1;

2555 
pos
.
_öã∫Æ
.
chaö
 = 
NULL
;

2556 
d⁄e
:

2557 
	`EVBUFFER_UNLOCK
(
buf„r
);

2558  
pos
;

2559 
	}
}

2562 
	$evbuf„r_≥ek
(
evbuf„r
 *
buf„r
, 
ev_ssize_t
 
Àn
,

2563 
evbuf„r_±r
 *
°¨t_©
,

2564 
evbuf„r_iovec
 *
vec
, 
n_vec
)

2566 
evbuf„r_chaö
 *
chaö
;

2567 
idx
 = 0;

2568 
ev_ssize_t
 
Àn_so_Ár
 = 0;

2570 
	`EVBUFFER_LOCK
(
buf„r
);

2572 i‡(
°¨t_©
) {

2573 
chaö
 = 
°¨t_©
->
_öã∫Æ
.chain;

2574 
Àn_so_Ár
 = 
chaö
->
off


2575 - 
°¨t_©
->
_öã∫Æ
.
pos_ö_chaö
;

2576 
idx
 = 1;

2577 i‡(
n_vec
 > 0) {

2578 
vec
[0].
iov_ba£
 = 
chaö
->
buf„r
 + chaö->
mißlign


2579 + 
°¨t_©
->
_öã∫Æ
.
pos_ö_chaö
;

2580 
vec
[0].
iov_Àn
 = 
Àn_so_Ár
;

2582 
chaö
 = chaö->
√xt
;

2584 
chaö
 = 
buf„r
->
fú°
;

2587 i‡(
n_vec
 =0 && 
Àn
 < 0) {

2590 
Àn
 = 
buf„r
->
tŸÆ_Àn
 - 
Àn_so_Ár
;

2593 
chaö
) {

2594 i‡(
Àn
 >0 && 
Àn_so_Ár
 >=Üen)

2596 i‡(
idx
<
n_vec
) {

2597 
vec
[
idx
].
iov_ba£
 = 
chaö
->
buf„r
 + chaö->
mißlign
;

2598 
vec
[
idx
].
iov_Àn
 = 
chaö
->
off
;

2599 } i‡(
Àn
<0) {

2602 ++
idx
;

2603 
Àn_so_Ár
 +
chaö
->
off
;

2604 
chaö
 = chaö->
√xt
;

2607 
	`EVBUFFER_UNLOCK
(
buf„r
);

2609  
idx
;

2610 
	}
}

2614 
	$evbuf„r_add_v¥ötf
(
evbuf„r
 *
buf
, c⁄° *
fmt
, 
va_li°
 
≠
)

2616 *
buf„r
;

2617 
size_t
 
•a˚
;

2618 
sz
, 
ªsu…
 = -1;

2619 
va_li°
 
aq
;

2620 
evbuf„r_chaö
 *
chaö
;

2623 
	`EVBUFFER_LOCK
(
buf
);

2625 i‡(
buf
->
‰ìze_íd
) {

2626 
d⁄e
;

2630 i‡((
chaö
 = 
	`evbuf„r_ex∑nd_sögÀchaö
(
buf
, 64)Ë=
NULL
)

2631 
d⁄e
;

2635 
size_t
 
u£d
 = 
chaö
->
mißlign
 + chaö->
off
;

2636 
buf„r
 = (*)
chaö
->buf„∏+ chaö->
mißlign
 + chaö->
off
;

2637 
	`EVUTIL_ASSERT
(
chaö
->
buf„r_Àn
 >
u£d
);

2638 
•a˚
 = 
chaö
->
buf„r_Àn
 - 
u£d
;

2640 
buf„r
 = (*Ë
	`CHAIN_SPACE_PTR
(
chaö
);

2641 
•a˚
 = (
size_t
Ë
	`CHAIN_SPACE_LEN
(
chaö
);

2643 #i‚de‡
va_c›y


2644 
	#va_c›y
(
d°
, 
§c
Ë
	`mem˝y
(&(d°), &(§c), (
va_li°
))

	)

2646 
	`va_c›y
(
aq
, 
≠
);

2648 
sz
 = 
	`evutû_v¢¥ötf
(
buf„r
, 
•a˚
, 
fmt
, 
aq
);

2650 
	`va_íd
(
aq
);

2652 i‡(
sz
 < 0)

2653 
d⁄e
;

2654 i‡((
size_t
)
sz
 < 
•a˚
) {

2655 
chaö
->
off
 +
sz
;

2656 
buf
->
tŸÆ_Àn
 +
sz
;

2657 
buf
->
n_add_f‹_cb
 +
sz
;

2659 
	`adv™˚_œ°_wôh_d©a
(
buf
);

2660 
	`evbuf„r_övoke_ˇŒbacks
(
buf
);

2661 
ªsu…
 = 
sz
;

2662 
d⁄e
;

2664 i‡((
chaö
 = 
	`evbuf„r_ex∑nd_sögÀchaö
(
buf
, 
sz
 + 1)Ë=
NULL
)

2665 
d⁄e
;

2669 
d⁄e
:

2670 
	`EVBUFFER_UNLOCK
(
buf
);

2671  
ªsu…
;

2672 
	}
}

2675 
	$evbuf„r_add_¥ötf
(
evbuf„r
 *
buf
, c⁄° *
fmt
, ...)

2677 
ªs
 = -1;

2678 
va_li°
 
≠
;

2680 
	`va_°¨t
(
≠
, 
fmt
);

2681 
ªs
 = 
	`evbuf„r_add_v¥ötf
(
buf
, 
fmt
, 
≠
);

2682 
	`va_íd
(
≠
);

2684  (
ªs
);

2685 
	}
}

2688 
	$evbuf„r_add_ª„ªn˚
(
evbuf„r
 *
outbuf
,

2689 c⁄° *
d©a
, 
size_t
 
d©Àn
,

2690 
evbuf„r_ªf_˛ónup_cb
 
˛ónup‚
, *
exåa
)

2692 
evbuf„r_chaö
 *
chaö
;

2693 
evbuf„r_chaö_ª„ªn˚
 *
öfo
;

2694 
ªsu…
 = -1;

2696 
chaö
 = 
	`evbuf„r_chaö_√w
((
evbuf„r_chaö_ª„ªn˚
));

2697 i‡(!
chaö
)

2699 
chaö
->
Êags
 |
EVBUFFER_REFERENCE
 | 
EVBUFFER_IMMUTABLE
;

2700 
chaö
->
buf„r
 = (
u_ch¨
 *)
d©a
;

2701 
chaö
->
buf„r_Àn
 = 
d©Àn
;

2702 
chaö
->
off
 = 
d©Àn
;

2704 
öfo
 = 
	`EVBUFFER_CHAIN_EXTRA
(
evbuf„r_chaö_ª„ªn˚
, 
chaö
);

2705 
öfo
->
˛ónup‚
 = cleanupfn;

2706 
öfo
->
exåa
 =Éxtra;

2708 
	`EVBUFFER_LOCK
(
outbuf
);

2709 i‡(
outbuf
->
‰ìze_íd
) {

2712 
	`mm_‰ì
(
chaö
);

2713 
d⁄e
;

2715 
	`evbuf„r_chaö_ö£π
(
outbuf
, 
chaö
);

2716 
outbuf
->
n_add_f‹_cb
 +
d©Àn
;

2718 
	`evbuf„r_övoke_ˇŒbacks
(
outbuf
);

2720 
ªsu…
 = 0;

2721 
d⁄e
:

2722 
	`EVBUFFER_UNLOCK
(
outbuf
);

2724  
ªsu…
;

2725 
	}
}

2735 
	$evbuf„r_add_fûe
(
evbuf„r
 *
outbuf
, 
fd
,

2736 
ev_off_t
 
off£t
,Év_off_à
Àngth
)

2738 #i‡
	`deföed
(
USE_SENDFILE
Ë|| deföed(
_EVENT_HAVE_MMAP
)

2739 
evbuf„r_chaö
 *
chaö
;

2740 
evbuf„r_chaö_fd
 *
öfo
;

2742 #i‡
	`deföed
(
USE_SENDFILE
)

2743 
£ndfûe_okay
 = 1;

2745 
ok
 = 1;

2747 #i‡
	`deföed
(
USE_SENDFILE
)

2748 i‡(
u£_£ndfûe
) {

2749 
	`EVBUFFER_LOCK
(
outbuf
);

2750 
£ndfûe_okay
 = 
outbuf
->
Êags
 & 
EVBUFFER_FLAG_DRAINS_TO_FD
;

2751 
	`EVBUFFER_UNLOCK
(
outbuf
);

2754 i‡(
u£_£ndfûe
 && 
£ndfûe_okay
) {

2755 
chaö
 = 
	`evbuf„r_chaö_√w
((
evbuf„r_chaö_fd
));

2756 i‡(
chaö
 =
NULL
) {

2757 
	`evít_w¨n
("%s: ouào‡mem‹y", 
__func__
);

2761 
chaö
->
Êags
 |
EVBUFFER_SENDFILE
 | 
EVBUFFER_IMMUTABLE
;

2762 
chaö
->
buf„r
 = 
NULL
;

2763 
chaö
->
buf„r_Àn
 = 
Àngth
 + 
off£t
;

2764 
chaö
->
off
 = 
Àngth
;

2765 
chaö
->
mißlign
 = 
off£t
;

2767 
öfo
 = 
	`EVBUFFER_CHAIN_EXTRA
(
evbuf„r_chaö_fd
, 
chaö
);

2768 
öfo
->
fd
 = fd;

2770 
	`EVBUFFER_LOCK
(
outbuf
);

2771 i‡(
outbuf
->
‰ìze_íd
) {

2772 
	`mm_‰ì
(
chaö
);

2773 
ok
 = 0;

2775 
outbuf
->
n_add_f‹_cb
 +
Àngth
;

2776 
	`evbuf„r_chaö_ö£π
(
outbuf
, 
chaö
);

2780 #i‡
	`deföed
(
_EVENT_HAVE_MMAP
)

2781 i‡(
u£_mm≠
) {

2782 *
m≠≥d
 = 
	`mm≠
(
NULL
, 
Àngth
 + 
off£t
, 
PROT_READ
,

2783 #ifde‡
MAP_NOCACHE


2784 
MAP_NOCACHE
 |

2786 #ifde‡
MAP_FILE


2787 
MAP_FILE
 |

2789 
MAP_PRIVATE
,

2790 
fd
, 0);

2797 i‡(
m≠≥d
 =
MAP_FAILED
) {

2798 
	`evít_w¨n
("%s: mmap(%d, %d, %zu) failed",

2799 
__func__
, 
fd
, 0, (
size_t
)(
off£t
 + 
Àngth
));

2802 
chaö
 = 
	`evbuf„r_chaö_√w
((
evbuf„r_chaö_fd
));

2803 i‡(
chaö
 =
NULL
) {

2804 
	`evít_w¨n
("%s: ouào‡mem‹y", 
__func__
);

2805 
	`munm≠
(
m≠≥d
, 
Àngth
);

2809 
chaö
->
Êags
 |
EVBUFFER_MMAP
 | 
EVBUFFER_IMMUTABLE
;

2810 
chaö
->
buf„r
 = 
m≠≥d
;

2811 
chaö
->
buf„r_Àn
 = 
Àngth
 + 
off£t
;

2812 
chaö
->
off
 = 
Àngth
 + 
off£t
;

2814 
öfo
 = 
	`EVBUFFER_CHAIN_EXTRA
(
evbuf„r_chaö_fd
, 
chaö
);

2815 
öfo
->
fd
 = fd;

2817 
	`EVBUFFER_LOCK
(
outbuf
);

2818 i‡(
outbuf
->
‰ìze_íd
) {

2819 
öfo
->
fd
 = -1;

2820 
	`evbuf„r_chaö_‰ì
(
chaö
);

2821 
ok
 = 0;

2823 
outbuf
->
n_add_f‹_cb
 +
Àngth
;

2825 
	`evbuf„r_chaö_ö£π
(
outbuf
, 
chaö
);

2828 
	`evbuf„r_døö
(
outbuf
, 
off£t
);

2834 
evbuf„r
 *
tmp
 = 
	`evbuf„r_√w
();

2835 
ev_ssize_t
 
ªad
;

2837 i‡(
tmp
 =
NULL
)

2840 #ifde‡
WIN32


2841 
	#l£ek
 
_l£eki64


	)

2843 i‡(
	`l£ek
(
fd
, 
off£t
, 
SEEK_SET
) == -1) {

2844 
	`evbuf„r_‰ì
(
tmp
);

2851 
Àngth
) {

2852 
ªad
 = 
	`evbuf„r_ªadfûe
(
tmp
, 
fd
, (
ev_ssize_t
)
Àngth
);

2853 i‡(
ªad
 == -1) {

2854 
	`evbuf„r_‰ì
(
tmp
);

2858 
Àngth
 -
ªad
;

2861 
	`EVBUFFER_LOCK
(
outbuf
);

2862 i‡(
outbuf
->
‰ìze_íd
) {

2863 
	`evbuf„r_‰ì
(
tmp
);

2864 
ok
 = 0;

2866 
	`evbuf„r_add_buf„r
(
outbuf
, 
tmp
);

2867 
	`evbuf„r_‰ì
(
tmp
);

2869 #ifde‡
WIN32


2870 
	#˛o£
 
_˛o£


	)

2872 
	`˛o£
(
fd
);

2876 i‡(
ok
)

2877 
	`evbuf„r_övoke_ˇŒbacks
(
outbuf
);

2878 
	`EVBUFFER_UNLOCK
(
outbuf
);

2880  
ok
 ? 0 : -1;

2881 
	}
}

2885 
	$evbuf„r_£tcb
(
evbuf„r
 *
buf„r
, 
evbuf„r_cb
 
cb
, *
cb¨g
)

2887 
	`EVBUFFER_LOCK
(
buf„r
);

2889 i‡(!
	`TAILQ_EMPTY
(&
buf„r
->
ˇŒbacks
))

2890 
	`evbuf„r_ªmove_Æl_ˇŒbacks
(
buf„r
);

2892 i‡(
cb
) {

2893 
evbuf„r_cb_íåy
 *
ít
 =

2894 
	`evbuf„r_add_cb
(
buf„r
, 
NULL
, 
cb¨g
);

2895 
ít
->
cb
.
cb_obsﬁëe
 = cb;

2896 
ít
->
Êags
 |
EVBUFFER_CB_OBSOLETE
;

2898 
	`EVBUFFER_UNLOCK
(
buf„r
);

2899 
	}
}

2901 
evbuf„r_cb_íåy
 *

2902 
	$evbuf„r_add_cb
(
evbuf„r
 *
buf„r
, 
evbuf„r_cb_func
 
cb
, *
cb¨g
)

2904 
evbuf„r_cb_íåy
 *
e
;

2905 i‡(! (
e
 = 
	`mm_ˇŒoc
(1, (
evbuf„r_cb_íåy
))))

2906  
NULL
;

2907 
	`EVBUFFER_LOCK
(
buf„r
);

2908 
e
->
cb
.
cb_func
 = cb;

2909 
e
->
cb¨g
 = cbarg;

2910 
e
->
Êags
 = 
EVBUFFER_CB_ENABLED
;

2911 
	`TAILQ_INSERT_HEAD
(&
buf„r
->
ˇŒbacks
, 
e
, 
√xt
);

2912 
	`EVBUFFER_UNLOCK
(
buf„r
);

2913  
e
;

2914 
	}
}

2917 
	$evbuf„r_ªmove_cb_íåy
(
evbuf„r
 *
buf„r
,

2918 
evbuf„r_cb_íåy
 *
ít
)

2920 
	`EVBUFFER_LOCK
(
buf„r
);

2921 
	`TAILQ_REMOVE
(&
buf„r
->
ˇŒbacks
, 
ít
, 
√xt
);

2922 
	`EVBUFFER_UNLOCK
(
buf„r
);

2923 
	`mm_‰ì
(
ít
);

2925 
	}
}

2928 
	$evbuf„r_ªmove_cb
(
evbuf„r
 *
buf„r
, 
evbuf„r_cb_func
 
cb
, *
cb¨g
)

2930 
evbuf„r_cb_íåy
 *
cbít
;

2931 
ªsu…
 = -1;

2932 
	`EVBUFFER_LOCK
(
buf„r
);

2933 
	`TAILQ_FOREACH
(
cbít
, &
buf„r
->
ˇŒbacks
, 
√xt
) {

2934 i‡(
cb
 =
cbít
->cb.
cb_func
 && 
cb¨g
 == cbent->cbarg) {

2935 
ªsu…
 = 
	`evbuf„r_ªmove_cb_íåy
(
buf„r
, 
cbít
);

2936 
d⁄e
;

2939 
d⁄e
:

2940 
	`EVBUFFER_UNLOCK
(
buf„r
);

2941  
ªsu…
;

2942 
	}
}

2945 
	$evbuf„r_cb_£t_Êags
(
evbuf„r
 *
buf„r
,

2946 
evbuf„r_cb_íåy
 *
cb
, 
ev_uöt32_t
 
Êags
)

2949 
Êags
 &~
EVBUFFER_CB_INTERNAL_FLAGS
;

2950 
	`EVBUFFER_LOCK
(
buf„r
);

2951 
cb
->
Êags
 |= flags;

2952 
	`EVBUFFER_UNLOCK
(
buf„r
);

2954 
	}
}

2957 
	$evbuf„r_cb_˛ór_Êags
(
evbuf„r
 *
buf„r
,

2958 
evbuf„r_cb_íåy
 *
cb
, 
ev_uöt32_t
 
Êags
)

2961 
Êags
 &~
EVBUFFER_CB_INTERNAL_FLAGS
;

2962 
	`EVBUFFER_LOCK
(
buf„r
);

2963 
cb
->
Êags
 &= ~flags;

2964 
	`EVBUFFER_UNLOCK
(
buf„r
);

2966 
	}
}

2969 
	$evbuf„r_‰ìze
(
evbuf„r
 *
buf„r
, 
°¨t
)

2971 
	`EVBUFFER_LOCK
(
buf„r
);

2972 i‡(
°¨t
)

2973 
buf„r
->
‰ìze_°¨t
 = 1;

2975 
buf„r
->
‰ìze_íd
 = 1;

2976 
	`EVBUFFER_UNLOCK
(
buf„r
);

2978 
	}
}

2981 
	$evbuf„r_un‰ìze
(
evbuf„r
 *
buf„r
, 
°¨t
)

2983 
	`EVBUFFER_LOCK
(
buf„r
);

2984 i‡(
°¨t
)

2985 
buf„r
->
‰ìze_°¨t
 = 0;

2987 
buf„r
->
‰ìze_íd
 = 0;

2988 
	`EVBUFFER_UNLOCK
(
buf„r
);

2990 
	}
}

2994 
	$evbuf„r_cb_su•íd
(
evbuf„r
 *
buf„r
, 
evbuf„r_cb_íåy
 *
cb
)

2996 i‡(!(
cb
->
Êags
 & 
EVBUFFER_CB_SUSPENDED
)) {

2997 
cb
->
size_bef‹e_su•íd
 = 
	`evbuf„r_gë_Àngth
(
buf„r
);

2998 
cb
->
Êags
 |
EVBUFFER_CB_SUSPENDED
;

3000 
	}
}

3003 
	$evbuf„r_cb_unsu•íd
(
evbuf„r
 *
buf„r
, 
evbuf„r_cb_íåy
 *
cb
)

3005 i‡((
cb
->
Êags
 & 
EVBUFFER_CB_SUSPENDED
)) {

3006 
ˇŒ
 = (
cb
->
Êags
 & 
EVBUFFER_CB_CALL_ON_UNSUSPEND
);

3007 
size_t
 
sz
 = 
cb
->
size_bef‹e_su•íd
;

3008 
cb
->
Êags
 &~(
EVBUFFER_CB_SUSPENDED
|

3009 
EVBUFFER_CB_CALL_ON_UNSUSPEND
);

3010 
cb
->
size_bef‹e_su•íd
 = 0;

3011 i‡(
ˇŒ
 && (
cb
->
Êags
 & 
EVBUFFER_CB_ENABLED
)) {

3012 
cb
->
	`cb
(
buf„r
, 
sz
, 
	`evbuf„r_gë_Àngth
(buf„r), cb->
cb¨g
);

3015 
	}
}

3024 
_evbuf„r_ã°ög_u£_£ndfûe
();

3025 
_evbuf„r_ã°ög_u£_mm≠
();

3026 
_evbuf„r_ã°ög_u£_löór_fûe_ac˚ss
();

3029 
	$_evbuf„r_ã°ög_u£_£ndfûe
()

3031 
ok
 = 0;

3032 #ifde‡
USE_SENDFILE


3033 
u£_£ndfûe
 = 1;

3034 
ok
 = 1;

3036 #ifde‡
_EVENT_HAVE_MMAP


3037 
u£_mm≠
 = 0;

3039  
ok
;

3040 
	}
}

3042 
	$_evbuf„r_ã°ög_u£_mm≠
()

3044 
ok
 = 0;

3045 #ifde‡
USE_SENDFILE


3046 
u£_£ndfûe
 = 0;

3048 #ifde‡
_EVENT_HAVE_MMAP


3049 
u£_mm≠
 = 1;

3050 
ok
 = 1;

3052  
ok
;

3053 
	}
}

3055 
	$_evbuf„r_ã°ög_u£_löór_fûe_ac˚ss
()

3057 #ifde‡
USE_SENDFILE


3058 
u£_£ndfûe
 = 0;

3060 #ifde‡
_EVENT_HAVE_MMAP


3061 
u£_mm≠
 = 0;

3064 
	}
}

	@buffer_iocp.c

34 
	~"evít2/buf„r.h
"

35 
	~"evít2/buf„r_com∑t.h
"

36 
	~"evít2/utû.h
"

37 
	~"evít2/thªad.h
"

38 
	~"evít2/evít-c⁄fig.h
"

39 
	~"utû-öã∫Æ.h
"

40 
	~"evthªad-öã∫Æ.h
"

41 
	~"evbuf„r-öã∫Æ.h
"

42 
	~"io˝-öã∫Æ.h
"

43 
	~"mm-öã∫Æ.h
"

45 
	~<wösock2.h
>

46 
	~<wödows.h
>

47 
	~<°dio.h
>

49 
	#MAX_WSABUFS
 16

	)

52 
	sevbuf„r_ovîœµed
 {

53 
evbuf„r
 
	mbuf„r
;

55 
evutû_sockë_t
 
	mfd
;

58 
	mªad_ö_¥ogªss
 : 1;

59 
	mwrôe_ö_¥ogªss
 : 1;

62 
evbuf„r_chaö
 *
	mfú°_pö√d
;

66 
	mn_buf„rs
;

67 
WSABUF
 
	mbuf„rs
[
MAX_WSABUFS
];

72 
ölöe
 
evbuf„r_ovîœµed
 *

73 
	$upˇ°_evbuf„r
(
evbuf„r
 *
buf
)

75 i‡(!
buf
 || !buf->
is_ovîœµed
)

76  
NULL
;

77  
	`EVUTIL_UPCAST
(
buf
, 
evbuf„r_ovîœµed
, 
buf„r
);

78 
	}
}

82 
	$pö_ªÀa£
(
evbuf„r_ovîœµed
 *
eo
, 
Êag
)

84 
i
;

85 
evbuf„r_chaö
 *
√xt
, *
chaö
 = 
eo
->
fú°_pö√d
;

87 
i
 = 0; i < 
eo
->
n_buf„rs
; ++i) {

88 
	`EVUTIL_ASSERT
(
chaö
);

89 
√xt
 = 
chaö
->next;

90 
	`_evbuf„r_chaö_u≈ö
(
chaö
, 
Êag
);

91 
chaö
 = 
√xt
;

93 
	}
}

96 
	$evbuf„r_commô_ªad
(
evbuf„r
 *
evbuf
, 
ev_ssize_t
 
nByãs
)

98 
evbuf„r_ovîœµed
 *
buf
 = 
	`upˇ°_evbuf„r
(
evbuf
);

99 
evbuf„r_chaö
 **
chaöp
;

100 
size_t
 
ªmaöög
, 
Àn
;

101 
i
;

103 
	`EVBUFFER_LOCK
(
evbuf
);

104 
	`EVUTIL_ASSERT
(
buf
->
ªad_ö_¥ogªss
 && !buf->
wrôe_ö_¥ogªss
);

105 
	`EVUTIL_ASSERT
(
nByãs
 >= 0);

107 
	`evbuf„r_un‰ìze
(
evbuf
, 0);

109 
chaöp
 = 
evbuf
->
œ°_wôh_d©≠
;

110 i‡(!((*
chaöp
)->
Êags
 & 
EVBUFFER_MEM_PINNED_R
))

111 
chaöp
 = &(*chaöp)->
√xt
;

112 
ªmaöög
 = 
nByãs
;

113 
i
 = 0; 
ªmaöög
 > 0 && i < ()
buf
->
n_buf„rs
; ++i) {

114 
	`EVUTIL_ASSERT
(*
chaöp
);

115 
Àn
 = 
buf
->
buf„rs
[
i
].len;

116 i‡(
ªmaöög
 < 
Àn
)

117 
Àn
 = 
ªmaöög
;

118 (*
chaöp
)->
off
 +
Àn
;

119 
evbuf
->
œ°_wôh_d©≠
 = 
chaöp
;

120 
ªmaöög
 -
Àn
;

121 
chaöp
 = &(*chaöp)->
√xt
;

124 
	`pö_ªÀa£
(
buf
, 
EVBUFFER_MEM_PINNED_R
);

126 
buf
->
ªad_ö_¥ogªss
 = 0;

128 
evbuf
->
tŸÆ_Àn
 +
nByãs
;

129 
evbuf
->
n_add_f‹_cb
 +
nByãs
;

131 
	`evbuf„r_övoke_ˇŒbacks
(
evbuf
);

133 
	`_evbuf„r_de¸ef_™d_u∆ock
(
evbuf
);

134 
	}
}

137 
	$evbuf„r_commô_wrôe
(
evbuf„r
 *
evbuf
, 
ev_ssize_t
 
nByãs
)

139 
evbuf„r_ovîœµed
 *
buf
 = 
	`upˇ°_evbuf„r
(
evbuf
);

141 
	`EVBUFFER_LOCK
(
evbuf
);

142 
	`EVUTIL_ASSERT
(
buf
->
wrôe_ö_¥ogªss
 && !buf->
ªad_ö_¥ogªss
);

143 
	`evbuf„r_un‰ìze
(
evbuf
, 1);

144 
	`evbuf„r_døö
(
evbuf
, 
nByãs
);

145 
	`pö_ªÀa£
(
buf
,
EVBUFFER_MEM_PINNED_W
);

146 
buf
->
wrôe_ö_¥ogªss
 = 0;

147 
	`_evbuf„r_de¸ef_™d_u∆ock
(
evbuf
);

148 
	}
}

150 
evbuf„r
 *

151 
	$evbuf„r_ovîœµed_√w
(
evutû_sockë_t
 
fd
)

153 
evbuf„r_ovîœµed
 *
evo
;

155 
evo
 = 
	`mm_ˇŒoc
(1, (
evbuf„r_ovîœµed
));

156 i‡(!
evo
)

157  
NULL
;

159 
	`TAILQ_INIT
(&
evo
->
buf„r
.
ˇŒbacks
);

160 
evo
->
buf„r
.
ªf˙t
 = 1;

161 
evo
->
buf„r
.
œ°_wôh_d©≠
 = &evo->buf„r.
fú°
;

163 
evo
->
buf„r
.
is_ovîœµed
 = 1;

164 
evo
->
fd
 = fd;

166  &
evo
->
buf„r
;

167 
	}
}

170 
	$evbuf„r_œunch_wrôe
(
evbuf„r
 *
buf
, 
ev_ssize_t
 
©_mo°
,

171 
evít_ovîœµed
 *
ﬁ
)

173 
evbuf„r_ovîœµed
 *
buf_o
 = 
	`upˇ°_evbuf„r
(
buf
);

174 
r
 = -1;

175 
i
;

176 
evbuf„r_chaö
 *
chaö
;

177 
DWORD
 
byãsSít
;

179 i‡(!
buf
) {

184 
	`EVBUFFER_LOCK
(
buf
);

185 
	`EVUTIL_ASSERT
(!
buf_o
->
ªad_ö_¥ogªss
);

186 i‡(
buf
->
‰ìze_°¨t
 || 
buf_o
->
wrôe_ö_¥ogªss
)

187 
d⁄e
;

188 i‡(!
buf
->
tŸÆ_Àn
) {

190 
r
 = 0;

191 
d⁄e
;

192 } i‡(
©_mo°
 < 0 || (
size_t
Ôt_mo° > 
buf
->
tŸÆ_Àn
) {

193 
©_mo°
 = 
buf
->
tŸÆ_Àn
;

195 
	`evbuf„r_‰ìze
(
buf
, 1);

197 
buf_o
->
fú°_pö√d
 = 
NULL
;

198 
buf_o
->
n_buf„rs
 = 0;

199 
	`mem£t
(
buf_o
->
buf„rs
, 0, (buf_o->buffers));

201 
chaö
 = 
buf_o
->
fú°_pö√d
 = 
buf
->
fú°
;

203 
i
=0; i < 
MAX_WSABUFS
 && 
chaö
; ++i, chaö=chaö->
√xt
) {

204 
WSABUF
 *
b
 = &
buf_o
->
buf„rs
[
i
];

205 
b
->
buf
 = (*)–
chaö
->
buf„r
 + chaö->
mißlign
 );

206 
	`_evbuf„r_chaö_pö
(
chaö
, 
EVBUFFER_MEM_PINNED_W
);

208 i‡((
size_t
)
©_mo°
 > 
chaö
->
off
) {

213 
b
->
Àn
 = ()
chaö
->
off
;

214 
©_mo°
 -
chaö
->
off
;

216 
b
->
Àn
 = ()
©_mo°
;

217 ++
i
;

222 
buf_o
->
n_buf„rs
 = 
i
;

223 
	`_evbuf„r_ö¸ef
(
buf
);

224 i‡(
	`WSASíd
(
buf_o
->
fd
, buf_o->
buf„rs
, 
i
, &
byãsSít
, 0,

225 &
ﬁ
->
ovîœµed
, 
NULL
)) {

226 
îr‹
 = 
	`WSAGëLa°Eº‹
();

227 i‡(
îr‹
 !
WSA_IO_PENDING
) {

229 
	`pö_ªÀa£
(
buf_o
, 
EVBUFFER_MEM_PINNED_W
);

230 
	`evbuf„r_un‰ìze
(
buf
, 1);

231 
	`evbuf„r_‰ì
(
buf
);

232 
d⁄e
;

236 
buf_o
->
wrôe_ö_¥ogªss
 = 1;

237 
r
 = 0;

238 
d⁄e
:

239 
	`EVBUFFER_UNLOCK
(
buf
);

240  
r
;

241 
	}
}

244 
	$evbuf„r_œunch_ªad
(
evbuf„r
 *
buf
, 
size_t
 
©_mo°
,

245 
evít_ovîœµed
 *
ﬁ
)

247 
evbuf„r_ovîœµed
 *
buf_o
 = 
	`upˇ°_evbuf„r
(
buf
);

248 
r
 = -1, 
i
;

249 
nvecs
;

250 
≈ö
=0;

251 
evbuf„r_chaö
 *
chaö
=
NULL
, **
chaöp
;

252 
DWORD
 
byãsRód
;

253 
DWORD
 
Êags
 = 0;

254 
evbuf„r_iovec
 
vecs
[
MAX_WSABUFS
];

256 i‡(!
buf_o
)

258 
	`EVBUFFER_LOCK
(
buf
);

259 
	`EVUTIL_ASSERT
(!
buf_o
->
wrôe_ö_¥ogªss
);

260 i‡(
buf
->
‰ìze_íd
 || 
buf_o
->
ªad_ö_¥ogªss
)

261 
d⁄e
;

263 
buf_o
->
fú°_pö√d
 = 
NULL
;

264 
buf_o
->
n_buf„rs
 = 0;

265 
	`mem£t
(
buf_o
->
buf„rs
, 0, (buf_o->buffers));

267 i‡(
	`_evbuf„r_ex∑nd_Á°
(
buf
, 
©_mo°
, 
MAX_WSABUFS
) == -1)

268 
d⁄e
;

269 
	`evbuf„r_‰ìze
(
buf
, 0);

271 
nvecs
 = 
	`_evbuf„r_ªad_£tup_vecs
(
buf
, 
©_mo°
,

272 
vecs
, 
MAX_WSABUFS
, &
chaöp
, 1);

273 
i
=0;i<
nvecs
;++i) {

274 
	`WSABUF_FROM_EVBUFFER_IOV
(

275 &
buf_o
->
buf„rs
[
i
],

276 &
vecs
[
i
]);

279 
buf_o
->
n_buf„rs
 = 
nvecs
;

280 
buf_o
->
fú°_pö√d
 = 
chaö
 = *
chaöp
;

282 
≈ö
=0;

283  ; 
chaö
; chaö = chaö->
√xt
) {

284 
	`_evbuf„r_chaö_pö
(
chaö
, 
EVBUFFER_MEM_PINNED_R
);

285 ++
≈ö
;

287 
	`EVUTIL_ASSERT
(
≈ö
 =
nvecs
);

289 
	`_evbuf„r_ö¸ef
(
buf
);

290 i‡(
	`WSARecv
(
buf_o
->
fd
, buf_o->
buf„rs
, 
nvecs
, &
byãsRód
, &
Êags
,

291 &
ﬁ
->
ovîœµed
, 
NULL
)) {

292 
îr‹
 = 
	`WSAGëLa°Eº‹
();

293 i‡(
îr‹
 !
WSA_IO_PENDING
) {

295 
	`pö_ªÀa£
(
buf_o
, 
EVBUFFER_MEM_PINNED_R
);

296 
	`evbuf„r_un‰ìze
(
buf
, 0);

297 
	`evbuf„r_‰ì
(
buf
);

298 
d⁄e
;

302 
buf_o
->
ªad_ö_¥ogªss
 = 1;

303 
r
 = 0;

304 
d⁄e
:

305 
	`EVBUFFER_UNLOCK
(
buf
);

306  
r
;

307 
	}
}

309 
evutû_sockë_t


310 
	$_evbuf„r_ovîœµed_gë_fd
(
evbuf„r
 *
buf
)

312 
evbuf„r_ovîœµed
 *
buf_o
 = 
	`upˇ°_evbuf„r
(
buf
);

313  
buf_o
 ? buf_o->
fd
 : -1;

314 
	}
}

317 
	$_evbuf„r_ovîœµed_£t_fd
(
evbuf„r
 *
buf
, 
evutû_sockë_t
 
fd
)

319 
evbuf„r_ovîœµed
 *
buf_o
 = 
	`upˇ°_evbuf„r
(
buf
);

320 
	`EVBUFFER_LOCK
(
buf
);

322 i‡(
buf_o
)

323 
buf_o
->
fd
 = fd;

324 
	`EVBUFFER_UNLOCK
(
buf
);

325 
	}
}

	@bufferevent-internal.h

26 #i‚de‡
_BUFFEREVENT_INTERNAL_H_


27 
	#_BUFFEREVENT_INTERNAL_H_


	)

29 #ifde‡
__˝lu•lus


33 
	~"evít2/evít-c⁄fig.h
"

34 
	~"evít2/utû.h
"

35 
	~"de„r-öã∫Æ.h
"

36 
	~"evthªad-öã∫Æ.h
"

37 
	~"evít2/thªad.h
"

38 
	~"øãlim-öã∫Æ.h
"

39 
	~"evít2/buf„ªvít_°ru˘.h
"

52 
	#BEV_SUSPEND_WM
 0x01

	)

54 
	#BEV_SUSPEND_BW
 0x02

	)

56 
	#BEV_SUSPEND_BW_GROUP
 0x04

	)

59 
	#BEV_SUSPEND_LOOKUP
 0x08

	)

62 
	#BEV_SUSPEND_FILT_READ
 0x10

	)

64 
ev_uöt16_t
 
	tbuf„ªvít_su•íd_Êags
;

66 
	sbuf„ªvít_øã_limô_group
 {

68 
TAILQ_HEAD
(
æim_group_membî_li°
, 
buf„ªvít_¥iv©e
Ë
membîs
;

70 
ev_tokí_buckë
 
øã_limô
;

71 
ev_tokí_buckë_cfg
 
øã_limô_cfg
;

75 
ªad_su•íded
 : 1;

78 
wrôe_su•íded
 : 1;

82 
≥ndög_unsu•íd_ªad
 : 1;

86 
≥ndög_unsu•íd_wrôe
 : 1;

91 
ev_uöt64_t
 
tŸÆ_ªad
;

92 
ev_uöt64_t
 
tŸÆ_wrôãn
;

96 
n_membîs
;

100 
ev_ssize_t
 
mö_sh¨e
;

101 
ev_ssize_t
 
c⁄figuªd_mö_sh¨e
;

105 
evít
 
ma°î_ªfûl_evít
;

109 *
lock
;

113 
	sbuf„ªvít_øã_limô
 {

119 
TAILQ_ENTRY
(
buf„ªvít_¥iv©e
Ë
√xt_ö_group
;

122 
buf„ªvít_øã_limô_group
 *
group
;

125 
ev_tokí_buckë
 
limô
;

128 
ev_tokí_buckë_cfg
 *
cfg
;

132 
evít
 
ªfûl_buckë_evít
;

137 
	sbuf„ªvít_¥iv©e
 {

139 
buf„ªvít
 
bev
;

142 
evbuf„r_cb_íåy
 *
ªad_w©îm¨ks_cb
;

145 
own_lock
 : 1;

149 
ªadcb_≥ndög
 : 1;

152 
wrôecb_≥ndög
 : 1;

154 
c⁄√˘ög
 : 1;

157 
c⁄√˘i⁄_ªfu£d
 : 1;

160 
evítcb_≥ndög
;

165 
buf„ªvít_su•íd_Êags
 
ªad_su•íded
;

170 
buf„ªvít_su•íd_Êags
 
wrôe_su•íded
;

174 
î∫o_≥ndög
;

177 
dns_îr‹
;

180 
de„ºed_cb
 
de„ºed
;

183 
buf„ªvít_›ti⁄s
 
›ti⁄s
;

186 
ªf˙t
;

190 *
lock
;

193 
buf„ªvít_øã_limô
 *
øã_limôög
;

197 
	ebuf„ªvít_˘æ_›
 {

198 
BEV_CTRL_SET_FD
,

199 
BEV_CTRL_GET_FD
,

200 
BEV_CTRL_GET_UNDERLYING
,

201 
BEV_CTRL_CANCEL_ALL


205 
	ubuf„ªvít_˘æ_d©a
 {

206 *
±r
;

207 
evutû_sockë_t
 
fd
;

214 
	sbuf„ªvít_›s
 {

216 c⁄° *
ty≥
;

227 
off_t
 
mem_off£t
;

233 (*
íabÀ
)(
buf„ªvít
 *, );

239 (*
dißbÀ
)(
buf„ªvít
 *, );

244 (*
de°ru˘
)(
buf„ªvít
 *);

247 (*
adj_timeouts
)(
buf„ªvít
 *);

250 (*
Êush
)(
buf„ªvít
 *, , 
buf„ªvít_Êush_mode
);

253 (*
˘æ
)(
buf„ªvít
 *, 
buf„ªvít_˘æ_›
, 
buf„ªvít_˘æ_d©a
 *);

257 c⁄° 
buf„ªvít_›s
 
buf„ªvít_›s_sockë
;

258 c⁄° 
buf„ªvít_›s
 
buf„ªvít_›s_fûãr
;

259 c⁄° 
buf„ªvít_›s
 
buf„ªvít_›s_∑ú
;

261 
	#BEV_IS_SOCKET
(
bevp
Ë((bevp)->
be_›s
 =&
buf„ªvít_›s_sockë
)

	)

262 
	#BEV_IS_FILTER
(
bevp
Ë((bevp)->
be_›s
 =&
buf„ªvít_›s_fûãr
)

	)

263 
	#BEV_IS_PAIR
(
bevp
Ë((bevp)->
be_›s
 =&
buf„ªvít_›s_∑ú
)

	)

265 #ifde‡
WIN32


266 c⁄° 
buf„ªvít_›s
 
buf„ªvít_›s_async
;

267 
	#BEV_IS_ASYNC
(
bevp
Ë((bevp)->
be_›s
 =&
buf„ªvít_›s_async
)

	)

269 
	#BEV_IS_ASYNC
(
bevp
Ë0

	)

273 
buf„ªvít_öô_comm⁄
(
buf„ªvít_¥iv©e
 *, 
evít_ba£
 *, c⁄° 
buf„ªvít_›s
 *, 
buf„ªvít_›ti⁄s
 
›ti⁄s
);

277 
buf„ªvít_su•íd_ªad
(
buf„ªvít
 *
bu„v
, 
buf„ªvít_su•íd_Êags
 
wh©
);

280 
buf„ªvít_unsu•íd_ªad
(
buf„ªvít
 *
bu„v
, 
buf„ªvít_su•íd_Êags
 
wh©
);

284 
buf„ªvít_su•íd_wrôe
(
buf„ªvít
 *
bu„v
, 
buf„ªvít_su•íd_Êags
 
wh©
);

287 
buf„ªvít_unsu•íd_wrôe
(
buf„ªvít
 *
bu„v
, 
buf„ªvít_su•íd_Êags
 
wh©
);

289 
	#buf„ªvít_wm_su•íd_ªad
(
b
) \

290 
	`buf„ªvít_su•íd_ªad
((
b
), 
BEV_SUSPEND_WM
)

	)

291 
	#buf„ªvít_wm_unsu•íd_ªad
(
b
) \

292 
	`buf„ªvít_unsu•íd_ªad
((
b
), 
BEV_SUSPEND_WM
)

	)

306 
buf„ªvít_dißbÀ_h¨d
(
buf„ªvít
 *
bu„v
, 
evít
);

310 
buf„ªvít_íabÀ_lockög
(
buf„ªvít
 *
bu„v
, *
lock
);

312 
buf„ªvít_ö¸ef
(
buf„ªvít
 *
bu„v
);

315 
_buf„ªvít_ö¸ef_™d_lock
(
buf„ªvít
 *
bu„v
);

318 
buf„ªvít_de¸ef
(
buf„ªvít
 *
bu„v
);

321 
_buf„ªvít_de¸ef_™d_u∆ock
(
buf„ªvít
 *
bu„v
);

325 
_buf„ªvít_run_ªadcb
(
buf„ªvít
 *
bu„v
);

328 
_buf„ªvít_run_wrôecb
(
buf„ªvít
 *
bu„v
);

331 
_buf„ªvít_run_evítcb
(
buf„ªvít
 *
bu„v
, 
wh©
);

335 
_buf„ªvít_add_evít
(
evít
 *
ev
, c⁄° 
timevÆ
 *
tv
);

344 
_buf„ªvít_öô_gíîic_timeout_cbs
(
buf„ªvít
 *
bev
);

347 
_buf„ªvít_dñ_gíîic_timeout_cbs
(
buf„ªvít
 *
bev
);

352 
_buf„ªvít_gíîic_adj_timeouts
(
buf„ªvít
 *
bev
);

356 
	#BEV_RESET_GENERIC_READ_TIMEOUT
(
bev
) \

358 i‡(
	`evutû_timîis£t
(&(
bev
)->
timeout_ªad
)) \

359 
	`evít_add
(&(
bev
)->
ev_ªad
, &(bev)->
timeout_ªad
); \

360 } 0)

	)

363 
	#BEV_RESET_GENERIC_WRITE_TIMEOUT
(
bev
) \

365 i‡(
	`evutû_timîis£t
(&(
bev
)->
timeout_wrôe
)) \

366 
	`evít_add
(&(
bev
)->
ev_wrôe
, &(bev)->
timeout_wrôe
); \

367 } 0)

	)

368 
	#BEV_DEL_GENERIC_READ_TIMEOUT
(
bev
) \

369 
	`evít_dñ
(&(
bev
)->
ev_ªad
)

	)

370 
	#BEV_DEL_GENERIC_WRITE_TIMEOUT
(
bev
) \

371 
	`evít_dñ
(&(
bev
)->
ev_wrôe
)

	)

376 
	#BEV_UPCAST
(
b
Ë
	`EVUTIL_UPCAST
((b), 
buf„ªvít_¥iv©e
, 
bev
)

	)

378 #ifde‡
_EVENT_DISABLE_THREAD_SUPPORT


379 
	#BEV_LOCK
(
b
Ë
_EVUTIL_NIL_STMT


	)

380 
	#BEV_UNLOCK
(
b
Ë
_EVUTIL_NIL_STMT


	)

383 
	#BEV_LOCK
(
b
) do { \

384 
buf„ªvít_¥iv©e
 *
lockög
 = 
	`BEV_UPCAST
(
b
); \

385 
	`EVLOCK_LOCK
(
lockög
->
lock
, 0); \

386 } 0)

	)

389 
	#BEV_UNLOCK
(
b
) do { \

390 
buf„ªvít_¥iv©e
 *
lockög
 = 
	`BEV_UPCAST
(
b
); \

391 
	`EVLOCK_UNLOCK
(
lockög
->
lock
, 0); \

392 } 0)

	)

398 
_buf„ªvít_de¸emít_wrôe_buckës
(
buf„ªvít_¥iv©e
 *
bev
,

399 
ev_ssize_t
 
byãs
);

400 
_buf„ªvít_de¸emít_ªad_buckës
(
buf„ªvít_¥iv©e
 *
bev
,

401 
ev_ssize_t
 
byãs
);

402 
ev_ssize_t
 
_buf„ªvít_gë_ªad_max
(
buf„ªvít_¥iv©e
 *
bev
);

403 
ev_ssize_t
 
_buf„ªvít_gë_wrôe_max
(
buf„ªvít_¥iv©e
 *
bev
);

405 #ifde‡
__˝lu•lus


	@bufferevent.c

28 
	~<sys/ty≥s.h
>

30 
	~"evít2/evít-c⁄fig.h
"

32 #ifde‡
_EVENT_HAVE_SYS_TIME_H


33 
	~<sys/time.h
>

36 
	~<î∫o.h
>

37 
	~<°dio.h
>

38 
	~<°dlib.h
>

39 
	~<°rög.h
>

40 #ifde‡
_EVENT_HAVE_STDARG_H


41 
	~<°d¨g.h
>

44 #ifde‡
WIN32


45 
	~<wösock2.h
>

47 
	~<î∫o.h
>

49 
	~"evít2/utû.h
"

50 
	~"evít2/buf„r.h
"

51 
	~"evít2/buf„r_com∑t.h
"

52 
	~"evít2/buf„ªvít.h
"

53 
	~"evít2/buf„ªvít_°ru˘.h
"

54 
	~"evít2/buf„ªvít_com∑t.h
"

55 
	~"evít2/evít.h
"

56 
	~"log-öã∫Æ.h
"

57 
	~"mm-öã∫Æ.h
"

58 
	~"buf„ªvít-öã∫Æ.h
"

59 
	~"evbuf„r-öã∫Æ.h
"

60 
	~"utû-öã∫Æ.h
"

62 
_buf„ªvít_ˇn˚l_Æl
(
buf„ªvít
 *
bev
);

66 
	$buf„ªvít_su•íd_ªad
(
buf„ªvít
 *
bu„v
, 
buf„ªvít_su•íd_Êags
 
wh©
)

68 
buf„ªvít_¥iv©e
 *
bu„v_¥iv©e
 =

69 
	`EVUTIL_UPCAST
(
bu„v
, 
buf„ªvít_¥iv©e
, 
bev
);

70 
	`BEV_LOCK
(
bu„v
);

71 i‡(!
bu„v_¥iv©e
->
ªad_su•íded
)

72 
bu„v
->
be_›s
->
	`dißbÀ
(bu„v, 
EV_READ
);

73 
bu„v_¥iv©e
->
ªad_su•íded
 |
wh©
;

74 
	`BEV_UNLOCK
(
bu„v
);

75 
	}
}

78 
	$buf„ªvít_unsu•íd_ªad
(
buf„ªvít
 *
bu„v
, 
buf„ªvít_su•íd_Êags
 
wh©
)

80 
buf„ªvít_¥iv©e
 *
bu„v_¥iv©e
 =

81 
	`EVUTIL_UPCAST
(
bu„v
, 
buf„ªvít_¥iv©e
, 
bev
);

82 
	`BEV_LOCK
(
bu„v
);

83 
bu„v_¥iv©e
->
ªad_su•íded
 &~
wh©
;

84 i‡(!
bu„v_¥iv©e
->
ªad_su•íded
 && (
bu„v
->
íabÀd
 & 
EV_READ
))

85 
bu„v
->
be_›s
->
	`íabÀ
(bu„v, 
EV_READ
);

86 
	`BEV_UNLOCK
(
bu„v
);

87 
	}
}

90 
	$buf„ªvít_su•íd_wrôe
(
buf„ªvít
 *
bu„v
, 
buf„ªvít_su•íd_Êags
 
wh©
)

92 
buf„ªvít_¥iv©e
 *
bu„v_¥iv©e
 =

93 
	`EVUTIL_UPCAST
(
bu„v
, 
buf„ªvít_¥iv©e
, 
bev
);

94 
	`BEV_LOCK
(
bu„v
);

95 i‡(!
bu„v_¥iv©e
->
wrôe_su•íded
)

96 
bu„v
->
be_›s
->
	`dißbÀ
(bu„v, 
EV_WRITE
);

97 
bu„v_¥iv©e
->
wrôe_su•íded
 |
wh©
;

98 
	`BEV_UNLOCK
(
bu„v
);

99 
	}
}

102 
	$buf„ªvít_unsu•íd_wrôe
(
buf„ªvít
 *
bu„v
, 
buf„ªvít_su•íd_Êags
 
wh©
)

104 
buf„ªvít_¥iv©e
 *
bu„v_¥iv©e
 =

105 
	`EVUTIL_UPCAST
(
bu„v
, 
buf„ªvít_¥iv©e
, 
bev
);

106 
	`BEV_LOCK
(
bu„v
);

107 
bu„v_¥iv©e
->
wrôe_su•íded
 &~
wh©
;

108 i‡(!
bu„v_¥iv©e
->
wrôe_su•íded
 && (
bu„v
->
íabÀd
 & 
EV_WRITE
))

109 
bu„v
->
be_›s
->
	`íabÀ
(bu„v, 
EV_WRITE
);

110 
	`BEV_UNLOCK
(
bu„v
);

111 
	}
}

117 
	$buf„ªvít_öbuf_wm_cb
(
evbuf„r
 *
buf
,

118 c⁄° 
evbuf„r_cb_öfo
 *
cböfo
,

119 *
¨g
)

121 
buf„ªvít
 *
bu„v
 = 
¨g
;

122 
size_t
 
size
;

124 
size
 = 
	`evbuf„r_gë_Àngth
(
buf
);

126 i‡(
size
 >
bu„v
->
wm_ªad
.
high
)

127 
	`buf„ªvít_wm_su•íd_ªad
(
bu„v
);

129 
	`buf„ªvít_wm_unsu•íd_ªad
(
bu„v
);

130 
	}
}

133 
	$buf„ªvít_run_de„ºed_ˇŒbacks_locked
(
de„ºed_cb
 *
_
, *
¨g
)

135 
buf„ªvít_¥iv©e
 *
bu„v_¥iv©e
 = 
¨g
;

136 
buf„ªvít
 *
bu„v
 = &
bu„v_¥iv©e
->
bev
;

138 
	`BEV_LOCK
(
bu„v
);

139 i‡((
bu„v_¥iv©e
->
evítcb_≥ndög
 & 
BEV_EVENT_CONNECTED
) &&

140 
bu„v
->
îr‹cb
) {

143 
bu„v_¥iv©e
->
evítcb_≥ndög
 &~
BEV_EVENT_CONNECTED
;

144 
bu„v
->
	`îr‹cb
(bu„v, 
BEV_EVENT_CONNECTED
, bu„v->
cb¨g
);

146 i‡(
bu„v_¥iv©e
->
ªadcb_≥ndög
 && 
bu„v
->
ªadcb
) {

147 
bu„v_¥iv©e
->
ªadcb_≥ndög
 = 0;

148 
bu„v
->
	`ªadcb
(bu„v, bu„v->
cb¨g
);

150 i‡(
bu„v_¥iv©e
->
wrôecb_≥ndög
 && 
bu„v
->
wrôecb
) {

151 
bu„v_¥iv©e
->
wrôecb_≥ndög
 = 0;

152 
bu„v
->
	`wrôecb
(bu„v, bu„v->
cb¨g
);

154 i‡(
bu„v_¥iv©e
->
evítcb_≥ndög
 && 
bu„v
->
îr‹cb
) {

155 
wh©
 = 
bu„v_¥iv©e
->
evítcb_≥ndög
;

156 
îr
 = 
bu„v_¥iv©e
->
î∫o_≥ndög
;

157 
bu„v_¥iv©e
->
evítcb_≥ndög
 = 0;

158 
bu„v_¥iv©e
->
î∫o_≥ndög
 = 0;

159 
	`EVUTIL_SET_SOCKET_ERROR
(
îr
);

160 
bu„v
->
	`îr‹cb
(bu„v, 
wh©
, bu„v->
cb¨g
);

162 
	`_buf„ªvít_de¸ef_™d_u∆ock
(
bu„v
);

163 
	}
}

166 
	$buf„ªvít_run_de„ºed_ˇŒbacks_u∆ocked
(
de„ºed_cb
 *
_
, *
¨g
)

168 
buf„ªvít_¥iv©e
 *
bu„v_¥iv©e
 = 
¨g
;

169 
buf„ªvít
 *
bu„v
 = &
bu„v_¥iv©e
->
bev
;

171 
	`BEV_LOCK
(
bu„v
);

172 
	#UNLOCKED
(
°mt
) \

173 dÿ{ 
	`BEV_UNLOCK
(
bu„v
); 
°mt
; 
	`BEV_LOCK
(bu„v); } 0)

	)

175 i‡((
bu„v_¥iv©e
->
evítcb_≥ndög
 & 
BEV_EVENT_CONNECTED
) &&

176 
bu„v
->
îr‹cb
) {

179 
buf„ªvít_evít_cb
 
îr‹cb
 = 
bu„v
->errorcb;

180 *
cb¨g
 = 
bu„v
->cbarg;

181 
bu„v_¥iv©e
->
evítcb_≥ndög
 &~
BEV_EVENT_CONNECTED
;

182 
	`UNLOCKED
(
	`îr‹cb
(
bu„v
, 
BEV_EVENT_CONNECTED
, 
cb¨g
));

184 i‡(
bu„v_¥iv©e
->
ªadcb_≥ndög
 && 
bu„v
->
ªadcb
) {

185 
buf„ªvít_d©a_cb
 
ªadcb
 = 
bu„v
->readcb;

186 *
cb¨g
 = 
bu„v
->cbarg;

187 
bu„v_¥iv©e
->
ªadcb_≥ndög
 = 0;

188 
	`UNLOCKED
(
	`ªadcb
(
bu„v
, 
cb¨g
));

190 i‡(
bu„v_¥iv©e
->
wrôecb_≥ndög
 && 
bu„v
->
wrôecb
) {

191 
buf„ªvít_d©a_cb
 
wrôecb
 = 
bu„v
->writecb;

192 *
cb¨g
 = 
bu„v
->cbarg;

193 
bu„v_¥iv©e
->
wrôecb_≥ndög
 = 0;

194 
	`UNLOCKED
(
	`wrôecb
(
bu„v
, 
cb¨g
));

196 i‡(
bu„v_¥iv©e
->
evítcb_≥ndög
 && 
bu„v
->
îr‹cb
) {

197 
buf„ªvít_evít_cb
 
îr‹cb
 = 
bu„v
->errorcb;

198 *
cb¨g
 = 
bu„v
->cbarg;

199 
wh©
 = 
bu„v_¥iv©e
->
evítcb_≥ndög
;

200 
îr
 = 
bu„v_¥iv©e
->
î∫o_≥ndög
;

201 
bu„v_¥iv©e
->
evítcb_≥ndög
 = 0;

202 
bu„v_¥iv©e
->
î∫o_≥ndög
 = 0;

203 
	`EVUTIL_SET_SOCKET_ERROR
(
îr
);

204 
	`UNLOCKED
(
	`îr‹cb
(
bu„v
,
wh©
,
cb¨g
));

206 
	`_buf„ªvít_de¸ef_™d_u∆ock
(
bu„v
);

207 #unde‡
UNLOCKED


208 
	}
}

210 
	#SCHEDULE_DEFERRED
(
bevp
) \

212 
	`buf„ªvít_ö¸ef
(&(
bevp
)->
bev
); \

213 
	`evít_de„ºed_cb_scheduÀ
( \

214 
	`evít_ba£_gë_de„ºed_cb_queue
((
bevp
)->
bev
.
ev_ba£
), \

215 &(
bevp
)->
de„ºed
); \

216 } 0)

	)

220 
	$_buf„ªvít_run_ªadcb
(
buf„ªvít
 *
bu„v
)

223 
buf„ªvít_¥iv©e
 *
p
 =

224 
	`EVUTIL_UPCAST
(
bu„v
, 
buf„ªvít_¥iv©e
, 
bev
);

225 i‡(
bu„v
->
ªadcb
 =
NULL
)

227 i‡(
p
->
›ti⁄s
 & 
BEV_OPT_DEFER_CALLBACKS
) {

228 
p
->
ªadcb_≥ndög
 = 1;

229 i‡(!
p
->
de„ºed
.
queued
)

230 
	`SCHEDULE_DEFERRED
(
p
);

232 
bu„v
->
	`ªadcb
(bu„v, bu„v->
cb¨g
);

234 
	}
}

237 
	$_buf„ªvít_run_wrôecb
(
buf„ªvít
 *
bu„v
)

240 
buf„ªvít_¥iv©e
 *
p
 =

241 
	`EVUTIL_UPCAST
(
bu„v
, 
buf„ªvít_¥iv©e
, 
bev
);

242 i‡(
bu„v
->
wrôecb
 =
NULL
)

244 i‡(
p
->
›ti⁄s
 & 
BEV_OPT_DEFER_CALLBACKS
) {

245 
p
->
wrôecb_≥ndög
 = 1;

246 i‡(!
p
->
de„ºed
.
queued
)

247 
	`SCHEDULE_DEFERRED
(
p
);

249 
bu„v
->
	`wrôecb
(bu„v, bu„v->
cb¨g
);

251 
	}
}

254 
	$_buf„ªvít_run_evítcb
(
buf„ªvít
 *
bu„v
, 
wh©
)

257 
buf„ªvít_¥iv©e
 *
p
 =

258 
	`EVUTIL_UPCAST
(
bu„v
, 
buf„ªvít_¥iv©e
, 
bev
);

259 i‡(
bu„v
->
îr‹cb
 =
NULL
)

261 i‡(
p
->
›ti⁄s
 & 
BEV_OPT_DEFER_CALLBACKS
) {

262 
p
->
evítcb_≥ndög
 |
wh©
;

263 
p
->
î∫o_≥ndög
 = 
	`EVUTIL_SOCKET_ERROR
();

264 i‡(!
p
->
de„ºed
.
queued
)

265 
	`SCHEDULE_DEFERRED
(
p
);

267 
bu„v
->
	`îr‹cb
(bu„v, 
wh©
, bu„v->
cb¨g
);

269 
	}
}

272 
	$buf„ªvít_öô_comm⁄
(
buf„ªvít_¥iv©e
 *
bu„v_¥iv©e
,

273 
evít_ba£
 *
ba£
,

274 c⁄° 
buf„ªvít_›s
 *
›s
,

275 
buf„ªvít_›ti⁄s
 
›ti⁄s
)

277 
buf„ªvít
 *
bu„v
 = &
bu„v_¥iv©e
->
bev
;

279 i‡(!
bu„v
->
öput
) {

280 i‡((
bu„v
->
öput
 = 
	`evbuf„r_√w
()Ë=
NULL
)

284 i‡(!
bu„v
->
ouçut
) {

285 i‡((
bu„v
->
ouçut
 = 
	`evbuf„r_√w
()Ë=
NULL
) {

286 
	`evbuf„r_‰ì
(
bu„v
->
öput
);

291 
bu„v_¥iv©e
->
ªf˙t
 = 1;

292 
bu„v
->
ev_ba£
 = 
ba£
;

295 
	`evutû_timî˛ór
(&
bu„v
->
timeout_ªad
);

296 
	`evutû_timî˛ór
(&
bu„v
->
timeout_wrôe
);

298 
bu„v
->
be_›s
 = 
›s
;

305 
bu„v
->
íabÀd
 = 
EV_WRITE
;

307 #i‚de‡
_EVENT_DISABLE_THREAD_SUPPORT


308 i‡(
›ti⁄s
 & 
BEV_OPT_THREADSAFE
) {

309 i‡(
	`buf„ªvít_íabÀ_lockög
(
bu„v
, 
NULL
) < 0) {

311 
	`evbuf„r_‰ì
(
bu„v
->
öput
);

312 
	`evbuf„r_‰ì
(
bu„v
->
ouçut
);

313 
bu„v
->
öput
 = 
NULL
;

314 
bu„v
->
ouçut
 = 
NULL
;

319 i‡((
›ti⁄s
 & (
BEV_OPT_DEFER_CALLBACKS
|
BEV_OPT_UNLOCK_CALLBACKS
))

320 =
BEV_OPT_UNLOCK_CALLBACKS
) {

321 
	`evít_w¨nx
("UNLOCK_CALLBACKSÑequires DEFER_CALLBACKS");

324 i‡(
›ti⁄s
 & 
BEV_OPT_DEFER_CALLBACKS
) {

325 i‡(
›ti⁄s
 & 
BEV_OPT_UNLOCK_CALLBACKS
)

326 
	`evít_de„ºed_cb_öô
(&
bu„v_¥iv©e
->
de„ºed
,

327 
buf„ªvít_run_de„ºed_ˇŒbacks_u∆ocked
,

328 
bu„v_¥iv©e
);

330 
	`evít_de„ºed_cb_öô
(&
bu„v_¥iv©e
->
de„ºed
,

331 
buf„ªvít_run_de„ºed_ˇŒbacks_locked
,

332 
bu„v_¥iv©e
);

335 
bu„v_¥iv©e
->
›ti⁄s
 = options;

337 
	`evbuf„r_£t_∑ª¡
(
bu„v
->
öput
, bufev);

338 
	`evbuf„r_£t_∑ª¡
(
bu„v
->
ouçut
, bufev);

341 
	}
}

344 
	$buf„ªvít_£tcb
(
buf„ªvít
 *
bu„v
,

345 
buf„ªvít_d©a_cb
 
ªadcb
, buf„ªvít_d©a_cb 
wrôecb
,

346 
buf„ªvít_evít_cb
 
evítcb
, *
cb¨g
)

348 
	`BEV_LOCK
(
bu„v
);

350 
bu„v
->
ªadcb
 =Ñeadcb;

351 
bu„v
->
wrôecb
 = writecb;

352 
bu„v
->
îr‹cb
 = 
evítcb
;

354 
bu„v
->
cb¨g
 = cbarg;

355 
	`BEV_UNLOCK
(
bu„v
);

356 
	}
}

358 
evbuf„r
 *

359 
	$buf„ªvít_gë_öput
(
buf„ªvít
 *
bu„v
)

361  
bu„v
->
öput
;

362 
	}
}

364 
evbuf„r
 *

365 
	$buf„ªvít_gë_ouçut
(
buf„ªvít
 *
bu„v
)

367  
bu„v
->
ouçut
;

368 
	}
}

370 
evít_ba£
 *

371 
	$buf„ªvít_gë_ba£
(
buf„ªvít
 *
bu„v
)

373  
bu„v
->
ev_ba£
;

374 
	}
}

377 
	$buf„ªvít_wrôe
(
buf„ªvít
 *
bu„v
, c⁄° *
d©a
, 
size_t
 
size
)

379 i‡(
	`evbuf„r_add
(
bu„v
->
ouçut
, 
d©a
, 
size
) == -1)

383 
	}
}

386 
	$buf„ªvít_wrôe_buf„r
(
buf„ªvít
 *
bu„v
, 
evbuf„r
 *
buf
)

388 i‡(
	`evbuf„r_add_buf„r
(
bu„v
->
ouçut
, 
buf
) == -1)

392 
	}
}

394 
size_t


395 
	$buf„ªvít_ªad
(
buf„ªvít
 *
bu„v
, *
d©a
, 
size_t
 
size
)

397  (
	`evbuf„r_ªmove
(
bu„v
->
öput
, 
d©a
, 
size
));

398 
	}
}

401 
	$buf„ªvít_ªad_buf„r
(
buf„ªvít
 *
bu„v
, 
evbuf„r
 *
buf
)

403  (
	`evbuf„r_add_buf„r
(
buf
, 
bu„v
->
öput
));

404 
	}
}

407 
	$buf„ªvít_íabÀ
(
buf„ªvít
 *
bu„v
, 
evít
)

409 
buf„ªvít_¥iv©e
 *
bu„v_¥iv©e
 =

410 
	`EVUTIL_UPCAST
(
bu„v
, 
buf„ªvít_¥iv©e
, 
bev
);

411 
im∂_evíts
 = 
evít
;

412 
r
 = 0;

414 
	`_buf„ªvít_ö¸ef_™d_lock
(
bu„v
);

415 i‡(
bu„v_¥iv©e
->
ªad_su•íded
)

416 
im∂_evíts
 &~
EV_READ
;

417 i‡(
bu„v_¥iv©e
->
wrôe_su•íded
)

418 
im∂_evíts
 &~
EV_WRITE
;

420 
bu„v
->
íabÀd
 |
evít
;

422 i‡(
im∂_evíts
 && 
bu„v
->
be_›s
->
	`íabÀ
(bufev, impl_events) < 0)

423 
r
 = -1;

425 
	`_buf„ªvít_de¸ef_™d_u∆ock
(
bu„v
);

426  
r
;

427 
	}
}

430 
	$buf„ªvít_£t_timeouts
(
buf„ªvít
 *
bu„v
,

431 c⁄° 
timevÆ
 *
tv_ªad
,

432 c⁄° 
timevÆ
 *
tv_wrôe
)

434 
r
 = 0;

435 
	`BEV_LOCK
(
bu„v
);

436 i‡(
tv_ªad
) {

437 
bu„v
->
timeout_ªad
 = *
tv_ªad
;

439 
	`evutû_timî˛ór
(&
bu„v
->
timeout_ªad
);

441 i‡(
tv_wrôe
) {

442 
bu„v
->
timeout_wrôe
 = *
tv_wrôe
;

444 
	`evutû_timî˛ór
(&
bu„v
->
timeout_wrôe
);

447 i‡(
bu„v
->
be_›s
->
adj_timeouts
)

448 
r
 = 
bu„v
->
be_›s
->
	`adj_timeouts
(bufev);

449 
	`BEV_UNLOCK
(
bu„v
);

451  
r
;

452 
	}
}

457 
	$buf„ªvít_£âimeout
(
buf„ªvít
 *
bu„v
,

458 
timeout_ªad
, 
timeout_wrôe
)

460 
timevÆ
 
tv_ªad
, 
tv_wrôe
;

461 
timevÆ
 *
±v_ªad
 = 
NULL
, *
±v_wrôe
 = NULL;

463 
	`mem£t
(&
tv_ªad
, 0, (tv_read));

464 
	`mem£t
(&
tv_wrôe
, 0, (tv_write));

466 i‡(
timeout_ªad
) {

467 
tv_ªad
.
tv_£c
 = 
timeout_ªad
;

468 
±v_ªad
 = &
tv_ªad
;

470 i‡(
timeout_wrôe
) {

471 
tv_wrôe
.
tv_£c
 = 
timeout_wrôe
;

472 
±v_wrôe
 = &
tv_wrôe
;

475 
	`buf„ªvít_£t_timeouts
(
bu„v
, 
±v_ªad
, 
±v_wrôe
);

476 
	}
}

480 
	$buf„ªvít_dißbÀ_h¨d
(
buf„ªvít
 *
bu„v
, 
evít
)

482 
r
 = 0;

483 
buf„ªvít_¥iv©e
 *
bu„v_¥iv©e
 =

484 
	`EVUTIL_UPCAST
(
bu„v
, 
buf„ªvít_¥iv©e
, 
bev
);

486 
	`BEV_LOCK
(
bu„v
);

487 
bu„v
->
íabÀd
 &~
evít
;

489 
bu„v_¥iv©e
->
c⁄√˘ög
 = 0;

490 i‡(
bu„v
->
be_›s
->
	`dißbÀ
(bu„v, 
evít
) < 0)

491 
r
 = -1;

493 
	`BEV_UNLOCK
(
bu„v
);

494  
r
;

495 
	}
}

498 
	$buf„ªvít_dißbÀ
(
buf„ªvít
 *
bu„v
, 
evít
)

500 
r
 = 0;

502 
	`BEV_LOCK
(
bu„v
);

503 
bu„v
->
íabÀd
 &~
evít
;

505 i‡(
bu„v
->
be_›s
->
	`dißbÀ
(bu„v, 
evít
) < 0)

506 
r
 = -1;

508 
	`BEV_UNLOCK
(
bu„v
);

509  
r
;

510 
	}
}

517 
	$buf„ªvít_£tw©îm¨k
(
buf„ªvít
 *
bu„v
, 
evíts
,

518 
size_t
 
lowm¨k
, size_à
highm¨k
)

520 
buf„ªvít_¥iv©e
 *
bu„v_¥iv©e
 =

521 
	`EVUTIL_UPCAST
(
bu„v
, 
buf„ªvít_¥iv©e
, 
bev
);

523 
	`BEV_LOCK
(
bu„v
);

524 i‡(
evíts
 & 
EV_WRITE
) {

525 
bu„v
->
wm_wrôe
.
low
 = 
lowm¨k
;

526 
bu„v
->
wm_wrôe
.
high
 = 
highm¨k
;

529 i‡(
evíts
 & 
EV_READ
) {

530 
bu„v
->
wm_ªad
.
low
 = 
lowm¨k
;

531 
bu„v
->
wm_ªad
.
high
 = 
highm¨k
;

533 i‡(
highm¨k
) {

538 i‡(
bu„v_¥iv©e
->
ªad_w©îm¨ks_cb
 =
NULL
) {

539 
bu„v_¥iv©e
->
ªad_w©îm¨ks_cb
 =

540 
	`evbuf„r_add_cb
(
bu„v
->
öput
,

541 
buf„ªvít_öbuf_wm_cb
,

542 
bu„v
);

544 
	`evbuf„r_cb_£t_Êags
(
bu„v
->
öput
,

545 
bu„v_¥iv©e
->
ªad_w©îm¨ks_cb
,

546 
EVBUFFER_CB_ENABLED
|
EVBUFFER_CB_NODEFER
);

548 i‡(
	`evbuf„r_gë_Àngth
(
bu„v
->
öput
Ë> 
highm¨k
)

549 
	`buf„ªvít_wm_su•íd_ªad
(
bu„v
);

550 i‡(
	`evbuf„r_gë_Àngth
(
bu„v
->
öput
Ë< 
highm¨k
)

551 
	`buf„ªvít_wm_unsu•íd_ªad
(
bu„v
);

554 i‡(
bu„v_¥iv©e
->
ªad_w©îm¨ks_cb
)

555 
	`evbuf„r_cb_˛ór_Êags
(
bu„v
->
öput
,

556 
bu„v_¥iv©e
->
ªad_w©îm¨ks_cb
,

557 
EVBUFFER_CB_ENABLED
);

558 
	`buf„ªvít_wm_unsu•íd_ªad
(
bu„v
);

561 
	`BEV_UNLOCK
(
bu„v
);

562 
	}
}

565 
	$buf„ªvít_Êush
(
buf„ªvít
 *
bu„v
,

566 
iŸy≥
,

567 
buf„ªvít_Êush_mode
 
mode
)

569 
r
 = -1;

570 
	`BEV_LOCK
(
bu„v
);

571 i‡(
bu„v
->
be_›s
->
Êush
)

572 
r
 = 
bu„v
->
be_›s
->
	`Êush
(bu„v, 
iŸy≥
, 
mode
);

573 
	`BEV_UNLOCK
(
bu„v
);

574  
r
;

575 
	}
}

578 
	$_buf„ªvít_ö¸ef_™d_lock
(
buf„ªvít
 *
bu„v
)

580 
buf„ªvít_¥iv©e
 *
bu„v_¥iv©e
 =

581 
	`BEV_UPCAST
(
bu„v
);

582 
	`BEV_LOCK
(
bu„v
);

583 ++
bu„v_¥iv©e
->
ªf˙t
;

584 
	}
}

588 
	$_buf„ªvít_å™s„r_lock_ow√rshù
(
buf„ªvít
 *
d⁄‹
,

589 
buf„ªvít
 *
ªcùõ¡
)

591 
buf„ªvít_¥iv©e
 *
d
 = 
	`BEV_UPCAST
(
d⁄‹
);

592 
buf„ªvít_¥iv©e
 *
r
 = 
	`BEV_UPCAST
(
ªcùõ¡
);

593 i‡(
d
->
lock
 !
r
->lock)

595 i‡(
r
->
own_lock
)

597 i‡(
d
->
own_lock
) {

598 
d
->
own_lock
 = 0;

599 
r
->
own_lock
 = 1;

601 
	}
}

605 
	$_buf„ªvít_de¸ef_™d_u∆ock
(
buf„ªvít
 *
bu„v
)

607 
buf„ªvít_¥iv©e
 *
bu„v_¥iv©e
 =

608 
	`EVUTIL_UPCAST
(
bu„v
, 
buf„ªvít_¥iv©e
, 
bev
);

609 
buf„ªvít
 *
undîlyög
;

611 
	`EVUTIL_ASSERT
(
bu„v_¥iv©e
->
ªf˙t
 > 0);

613 i‡(--
bu„v_¥iv©e
->
ªf˙t
) {

614 
	`BEV_UNLOCK
(
bu„v
);

618 
undîlyög
 = 
	`buf„ªvít_gë_undîlyög
(
bu„v
);

621 i‡(
bu„v
->
be_›s
->
de°ru˘
)

622 
bu„v
->
be_›s
->
	`de°ru˘
(bufev);

628 
	`evbuf„r_‰ì
(
bu„v
->
öput
);

629 
	`evbuf„r_‰ì
(
bu„v
->
ouçut
);

631 i‡(
bu„v_¥iv©e
->
øã_limôög
) {

632 i‡(
bu„v_¥iv©e
->
øã_limôög
->
group
)

633 
	`buf„ªvít_ªmove_‰om_øã_limô_group_öã∫Æ
(
bu„v
,0);

634 i‡(
	`evít_öôülized
(&
bu„v_¥iv©e
->
øã_limôög
->
ªfûl_buckë_evít
))

635 
	`evít_dñ
(&
bu„v_¥iv©e
->
øã_limôög
->
ªfûl_buckë_evít
);

636 
	`evít_debug_u«ssign
(&
bu„v_¥iv©e
->
øã_limôög
->
ªfûl_buckë_evít
);

637 
	`mm_‰ì
(
bu„v_¥iv©e
->
øã_limôög
);

638 
bu„v_¥iv©e
->
øã_limôög
 = 
NULL
;

641 
	`evít_debug_u«ssign
(&
bu„v
->
ev_ªad
);

642 
	`evít_debug_u«ssign
(&
bu„v
->
ev_wrôe
);

644 
	`BEV_UNLOCK
(
bu„v
);

645 i‡(
bu„v_¥iv©e
->
own_lock
)

646 
	`EVTHREAD_FREE_LOCK
(
bu„v_¥iv©e
->
lock
,

647 
EVTHREAD_LOCKTYPE_RECURSIVE
);

650 
	`mm_‰ì
(((*)
bu„v
Ë- bu„v->
be_›s
->
mem_off£t
);

662 i‡(
undîlyög
)

663 
	`buf„ªvít_de¸ef
(
undîlyög
);

666 
	}
}

669 
	$buf„ªvít_de¸ef
(
buf„ªvít
 *
bu„v
)

671 
	`BEV_LOCK
(
bu„v
);

672  
	`_buf„ªvít_de¸ef_™d_u∆ock
(
bu„v
);

673 
	}
}

676 
	$buf„ªvít_‰ì
(
buf„ªvít
 *
bu„v
)

678 
	`BEV_LOCK
(
bu„v
);

679 
	`buf„ªvít_£tcb
(
bu„v
, 
NULL
, NULL, NULL, NULL);

680 
	`_buf„ªvít_ˇn˚l_Æl
(
bu„v
);

681 
	`_buf„ªvít_de¸ef_™d_u∆ock
(
bu„v
);

682 
	}
}

685 
	$buf„ªvít_ö¸ef
(
buf„ªvít
 *
bu„v
)

687 
buf„ªvít_¥iv©e
 *
bu„v_¥iv©e
 =

688 
	`EVUTIL_UPCAST
(
bu„v
, 
buf„ªvít_¥iv©e
, 
bev
);

690 
	`BEV_LOCK
(
bu„v
);

691 ++
bu„v_¥iv©e
->
ªf˙t
;

692 
	`BEV_UNLOCK
(
bu„v
);

693 
	}
}

696 
	$buf„ªvít_íabÀ_lockög
(
buf„ªvít
 *
bu„v
, *
lock
)

698 #ifde‡
_EVENT_DISABLE_THREAD_SUPPORT


701 
buf„ªvít
 *
undîlyög
;

703 i‡(
	`BEV_UPCAST
(
bu„v
)->
lock
)

705 
undîlyög
 = 
	`buf„ªvít_gë_undîlyög
(
bu„v
);

707 i‡(!
lock
 && 
undîlyög
 && 
	`BEV_UPCAST
(underlying)->lock) {

708 
lock
 = 
	`BEV_UPCAST
(
undîlyög
)->lock;

709 
	`BEV_UPCAST
(
bu„v
)->
lock
 =Üock;

710 
	`BEV_UPCAST
(
bu„v
)->
own_lock
 = 0;

711 } i‡(!
lock
) {

712 
	`EVTHREAD_ALLOC_LOCK
(
lock
, 
EVTHREAD_LOCKTYPE_RECURSIVE
);

713 i‡(!
lock
)

715 
	`BEV_UPCAST
(
bu„v
)->
lock
 =Üock;

716 
	`BEV_UPCAST
(
bu„v
)->
own_lock
 = 1;

718 
	`BEV_UPCAST
(
bu„v
)->
lock
 =Üock;

719 
	`BEV_UPCAST
(
bu„v
)->
own_lock
 = 0;

721 
	`evbuf„r_íabÀ_lockög
(
bu„v
->
öput
, 
lock
);

722 
	`evbuf„r_íabÀ_lockög
(
bu„v
->
ouçut
, 
lock
);

724 i‡(
undîlyög
 && !
	`BEV_UPCAST
(undîlyög)->
lock
)

725 
	`buf„ªvít_íabÀ_lockög
(
undîlyög
, 
lock
);

729 
	}
}

732 
	$buf„ªvít_£tfd
(
buf„ªvít
 *
bev
, 
evutû_sockë_t
 
fd
)

734 
buf„ªvít_˘æ_d©a
 
d
;

735 
ªs
 = -1;

736 
d
.
fd
 = fd;

737 
	`BEV_LOCK
(
bev
);

738 i‡(
bev
->
be_›s
->
˘æ
)

739 
ªs
 = 
bev
->
be_›s
->
	`˘æ
(bev, 
BEV_CTRL_SET_FD
, &
d
);

740 
	`BEV_UNLOCK
(
bev
);

741  
ªs
;

742 
	}
}

744 
evutû_sockë_t


745 
	$buf„ªvít_gëfd
(
buf„ªvít
 *
bev
)

747 
buf„ªvít_˘æ_d©a
 
d
;

748 
ªs
 = -1;

749 
d
.
fd
 = -1;

750 
	`BEV_LOCK
(
bev
);

751 i‡(
bev
->
be_›s
->
˘æ
)

752 
ªs
 = 
bev
->
be_›s
->
	`˘æ
(bev, 
BEV_CTRL_GET_FD
, &
d
);

753 
	`BEV_UNLOCK
(
bev
);

754  (
ªs
<0Ë? -1 : 
d
.
fd
;

755 
	}
}

758 
	$_buf„ªvít_ˇn˚l_Æl
(
buf„ªvít
 *
bev
)

760 
buf„ªvít_˘æ_d©a
 
d
;

761 
	`mem£t
(&
d
, 0, (d));

762 
	`BEV_LOCK
(
bev
);

763 i‡(
bev
->
be_›s
->
˘æ
)

764 
bev
->
be_›s
->
	`˘æ
(bev, 
BEV_CTRL_CANCEL_ALL
, &
d
);

765 
	`BEV_UNLOCK
(
bev
);

766 
	}
}

769 
	$buf„ªvít_gë_íabÀd
(
buf„ªvít
 *
bu„v
)

771 
r
;

772 
	`BEV_LOCK
(
bu„v
);

773 
r
 = 
bu„v
->
íabÀd
;

774 
	`BEV_UNLOCK
(
bu„v
);

775  
r
;

776 
	}
}

778 
buf„ªvít
 *

779 
	$buf„ªvít_gë_undîlyög
(
buf„ªvít
 *
bev
)

781 
buf„ªvít_˘æ_d©a
 
d
;

782 
ªs
 = -1;

783 
d
.
±r
 = 
NULL
;

784 
	`BEV_LOCK
(
bev
);

785 i‡(
bev
->
be_›s
->
˘æ
)

786 
ªs
 = 
bev
->
be_›s
->
	`˘æ
(bev, 
BEV_CTRL_GET_UNDERLYING
, &
d
);

787 
	`BEV_UNLOCK
(
bev
);

788  (
ªs
<0Ë? 
NULL
 : 
d
.
±r
;

789 
	}
}

792 
	$buf„ªvít_gíîic_ªad_timeout_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
˘x
)

794 
buf„ªvít
 *
bev
 = 
˘x
;

795 
	`_buf„ªvít_ö¸ef_™d_lock
(
bev
);

796 
	`buf„ªvít_dißbÀ
(
bev
, 
EV_READ
);

797 
	`_buf„ªvít_run_evítcb
(
bev
, 
BEV_EVENT_TIMEOUT
|
BEV_EVENT_READING
);

798 
	`_buf„ªvít_de¸ef_™d_u∆ock
(
bev
);

799 
	}
}

801 
	$buf„ªvít_gíîic_wrôe_timeout_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
˘x
)

803 
buf„ªvít
 *
bev
 = 
˘x
;

804 
	`_buf„ªvít_ö¸ef_™d_lock
(
bev
);

805 
	`buf„ªvít_dißbÀ
(
bev
, 
EV_WRITE
);

806 
	`_buf„ªvít_run_evítcb
(
bev
, 
BEV_EVENT_TIMEOUT
|
BEV_EVENT_WRITING
);

807 
	`_buf„ªvít_de¸ef_™d_u∆ock
(
bev
);

808 
	}
}

811 
	$_buf„ªvít_öô_gíîic_timeout_cbs
(
buf„ªvít
 *
bev
)

813 
	`evtimî_assign
(&
bev
->
ev_ªad
, bev->
ev_ba£
,

814 
buf„ªvít_gíîic_ªad_timeout_cb
, 
bev
);

815 
	`evtimî_assign
(&
bev
->
ev_wrôe
, bev->
ev_ba£
,

816 
buf„ªvít_gíîic_wrôe_timeout_cb
, 
bev
);

817 
	}
}

820 
	$_buf„ªvít_dñ_gíîic_timeout_cbs
(
buf„ªvít
 *
bev
)

822 
r1
,
r2
;

823 
r1
 = 
	`evít_dñ
(&
bev
->
ev_ªad
);

824 
r2
 = 
	`evít_dñ
(&
bev
->
ev_wrôe
);

825 i‡(
r1
<0 || 
r2
<0)

828 
	}
}

831 
	$_buf„ªvít_gíîic_adj_timeouts
(
buf„ªvít
 *
bev
)

833 c⁄° 
íabÀd
 = 
bev
->enabled;

834 
buf„ªvít_¥iv©e
 *
bev_p
 =

835 
	`EVUTIL_UPCAST
(
bev
, 
buf„ªvít_¥iv©e
, bev);

836 
r1
=0, 
r2
=0;

837 i‡((
íabÀd
 & 
EV_READ
Ë&& !
bev_p
->
ªad_su•íded
 &&

838 
	`evutû_timîis£t
(&
bev
->
timeout_ªad
))

839 
r1
 = 
	`evít_add
(&
bev
->
ev_ªad
, &bev->
timeout_ªad
);

841 
r1
 = 
	`evít_dñ
(&
bev
->
ev_ªad
);

843 i‡((
íabÀd
 & 
EV_WRITE
Ë&& !
bev_p
->
wrôe_su•íded
 &&

844 
	`evutû_timîis£t
(&
bev
->
timeout_wrôe
) &&

845 
	`evbuf„r_gë_Àngth
(
bev
->
ouçut
))

846 
r2
 = 
	`evít_add
(&
bev
->
ev_wrôe
, &bev->
timeout_wrôe
);

848 
r2
 = 
	`evít_dñ
(&
bev
->
ev_wrôe
);

849 i‡(
r1
 < 0 || 
r2
 < 0)

852 
	}
}

855 
	$_buf„ªvít_add_evít
(
evít
 *
ev
, c⁄° 
timevÆ
 *
tv
)

857 i‡(
tv
->
tv_£c
 =0 &&Åv->
tv_u£c
 == 0)

858  
	`evít_add
(
ev
, 
NULL
);

860  
	`evít_add
(
ev
, 
tv
);

861 
	}
}

866 
	$buf„ªvít_lock
(
buf„ªvít
 *
bev
)

868 
	`_buf„ªvít_ö¸ef_™d_lock
(
bev
);

869 
	}
}

872 
	$buf„ªvít_u∆ock
(
buf„ªvít
 *
bev
)

874 
	`_buf„ªvít_de¸ef_™d_u∆ock
(
bev
);

875 
	}
}

	@bufferevent_async.c

29 
	~"evít2/evít-c⁄fig.h
"

31 #ifde‡
_EVENT_HAVE_SYS_TIME_H


32 
	~<sys/time.h
>

35 
	~<î∫o.h
>

36 
	~<°dio.h
>

37 
	~<°dlib.h
>

38 
	~<°rög.h
>

39 #ifde‡
_EVENT_HAVE_STDARG_H


40 
	~<°d¨g.h
>

42 #ifde‡
_EVENT_HAVE_UNISTD_H


43 
	~<uni°d.h
>

46 #ifde‡
WIN32


47 
	~<wösock2.h
>

48 
	~<ws2t˝ù.h
>

51 
	~<sys/queue.h
>

53 
	~"evít2/utû.h
"

54 
	~"evít2/buf„ªvít.h
"

55 
	~"evít2/buf„r.h
"

56 
	~"evít2/buf„ªvít_°ru˘.h
"

57 
	~"evít2/evít.h
"

58 
	~"evít2/utû.h
"

59 
	~"evít-öã∫Æ.h
"

60 
	~"log-öã∫Æ.h
"

61 
	~"mm-öã∫Æ.h
"

62 
	~"buf„ªvít-öã∫Æ.h
"

63 
	~"utû-öã∫Æ.h
"

64 
	~"io˝-öã∫Æ.h
"

66 #i‚de‡
SO_UPDATE_CONNECT_CONTEXT


68 
	#SO_UPDATE_CONNECT_CONTEXT
 0x7010

	)

72 
be_async_íabÀ
(
buf„ªvít
 *, );

73 
be_async_dißbÀ
(
buf„ªvít
 *, );

74 
be_async_de°ru˘
(
buf„ªvít
 *);

75 
be_async_Êush
(
buf„ªvít
 *, , 
buf„ªvít_Êush_mode
);

76 
be_async_˘æ
(
buf„ªvít
 *, 
buf„ªvít_˘æ_›
, 
buf„ªvít_˘æ_d©a
 *);

78 
	sbuf„ªvít_async
 {

79 
buf„ªvít_¥iv©e
 
	mbev
;

80 
evít_ovîœµed
 
	mc⁄√˘_ovîœµed
;

81 
evít_ovîœµed
 
	mªad_ovîœµed
;

82 
evít_ovîœµed
 
	mwrôe_ovîœµed
;

83 
size_t
 
	mªad_ö_¥ogªss
;

84 
size_t
 
	mwrôe_ö_¥ogªss
;

85 
	mok
 : 1;

86 
	mªad_added
 : 1;

87 
	mwrôe_added
 : 1;

90 c⁄° 
buf„ªvít_›s
 
	gbuf„ªvít_›s_async
 = {

92 
evutû_off£tof
(
buf„ªvít_async
, 
bev
.bev),

93 
be_async_íabÀ
,

94 
be_async_dißbÀ
,

95 
be_async_de°ru˘
,

96 
_buf„ªvít_gíîic_adj_timeouts
,

97 
be_async_Êush
,

98 
be_async_˘æ
,

101 
ölöe
 
buf„ªvít_async
 *

102 
	$upˇ°
(
buf„ªvít
 *
bev
)

104 
buf„ªvít_async
 *
bev_a
;

105 i‡(
bev
->
be_›s
 !&
buf„ªvít_›s_async
)

106  
NULL
;

107 
bev_a
 = 
	`EVUTIL_UPCAST
(
bev
, 
buf„ªvít_async
, bev.bev);

108  
bev_a
;

109 
	}
}

111 
ölöe
 
buf„ªvít_async
 *

112 
	$upˇ°_c⁄√˘
(
evít_ovîœµed
 *
eo
)

114 
buf„ªvít_async
 *
bev_a
;

115 
bev_a
 = 
	`EVUTIL_UPCAST
(
eo
, 
buf„ªvít_async
, 
c⁄√˘_ovîœµed
);

116 
	`EVUTIL_ASSERT
(
	`BEV_IS_ASYNC
(&
bev_a
->
bev
.bev));

117  
bev_a
;

118 
	}
}

120 
ölöe
 
buf„ªvít_async
 *

121 
	$upˇ°_ªad
(
evít_ovîœµed
 *
eo
)

123 
buf„ªvít_async
 *
bev_a
;

124 
bev_a
 = 
	`EVUTIL_UPCAST
(
eo
, 
buf„ªvít_async
, 
ªad_ovîœµed
);

125 
	`EVUTIL_ASSERT
(
	`BEV_IS_ASYNC
(&
bev_a
->
bev
.bev));

126  
bev_a
;

127 
	}
}

129 
ölöe
 
buf„ªvít_async
 *

130 
	$upˇ°_wrôe
(
evít_ovîœµed
 *
eo
)

132 
buf„ªvít_async
 *
bev_a
;

133 
bev_a
 = 
	`EVUTIL_UPCAST
(
eo
, 
buf„ªvít_async
, 
wrôe_ovîœµed
);

134 
	`EVUTIL_ASSERT
(
	`BEV_IS_ASYNC
(&
bev_a
->
bev
.bev));

135  
bev_a
;

136 
	}
}

139 
	$bev_async_dñ_wrôe
(
buf„ªvít_async
 *
beva
)

141 
buf„ªvít
 *
bev
 = &
beva
->bev.bev;

143 i‡(
beva
->
wrôe_added
) {

144 
beva
->
wrôe_added
 = 0;

145 
	`evít_ba£_dñ_vútuÆ
(
bev
->
ev_ba£
);

147 
	}
}

150 
	$bev_async_dñ_ªad
(
buf„ªvít_async
 *
beva
)

152 
buf„ªvít
 *
bev
 = &
beva
->bev.bev;

154 i‡(
beva
->
ªad_added
) {

155 
beva
->
ªad_added
 = 0;

156 
	`evít_ba£_dñ_vútuÆ
(
bev
->
ev_ba£
);

158 
	}
}

161 
	$bev_async_add_wrôe
(
buf„ªvít_async
 *
beva
)

163 
buf„ªvít
 *
bev
 = &
beva
->bev.bev;

165 i‡(!
beva
->
wrôe_added
) {

166 
beva
->
wrôe_added
 = 1;

167 
	`evít_ba£_add_vútuÆ
(
bev
->
ev_ba£
);

169 
	}
}

172 
	$bev_async_add_ªad
(
buf„ªvít_async
 *
beva
)

174 
buf„ªvít
 *
bev
 = &
beva
->bev.bev;

176 i‡(!
beva
->
ªad_added
) {

177 
beva
->
ªad_added
 = 1;

178 
	`evít_ba£_add_vútuÆ
(
bev
->
ev_ba£
);

180 
	}
}

183 
	$bev_async_c⁄sidî_wrôög
(
buf„ªvít_async
 *
beva
)

185 
size_t
 
©_mo°
;

186 
limô
;

187 
buf„ªvít
 *
bev
 = &
beva
->bev.bev;

191 i‡(
beva
->
wrôe_ö_¥ogªss
 || beva->
bev
.
c⁄√˘ög
)

193 i‡(!
beva
->
ok
 || !(
bev
->
íabÀd
&
EV_WRITE
) ||

194 !
	`evbuf„r_gë_Àngth
(
bev
->
ouçut
)) {

195 
	`bev_async_dñ_wrôe
(
beva
);

199 
©_mo°
 = 
	`evbuf„r_gë_Àngth
(
bev
->
ouçut
);

203 
limô
 = ()
	`_buf„ªvít_gë_wrôe_max
(&
beva
->
bev
);

204 i‡(
©_mo°
 >(
size_t
)
limô
 &&Üimit >= 0)

205 
©_mo°
 = 
limô
;

207 i‡(
beva
->
bev
.
wrôe_su•íded
) {

208 
	`bev_async_dñ_wrôe
(
beva
);

213 
	`buf„ªvít_ö¸ef
(
bev
);

214 i‡(
	`evbuf„r_œunch_wrôe
(
bev
->
ouçut
, 
©_mo°
,

215 &
beva
->
wrôe_ovîœµed
)) {

216 
	`buf„ªvít_de¸ef
(
bev
);

217 
beva
->
ok
 = 0;

218 
	`_buf„ªvít_run_evítcb
(
bev
, 
BEV_EVENT_ERROR
);

220 
beva
->
wrôe_ö_¥ogªss
 = 
©_mo°
;

221 
	`_buf„ªvít_de¸emít_wrôe_buckës
(&
beva
->
bev
, 
©_mo°
);

222 
	`bev_async_add_wrôe
(
beva
);

224 
	}
}

227 
	$bev_async_c⁄sidî_ªadög
(
buf„ªvít_async
 *
beva
)

229 
size_t
 
cur_size
;

230 
size_t
 
ªad_high
;

231 
size_t
 
©_mo°
;

232 
limô
;

233 
buf„ªvít
 *
bev
 = &
beva
->bev.bev;

237 i‡(
beva
->
ªad_ö_¥ogªss
 || beva->
bev
.
c⁄√˘ög
)

239 i‡(!
beva
->
ok
 || !(
bev
->
íabÀd
&
EV_READ
)) {

240 
	`bev_async_dñ_ªad
(
beva
);

245 
cur_size
 = 
	`evbuf„r_gë_Àngth
(
bev
->
öput
);

246 
ªad_high
 = 
bev
->
wm_ªad
.
high
;

247 i‡(
ªad_high
) {

248 i‡(
cur_size
 >
ªad_high
) {

249 
	`bev_async_dñ_ªad
(
beva
);

252 
©_mo°
 = 
ªad_high
 - 
cur_size
;

254 
©_mo°
 = 16384;

259 
limô
 = ()
	`_buf„ªvít_gë_ªad_max
(&
beva
->
bev
);

260 i‡(
©_mo°
 >(
size_t
)
limô
 &&Üimit >= 0)

261 
©_mo°
 = 
limô
;

263 i‡(
beva
->
bev
.
ªad_su•íded
) {

264 
	`bev_async_dñ_ªad
(
beva
);

268 
	`buf„ªvít_ö¸ef
(
bev
);

269 i‡(
	`evbuf„r_œunch_ªad
(
bev
->
öput
, 
©_mo°
, &
beva
->
ªad_ovîœµed
)) {

270 
beva
->
ok
 = 0;

271 
	`_buf„ªvít_run_evítcb
(
bev
, 
BEV_EVENT_ERROR
);

272 
	`buf„ªvít_de¸ef
(
bev
);

274 
beva
->
ªad_ö_¥ogªss
 = 
©_mo°
;

275 
	`_buf„ªvít_de¸emít_ªad_buckës
(&
beva
->
bev
, 
©_mo°
);

276 
	`bev_async_add_ªad
(
beva
);

280 
	}
}

283 
	$be_async_outbuf_ˇŒback
(
evbuf„r
 *
buf
,

284 c⁄° 
evbuf„r_cb_öfo
 *
cböfo
,

285 *
¨g
)

287 
buf„ªvít
 *
bev
 = 
¨g
;

288 
buf„ªvít_async
 *
bev_async
 = 
	`upˇ°
(
bev
);

293 
	`_buf„ªvít_ö¸ef_™d_lock
(
bev
);

295 i‡(
cböfo
->
n_added
)

296 
	`bev_async_c⁄sidî_wrôög
(
bev_async
);

298 
	`_buf„ªvít_de¸ef_™d_u∆ock
(
bev
);

299 
	}
}

302 
	$be_async_öbuf_ˇŒback
(
evbuf„r
 *
buf
,

303 c⁄° 
evbuf„r_cb_öfo
 *
cböfo
,

304 *
¨g
)

306 
buf„ªvít
 *
bev
 = 
¨g
;

307 
buf„ªvít_async
 *
bev_async
 = 
	`upˇ°
(
bev
);

312 
	`_buf„ªvít_ö¸ef_™d_lock
(
bev
);

314 i‡(
cböfo
->
n_dñëed
)

315 
	`bev_async_c⁄sidî_ªadög
(
bev_async
);

317 
	`_buf„ªvít_de¸ef_™d_u∆ock
(
bev
);

318 
	}
}

321 
	$be_async_íabÀ
(
buf„ªvít
 *
buf
, 
wh©
)

323 
buf„ªvít_async
 *
bev_async
 = 
	`upˇ°
(
buf
);

325 i‡(!
bev_async
->
ok
)

328 i‡(
bev_async
->
bev
.
c⁄√˘ög
) {

333 i‡(
wh©
 & 
EV_READ
)

334 
	`BEV_RESET_GENERIC_READ_TIMEOUT
(
buf
);

335 i‡(
wh©
 & 
EV_WRITE
)

336 
	`BEV_RESET_GENERIC_WRITE_TIMEOUT
(
buf
);

341 i‡(
wh©
 & 
EV_READ
)

342 
	`bev_async_c⁄sidî_ªadög
(
bev_async
);

343 i‡(
wh©
 & 
EV_WRITE
)

344 
	`bev_async_c⁄sidî_wrôög
(
bev_async
);

346 
	}
}

349 
	$be_async_dißbÀ
(
buf„ªvít
 *
bev
, 
wh©
)

351 
buf„ªvít_async
 *
bev_async
 = 
	`upˇ°
(
bev
);

356 i‡(
wh©
 & 
EV_READ
) {

357 
	`BEV_DEL_GENERIC_READ_TIMEOUT
(
bev
);

358 
	`bev_async_dñ_ªad
(
bev_async
);

360 i‡(
wh©
 & 
EV_WRITE
) {

361 
	`BEV_DEL_GENERIC_WRITE_TIMEOUT
(
bev
);

362 
	`bev_async_dñ_wrôe
(
bev_async
);

366 
	}
}

369 
	$be_async_de°ru˘
(
buf„ªvít
 *
bev
)

371 
buf„ªvít_async
 *
bev_async
 = 
	`upˇ°
(
bev
);

372 
buf„ªvít_¥iv©e
 *
bev_p
 = 
	`BEV_UPCAST
(
bev
);

373 
evutû_sockë_t
 
fd
;

375 
	`EVUTIL_ASSERT
(!
	`upˇ°
(
bev
)->
wrôe_ö_¥ogªss
 &&

376 !
	`upˇ°
(
bev
)->
ªad_ö_¥ogªss
);

378 
	`bev_async_dñ_ªad
(
bev_async
);

379 
	`bev_async_dñ_wrôe
(
bev_async
);

381 
fd
 = 
	`_evbuf„r_ovîœµed_gë_fd
(
bev
->
öput
);

382 i‡(
bev_p
->
›ti⁄s
 & 
BEV_OPT_CLOSE_ON_FREE
) {

384 
	`evutû_˛o£sockë
(
fd
);

387 i‡(
	`evít_öôülized
(&
bev
->
ev_wrôe
)) {

388 
	`evít_dñ
(&
bev
->
ev_wrôe
);

389 
	`_buf„ªvít_dñ_gíîic_timeout_cbs
(
bev
);

391 
	}
}

396 
	$bev_async_£t_wß_îr‹
(
buf„ªvít
 *
bev
, 
evít_ovîœµed
 *
eo
)

398 
DWORD
 
byãs
, 
Êags
;

399 
evutû_sockë_t
 
fd
;

401 
fd
 = 
	`_evbuf„r_ovîœµed_gë_fd
(
bev
->
öput
);

402 
	`WSAGëOvîœµedResu…
(
fd
, &
eo
->
ovîœµed
, &
byãs
, 
FALSE
, &
Êags
);

403 
	}
}

406 
	$be_async_Êush
(
buf„ªvít
 *
bev
, 
wh©
,

407 
buf„ªvít_Êush_mode
 
mode
)

410 
	}
}

413 
	$c⁄√˘_com∂ëe
(
evít_ovîœµed
 *
eo
, 
ev_uöçå_t
 
key
,

414 
ev_ssize_t
 
nbyãs
, 
ok
)

416 
buf„ªvít_async
 *
bev_a
 = 
	`upˇ°_c⁄√˘
(
eo
);

417 
buf„ªvít
 *
bev
 = &
bev_a
->bev.bev;

418 
evutû_sockë_t
 
sock
;

420 
	`BEV_LOCK
(
bev
);

422 
	`EVUTIL_ASSERT
(
bev_a
->
bev
.
c⁄√˘ög
);

423 
bev_a
->
bev
.
c⁄√˘ög
 = 0;

424 
sock
 = 
	`_evbuf„r_ovîœµed_gë_fd
(
bev_a
->
bev
.bev.
öput
);

426 
	`£tsock›t
(
sock
, 
SOL_SOCKET
, 
SO_UPDATE_CONNECT_CONTEXT
, 
NULL
, 0);

428 i‡(
ok
)

429 
	`buf„ªvít_async_£t_c⁄√˘ed
(
bev
);

431 
	`bev_async_£t_wß_îr‹
(
bev
, 
eo
);

433 
	`_buf„ªvít_run_evítcb
(
bev
,

434 
ok
? 
BEV_EVENT_CONNECTED
 : 
BEV_EVENT_ERROR
);

436 
	`evít_ba£_dñ_vútuÆ
(
bev
->
ev_ba£
);

438 
	`_buf„ªvít_de¸ef_™d_u∆ock
(
bev
);

439 
	}
}

442 
	$ªad_com∂ëe
(
evít_ovîœµed
 *
eo
, 
ev_uöçå_t
 
key
,

443 
ev_ssize_t
 
nbyãs
, 
ok
)

445 
buf„ªvít_async
 *
bev_a
 = 
	`upˇ°_ªad
(
eo
);

446 
buf„ªvít
 *
bev
 = &
bev_a
->bev.bev;

447 
wh©
 = 
BEV_EVENT_READING
;

448 
ev_ssize_t
 
amou¡_uƒód
;

449 
	`BEV_LOCK
(
bev
);

450 
	`EVUTIL_ASSERT
(
bev_a
->
ªad_ö_¥ogªss
);

452 
amou¡_uƒód
 = 
bev_a
->
ªad_ö_¥ogªss
 - 
nbyãs
;

453 
	`evbuf„r_commô_ªad
(
bev
->
öput
, 
nbyãs
);

454 
bev_a
->
ªad_ö_¥ogªss
 = 0;

455 i‡(
amou¡_uƒód
)

456 
	`_buf„ªvít_de¸emít_ªad_buckës
(&
bev_a
->
bev
, -
amou¡_uƒód
);

458 i‡(!
ok
)

459 
	`bev_async_£t_wß_îr‹
(
bev
, 
eo
);

461 i‡(
bev_a
->
ok
) {

462 i‡(
ok
 && 
nbyãs
) {

463 
	`BEV_RESET_GENERIC_READ_TIMEOUT
(
bev
);

464 i‡(
	`evbuf„r_gë_Àngth
(
bev
->
öput
Ë>bev->
wm_ªad
.
low
)

465 
	`_buf„ªvít_run_ªadcb
(
bev
);

466 
	`bev_async_c⁄sidî_ªadög
(
bev_a
);

467 } i‡(!
ok
) {

468 
wh©
 |
BEV_EVENT_ERROR
;

469 
bev_a
->
ok
 = 0;

470 
	`_buf„ªvít_run_evítcb
(
bev
, 
wh©
);

471 } i‡(!
nbyãs
) {

472 
wh©
 |
BEV_EVENT_EOF
;

473 
bev_a
->
ok
 = 0;

474 
	`_buf„ªvít_run_evítcb
(
bev
, 
wh©
);

478 
	`_buf„ªvít_de¸ef_™d_u∆ock
(
bev
);

479 
	}
}

482 
	$wrôe_com∂ëe
(
evít_ovîœµed
 *
eo
, 
ev_uöçå_t
 
key
,

483 
ev_ssize_t
 
nbyãs
, 
ok
)

485 
buf„ªvít_async
 *
bev_a
 = 
	`upˇ°_wrôe
(
eo
);

486 
buf„ªvít
 *
bev
 = &
bev_a
->bev.bev;

487 
wh©
 = 
BEV_EVENT_WRITING
;

488 
ev_ssize_t
 
amou¡_unwrôãn
;

490 
	`BEV_LOCK
(
bev
);

491 
	`EVUTIL_ASSERT
(
bev_a
->
wrôe_ö_¥ogªss
);

493 
amou¡_unwrôãn
 = 
bev_a
->
wrôe_ö_¥ogªss
 - 
nbyãs
;

494 
	`evbuf„r_commô_wrôe
(
bev
->
ouçut
, 
nbyãs
);

495 
bev_a
->
wrôe_ö_¥ogªss
 = 0;

497 i‡(
amou¡_unwrôãn
)

498 
	`_buf„ªvít_de¸emít_wrôe_buckës
(&
bev_a
->
bev
,

499 -
amou¡_unwrôãn
);

502 i‡(!
ok
)

503 
	`bev_async_£t_wß_îr‹
(
bev
, 
eo
);

505 i‡(
bev_a
->
ok
) {

506 i‡(
ok
 && 
nbyãs
) {

507 
	`BEV_RESET_GENERIC_WRITE_TIMEOUT
(
bev
);

508 i‡(
	`evbuf„r_gë_Àngth
(
bev
->
ouçut
) <=

509 
bev
->
wm_wrôe
.
low
)

510 
	`_buf„ªvít_run_wrôecb
(
bev
);

511 
	`bev_async_c⁄sidî_wrôög
(
bev_a
);

512 } i‡(!
ok
) {

513 
wh©
 |
BEV_EVENT_ERROR
;

514 
bev_a
->
ok
 = 0;

515 
	`_buf„ªvít_run_evítcb
(
bev
, 
wh©
);

516 } i‡(!
nbyãs
) {

517 
wh©
 |
BEV_EVENT_EOF
;

518 
bev_a
->
ok
 = 0;

519 
	`_buf„ªvít_run_evítcb
(
bev
, 
wh©
);

523 
	`_buf„ªvít_de¸ef_™d_u∆ock
(
bev
);

524 
	}
}

526 
buf„ªvít
 *

527 
	$buf„ªvít_async_√w
(
evít_ba£
 *
ba£
,

528 
evutû_sockë_t
 
fd
, 
›ti⁄s
)

530 
buf„ªvít_async
 *
bev_a
;

531 
buf„ªvít
 *
bev
;

532 
evít_io˝_p‹t
 *
io˝
;

534 
›ti⁄s
 |
BEV_OPT_THREADSAFE
;

536 i‡(!(
io˝
 = 
	`evít_ba£_gë_io˝
(
ba£
)))

537  
NULL
;

539 i‡(
fd
 >0 && 
	`evít_io˝_p‹t_assocüã
(
io˝
, fd, 1)<0) {

540 
îr
 = 
	`GëLa°Eº‹
();

544 i‡(
îr
 !
ERROR_INVALID_PARAMETER
)

545  
NULL
;

548 i‡(!(
bev_a
 = 
	`mm_ˇŒoc
(1, (
buf„ªvít_async
))))

549  
NULL
;

551 
bev
 = &
bev_a
->bev.bev;

552 i‡(!(
bev
->
öput
 = 
	`evbuf„r_ovîœµed_√w
(
fd
))) {

553 
	`mm_‰ì
(
bev_a
);

554  
NULL
;

556 i‡(!(
bev
->
ouçut
 = 
	`evbuf„r_ovîœµed_√w
(
fd
))) {

557 
	`evbuf„r_‰ì
(
bev
->
öput
);

558 
	`mm_‰ì
(
bev_a
);

559  
NULL
;

562 i‡(
	`buf„ªvít_öô_comm⁄
(&
bev_a
->
bev
, 
ba£
, &
buf„ªvít_›s_async
,

563 
›ti⁄s
)<0)

564 
îr
;

566 
	`evbuf„r_add_cb
(
bev
->
öput
, 
be_async_öbuf_ˇŒback
, bev);

567 
	`evbuf„r_add_cb
(
bev
->
ouçut
, 
be_async_outbuf_ˇŒback
, bev);

569 
	`evít_ovîœµed_öô
(&
bev_a
->
c⁄√˘_ovîœµed
, 
c⁄√˘_com∂ëe
);

570 
	`evít_ovîœµed_öô
(&
bev_a
->
ªad_ovîœµed
, 
ªad_com∂ëe
);

571 
	`evít_ovîœµed_öô
(&
bev_a
->
wrôe_ovîœµed
, 
wrôe_com∂ëe
);

573 
bev_a
->
ok
 = 
fd
 >= 0;

574 i‡(
bev_a
->
ok
)

575 
	`_buf„ªvít_öô_gíîic_timeout_cbs
(
bev
);

577  
bev
;

578 
îr
:

579 
	`buf„ªvít_‰ì
(&
bev_a
->
bev
.bev);

580  
NULL
;

581 
	}
}

584 
	$buf„ªvít_async_£t_c⁄√˘ed
(
buf„ªvít
 *
bev
)

586 
buf„ªvít_async
 *
bev_async
 = 
	`upˇ°
(
bev
);

587 
bev_async
->
ok
 = 1;

588 
	`_buf„ªvít_öô_gíîic_timeout_cbs
(
bev
);

590 
	`be_async_íabÀ
(
bev
, bev->
íabÀd
);

591 
	}
}

594 
	$buf„ªvít_async_ˇn_c⁄√˘
(
buf„ªvít
 *
bev
)

596 c⁄° 
wö32_exãnsi⁄_‚s
 *
ext
 =

597 
	`evít_gë_wö32_exãnsi⁄_‚s
();

599 i‡(
	`BEV_IS_ASYNC
(
bev
) &&

600 
	`evít_ba£_gë_io˝
(
bev
->
ev_ba£
) &&

601 
ext
 &&Éxt->
C⁄√˘Ex
)

605 
	}
}

608 
	$buf„ªvít_async_c⁄√˘
(
buf„ªvít
 *
bev
, 
evutû_sockë_t
 
fd
,

609 c⁄° 
sockaddr
 *
ß
, 
sockÀn
)

611 
BOOL
 
rc
;

612 
buf„ªvít_async
 *
bev_async
 = 
	`upˇ°
(
bev
);

613 
sockaddr_°‹age
 
ss
;

614 c⁄° 
wö32_exãnsi⁄_‚s
 *
ext
 =

615 
	`evít_gë_wö32_exãnsi⁄_‚s
();

617 
	`EVUTIL_ASSERT
(
ext
 &&Éxt->
C⁄√˘Ex
 && 
fd
 >0 && 
ß
 !
NULL
);

623 
	`mem£t
(&
ss
, 0, (ss));

624 i‡(
ß
->
ß_Ámûy
 =
AF_INET
) {

625 
sockaddr_ö
 *
sö
 = (sockaddr_ö *)&
ss
;

626 
sö
->
sö_Ámûy
 = 
AF_INET
;

627 
sö
->
sö_addr
.
s_addr
 = 
INADDR_ANY
;

628 } i‡(
ß
->
ß_Ámûy
 =
AF_INET6
) {

629 
sockaddr_ö6
 *
sö6
 = (sockaddr_ö6 *)&
ss
;

630 
sö6
->
sö6_Ámûy
 = 
AF_INET6
;

631 
sö6
->
sö6_addr
 = 
ö6addr_™y
;

636 i‡(
	`böd
(
fd
, (
sockaddr
 *)&
ss
, (ss)) < 0 &&

637 
	`WSAGëLa°Eº‹
(Ë!
WSAEINVAL
)

640 
	`evít_ba£_add_vútuÆ
(
bev
->
ev_ba£
);

641 
	`buf„ªvít_ö¸ef
(
bev
);

642 
rc
 = 
ext
->
	`C⁄√˘Ex
(
fd
, 
ß
, 
sockÀn
, 
NULL
, 0, NULL,

643 &
bev_async
->
c⁄√˘_ovîœµed
.
ovîœµed
);

644 i‡(
rc
 || 
	`WSAGëLa°Eº‹
(Ë=
ERROR_IO_PENDING
)

647 
	`evít_ba£_dñ_vútuÆ
(
bev
->
ev_ba£
);

648 
	`buf„ªvít_de¸ef
(
bev
);

651 
	}
}

654 
	$be_async_˘æ
(
buf„ªvít
 *
bev
, 
buf„ªvít_˘æ_›
 
›
,

655 
buf„ªvít_˘æ_d©a
 *
d©a
)

657 
›
) {

658 
BEV_CTRL_GET_FD
:

659 
d©a
->
fd
 = 
	`_evbuf„r_ovîœµed_gë_fd
(
bev
->
öput
);

661 
BEV_CTRL_SET_FD
: {

662 
evít_io˝_p‹t
 *
io˝
;

664 i‡(
d©a
->
fd
 =
	`_evbuf„r_ovîœµed_gë_fd
(
bev
->
öput
))

666 i‡(!(
io˝
 = 
	`evít_ba£_gë_io˝
(
bev
->
ev_ba£
)))

668 i‡(
	`evít_io˝_p‹t_assocüã
(
io˝
, 
d©a
->
fd
, 1) < 0)

670 
	`_evbuf„r_ovîœµed_£t_fd
(
bev
->
öput
, 
d©a
->
fd
);

671 
	`_evbuf„r_ovîœµed_£t_fd
(
bev
->
ouçut
, 
d©a
->
fd
);

674 
BEV_CTRL_CANCEL_ALL
: {

675 
buf„ªvít_async
 *
bev_a
 = 
	`upˇ°
(
bev
);

676 
evutû_sockë_t
 
fd
 = 
	`_evbuf„r_ovîœµed_gë_fd
(
bev
->
öput
);

677 i‡(
fd
 !(
evutû_sockë_t
)
INVALID_SOCKET
 &&

678 (
bev_a
->
bev
.
›ti⁄s
 & 
BEV_OPT_CLOSE_ON_FREE
)) {

679 
	`˛o£sockë
(
fd
);

681 
bev_a
->
ok
 = 0;

684 
BEV_CTRL_GET_UNDERLYING
:

688 
	}
}

	@bufferevent_filter.c

29 
	~<sys/ty≥s.h
>

31 
	~"evít2/evít-c⁄fig.h
"

33 #ifde‡
_EVENT_HAVE_SYS_TIME_H


34 
	~<sys/time.h
>

37 
	~<î∫o.h
>

38 
	~<°dio.h
>

39 
	~<°dlib.h
>

40 
	~<°rög.h
>

41 #ifde‡
_EVENT_HAVE_STDARG_H


42 
	~<°d¨g.h
>

45 #ifde‡
WIN32


46 
	~<wösock2.h
>

49 
	~"evít2/utû.h
"

50 
	~"evít2/buf„ªvít.h
"

51 
	~"evít2/buf„r.h
"

52 
	~"evít2/buf„ªvít_°ru˘.h
"

53 
	~"evít2/evít.h
"

54 
	~"log-öã∫Æ.h
"

55 
	~"mm-öã∫Æ.h
"

56 
	~"buf„ªvít-öã∫Æ.h
"

57 
	~"utû-öã∫Æ.h
"

60 
be_fûãr_íabÀ
(
buf„ªvít
 *, );

61 
be_fûãr_dißbÀ
(
buf„ªvít
 *, );

62 
be_fûãr_de°ru˘
(
buf„ªvít
 *);

64 
be_fûãr_ªadcb
(
buf„ªvít
 *, *);

65 
be_fûãr_wrôecb
(
buf„ªvít
 *, *);

66 
be_fûãr_evítcb
(
buf„ªvít
 *, , *);

67 
be_fûãr_Êush
(
buf„ªvít
 *
bu„v
,

68 
iŸy≥
, 
buf„ªvít_Êush_mode
 
mode
);

69 
be_fûãr_˘æ
(
buf„ªvít
 *, 
buf„ªvít_˘æ_›
, 
buf„ªvít_˘æ_d©a
 *);

71 
buf„ªvít_fûãªd_outbuf_cb
(
evbuf„r
 *
buf
,

72 c⁄° 
evbuf„r_cb_öfo
 *
öfo
, *
¨g
);

74 
	sbuf„ªvít_fûãªd
 {

75 
buf„ªvít_¥iv©e
 
	mbev
;

78 
buf„ªvít
 *
	mundîlyög
;

80 
evbuf„r_cb_íåy
 *
	moutbuf_cb
;

83 
	mgŸ_eof
;

86 (*
	m‰ì_c⁄ãxt
)(*);

88 
buf„ªvít_fûãr_cb
 
	m¥o˚ss_ö
;

90 
buf„ªvít_fûãr_cb
 
	m¥o˚ss_out
;

92 *
	mc⁄ãxt
;

95 c⁄° 
buf„ªvít_›s
 
	gbuf„ªvít_›s_fûãr
 = {

97 
evutû_off£tof
(
buf„ªvít_fûãªd
, 
bev
.bev),

98 
be_fûãr_íabÀ
,

99 
be_fûãr_dißbÀ
,

100 
be_fûãr_de°ru˘
,

101 
_buf„ªvít_gíîic_adj_timeouts
,

102 
be_fûãr_Êush
,

103 
be_fûãr_˘æ
,

108 
ölöe
 
buf„ªvít_fûãªd
 *

109 
	$upˇ°
(
buf„ªvít
 *
bev
)

111 
buf„ªvít_fûãªd
 *
bev_f
;

112 i‡(
bev
->
be_›s
 !&
buf„ªvít_›s_fûãr
)

113  
NULL
;

114 
bev_f
 = (*)–((*)
bev
) -

115 
	`evutû_off£tof
(
buf„ªvít_fûãªd
, 
bev
.bev));

116 
	`EVUTIL_ASSERT
(
bev_f
->
bev
.bev.
be_›s
 =&
buf„ªvít_›s_fûãr
);

117  
bev_f
;

118 
	}
}

120 
	#downˇ°
(
bev_f
Ë(&(bev_f)->
bev
.bev)

	)

126 
	$be_undîlyög_wrôebuf_fuŒ
(
buf„ªvít_fûãªd
 *
bevf
,

127 
buf„ªvít_Êush_mode
 
°©e
)

129 
buf„ªvít
 *
u
 = 
bevf
->
undîlyög
;

130  
°©e
 =
BEV_NORMAL
 &&

131 
u
->
wm_wrôe
.
high
 &&

132 
	`evbuf„r_gë_Àngth
(
u
->
ouçut
Ë>u->
wm_wrôe
.
high
;

133 
	}
}

138 
	$be_ªadbuf_fuŒ
(
buf„ªvít_fûãªd
 *
bevf
,

139 
buf„ªvít_Êush_mode
 
°©e
)

141 
buf„ªvít
 *
bu„v
 = 
	`downˇ°
(
bevf
);

142  
°©e
 =
BEV_NORMAL
 &&

143 
bu„v
->
wm_ªad
.
high
 &&

144 
	`evbuf„r_gë_Àngth
(
bu„v
->
öput
Ë>bu„v->
wm_ªad
.
high
;

145 
	}
}

149 
buf„ªvít_fûãr_ªsu…


150 
	$be_nuŒ_fûãr
(
evbuf„r
 *
§c
, evbuf„∏*
d°
, 
ev_ssize_t
 
lim
,

151 
buf„ªvít_Êush_mode
 
°©e
, *
˘x
)

153 ()
°©e
;

154 i‡(
	`evbuf„r_ªmove_buf„r
(
§c
, 
d°
, 
lim
) == 0)

155  
BEV_OK
;

157  
BEV_ERROR
;

158 
	}
}

160 
buf„ªvít
 *

161 
buf„ªvít_fûãr_√w
(
buf„ªvít
 *
undîlyög
,

162 
buf„ªvít_fûãr_cb
 
öput_fûãr
,

163 
buf„ªvít_fûãr_cb
 
ouçut_fûãr
,

164 
›ti⁄s
,

165 (*
‰ì_c⁄ãxt
)(*),

166 *
˘x
)

168 
buf„ªvít_fûãªd
 *
bu„v_f
;

169 
tmp_›ti⁄s
 = 
›ti⁄s
 & ~
BEV_OPT_THREADSAFE
;

171 i‡(!
undîlyög
)

172  
NULL
;

174 i‡(!
öput_fûãr
)

175 
öput_fûãr
 = 
be_nuŒ_fûãr
;

176 i‡(!
ouçut_fûãr
)

177 
ouçut_fûãr
 = 
be_nuŒ_fûãr
;

179 
bu„v_f
 = 
	`mm_ˇŒoc
(1, (
buf„ªvít_fûãªd
));

180 i‡(!
bu„v_f
)

181  
NULL
;

183 i‡(
	`buf„ªvít_öô_comm⁄
(&
bu„v_f
->
bev
, 
undîlyög
->
ev_ba£
,

184 &
buf„ªvít_›s_fûãr
, 
tmp_›ti⁄s
) < 0) {

185 
	`mm_‰ì
(
bu„v_f
);

186  
NULL
;

188 i‡(
›ti⁄s
 & 
BEV_OPT_THREADSAFE
) {

189 
	`buf„ªvít_íabÀ_lockög
(
	`downˇ°
(
bu„v_f
), 
NULL
);

192 
bu„v_f
->
undîlyög
 = underlying;

194 
bu„v_f
->
¥o˚ss_ö
 = 
öput_fûãr
;

195 
bu„v_f
->
¥o˚ss_out
 = 
ouçut_fûãr
;

196 
bu„v_f
->
‰ì_c⁄ãxt
 = free_context;

197 
bu„v_f
->
c⁄ãxt
 = 
˘x
;

199 
	`buf„ªvít_£tcb
(
bu„v_f
->
undîlyög
,

200 
be_fûãr_ªadcb
, 
be_fûãr_wrôecb
, 
be_fûãr_evítcb
, 
bu„v_f
);

202 
bu„v_f
->
outbuf_cb
 = 
	`evbuf„r_add_cb
(
	`downˇ°
(bu„v_f)->
ouçut
,

203 
buf„ªvít_fûãªd_outbuf_cb
, 
bu„v_f
);

205 
	`_buf„ªvít_öô_gíîic_timeout_cbs
(
	`downˇ°
(
bu„v_f
));

206 
	`buf„ªvít_ö¸ef
(
undîlyög
);

208 
	`buf„ªvít_íabÀ
(
undîlyög
, 
EV_READ
|
EV_WRITE
);

209 
	`buf„ªvít_su•íd_ªad
(
undîlyög
, 
BEV_SUSPEND_FILT_READ
);

211  
	`downˇ°
(
bu„v_f
);

212 
	}
}

215 
	$be_fûãr_de°ru˘
(
buf„ªvít
 *
bev
)

217 
buf„ªvít_fûãªd
 *
bevf
 = 
	`upˇ°
(
bev
);

218 
	`EVUTIL_ASSERT
(
bevf
);

219 i‡(
bevf
->
‰ì_c⁄ãxt
)

220 
bevf
->
	`‰ì_c⁄ãxt
(bevf->
c⁄ãxt
);

222 i‡(
bevf
->
bev
.
›ti⁄s
 & 
BEV_OPT_CLOSE_ON_FREE
) {

228 i‡(
	`BEV_UPCAST
(
bevf
->
undîlyög
)->
ªf˙t
 < 2) {

229 
	`evít_w¨nx
("BEV_OPT_CLOSE_ON_FREE set onán "

232 
	`buf„ªvít_‰ì
(
bevf
->
undîlyög
);

235 i‡(
bevf
->
undîlyög
) {

236 i‡(
bevf
->
undîlyög
->
îr‹cb
 =
be_fûãr_evítcb
)

237 
	`buf„ªvít_£tcb
(
bevf
->
undîlyög
,

238 
NULL
, NULL, NULL, NULL);

239 
	`buf„ªvít_unsu•íd_ªad
(
bevf
->
undîlyög
,

240 
BEV_SUSPEND_FILT_READ
);

244 
	`_buf„ªvít_dñ_gíîic_timeout_cbs
(
bev
);

245 
	}
}

248 
	$be_fûãr_íabÀ
(
buf„ªvít
 *
bev
, 
evít
)

250 
buf„ªvít_fûãªd
 *
bevf
 = 
	`upˇ°
(
bev
);

251 i‡(
evít
 & 
EV_WRITE
)

252 
	`BEV_RESET_GENERIC_WRITE_TIMEOUT
(
bev
);

254 i‡(
evít
 & 
EV_READ
) {

255 
	`BEV_RESET_GENERIC_READ_TIMEOUT
(
bev
);

256 
	`buf„ªvít_unsu•íd_ªad
(
bevf
->
undîlyög
,

257 
BEV_SUSPEND_FILT_READ
);

260 
	}
}

263 
	$be_fûãr_dißbÀ
(
buf„ªvít
 *
bev
, 
evít
)

265 
buf„ªvít_fûãªd
 *
bevf
 = 
	`upˇ°
(
bev
);

266 i‡(
evít
 & 
EV_WRITE
)

267 
	`BEV_DEL_GENERIC_WRITE_TIMEOUT
(
bev
);

268 i‡(
evít
 & 
EV_READ
) {

269 
	`BEV_DEL_GENERIC_READ_TIMEOUT
(
bev
);

270 
	`buf„ªvít_su•íd_ªad
(
bevf
->
undîlyög
,

271 
BEV_SUSPEND_FILT_READ
);

274 
	}
}

276 
buf„ªvít_fûãr_ªsu…


277 
	$be_fûãr_¥o˚ss_öput
(
buf„ªvít_fûãªd
 *
bevf
,

278 
buf„ªvít_Êush_mode
 
°©e
,

279 *
¥o˚s£d_out
)

281 
buf„ªvít_fûãr_ªsu…
 
ªs
;

282 
buf„ªvít
 *
bev
 = 
	`downˇ°
(
bevf
);

284 i‡(
°©e
 =
BEV_NORMAL
) {

287 i‡(!(
bev
->
íabÀd
 & 
EV_READ
) ||

288 
	`be_ªadbuf_fuŒ
(
bevf
, 
°©e
))

289  
BEV_OK
;

293 
ev_ssize_t
 
limô
 = -1;

294 i‡(
°©e
 =
BEV_NORMAL
 && 
bev
->
wm_ªad
.
high
)

295 
limô
 = 
bev
->
wm_ªad
.
high
 -

296 
	`evbuf„r_gë_Àngth
(
bev
->
öput
);

298 
ªs
 = 
bevf
->
	`¥o˚ss_ö
(bevf->
undîlyög
->
öput
,

299 
bev
->
öput
, 
limô
, 
°©e
, 
bevf
->
c⁄ãxt
);

301 i‡(
ªs
 =
BEV_OK
)

302 *
¥o˚s£d_out
 = 1;

303 } 
ªs
 =
BEV_OK
 &&

304 (
bev
->
íabÀd
 & 
EV_READ
) &&

305 
	`evbuf„r_gë_Àngth
(
bevf
->
undîlyög
->
öput
) &&

306 !
	`be_ªadbuf_fuŒ
(
bevf
, 
°©e
));

308 i‡(*
¥o˚s£d_out
)

309 
	`BEV_RESET_GENERIC_READ_TIMEOUT
(
bev
);

311  
ªs
;

312 
	}
}

315 
buf„ªvít_fûãr_ªsu…


316 
	$be_fûãr_¥o˚ss_ouçut
(
buf„ªvít_fûãªd
 *
bevf
,

317 
buf„ªvít_Êush_mode
 
°©e
,

318 *
¥o˚s£d_out
)

321 
buf„ªvít_fûãr_ªsu…
 
ªs
 = 
BEV_OK
;

322 
buf„ªvít
 *
bu„v
 = 
	`downˇ°
(
bevf
);

323 
agaö
 = 0;

325 i‡(
°©e
 =
BEV_NORMAL
) {

331 i‡(!(
bu„v
->
íabÀd
 & 
EV_WRITE
) ||

332 
	`be_undîlyög_wrôebuf_fuŒ
(
bevf
, 
°©e
) ||

333 !
	`evbuf„r_gë_Àngth
(
bu„v
->
ouçut
))

334  
BEV_OK
;

339 
	`evbuf„r_cb_£t_Êags
(
bu„v
->
ouçut
, 
bevf
->
outbuf_cb
, 0);

342 
¥o˚s£d
 = 0;

343 
agaö
 = 0;

346 
ev_ssize_t
 
limô
 = -1;

347 i‡(
°©e
 =
BEV_NORMAL
 &&

348 
bevf
->
undîlyög
->
wm_wrôe
.
high
)

349 
limô
 = 
bevf
->
undîlyög
->
wm_wrôe
.
high
 -

350 
	`evbuf„r_gë_Àngth
(
bevf
->
undîlyög
->
ouçut
);

352 
ªs
 = 
bevf
->
	`¥o˚ss_out
(
	`downˇ°
(bevf)->
ouçut
,

353 
bevf
->
undîlyög
->
ouçut
,

354 
limô
,

355 
°©e
,

356 
bevf
->
c⁄ãxt
);

358 i‡(
ªs
 =
BEV_OK
)

359 
¥o˚s£d
 = *
¥o˚s£d_out
 = 1;

361 
ªs
 =
BEV_OK
 &&

363 (
bu„v
->
íabÀd
 & 
EV_WRITE
) &&

366 
	`evbuf„r_gë_Àngth
(
bu„v
->
ouçut
) &&

368 !
	`be_undîlyög_wrôebuf_fuŒ
(
bevf
,
°©e
));

370 i‡(
¥o˚s£d
 &&

371 
	`evbuf„r_gë_Àngth
(
bu„v
->
ouçut
Ë<bu„v->
wm_wrôe
.
low
) {

373 
	`_buf„ªvít_run_wrôecb
(
bu„v
);

375 i‡(
ªs
 =
BEV_OK
 &&

376 (
bu„v
->
íabÀd
 & 
EV_WRITE
) &&

377 
	`evbuf„r_gë_Àngth
(
bu„v
->
ouçut
) &&

378 !
	`be_undîlyög_wrôebuf_fuŒ
(
bevf
, 
°©e
)) {

379 
agaö
 = 1;

382 } 
agaö
);

385 
	`evbuf„r_cb_£t_Êags
(
bu„v
->
ouçut
,
bevf
->
outbuf_cb
,

386 
EVBUFFER_CB_ENABLED
);

388 i‡(*
¥o˚s£d_out
)

389 
	`BEV_RESET_GENERIC_WRITE_TIMEOUT
(
bu„v
);

391  
ªs
;

392 
	}
}

396 
	$buf„ªvít_fûãªd_outbuf_cb
(
evbuf„r
 *
buf
,

397 c⁄° 
evbuf„r_cb_öfo
 *
cböfo
, *
¨g
)

399 
buf„ªvít_fûãªd
 *
bevf
 = 
¨g
;

400 
buf„ªvít
 *
bev
 = 
	`downˇ°
(
bevf
);

402 i‡(
cböfo
->
n_added
) {

403 
¥o˚s£d_™y
 = 0;

406 
	`_buf„ªvít_ö¸ef_™d_lock
(
bev
);

407 
	`be_fûãr_¥o˚ss_ouçut
(
bevf
, 
BEV_NORMAL
, &
¥o˚s£d_™y
);

408 
	`_buf„ªvít_de¸ef_™d_u∆ock
(
bev
);

410 
	}
}

414 
	$be_fûãr_ªadcb
(
buf„ªvít
 *
undîlyög
, *
_me
)

416 
buf„ªvít_fûãªd
 *
bevf
 = 
_me
;

417 
buf„ªvít_fûãr_ªsu…
 
ªs
;

418 
buf„ªvít_Êush_mode
 
°©e
;

419 
buf„ªvít
 *
bu„v
 = 
	`downˇ°
(
bevf
);

420 
¥o˚s£d_™y
 = 0;

422 
	`_buf„ªvít_ö¸ef_™d_lock
(
bu„v
);

424 i‡(
bevf
->
gŸ_eof
)

425 
°©e
 = 
BEV_FINISHED
;

427 
°©e
 = 
BEV_NORMAL
;

430 
ªs
 = 
	`be_fûãr_¥o˚ss_öput
(
bevf
, 
°©e
, &
¥o˚s£d_™y
);

431 ()
ªs
;

436 i‡(
¥o˚s£d_™y
 &&

437 
	`evbuf„r_gë_Àngth
(
bu„v
->
öput
Ë>bu„v->
wm_ªad
.
low
)

438 
	`_buf„ªvít_run_ªadcb
(
bu„v
);

440 
	`_buf„ªvít_de¸ef_™d_u∆ock
(
bu„v
);

441 
	}
}

446 
	$be_fûãr_wrôecb
(
buf„ªvít
 *
undîlyög
, *
_me
)

448 
buf„ªvít_fûãªd
 *
bevf
 = 
_me
;

449 
buf„ªvít
 *
bev
 = 
	`downˇ°
(
bevf
);

450 
¥o˚s£d_™y
 = 0;

452 
	`_buf„ªvít_ö¸ef_™d_lock
(
bev
);

453 
	`be_fûãr_¥o˚ss_ouçut
(
bevf
, 
BEV_NORMAL
, &
¥o˚s£d_™y
);

454 
	`_buf„ªvít_de¸ef_™d_u∆ock
(
bev
);

455 
	}
}

459 
	$be_fûãr_evítcb
(
buf„ªvít
 *
undîlyög
, 
wh©
, *
_me
)

461 
buf„ªvít_fûãªd
 *
bevf
 = 
_me
;

462 
buf„ªvít
 *
bev
 = 
	`downˇ°
(
bevf
);

464 
	`_buf„ªvít_ö¸ef_™d_lock
(
bev
);

466 
	`_buf„ªvít_run_evítcb
(
bev
, 
wh©
);

467 
	`_buf„ªvít_de¸ef_™d_u∆ock
(
bev
);

468 
	}
}

471 
	$be_fûãr_Êush
(
buf„ªvít
 *
bu„v
,

472 
iŸy≥
, 
buf„ªvít_Êush_mode
 
mode
)

474 
buf„ªvít_fûãªd
 *
bevf
 = 
	`upˇ°
(
bu„v
);

475 
¥o˚s£d_™y
 = 0;

476 
	`EVUTIL_ASSERT
(
bevf
);

478 
	`_buf„ªvít_ö¸ef_™d_lock
(
bu„v
);

480 i‡(
iŸy≥
 & 
EV_READ
) {

481 
	`be_fûãr_¥o˚ss_öput
(
bevf
, 
mode
, &
¥o˚s£d_™y
);

483 i‡(
iŸy≥
 & 
EV_WRITE
) {

484 
	`be_fûãr_¥o˚ss_ouçut
(
bevf
, 
mode
, &
¥o˚s£d_™y
);

488 
	`buf„ªvít_Êush
(
bevf
->
undîlyög
, 
iŸy≥
, 
mode
);

490 
	`_buf„ªvít_de¸ef_™d_u∆ock
(
bu„v
);

492  
¥o˚s£d_™y
;

493 
	}
}

496 
	$be_fûãr_˘æ
(
buf„ªvít
 *
bev
, 
buf„ªvít_˘æ_›
 
›
,

497 
buf„ªvít_˘æ_d©a
 *
d©a
)

499 
buf„ªvít_fûãªd
 *
bevf
;

500 
›
) {

501 
BEV_CTRL_GET_UNDERLYING
:

502 
bevf
 = 
	`upˇ°
(
bev
);

503 
d©a
->
±r
 = 
bevf
->
undîlyög
;

505 
BEV_CTRL_GET_FD
:

506 
BEV_CTRL_SET_FD
:

507 
BEV_CTRL_CANCEL_ALL
:

511 
	}
}

	@bufferevent_openssl.c

27 
	~<sys/ty≥s.h
>

29 
	~"evít2/evít-c⁄fig.h
"

31 #ifde‡
_EVENT_HAVE_SYS_TIME_H


32 
	~<sys/time.h
>

35 
	~<î∫o.h
>

36 
	~<°dio.h
>

37 
	~<°dlib.h
>

38 
	~<°rög.h
>

39 #ifde‡
_EVENT_HAVE_STDARG_H


40 
	~<°d¨g.h
>

42 #ifde‡
_EVENT_HAVE_UNISTD_H


43 
	~<uni°d.h
>

46 #ifde‡
WIN32


47 
	~<wösock2.h
>

50 
	~"evít2/buf„ªvít.h
"

51 
	~"evít2/buf„ªvít_°ru˘.h
"

52 
	~"evít2/buf„ªvít_s¶.h
"

53 
	~"evít2/buf„r.h
"

54 
	~"evít2/evít.h
"

56 
	~"mm-öã∫Æ.h
"

57 
	~"buf„ªvít-öã∫Æ.h
"

58 
	~"log-öã∫Æ.h
"

60 
	~<›ís¶/bio.h
>

61 
	~<›ís¶/s¶.h
>

62 
	~<›ís¶/îr.h
>

79 
	#BIO_TYPE_LIBEVENT
 57

	)

85 
	$¥öt_îr
(
vÆ
)

87 
îr
;

88 
	`¥ötf
("Eº‹ wa†%d\n", 
vÆ
);

90 (
îr
 = 
	`ERR_gë_îr‹
())) {

91 c⁄° *
msg
 = (c⁄° *)
	`ERR_ªas⁄_îr‹_°rög
(
îr
);

92 c⁄° *
lib
 = (c⁄° *)
	`ERR_lib_îr‹_°rög
(
îr
);

93 c⁄° *
func
 = (c⁄° *)
	`ERR_func_îr‹_°rög
(
îr
);

95 
	`¥ötf
("%†ö %†%s\n", 
msg
, 
lib
, 
func
);

97 
	}
}

99 
	#¥öt_îr
(
v
Ë(()0)

	)

104 
	$bio_buf„ªvít_√w
(
BIO
 *
b
)

106 
b
->
öô
 = 0;

107 
b
->
num
 = -1;

108 
b
->
±r
 = 
NULL
;

109 
b
->
Êags
 = 0;

111 
	}
}

115 
	$bio_buf„ªvít_‰ì
(
BIO
 *
b
)

117 i‡(!
b
)

119 i‡(
b
->
shutdown
) {

120 i‡(
b
->
öô
 && b->
±r
)

121 
	`buf„ªvít_‰ì
(
b
->
±r
);

122 
b
->
öô
 = 0;

123 
b
->
Êags
 = 0;

124 
b
->
±r
 = 
NULL
;

127 
	}
}

131 
	$bio_buf„ªvít_ªad
(
BIO
 *
b
, *
out
, 
ouéí
)

133 
r
 = 0;

134 
evbuf„r
 *
öput
;

136 
	`BIO_˛ór_ªåy_Êags
(
b
);

138 i‡(!
out
)

140 i‡(!
b
->
±r
)

143 
öput
 = 
	`buf„ªvít_gë_öput
(
b
->
±r
);

144 i‡(
	`evbuf„r_gë_Àngth
(
öput
) == 0) {

146 
	`BIO_£t_ªåy_ªad
(
b
);

149 
r
 = 
	`evbuf„r_ªmove
(
öput
, 
out
, 
ouéí
);

152  
r
;

153 
	}
}

157 
	$bio_buf„ªvít_wrôe
(
BIO
 *
b
, c⁄° *
ö
, 
öÀn
)

159 
buf„ªvít
 *
bu„v
 = 
b
->
±r
;

160 
evbuf„r
 *
ouçut
;

161 
size_t
 
ouéí
;

163 
	`BIO_˛ór_ªåy_Êags
(
b
);

165 i‡(!
b
->
±r
)

168 
ouçut
 = 
	`buf„ªvít_gë_ouçut
(
bu„v
);

169 
ouéí
 = 
	`evbuf„r_gë_Àngth
(
ouçut
);

173 i‡(
bu„v
->
wm_wrôe
.
high
 && bu„v->wm_wrôe.high <(
ouéí
+
öÀn
)) {

174 i‡(
bu„v
->
wm_wrôe
.
high
 <
ouéí
) {

176 
	`BIO_£t_ªåy_wrôe
(
b
);

179 
öÀn
 = 
bu„v
->
wm_wrôe
.
high
 - 
ouéí
;

182 
	`EVUTIL_ASSERT
(
öÀn
 > 0);

183 
	`evbuf„r_add
(
ouçut
, 
ö
, 
öÀn
);

184  
öÀn
;

185 
	}
}

189 
	$bio_buf„ªvít_˘æ
(
BIO
 *
b
, 
cmd
, 
num
, *
±r
)

191 
buf„ªvít
 *
bu„v
 = 
b
->
±r
;

192 
ªt
 = 1;

194 
cmd
) {

195 
BIO_CTRL_GET_CLOSE
:

196 
ªt
 = 
b
->
shutdown
;

198 
BIO_CTRL_SET_CLOSE
:

199 
b
->
shutdown
 = ()
num
;

201 
BIO_CTRL_PENDING
:

202 
ªt
 = 
	`evbuf„r_gë_Àngth
(
	`buf„ªvít_gë_öput
(
bu„v
)) != 0;

204 
BIO_CTRL_WPENDING
:

205 
ªt
 = 
	`evbuf„r_gë_Àngth
(
	`buf„ªvít_gë_ouçut
(
bu„v
)) != 0;

209 
BIO_CTRL_DUP
:

210 
BIO_CTRL_FLUSH
:

211 
ªt
 = 1;

214 
ªt
 = 0;

217  
ªt
;

218 
	}
}

222 
	$bio_buf„ªvít_puts
(
BIO
 *
b
, c⁄° *
s
)

224  
	`bio_buf„ªvít_wrôe
(
b
, 
s
, 
	`°æí
(s));

225 
	}
}

228 
BIO_METHOD
 
	gmëhods_buf„ªvít
 = {

229 
BIO_TYPE_LIBEVENT
, "bufferevent",

230 
bio_buf„ªvít_wrôe
,

231 
bio_buf„ªvít_ªad
,

232 
bio_buf„ªvít_puts
,

233 
NULL
 ,

234 
bio_buf„ªvít_˘æ
,

235 
bio_buf„ªvít_√w
,

236 
bio_buf„ªvít_‰ì
,

237 
NULL
 ,

241 
BIO_METHOD
 *

242 
	$BIO_s_buf„ªvít
()

244  &
mëhods_buf„ªvít
;

245 
	}
}

249 
BIO
 *

250 
	$BIO_√w_buf„ªvít
(
buf„ªvít
 *buf„ªvít, 
˛o£_Êag
)

252 
BIO
 *
ªsu…
;

253 i‡(!
buf„ªvít
)

254  
NULL
;

255 i‡(!(
ªsu…
 = 
	`BIO_√w
(
	`BIO_s_buf„ªvít
())))

256  
NULL
;

257 
ªsu…
->
öô
 = 1;

258 
ªsu…
->
±r
 = 
buf„ªvít
;

259 
ªsu…
->
shutdown
 = 
˛o£_Êag
 ? 1 : 0;

260  
ªsu…
;

261 
	}
}

276 
	sbio_d©a_cou¡s
 {

277 
	mn_wrôãn
;

278 
	mn_ªad
;

281 
	sbuf„ªvít_›ís¶
 {

287 
buf„ªvít_¥iv©e
 
	mbev
;

290 
buf„ªvít
 *
	mundîlyög
;

292 
SSL
 *
	ms¶
;

296 
evbuf„r_cb_íåy
 *
	moutbuf_cb
;

300 
bio_d©a_cou¡s
 
	mcou¡s
;

304 
ev_ssize_t
 
	mœ°_wrôe
;

306 
	#NUM_ERRORS
 3

	)

307 
ev_uöt32_t
 
	mîr‹s
[
NUM_ERRORS
];

312 
	mªad_blocked_⁄_wrôe
 : 1;

314 
	mwrôe_blocked_⁄_ªad
 : 1;

316 
	mÆlow_dúty_shutdown
 : 1;

318 
	mfd_is_£t
 : 1;

320 
	mn_îr‹s
 : 2;

323 
	m°©e
 : 2;

326 
be_›ís¶_íabÀ
(
buf„ªvít
 *, );

327 
be_›ís¶_dißbÀ
(
buf„ªvít
 *, );

328 
be_›ís¶_de°ru˘
(
buf„ªvít
 *);

329 
be_›ís¶_adj_timeouts
(
buf„ªvít
 *);

330 
be_›ís¶_Êush
(
buf„ªvít
 *
bu„v
,

331 
iŸy≥
, 
buf„ªvít_Êush_mode
 
mode
);

332 
be_›ís¶_˘æ
(
buf„ªvít
 *, 
buf„ªvít_˘æ_›
, 
buf„ªvít_˘æ_d©a
 *);

334 c⁄° 
buf„ªvít_›s
 
	gbuf„ªvít_›s_›ís¶
 = {

336 
evutû_off£tof
(
buf„ªvít_›ís¶
, 
bev
.bev),

337 
be_›ís¶_íabÀ
,

338 
be_›ís¶_dißbÀ
,

339 
be_›ís¶_de°ru˘
,

340 
be_›ís¶_adj_timeouts
,

341 
be_›ís¶_Êush
,

342 
be_›ís¶_˘æ
,

347 
ölöe
 
buf„ªvít_›ís¶
 *

348 
	$upˇ°
(
buf„ªvít
 *
bev
)

350 
buf„ªvít_›ís¶
 *
bev_o
;

351 i‡(
bev
->
be_›s
 !&
buf„ªvít_›s_›ís¶
)

352  
NULL
;

353 
bev_o
 = (*)–((*)
bev
) -

354 
	`evutû_off£tof
(
buf„ªvít_›ís¶
, 
bev
.bev));

355 
	`EVUTIL_ASSERT
(
bev_o
->
bev
.bev.
be_›s
 =&
buf„ªvít_›s_›ís¶
);

356  
bev_o
;

357 
	}
}

359 
ölöe
 

360 
	$put_îr‹
(
buf„ªvít_›ís¶
 *
bev_s¶
, 
îr
)

362 i‡(
bev_s¶
->
n_îr‹s
 =
NUM_ERRORS
)

369 
bev_s¶
->
îr‹s
[bev_s¶->
n_îr‹s
++] = (
ev_uöt32_t
Ë
îr
;

370 
	}
}

376 
	$°¨t_ªadög
(
buf„ªvít_›ís¶
 *
bev_s¶
)

378 i‡(
bev_s¶
->
undîlyög
) {

379 
	`buf„ªvít_unsu•íd_ªad
(
bev_s¶
->
undîlyög
,

380 
BEV_SUSPEND_FILT_READ
);

383 
buf„ªvít
 *
bev
 = &
bev_s¶
->bev.bev;

384 
r
;

385 
r
 = 
	`_buf„ªvít_add_evít
(&
bev
->
ev_ªad
, &bev->
timeout_ªad
);

386 i‡(
r
 =0 && 
bev_s¶
->
ªad_blocked_⁄_wrôe
)

387 
r
 = 
	`_buf„ªvít_add_evít
(&
bev
->
ev_wrôe
,

388 &
bev
->
timeout_wrôe
);

389  
r
;

391 
	}
}

397 
	$°¨t_wrôög
(
buf„ªvít_›ís¶
 *
bev_s¶
)

399 
r
 = 0;

400 i‡(
bev_s¶
->
undîlyög
) {

403 
buf„ªvít
 *
bev
 = &
bev_s¶
->bev.bev;

404 
r
 = 
	`_buf„ªvít_add_evít
(&
bev
->
ev_wrôe
, &bev->
timeout_wrôe
);

405 i‡(!
r
 && 
bev_s¶
->
wrôe_blocked_⁄_ªad
)

406 
r
 = 
	`_buf„ªvít_add_evít
(&
bev
->
ev_ªad
,

407 &
bev
->
timeout_ªad
);

409  
r
;

410 
	}
}

413 
	$°›_ªadög
(
buf„ªvít_›ís¶
 *
bev_s¶
)

415 i‡(
bev_s¶
->
wrôe_blocked_⁄_ªad
)

417 i‡(
bev_s¶
->
undîlyög
) {

418 
	`buf„ªvít_su•íd_ªad
(
bev_s¶
->
undîlyög
,

419 
BEV_SUSPEND_FILT_READ
);

421 
buf„ªvít
 *
bev
 = &
bev_s¶
->bev.bev;

422 
	`evít_dñ
(&
bev
->
ev_ªad
);

424 
	}
}

427 
	$°›_wrôög
(
buf„ªvít_›ís¶
 *
bev_s¶
)

429 i‡(
bev_s¶
->
ªad_blocked_⁄_wrôe
)

431 i‡(
bev_s¶
->
undîlyög
) {

434 
buf„ªvít
 *
bev
 = &
bev_s¶
->bev.bev;

435 
	`evít_dñ
(&
bev
->
ev_wrôe
);

437 
	}
}

440 
	$£t_rbow
(
buf„ªvít_›ís¶
 *
bev_s¶
)

442 i‡(!
bev_s¶
->
undîlyög
)

443 
	`°›_ªadög
(
bev_s¶
);

444 
bev_s¶
->
ªad_blocked_⁄_wrôe
 = 1;

445  
	`°¨t_wrôög
(
bev_s¶
);

446 
	}
}

449 
	$£t_wb‹
(
buf„ªvít_›ís¶
 *
bev_s¶
)

451 i‡(!
bev_s¶
->
undîlyög
)

452 
	`°›_wrôög
(
bev_s¶
);

453 
bev_s¶
->
wrôe_blocked_⁄_ªad
 = 1;

454  
	`°¨t_ªadög
(
bev_s¶
);

455 
	}
}

458 
	$˛ór_rbow
(
buf„ªvít_›ís¶
 *
bev_s¶
)

460 
buf„ªvít
 *
bev
 = &
bev_s¶
->bev.bev;

461 
r
 = 0;

462 
bev_s¶
->
ªad_blocked_⁄_wrôe
 = 0;

463 i‡(!(
bev
->
íabÀd
 & 
EV_WRITE
))

464 
	`°›_wrôög
(
bev_s¶
);

465 i‡(
bev
->
íabÀd
 & 
EV_READ
)

466 
r
 = 
	`°¨t_ªadög
(
bev_s¶
);

467  
r
;

468 
	}
}

472 
	$˛ór_wb‹
(
buf„ªvít_›ís¶
 *
bev_s¶
)

474 
buf„ªvít
 *
bev
 = &
bev_s¶
->bev.bev;

475 
r
 = 0;

476 
bev_s¶
->
wrôe_blocked_⁄_ªad
 = 0;

477 i‡(!(
bev
->
íabÀd
 & 
EV_READ
))

478 
	`°›_ªadög
(
bev_s¶
);

479 i‡(
bev
->
íabÀd
 & 
EV_WRITE
)

480 
r
 = 
	`°¨t_wrôög
(
bev_s¶
);

481  
r
;

482 
	}
}

485 
	$c⁄n_˛o£d
(
buf„ªvít_›ís¶
 *
bev_s¶
, 
îrcode
, 
ªt
)

487 
evít
 = 
BEV_EVENT_ERROR
;

488 
dúty_shutdown
 = 0;

489 
îr
;

491 
îrcode
) {

492 
SSL_ERROR_ZERO_RETURN
:

494 i‡(
	`SSL_gë_shutdown
(
bev_s¶
->
s¶
Ë& 
SSL_RECEIVED_SHUTDOWN
)

495 
evít
 = 
BEV_EVENT_EOF
;

497 
dúty_shutdown
 = 1;

499 
SSL_ERROR_SYSCALL
:

501 i‡(
ªt
 =0 && 
	`ERR_≥ek_îr‹
() == 0)

502 
dúty_shutdown
 = 1;

504 
SSL_ERROR_SSL
:

507 
SSL_ERROR_WANT_X509_LOOKUP
:

510 
SSL_ERROR_NONE
:

511 
SSL_ERROR_WANT_READ
:

512 
SSL_ERROR_WANT_WRITE
:

513 
SSL_ERROR_WANT_CONNECT
:

514 
SSL_ERROR_WANT_ACCEPT
:

517 
	`evít_w¨nx
("BUG: U√x≥˘ed O≥nSSLÉº‹ codê%d", 
îrcode
);

521 (
îr
 = 
	`ERR_gë_îr‹
())) {

522 
	`put_îr‹
(
bev_s¶
, 
îr
);

525 i‡(
dúty_shutdown
 && 
bev_s¶
->
Ælow_dúty_shutdown
)

526 
evít
 = 
BEV_EVENT_EOF
;

528 
	`°›_ªadög
(
bev_s¶
);

529 
	`°›_wrôög
(
bev_s¶
);

531 
	`_buf„ªvít_run_evítcb
(&
bev_s¶
->
bev
.bev, 
evít
);

532 
	}
}

535 
	$öô_bio_cou¡s
(
buf„ªvít_›ís¶
 *
bev_s¶
)

537 
bev_s¶
->
cou¡s
.
n_wrôãn
 =

538 
	`BIO_numbî_wrôãn
(
	`SSL_gë_wbio
(
bev_s¶
->
s¶
));

539 
bev_s¶
->
cou¡s
.
n_ªad
 =

540 
	`BIO_numbî_ªad
(
	`SSL_gë_rbio
(
bev_s¶
->
s¶
));

541 
	}
}

543 
ölöe
 

544 
	$de¸emít_buckës
(
buf„ªvít_›ís¶
 *
bev_s¶
)

546 
num_w
 = 
	`BIO_numbî_wrôãn
(
	`SSL_gë_wbio
(
bev_s¶
->
s¶
));

547 
num_r
 = 
	`BIO_numbî_ªad
(
	`SSL_gë_rbio
(
bev_s¶
->
s¶
));

549 
w
 = 
num_w
 - 
bev_s¶
->
cou¡s
.
n_wrôãn
;

550 
r
 = 
num_r
 - 
bev_s¶
->
cou¡s
.
n_ªad
;

551 i‡(
w
)

552 
	`_buf„ªvít_de¸emít_wrôe_buckës
(&
bev_s¶
->
bev
, 
w
);

553 i‡(
r
)

554 
	`_buf„ªvít_de¸emít_ªad_buckës
(&
bev_s¶
->
bev
, 
r
);

555 
bev_s¶
->
cou¡s
.
n_wrôãn
 = 
num_w
;

556 
bev_s¶
->
cou¡s
.
n_ªad
 = 
num_r
;

557 
	}
}

559 
	#OP_MADE_PROGRESS
 1

	)

560 
	#OP_BLOCKED
 2

	)

561 
	#OP_ERR
 4

	)

566 
	$do_ªad
(
buf„ªvít_›ís¶
 *
bev_s¶
, 
n_to_ªad
) {

568 
buf„ªvít
 *
bev
 = &
bev_s¶
->bev.bev;

569 
evbuf„r
 *
öput
 = 
bev
->input;

570 
r
, 
n
, 
i
, 
n_u£d
 = 0, 
©mo°
;

571 
evbuf„r_iovec
 
•a˚
[2];

572 
ªsu…
 = 0;

574 i‡(
bev_s¶
->
bev
.
ªad_su•íded
)

577 
©mo°
 = 
	`_buf„ªvít_gë_ªad_max
(&
bev_s¶
->
bev
);

578 i‡(
n_to_ªad
 > 
©mo°
)

579 
n_to_ªad
 = 
©mo°
;

581 
n
 = 
	`evbuf„r_ª£rve_•a˚
(
öput
, 
n_to_ªad
, 
•a˚
, 2);

582 i‡(
n
 < 0)

583  
OP_ERR
;

585 
i
=0; i<
n
; ++i) {

586 i‡(
bev_s¶
->
bev
.
ªad_su•íded
)

588 
r
 = 
	`SSL_ªad
(
bev_s¶
->
s¶
, 
•a˚
[
i
].
iov_ba£
, s∑˚[i].
iov_Àn
);

589 i‡(
r
>0) {

590 
ªsu…
 |
OP_MADE_PROGRESS
;

591 i‡(
bev_s¶
->
ªad_blocked_⁄_wrôe
)

592 i‡(
	`˛ór_rbow
(
bev_s¶
) < 0)

593  
OP_ERR
 | 
ªsu…
;

594 ++
n_u£d
;

595 
•a˚
[
i
].
iov_Àn
 = 
r
;

596 
	`de¸emít_buckës
(
bev_s¶
);

598 
îr
 = 
	`SSL_gë_îr‹
(
bev_s¶
->
s¶
, 
r
);

599 
	`¥öt_îr
(
îr
);

600 
îr
) {

601 
SSL_ERROR_WANT_READ
:

603 i‡(
bev_s¶
->
ªad_blocked_⁄_wrôe
)

604 i‡(
	`˛ór_rbow
(
bev_s¶
) < 0)

605  
OP_ERR
 | 
ªsu…
;

607 
SSL_ERROR_WANT_WRITE
:

610 i‡(!
bev_s¶
->
ªad_blocked_⁄_wrôe
)

611 i‡(
	`£t_rbow
(
bev_s¶
) < 0)

612  
OP_ERR
 | 
ªsu…
;

615 
	`c⁄n_˛o£d
(
bev_s¶
, 
îr
, 
r
);

618 
ªsu…
 |
OP_BLOCKED
;

623 i‡(
n_u£d
) {

624 
	`evbuf„r_commô_•a˚
(
öput
, 
•a˚
, 
n_u£d
);

625 i‡(
bev_s¶
->
undîlyög
)

626 
	`BEV_RESET_GENERIC_READ_TIMEOUT
(
bev
);

629  
ªsu…
;

630 
	}
}

635 
	$do_wrôe
(
buf„ªvít_›ís¶
 *
bev_s¶
, 
©mo°
)

637 
i
, 
r
, 
n
, 
n_wrôãn
 = 0;

638 
buf„ªvít
 *
bev
 = &
bev_s¶
->bev.bev;

639 
evbuf„r
 *
ouçut
 = 
bev
->output;

640 
evbuf„r_iovec
 
•a˚
[8];

641 
ªsu…
 = 0;

643 i‡(
bev_s¶
->
œ°_wrôe
 > 0)

644 
©mo°
 = 
bev_s¶
->
œ°_wrôe
;

646 
©mo°
 = 
	`_buf„ªvít_gë_wrôe_max
(&
bev_s¶
->
bev
);

648 
n
 = 
	`evbuf„r_≥ek
(
ouçut
, 
©mo°
, 
NULL
, 
•a˚
, 8);

649 i‡(
n
 < 0)

650  
OP_ERR
 | 
ªsu…
;

652 i‡(
n
 > 8)

653 
n
 = 8;

654 
i
=0; i < 
n
; ++i) {

655 i‡(
bev_s¶
->
bev
.
wrôe_su•íded
)

661 i‡(
•a˚
[
i
].
iov_Àn
 == 0)

664 
r
 = 
	`SSL_wrôe
(
bev_s¶
->
s¶
, 
•a˚
[
i
].
iov_ba£
,

665 
•a˚
[
i
].
iov_Àn
);

666 i‡(
r
 > 0) {

667 
ªsu…
 |
OP_MADE_PROGRESS
;

668 i‡(
bev_s¶
->
wrôe_blocked_⁄_ªad
)

669 i‡(
	`˛ór_wb‹
(
bev_s¶
) < 0)

670  
OP_ERR
 | 
ªsu…
;

671 
n_wrôãn
 +
r
;

672 
bev_s¶
->
œ°_wrôe
 = -1;

673 
	`de¸emít_buckës
(
bev_s¶
);

675 
îr
 = 
	`SSL_gë_îr‹
(
bev_s¶
->
s¶
, 
r
);

676 
	`¥öt_îr
(
îr
);

677 
îr
) {

678 
SSL_ERROR_WANT_WRITE
:

680 i‡(
bev_s¶
->
wrôe_blocked_⁄_ªad
)

681 i‡(
	`˛ór_wb‹
(
bev_s¶
) < 0)

682  
OP_ERR
 | 
ªsu…
;

683 
bev_s¶
->
œ°_wrôe
 = 
•a˚
[
i
].
iov_Àn
;

685 
SSL_ERROR_WANT_READ
:

688 i‡(!
bev_s¶
->
wrôe_blocked_⁄_ªad
)

689 i‡(
	`£t_wb‹
(
bev_s¶
) < 0)

690  
OP_ERR
 | 
ªsu…
;

691 
bev_s¶
->
œ°_wrôe
 = 
•a˚
[
i
].
iov_Àn
;

694 
	`c⁄n_˛o£d
(
bev_s¶
, 
îr
, 
r
);

695 
bev_s¶
->
œ°_wrôe
 = -1;

698 
ªsu…
 |
OP_BLOCKED
;

702 i‡(
n_wrôãn
) {

703 
	`evbuf„r_døö
(
ouçut
, 
n_wrôãn
);

704 i‡(
bev_s¶
->
undîlyög
)

705 
	`BEV_RESET_GENERIC_WRITE_TIMEOUT
(
bev
);

707 i‡(
	`evbuf„r_gë_Àngth
(
ouçut
Ë<
bev
->
wm_wrôe
.
low
)

708 
	`_buf„ªvít_run_wrôecb
(
bev
);

710  
ªsu…
;

711 
	}
}

713 
	#WRITE_FRAME
 15000

	)

715 
	#READ_DEFAULT
 4096

	)

720 
	$byãs_to_ªad
(
buf„ªvít_›ís¶
 *
bev
)

722 
evbuf„r
 *
öput
 = 
bev
->bev.bev.input;

723 
evít_w©îm¨k
 *
wm
 = &
bev
->bev.bev.
wm_ªad
;

724 
ªsu…
 = 
READ_DEFAULT
;

725 
ev_ssize_t
 
limô
;

729 i‡(
bev
->
wrôe_blocked_⁄_ªad
) {

733 i‡(! (
bev
->bev.bev.
íabÀd
 & 
EV_READ
)) {

737 i‡(
bev
->bev.
ªad_su•íded
) {

741 i‡(
wm
->
high
) {

742 i‡(
	`evbuf„r_gë_Àngth
(
öput
Ë>
wm
->
high
) {

746 
ªsu…
 = 
wm
->
high
 - 
	`evbuf„r_gë_Àngth
(
öput
);

748 
ªsu…
 = 
READ_DEFAULT
;

752 
limô
 = 
	`_buf„ªvít_gë_ªad_max
(&
bev
->bev);

753 i‡(
ªsu…
 > 
limô
) {

754 
ªsu…
 = 
limô
;

757  
ªsu…
;

758 
	}
}

766 
	$c⁄sidî_ªadög
(
buf„ªvít_›ís¶
 *
bev_s¶
)

768 
r
;

769 
n_to_ªad
;

770 
Æl_ªsu…_Êags
 = 0;

772 
bev_s¶
->
wrôe_blocked_⁄_ªad
) {

773 
r
 = 
	`do_wrôe
(
bev_s¶
, 
WRITE_FRAME
);

774 i‡(
r
 & (
OP_BLOCKED
|
OP_ERR
))

777 i‡(
bev_s¶
->
wrôe_blocked_⁄_ªad
)

780 
n_to_ªad
 = 
	`byãs_to_ªad
(
bev_s¶
);

782 
n_to_ªad
) {

783 
r
 = 
	`do_ªad
(
bev_s¶
, 
n_to_ªad
);

784 
Æl_ªsu…_Êags
 |
r
;

786 i‡(
r
 & (
OP_BLOCKED
|
OP_ERR
))

789 i‡(
bev_s¶
->
bev
.
ªad_su•íded
)

800 
n_to_ªad
 = 
	`SSL_≥ndög
(
bev_s¶
->
s¶
);

816 i‡(!
n_to_ªad
 && 
bev_s¶
->
undîlyög
)

817 
n_to_ªad
 = 
	`byãs_to_ªad
(
bev_s¶
);

820 i‡(
Æl_ªsu…_Êags
 & 
OP_MADE_PROGRESS
) {

821 
buf„ªvít
 *
bev
 = &
bev_s¶
->bev.bev;

822 
evbuf„r
 *
öput
 = 
bev
->input;

824 i‡(
	`evbuf„r_gë_Àngth
(
öput
Ë>
bev
->
wm_ªad
.
low
) {

825 
	`_buf„ªvít_run_ªadcb
(
bev
);

829 i‡(!
bev_s¶
->
undîlyög
) {

831 i‡(
bev_s¶
->
bev
.
ªad_su•íded
 ||

832 !(
bev_s¶
->
bev
.bev.
íabÀd
 & 
EV_READ
)) {

833 
	`evít_dñ
(&
bev_s¶
->
bev
.bev.
ev_ªad
);

836 
	}
}

839 
	$c⁄sidî_wrôög
(
buf„ªvít_›ís¶
 *
bev_s¶
)

841 
r
;

842 
evbuf„r
 *
ouçut
 = 
bev_s¶
->
bev
.bev.output;

843 
evbuf„r
 *
èrgë
 = 
NULL
;

844 
evít_w©îm¨k
 *
wm
 = 
NULL
;

846 
bev_s¶
->
ªad_blocked_⁄_wrôe
) {

847 
r
 = 
	`do_ªad
(
bev_s¶
, 1024);

848 i‡(
r
 & 
OP_MADE_PROGRESS
) {

849 
buf„ªvít
 *
bev
 = &
bev_s¶
->bev.bev;

850 
evbuf„r
 *
öput
 = 
bev
->input;

852 i‡(
	`evbuf„r_gë_Àngth
(
öput
Ë>
bev
->
wm_ªad
.
low
) {

853 
	`_buf„ªvít_run_ªadcb
(
bev
);

856 i‡(
r
 & (
OP_ERR
|
OP_BLOCKED
))

859 i‡(
bev_s¶
->
ªad_blocked_⁄_wrôe
)

861 i‡(
bev_s¶
->
undîlyög
) {

862 
èrgë
 = 
bev_s¶
->
undîlyög
->
ouçut
;

863 
wm
 = &
bev_s¶
->
undîlyög
->
wm_wrôe
;

865 (
bev_s¶
->
bev
.bev.
íabÀd
 & 
EV_WRITE
) &&

866 (! 
bev_s¶
->
bev
.
wrôe_su•íded
) &&

867 
	`evbuf„r_gë_Àngth
(
ouçut
) &&

868 (!
èrgë
 || (! 
wm
->
high
 || 
	`evbuf„r_gë_Àngth
(target) < wm->high))) {

869 
n_to_wrôe
;

870 i‡(
wm
 && wm->
high
)

871 
n_to_wrôe
 = 
wm
->
high
 - 
	`evbuf„r_gë_Àngth
(
èrgë
);

873 
n_to_wrôe
 = 
WRITE_FRAME
;

874 
r
 = 
	`do_wrôe
(
bev_s¶
, 
n_to_wrôe
);

875 i‡(
r
 & (
OP_BLOCKED
|
OP_ERR
))

879 i‡(!
bev_s¶
->
undîlyög
) {

880 i‡(
	`evbuf„r_gë_Àngth
(
ouçut
) == 0) {

881 
	`evít_dñ
(&
bev_s¶
->
bev
.bev.
ev_wrôe
);

882 } i‡(
bev_s¶
->
bev
.
wrôe_su•íded
 ||

883 !(
bev_s¶
->
bev
.bev.
íabÀd
 & 
EV_WRITE
)) {

885 
	`evít_dñ
(&
bev_s¶
->
bev
.bev.
ev_wrôe
);

888 
	}
}

891 
	$be_›ís¶_ªadcb
(
buf„ªvít
 *
bev_ba£
, *
˘x
)

893 
buf„ªvít_›ís¶
 *
bev_s¶
 = 
˘x
;

894 
	`c⁄sidî_ªadög
(
bev_s¶
);

895 
	}
}

898 
	$be_›ís¶_wrôecb
(
buf„ªvít
 *
bev_ba£
, *
˘x
)

900 
buf„ªvít_›ís¶
 *
bev_s¶
 = 
˘x
;

901 
	`c⁄sidî_wrôög
(
bev_s¶
);

902 
	}
}

905 
	$be_›ís¶_evítcb
(
buf„ªvít
 *
bev_ba£
, 
wh©
, *
˘x
)

907 
buf„ªvít_›ís¶
 *
bev_s¶
 = 
˘x
;

908 
evít
 = 0;

910 i‡(
wh©
 & 
BEV_EVENT_EOF
) {

911 i‡(
bev_s¶
->
Ælow_dúty_shutdown
)

912 
evít
 = 
BEV_EVENT_EOF
;

914 
evít
 = 
BEV_EVENT_ERROR
;

915 } i‡(
wh©
 & 
BEV_EVENT_TIMEOUT
) {

917 
evít
 = 
wh©
;

918 } i‡(
wh©
 & 
BEV_EVENT_ERROR
) {

920 
evít
 = 
wh©
;

921 } i‡(
wh©
 & 
BEV_EVENT_CONNECTED
) {

925 i‡(
evít
)

926 
	`_buf„ªvít_run_evítcb
(&
bev_s¶
->
bev
.bev, 
evít
);

927 
	}
}

930 
	$be_›ís¶_ªadevítcb
(
evutû_sockë_t
 
fd
, 
wh©
, *
±r
)

932 
buf„ªvít_›ís¶
 *
bev_s¶
 = 
±r
;

933 
	`_buf„ªvít_ö¸ef_™d_lock
(&
bev_s¶
->
bev
.bev);

934 i‡(
wh©
 =
EV_TIMEOUT
) {

935 
	`_buf„ªvít_run_evítcb
(&
bev_s¶
->
bev
.bev,

936 
BEV_EVENT_TIMEOUT
|
BEV_EVENT_READING
);

938 
	`c⁄sidî_ªadög
(
bev_s¶
);

940 
	`_buf„ªvít_de¸ef_™d_u∆ock
(&
bev_s¶
->
bev
.bev);

941 
	}
}

944 
	$be_›ís¶_wrôìvítcb
(
evutû_sockë_t
 
fd
, 
wh©
, *
±r
)

946 
buf„ªvít_›ís¶
 *
bev_s¶
 = 
±r
;

947 
	`_buf„ªvít_ö¸ef_™d_lock
(&
bev_s¶
->
bev
.bev);

948 i‡(
wh©
 =
EV_TIMEOUT
) {

949 
	`_buf„ªvít_run_evítcb
(&
bev_s¶
->
bev
.bev,

950 
BEV_EVENT_TIMEOUT
|
BEV_EVENT_WRITING
);

952 
	`c⁄sidî_wrôög
(
bev_s¶
);

954 
	`_buf„ªvít_de¸ef_™d_u∆ock
(&
bev_s¶
->
bev
.bev);

955 
	}
}

958 
	$£t_›í_ˇŒbacks
(
buf„ªvít_›ís¶
 *
bev_s¶
, 
evutû_sockë_t
 
fd
)

960 i‡(
bev_s¶
->
undîlyög
) {

961 
	`buf„ªvít_£tcb
(
bev_s¶
->
undîlyög
,

962 
be_›ís¶_ªadcb
, 
be_›ís¶_wrôecb
, 
be_›ís¶_evítcb
,

963 
bev_s¶
);

966 
buf„ªvít
 *
bev
 = &
bev_s¶
->bev.bev;

967 
Ωídög
=0, 
w≥ndög
=0, 
r1
=0, 
r2
=0;

968 i‡(
fd
 < 0 && 
bev_s¶
->
fd_is_£t
)

969 
fd
 = 
	`evít_gë_fd
(&
bev
->
ev_ªad
);

970 i‡(
bev_s¶
->
fd_is_£t
) {

971 
Ωídög
 = 
	`evít_≥ndög
(&
bev
->
ev_ªad
, 
EV_READ
, 
NULL
);

972 
w≥ndög
 = 
	`evít_≥ndög
(&
bev
->
ev_wrôe
, 
EV_WRITE
, 
NULL
);

973 
	`evít_dñ
(&
bev
->
ev_ªad
);

974 
	`evít_dñ
(&
bev
->
ev_wrôe
);

976 
	`evít_assign
(&
bev
->
ev_ªad
, bev->
ev_ba£
, 
fd
,

977 
EV_READ
|
EV_PERSIST
, 
be_›ís¶_ªadevítcb
, 
bev_s¶
);

978 
	`evít_assign
(&
bev
->
ev_wrôe
, bev->
ev_ba£
, 
fd
,

979 
EV_WRITE
|
EV_PERSIST
, 
be_›ís¶_wrôìvítcb
, 
bev_s¶
);

980 i‡(
Ωídög
)

981 
r1
 = 
	`_buf„ªvít_add_evít
(&
bev
->
ev_ªad
, &bev->
timeout_ªad
);

982 i‡(
w≥ndög
)

983 
r2
 = 
	`_buf„ªvít_add_evít
(&
bev
->
ev_wrôe
, &bev->
timeout_wrôe
);

984 i‡(
fd
 >= 0) {

985 
bev_s¶
->
fd_is_£t
 = 1;

987  (
r1
<0 || 
r2
<0) ? -1 : 0;

989 
	}
}

992 
	$do_h™dshake
(
buf„ªvít_›ís¶
 *
bev_s¶
)

994 
r
;

996 
bev_s¶
->
°©e
) {

998 
BUFFEREVENT_SSL_OPEN
:

999 
	`EVUTIL_ASSERT
(0);

1001 
BUFFEREVENT_SSL_CONNECTING
:

1002 
BUFFEREVENT_SSL_ACCEPTING
:

1003 
r
 = 
	`SSL_do_h™dshake
(
bev_s¶
->
s¶
);

1006 
	`de¸emít_buckës
(
bev_s¶
);

1008 i‡(
r
==1) {

1010 
bev_s¶
->
°©e
 = 
BUFFEREVENT_SSL_OPEN
;

1011 
	`£t_›í_ˇŒbacks
(
bev_s¶
, -1);

1013 
	`buf„ªvít_íabÀ
(&
bev_s¶
->
bev
.bev, bev_s¶->bev.bev.
íabÀd
);

1014 
	`_buf„ªvít_run_evítcb
(&
bev_s¶
->
bev
.bev,

1015 
BEV_EVENT_CONNECTED
);

1018 
îr
 = 
	`SSL_gë_îr‹
(
bev_s¶
->
s¶
, 
r
);

1019 
	`¥öt_îr
(
îr
);

1020 
îr
) {

1021 
SSL_ERROR_WANT_WRITE
:

1022 i‡(!
bev_s¶
->
undîlyög
) {

1023 
	`°›_ªadög
(
bev_s¶
);

1024  
	`°¨t_wrôög
(
bev_s¶
);

1027 
SSL_ERROR_WANT_READ
:

1028 i‡(!
bev_s¶
->
undîlyög
) {

1029 
	`°›_wrôög
(
bev_s¶
);

1030  
	`°¨t_ªadög
(
bev_s¶
);

1034 
	`c⁄n_˛o£d
(
bev_s¶
, 
îr
, 
r
);

1038 
	}
}

1041 
	$be_›ís¶_h™dshakecb
(
buf„ªvít
 *
bev_ba£
, *
˘x
)

1043 
buf„ªvít_›ís¶
 *
bev_s¶
 = 
˘x
;

1044 
	`do_h™dshake
(
bev_s¶
);

1045 
	}
}

1048 
	$be_›ís¶_h™dshakìvítcb
(
evutû_sockë_t
 
fd
, 
wh©
, *
±r
)

1050 
buf„ªvít_›ís¶
 *
bev_s¶
 = 
±r
;

1052 
	`_buf„ªvít_ö¸ef_™d_lock
(&
bev_s¶
->
bev
.bev);

1053 i‡(
wh©
 & 
EV_TIMEOUT
) {

1054 
	`_buf„ªvít_run_evítcb
(&
bev_s¶
->
bev
.bev, 
BEV_EVENT_TIMEOUT
);

1056 
	`do_h™dshake
(
bev_s¶
);

1057 
	`_buf„ªvít_de¸ef_™d_u∆ock
(&
bev_s¶
->
bev
.bev);

1058 
	}
}

1061 
	$£t_h™dshake_ˇŒbacks
(
buf„ªvít_›ís¶
 *
bev_s¶
, 
evutû_sockë_t
 
fd
)

1063 i‡(
bev_s¶
->
undîlyög
) {

1064 
	`buf„ªvít_£tcb
(
bev_s¶
->
undîlyög
,

1065 
be_›ís¶_h™dshakecb
, be_openssl_handshakecb,

1066 
be_›ís¶_evítcb
,

1067 
bev_s¶
);

1068  
	`do_h™dshake
(
bev_s¶
);

1070 
buf„ªvít
 *
bev
 = &
bev_s¶
->bev.bev;

1071 
r1
=0, 
r2
=0;

1072 i‡(
fd
 < 0 && 
bev_s¶
->
fd_is_£t
)

1073 
fd
 = 
	`evít_gë_fd
(&
bev
->
ev_ªad
);

1074 i‡(
bev_s¶
->
fd_is_£t
) {

1075 
	`evít_dñ
(&
bev
->
ev_ªad
);

1076 
	`evít_dñ
(&
bev
->
ev_wrôe
);

1078 
	`evít_assign
(&
bev
->
ev_ªad
, bev->
ev_ba£
, 
fd
,

1079 
EV_READ
|
EV_PERSIST
, 
be_›ís¶_h™dshakìvítcb
, 
bev_s¶
);

1080 
	`evít_assign
(&
bev
->
ev_wrôe
, bev->
ev_ba£
, 
fd
,

1081 
EV_WRITE
|
EV_PERSIST
, 
be_›ís¶_h™dshakìvítcb
, 
bev_s¶
);

1082 i‡(
fd
 >= 0) {

1083 
r1
 = 
	`_buf„ªvít_add_evít
(&
bev
->
ev_ªad
, &bev->
timeout_ªad
);

1084 
r2
 = 
	`_buf„ªvít_add_evít
(&
bev
->
ev_wrôe
, &bev->
timeout_wrôe
);

1085 
bev_s¶
->
fd_is_£t
 = 1;

1087  (
r1
<0 || 
r2
<0) ? -1 : 0;

1089 
	}
}

1092 
	$buf„ªvít_s¶_ª√gŸüã
(
buf„ªvít
 *
bev
)

1094 
buf„ªvít_›ís¶
 *
bev_s¶
 = 
	`upˇ°
(
bev
);

1095 i‡(!
bev_s¶
)

1097 i‡(
	`SSL_ª√gŸüã
(
bev_s¶
->
s¶
) < 0)

1099 
bev_s¶
->
°©e
 = 
BUFFEREVENT_SSL_CONNECTING
;

1100 i‡(
	`£t_h™dshake_ˇŒbacks
(
bev_s¶
, -1) < 0)

1102 i‡(!
bev_s¶
->
undîlyög
)

1103  
	`do_h™dshake
(
bev_s¶
);

1105 
	}
}

1108 
	$be_›ís¶_outbuf_cb
(
evbuf„r
 *
buf
,

1109 c⁄° 
evbuf„r_cb_öfo
 *
cböfo
, *
¨g
)

1111 
buf„ªvít_›ís¶
 *
bev_s¶
 = 
¨g
;

1112 
r
 = 0;

1115 i‡(
cböfo
->
n_added
 && 
bev_s¶
->
°©e
 =
BUFFEREVENT_SSL_OPEN
) {

1116 i‡(
cböfo
->
‹ig_size
 == 0)

1117 
r
 = 
	`_buf„ªvít_add_evít
(&
bev_s¶
->
bev
.bev.
ev_wrôe
,

1118 &
bev_s¶
->
bev
.bev.
timeout_wrôe
);

1119 
	`c⁄sidî_wrôög
(
bev_s¶
);

1122 ()
r
;

1123 
	}
}

1127 
	$be_›ís¶_íabÀ
(
buf„ªvít
 *
bev
, 
evíts
)

1129 
buf„ªvít_›ís¶
 *
bev_s¶
 = 
	`upˇ°
(
bev
);

1130 
r1
 = 0, 
r2
 = 0;

1132 i‡(
bev_s¶
->
°©e
 !
BUFFEREVENT_SSL_OPEN
)

1135 i‡(
evíts
 & 
EV_READ
)

1136 
r1
 = 
	`°¨t_ªadög
(
bev_s¶
);

1137 i‡(
evíts
 & 
EV_WRITE
)

1138 
r2
 = 
	`°¨t_wrôög
(
bev_s¶
);

1140 i‡(
bev_s¶
->
undîlyög
) {

1141 i‡(
evíts
 & 
EV_READ
)

1142 
	`BEV_RESET_GENERIC_READ_TIMEOUT
(
bev
);

1143 i‡(
evíts
 & 
EV_WRITE
)

1144 
	`BEV_RESET_GENERIC_WRITE_TIMEOUT
(
bev
);

1146 i‡(
evíts
 & 
EV_READ
)

1147 
	`c⁄sidî_ªadög
(
bev_s¶
);

1148 i‡(
evíts
 & 
EV_WRITE
)

1149 
	`c⁄sidî_wrôög
(
bev_s¶
);

1151  (
r1
 < 0 || 
r2
 < 0) ? -1 : 0;

1152 
	}
}

1155 
	$be_›ís¶_dißbÀ
(
buf„ªvít
 *
bev
, 
evíts
)

1157 
buf„ªvít_›ís¶
 *
bev_s¶
 = 
	`upˇ°
(
bev
);

1158 i‡(
bev_s¶
->
°©e
 !
BUFFEREVENT_SSL_OPEN
)

1161 i‡(
evíts
 & 
EV_READ
)

1162 
	`°›_ªadög
(
bev_s¶
);

1163 i‡(
evíts
 & 
EV_WRITE
)

1164 
	`°›_wrôög
(
bev_s¶
);

1166 i‡(
bev_s¶
->
undîlyög
) {

1167 i‡(
evíts
 & 
EV_READ
)

1168 
	`BEV_DEL_GENERIC_READ_TIMEOUT
(
bev
);

1169 i‡(
evíts
 & 
EV_WRITE
)

1170 
	`BEV_DEL_GENERIC_WRITE_TIMEOUT
(
bev
);

1173 
	}
}

1176 
	$be_›ís¶_de°ru˘
(
buf„ªvít
 *
bev
)

1178 
buf„ªvít_›ís¶
 *
bev_s¶
 = 
	`upˇ°
(
bev
);

1180 i‡(
bev_s¶
->
undîlyög
) {

1181 
	`_buf„ªvít_dñ_gíîic_timeout_cbs
(
bev
);

1183 
	`evít_dñ
(&
bev
->
ev_ªad
);

1184 
	`evít_dñ
(&
bev
->
ev_wrôe
);

1187 i‡(
bev_s¶
->
bev
.
›ti⁄s
 & 
BEV_OPT_CLOSE_ON_FREE
) {

1188 i‡(
bev_s¶
->
undîlyög
) {

1189 i‡(
	`BEV_UPCAST
(
bev_s¶
->
undîlyög
)->
ªf˙t
 < 2) {

1190 
	`evít_w¨nx
("BEV_OPT_CLOSE_ON_FREE set onán "

1193 
	`buf„ªvít_‰ì
(
bev_s¶
->
undîlyög
);

1194 
bev_s¶
->
undîlyög
 = 
NULL
;

1197 
evutû_sockë_t
 
fd
 = -1;

1198 
BIO
 *
bio
 = 
	`SSL_gë_wbio
(
bev_s¶
->
s¶
);

1199 i‡(
bio
)

1200 
fd
 = 
	`BIO_gë_fd
(
bio
, 
NULL
);

1201 i‡(
fd
 >= 0)

1202 
	`evutû_˛o£sockë
(
fd
);

1204 
	`SSL_‰ì
(
bev_s¶
->
s¶
);

1206 i‡(
bev_s¶
->
undîlyög
) {

1207 i‡(
bev_s¶
->
undîlyög
->
îr‹cb
 =
be_›ís¶_evítcb
)

1208 
	`buf„ªvít_£tcb
(
bev_s¶
->
undîlyög
,

1209 
NULL
,NULL,NULL,NULL);

1210 
	`buf„ªvít_unsu•íd_ªad
(
bev_s¶
->
undîlyög
,

1211 
BEV_SUSPEND_FILT_READ
);

1214 
	}
}

1217 
	$be_›ís¶_adj_timeouts
(
buf„ªvít
 *
bev
)

1219 
buf„ªvít_›ís¶
 *
bev_s¶
 = 
	`upˇ°
(
bev
);

1221 i‡(
bev_s¶
->
undîlyög
)

1222  
	`_buf„ªvít_gíîic_adj_timeouts
(
bev
);

1224 
r1
=0, 
r2
=0;

1225 i‡(
	`evít_≥ndög
(&
bev
->
ev_ªad
, 
EV_READ
, 
NULL
))

1226 
r1
 = 
	`_buf„ªvít_add_evít
(&
bev
->
ev_ªad
, &bev->
timeout_ªad
);

1227 i‡(
	`evít_≥ndög
(&
bev
->
ev_wrôe
, 
EV_WRITE
, 
NULL
))

1228 
r2
 = 
	`_buf„ªvít_add_evít
(&
bev
->
ev_wrôe
, &bev->
timeout_wrôe
);

1229  (
r1
<0 || 
r2
<0) ? -1 : 0;

1231 
	}
}

1234 
	$be_›ís¶_Êush
(
buf„ªvít
 *
bu„v
,

1235 
iŸy≥
, 
buf„ªvít_Êush_mode
 
mode
)

1239 
	}
}

1242 
	$be_›ís¶_˘æ
(
buf„ªvít
 *
bev
,

1243 
buf„ªvít_˘æ_›
 
›
, 
buf„ªvít_˘æ_d©a
 *
d©a
)

1245 
buf„ªvít_›ís¶
 *
bev_s¶
 = 
	`upˇ°
(
bev
);

1246 
›
) {

1247 
BEV_CTRL_SET_FD
:

1248 i‡(
bev_s¶
->
undîlyög
)

1251 
BIO
 *
bio
;

1252 
bio
 = 
	`BIO_√w_sockë
(
d©a
->
fd
, 0);

1253 
	`SSL_£t_bio
(
bev_s¶
->
s¶
, 
bio
, bio);

1254 
bev_s¶
->
fd_is_£t
 = 1;

1256 i‡(
bev_s¶
->
°©e
 =
BUFFEREVENT_SSL_OPEN
)

1257  
	`£t_›í_ˇŒbacks
(
bev_s¶
, 
d©a
->
fd
);

1259  
	`£t_h™dshake_ˇŒbacks
(
bev_s¶
, 
d©a
->
fd
);

1261 
BEV_CTRL_GET_FD
:

1262 i‡(
bev_s¶
->
undîlyög
)

1264 i‡(!
bev_s¶
->
fd_is_£t
)

1266 
d©a
->
fd
 = 
	`evít_gë_fd
(&
bev
->
ev_ªad
);

1268 
BEV_CTRL_GET_UNDERLYING
:

1269 i‡(!
bev_s¶
->
undîlyög
)

1271 
d©a
->
±r
 = 
bev_s¶
->
undîlyög
;

1273 
BEV_CTRL_CANCEL_ALL
:

1277 
	}
}

1279 
SSL
 *

1280 
	$buf„ªvít_›ís¶_gë_s¶
(
buf„ªvít
 *
bu„v
)

1282 
buf„ªvít_›ís¶
 *
bev_s¶
 = 
	`upˇ°
(
bu„v
);

1283 i‡(!
bev_s¶
)

1284  
NULL
;

1285  
bev_s¶
->
s¶
;

1286 
	}
}

1288 
buf„ªvít
 *

1289 
	$buf„ªvít_›ís¶_√w_im∂
(
evít_ba£
 *
ba£
,

1290 
buf„ªvít
 *
undîlyög
,

1291 
evutû_sockë_t
 
fd
,

1292 
SSL
 *
s¶
,

1293 
buf„ªvít_s¶_°©e
 
°©e
,

1294 
›ti⁄s
)

1296 
buf„ªvít_›ís¶
 *
bev_s¶
 = 
NULL
;

1297 
buf„ªvít_¥iv©e
 *
bev_p
 = 
NULL
;

1298 
tmp_›ti⁄s
 = 
›ti⁄s
 & ~
BEV_OPT_THREADSAFE
;

1300 i‡(
undîlyög
 !
NULL
 && 
fd
 >= 0)

1301  
NULL
;

1303 i‡(!(
bev_s¶
 = 
	`mm_ˇŒoc
(1, (
buf„ªvít_›ís¶
))))

1304 
îr
;

1306 
bev_p
 = &
bev_s¶
->
bev
;

1308 i‡(
	`buf„ªvít_öô_comm⁄
(
bev_p
, 
ba£
,

1309 &
buf„ªvít_›s_›ís¶
, 
tmp_›ti⁄s
) < 0)

1310 
îr
;

1314 
	`SSL_£t_mode
(
s¶
, 
SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER
);

1316 
bev_s¶
->
undîlyög
 = underlying;

1317 
bev_s¶
->
s¶
 = ssl;

1319 
bev_s¶
->
outbuf_cb
 = 
	`evbuf„r_add_cb
(
bev_p
->
bev
.
ouçut
,

1320 
be_›ís¶_outbuf_cb
, 
bev_s¶
);

1322 i‡(
›ti⁄s
 & 
BEV_OPT_THREADSAFE
)

1323 
	`buf„ªvít_íabÀ_lockög
(&
bev_s¶
->
bev
.bev, 
NULL
);

1325 i‡(
undîlyög
) {

1326 
	`_buf„ªvít_öô_gíîic_timeout_cbs
(&
bev_s¶
->
bev
.bev);

1327 
	`buf„ªvít_ö¸ef
(
undîlyög
);

1330 
bev_s¶
->
°©e
 = state;

1331 
bev_s¶
->
œ°_wrôe
 = -1;

1333 
	`öô_bio_cou¡s
(
bev_s¶
);

1335 
°©e
) {

1336 
BUFFEREVENT_SSL_ACCEPTING
:

1337 
	`SSL_£t_ac˚±_°©e
(
bev_s¶
->
s¶
);

1338 i‡(
	`£t_h™dshake_ˇŒbacks
(
bev_s¶
, 
fd
) < 0)

1339 
îr
;

1341 
BUFFEREVENT_SSL_CONNECTING
:

1342 
	`SSL_£t_c⁄√˘_°©e
(
bev_s¶
->
s¶
);

1343 i‡(
	`£t_h™dshake_ˇŒbacks
(
bev_s¶
, 
fd
) < 0)

1344 
îr
;

1346 
BUFFEREVENT_SSL_OPEN
:

1347 i‡(
	`£t_›í_ˇŒbacks
(
bev_s¶
, 
fd
) < 0)

1348 
îr
;

1351 
îr
;

1354 i‡(
undîlyög
) {

1355 
	`buf„ªvít_£tw©îm¨k
(
undîlyög
, 
EV_READ
, 0, 0);

1356 
	`buf„ªvít_íabÀ
(
undîlyög
, 
EV_READ
|
EV_WRITE
);

1357 i‡(
°©e
 =
BUFFEREVENT_SSL_OPEN
)

1358 
	`buf„ªvít_su•íd_ªad
(
undîlyög
,

1359 
BEV_SUSPEND_FILT_READ
);

1361 
bev_s¶
->
bev
.bev.
íabÀd
 = 
EV_READ
|
EV_WRITE
;

1362 i‡(
bev_s¶
->
fd_is_£t
) {

1363 i‡(
°©e
 !
BUFFEREVENT_SSL_OPEN
)

1364 i‡(
	`evít_add
(&
bev_s¶
->
bev
.bev.
ev_ªad
, 
NULL
) < 0)

1365 
îr
;

1366 i‡(
	`evít_add
(&
bev_s¶
->
bev
.bev.
ev_wrôe
, 
NULL
) < 0)

1367 
îr
;

1371  &
bev_s¶
->
bev
.bev;

1372 
îr
:

1373 i‡(
bev_s¶
)

1374 
	`buf„ªvít_‰ì
(&
bev_s¶
->
bev
.bev);

1375  
NULL
;

1376 
	}
}

1378 
buf„ªvít
 *

1379 
	$buf„ªvít_›ís¶_fûãr_√w
(
evít_ba£
 *
ba£
,

1380 
buf„ªvít
 *
undîlyög
,

1381 
SSL
 *
s¶
,

1382 
buf„ªvít_s¶_°©e
 
°©e
,

1383 
›ti⁄s
)

1387 
˛o£_Êag
 = 0;

1388 
BIO
 *
bio
;

1389 i‡(!
undîlyög
)

1390  
NULL
;

1391 i‡(!(
bio
 = 
	`BIO_√w_buf„ªvít
(
undîlyög
, 
˛o£_Êag
)))

1392  
NULL
;

1394 
	`SSL_£t_bio
(
s¶
, 
bio
, bio);

1396  
	`buf„ªvít_›ís¶_√w_im∂
(

1397 
ba£
, 
undîlyög
, -1, 
s¶
, 
°©e
, 
›ti⁄s
);

1398 
	}
}

1400 
buf„ªvít
 *

1401 
	$buf„ªvít_›ís¶_sockë_√w
(
evít_ba£
 *
ba£
,

1402 
evutû_sockë_t
 
fd
,

1403 
SSL
 *
s¶
,

1404 
buf„ªvít_s¶_°©e
 
°©e
,

1405 
›ti⁄s
)

1408 
BIO
 *
bio
 = 
	`SSL_gë_wbio
(
s¶
);

1409 
have_fd
 = -1;

1411 i‡(
bio
)

1412 
have_fd
 = 
	`BIO_gë_fd
(
bio
, 
NULL
);

1414 i‡(
have_fd
 >= 0) {

1416 i‡(
fd
 < 0) {

1418 
fd
 = (
evutû_sockë_t
Ë
have_fd
;

1419 } i‡(
have_fd
 =()
fd
) {

1424  
NULL
;

1426 (Ë
	`BIO_£t_˛o£
(
bio
, 0);

1429 i‡(
fd
 >= 0) {

1431 
bio
 = 
	`BIO_√w_sockë
(
fd
, 0);

1432 
	`SSL_£t_bio
(
s¶
, 
bio
, bio);

1438  
	`buf„ªvít_›ís¶_√w_im∂
(

1439 
ba£
, 
NULL
, 
fd
, 
s¶
, 
°©e
, 
›ti⁄s
);

1440 
	}
}

1443 
	$buf„ªvít_gë_›ís¶_îr‹
(
buf„ªvít
 *
bev
)

1445 
îr
 = 0;

1446 
buf„ªvít_›ís¶
 *
bev_s¶
;

1447 
	`BEV_LOCK
(
bev
);

1448 
bev_s¶
 = 
	`upˇ°
(
bev
);

1449 i‡(
bev_s¶
 && bev_s¶->
n_îr‹s
) {

1450 
îr
 = 
bev_s¶
->
îr‹s
[--bev_s¶->
n_îr‹s
];

1452 
	`BEV_UNLOCK
(
bev
);

1453  
îr
;

1454 
	}
}

	@bufferevent_pair.c

27 
	~<sys/ty≥s.h
>

29 #ifde‡
WIN32


30 
	~<wösock2.h
>

33 
	~"evít2/evít-c⁄fig.h
"

35 
	~"evít2/utû.h
"

36 
	~"evít2/buf„r.h
"

37 
	~"evít2/buf„ªvít.h
"

38 
	~"evít2/buf„ªvít_°ru˘.h
"

39 
	~"evít2/evít.h
"

40 
	~"de„r-öã∫Æ.h
"

41 
	~"buf„ªvít-öã∫Æ.h
"

42 
	~"mm-öã∫Æ.h
"

43 
	~"utû-öã∫Æ.h
"

45 
	sbuf„ªvít_∑ú
 {

46 
buf„ªvít_¥iv©e
 
	mbev
;

47 
buf„ªvít_∑ú
 *
	m∑π√r
;

53 
ölöe
 
buf„ªvít_∑ú
 *

54 
	$upˇ°
(
buf„ªvít
 *
bev
)

56 
buf„ªvít_∑ú
 *
bev_p
;

57 i‡(
bev
->
be_›s
 !&
buf„ªvít_›s_∑ú
)

58  
NULL
;

59 
bev_p
 = 
	`EVUTIL_UPCAST
(
bev
, 
buf„ªvít_∑ú
, bev.bev);

60 
	`EVUTIL_ASSERT
(
bev_p
->
bev
.bev.
be_›s
 =&
buf„ªvít_›s_∑ú
);

61  
bev_p
;

62 
	}
}

64 
	#downˇ°
(
bev_∑ú
Ë(&(bev_∑ú)->
bev
.bev)

	)

66 
ölöe
 

67 
	$ö¸ef_™d_lock
(
buf„ªvít
 *
b
)

69 
buf„ªvít_∑ú
 *
bevp
;

70 
	`_buf„ªvít_ö¸ef_™d_lock
(
b
);

71 
bevp
 = 
	`upˇ°
(
b
);

72 i‡(
bevp
->
∑π√r
)

73 
	`_buf„ªvít_ö¸ef_™d_lock
(
	`downˇ°
(
bevp
->
∑π√r
));

74 
	}
}

76 
ölöe
 

77 
	$de¸ef_™d_u∆ock
(
buf„ªvít
 *
b
)

79 
buf„ªvít_∑ú
 *
bevp
 = 
	`upˇ°
(
b
);

80 i‡(
bevp
->
∑π√r
)

81 
	`_buf„ªvít_de¸ef_™d_u∆ock
(
	`downˇ°
(
bevp
->
∑π√r
));

82 
	`_buf„ªvít_de¸ef_™d_u∆ock
(
b
);

83 
	}
}

87 
be_∑ú_outbuf_cb
(
evbuf„r
 *,

88 c⁄° 
evbuf„r_cb_öfo
 *, *);

90 
buf„ªvít_∑ú
 *

91 
	$buf„ªvít_∑ú_ñt_√w
(
evít_ba£
 *
ba£
,

92 
›ti⁄s
)

94 
buf„ªvít_∑ú
 *
bu„v
;

95 i‡(! (
bu„v
 = 
	`mm_ˇŒoc
(1, (
buf„ªvít_∑ú
))))

96  
NULL
;

97 i‡(
	`buf„ªvít_öô_comm⁄
(&
bu„v
->
bev
, 
ba£
, &
buf„ªvít_›s_∑ú
,

98 
›ti⁄s
)) {

99 
	`mm_‰ì
(
bu„v
);

100  
NULL
;

102 i‡(!
	`evbuf„r_add_cb
(
bu„v
->
bev
.bev.
ouçut
, 
be_∑ú_outbuf_cb
, bufev)) {

103 
	`buf„ªvít_‰ì
(
	`downˇ°
(
bu„v
));

104  
NULL
;

107 
	`_buf„ªvít_öô_gíîic_timeout_cbs
(&
bu„v
->
bev
.bev);

109  
bu„v
;

110 
	}
}

113 
	$buf„ªvít_∑ú_√w
(
evít_ba£
 *
ba£
, 
›ti⁄s
,

114 
buf„ªvít
 *
∑ú
[2])

116 
buf„ªvít_∑ú
 *
bu„v1
 = 
NULL
, *
bu„v2
 = NULL;

117 
tmp_›ti⁄s
;

119 
›ti⁄s
 |
BEV_OPT_DEFER_CALLBACKS
;

120 
tmp_›ti⁄s
 = 
›ti⁄s
 & ~
BEV_OPT_THREADSAFE
;

122 
bu„v1
 = 
	`buf„ªvít_∑ú_ñt_√w
(
ba£
, 
›ti⁄s
);

123 i‡(!
bu„v1
)

125 
bu„v2
 = 
	`buf„ªvít_∑ú_ñt_√w
(
ba£
, 
tmp_›ti⁄s
);

126 i‡(!
bu„v2
) {

127 
	`buf„ªvít_‰ì
(
	`downˇ°
(
bu„v1
));

131 i‡(
›ti⁄s
 & 
BEV_OPT_THREADSAFE
) {

133 
	`buf„ªvít_íabÀ_lockög
(
	`downˇ°
(
bu„v2
), 
bu„v1
->
bev
.
lock
);

136 
bu„v1
->
∑π√r
 = 
bu„v2
;

137 
bu„v2
->
∑π√r
 = 
bu„v1
;

139 
	`evbuf„r_‰ìze
(
	`downˇ°
(
bu„v1
)->
öput
, 0);

140 
	`evbuf„r_‰ìze
(
	`downˇ°
(
bu„v1
)->
ouçut
, 1);

141 
	`evbuf„r_‰ìze
(
	`downˇ°
(
bu„v2
)->
öput
, 0);

142 
	`evbuf„r_‰ìze
(
	`downˇ°
(
bu„v2
)->
ouçut
, 1);

144 
∑ú
[0] = 
	`downˇ°
(
bu„v1
);

145 
∑ú
[1] = 
	`downˇ°
(
bu„v2
);

148 
	}
}

151 
	$be_∑ú_å™s„r
(
buf„ªvít
 *
§c
, buf„ªvíà*
d°
,

152 
ign‹e_wm
)

154 
size_t
 
§c_size
, 
d°_size
;

155 
size_t
 
n
;

157 
	`evbuf„r_un‰ìze
(
§c
->
ouçut
, 1);

158 
	`evbuf„r_un‰ìze
(
d°
->
öput
, 0);

160 i‡(
d°
->
wm_ªad
.
high
) {

161 
d°_size
 = 
	`evbuf„r_gë_Àngth
(
d°
->
öput
);

162 i‡(
d°_size
 < 
d°
->
wm_ªad
.
high
) {

163 
n
 = 
d°
->
wm_ªad
.
high
 - 
d°_size
;

164 
	`evbuf„r_ªmove_buf„r
(
§c
->
ouçut
, 
d°
->
öput
, 
n
);

166 i‡(!
ign‹e_wm
)

167 
d⁄e
;

168 
n
 = 
	`evbuf„r_gë_Àngth
(
§c
->
ouçut
);

169 
	`evbuf„r_add_buf„r
(
d°
->
öput
, 
§c
->
ouçut
);

172 
n
 = 
	`evbuf„r_gë_Àngth
(
§c
->
ouçut
);

173 
	`evbuf„r_add_buf„r
(
d°
->
öput
, 
§c
->
ouçut
);

176 i‡(
n
) {

177 
	`BEV_RESET_GENERIC_READ_TIMEOUT
(
d°
);

179 i‡(
	`evbuf„r_gë_Àngth
(
d°
->
ouçut
))

180 
	`BEV_RESET_GENERIC_WRITE_TIMEOUT
(
d°
);

182 
	`BEV_DEL_GENERIC_WRITE_TIMEOUT
(
d°
);

185 
§c_size
 = 
	`evbuf„r_gë_Àngth
(
§c
->
ouçut
);

186 
d°_size
 = 
	`evbuf„r_gë_Àngth
(
d°
->
öput
);

188 i‡(
d°_size
 >
d°
->
wm_ªad
.
low
) {

189 
	`_buf„ªvít_run_ªadcb
(
d°
);

191 i‡(
§c_size
 <
§c
->
wm_wrôe
.
low
) {

192 
	`_buf„ªvít_run_wrôecb
(
§c
);

194 
d⁄e
:

195 
	`evbuf„r_‰ìze
(
§c
->
ouçut
, 1);

196 
	`evbuf„r_‰ìze
(
d°
->
öput
, 0);

197 
	}
}

199 
ölöe
 

200 
	$be_∑ú_w™ts_to_èlk
(
buf„ªvít_∑ú
 *
§c
,

201 
buf„ªvít_∑ú
 *
d°
)

203  (
	`downˇ°
(
§c
)->
íabÀd
 & 
EV_WRITE
) &&

204 (
	`downˇ°
(
d°
)->
íabÀd
 & 
EV_READ
) &&

205 !
d°
->
bev
.
ªad_su•íded
 &&

206 
	`evbuf„r_gë_Àngth
(
	`downˇ°
(
§c
)->
ouçut
);

207 
	}
}

210 
	$be_∑ú_outbuf_cb
(
evbuf„r
 *
outbuf
,

211 c⁄° 
evbuf„r_cb_öfo
 *
öfo
, *
¨g
)

213 
buf„ªvít_∑ú
 *
bev_∑ú
 = 
¨g
;

214 
buf„ªvít_∑ú
 *
∑π√r
 = 
bev_∑ú
->partner;

216 
	`ö¸ef_™d_lock
(
	`downˇ°
(
bev_∑ú
));

218 i‡(
öfo
->
n_added
 > info->
n_dñëed
 && 
∑π√r
) {

221 i‡(
	`be_∑ú_w™ts_to_èlk
(
bev_∑ú
, 
∑π√r
)) {

222 
	`be_∑ú_å™s„r
(
	`downˇ°
(
bev_∑ú
), downˇ°(
∑π√r
), 0);

226 
	`de¸ef_™d_u∆ock
(
	`downˇ°
(
bev_∑ú
));

227 
	}
}

230 
	$be_∑ú_íabÀ
(
buf„ªvít
 *
bu„v
, 
evíts
)

232 
buf„ªvít_∑ú
 *
bev_p
 = 
	`upˇ°
(
bu„v
);

233 
buf„ªvít_∑ú
 *
∑π√r
 = 
bev_p
->partner;

235 
	`ö¸ef_™d_lock
(
bu„v
);

237 i‡(
evíts
 & 
EV_READ
) {

238 
	`BEV_RESET_GENERIC_READ_TIMEOUT
(
bu„v
);

240 i‡((
evíts
 & 
EV_WRITE
Ë&& 
	`evbuf„r_gë_Àngth
(
bu„v
->
ouçut
))

241 
	`BEV_RESET_GENERIC_WRITE_TIMEOUT
(
bu„v
);

244 i‡((
evíts
 & 
EV_READ
Ë&& 
∑π√r
 &&

245 
	`be_∑ú_w™ts_to_èlk
(
∑π√r
, 
bev_p
)) {

246 
	`be_∑ú_å™s„r
(
	`downˇ°
(
∑π√r
), 
bu„v
, 0);

249 i‡((
evíts
 & 
EV_WRITE
Ë&& 
∑π√r
 &&

250 
	`be_∑ú_w™ts_to_èlk
(
bev_p
, 
∑π√r
)) {

251 
	`be_∑ú_å™s„r
(
bu„v
, 
	`downˇ°
(
∑π√r
), 0);

253 
	`de¸ef_™d_u∆ock
(
bu„v
);

255 
	}
}

258 
	$be_∑ú_dißbÀ
(
buf„ªvít
 *
bev
, 
evíts
)

260 i‡(
evíts
 & 
EV_READ
) {

261 
	`BEV_DEL_GENERIC_READ_TIMEOUT
(
bev
);

263 i‡(
evíts
 & 
EV_WRITE
)

264 
	`BEV_DEL_GENERIC_WRITE_TIMEOUT
(
bev
);

266 
	}
}

269 
	$be_∑ú_de°ru˘
(
buf„ªvít
 *
bev
)

271 
buf„ªvít_∑ú
 *
bev_p
 = 
	`upˇ°
(
bev
);

273 i‡(
bev_p
->
∑π√r
) {

274 
bev_p
->
∑π√r
->∑π√∏
NULL
;

275 
bev_p
->
∑π√r
 = 
NULL
;

278 
	`_buf„ªvít_dñ_gíîic_timeout_cbs
(
bev
);

279 
	}
}

282 
	$be_∑ú_Êush
(
buf„ªvít
 *
bev
, 
iŸy≥
,

283 
buf„ªvít_Êush_mode
 
mode
)

285 
buf„ªvít_∑ú
 *
bev_p
 = 
	`upˇ°
(
bev
);

286 
buf„ªvít
 *
∑π√r
;

287 
	`ö¸ef_™d_lock
(
bev
);

288 i‡(!
bev_p
->
∑π√r
)

291 
∑π√r
 = 
	`downˇ°
(
bev_p
->partner);

293 i‡(
mode
 =
BEV_NORMAL
)

296 i‡((
iŸy≥
 & 
EV_READ
) != 0)

297 
	`be_∑ú_å™s„r
(
∑π√r
, 
bev
, 1);

299 i‡((
iŸy≥
 & 
EV_WRITE
) != 0)

300 
	`be_∑ú_å™s„r
(
bev
, 
∑π√r
, 1);

302 i‡(
mode
 =
BEV_FINISHED
) {

303 
	`_buf„ªvít_run_evítcb
(
∑π√r
, 
iŸy≥
|
BEV_EVENT_EOF
);

305 
	`de¸ef_™d_u∆ock
(
bev
);

307 
	}
}

309 
buf„ªvít
 *

310 
	$buf„ªvít_∑ú_gë_∑π√r
(
buf„ªvít
 *
bev
)

312 
buf„ªvít_∑ú
 *
bev_p
;

313 
buf„ªvít
 *
∑π√r
;

314 
bev_p
 = 
	`upˇ°
(
bev
);

315 i‡(! 
bev_p
)

316  
NULL
;

318 
	`ö¸ef_™d_lock
(
bev
);

319 
∑π√r
 = 
	`downˇ°
(
bev_p
->partner);

320 
	`de¸ef_™d_u∆ock
(
bev
);

321  
∑π√r
;

322 
	}
}

324 c⁄° 
buf„ªvít_›s
 
	gbuf„ªvít_›s_∑ú
 = {

326 
evutû_off£tof
(
buf„ªvít_∑ú
, 
bev
.bev),

327 
be_∑ú_íabÀ
,

328 
be_∑ú_dißbÀ
,

329 
be_∑ú_de°ru˘
,

330 
_buf„ªvít_gíîic_adj_timeouts
,

331 
be_∑ú_Êush
,

332 
NULL
,

	@bufferevent_ratelim.c

29 
	~<sys/ty≥s.h
>

30 
	~<limôs.h
>

31 
	~<°rög.h
>

32 
	~<°dlib.h
>

34 
	~"evít2/evít.h
"

35 
	~"evít2/evít_°ru˘.h
"

36 
	~"evít2/utû.h
"

37 
	~"evít2/buf„ªvít.h
"

38 
	~"evít2/buf„ªvít_°ru˘.h
"

39 
	~"evít2/buf„r.h
"

41 
	~"øãlim-öã∫Æ.h
"

43 
	~"buf„ªvít-öã∫Æ.h
"

44 
	~"mm-öã∫Æ.h
"

45 
	~"utû-öã∫Æ.h
"

46 
	~"evít-öã∫Æ.h
"

49 
	$ev_tokí_buckë_öô
(
ev_tokí_buckë
 *
buckë
,

50 c⁄° 
ev_tokí_buckë_cfg
 *
cfg
,

51 
ev_uöt32_t
 
cuºít_tick
,

52 
ªöôülize
)

54 i‡(
ªöôülize
) {

60 i‡(
buckë
->
ªad_limô
 > (
ev_öt64_t
Ë
cfg
->
ªad_maximum
)

61 
buckë
->
ªad_limô
 = 
cfg
->
ªad_maximum
;

62 i‡(
buckë
->
wrôe_limô
 > (
ev_öt64_t
Ë
cfg
->
wrôe_maximum
)

63 
buckë
->
wrôe_limô
 = 
cfg
->
wrôe_maximum
;

65 
buckë
->
ªad_limô
 = 
cfg
->
ªad_øã
;

66 
buckë
->
wrôe_limô
 = 
cfg
->
wrôe_øã
;

67 
buckë
->
œ°_upd©ed
 = 
cuºít_tick
;

70 
	}
}

73 
	$ev_tokí_buckë_upd©e
(
ev_tokí_buckë
 *
buckë
,

74 c⁄° 
ev_tokí_buckë_cfg
 *
cfg
,

75 
ev_uöt32_t
 
cuºít_tick
)

79 
n_ticks
 = 
cuºít_tick
 - 
buckë
->
œ°_upd©ed
;

83 i‡(
n_ticks
 =0 ||Ç_tick†> 
INT_MAX
)

95 i‡((
cfg
->
ªad_maximum
 - 
buckë
->
ªad_limô
Ë/ 
n_ticks
 < cfg->
ªad_øã
)

96 
buckë
->
ªad_limô
 = 
cfg
->
ªad_maximum
;

98 
buckë
->
ªad_limô
 +
n_ticks
 * 
cfg
->
ªad_øã
;

101 i‡((
cfg
->
wrôe_maximum
 - 
buckë
->
wrôe_limô
Ë/ 
n_ticks
 < cfg->
wrôe_øã
)

102 
buckë
->
wrôe_limô
 = 
cfg
->
wrôe_maximum
;

104 
buckë
->
wrôe_limô
 +
n_ticks
 * 
cfg
->
wrôe_øã
;

107 
buckë
->
œ°_upd©ed
 = 
cuºít_tick
;

110 
	}
}

112 
ölöe
 

113 
	$buf„ªvít_upd©e_buckës
(
buf„ªvít_¥iv©e
 *
bev
)

116 
timevÆ
 
now
;

117 
tick
;

118 
	`evít_ba£_gëtimeofday_ˇched
(
bev
->bev.
ev_ba£
, &
now
);

119 
tick
 = 
	`ev_tokí_buckë_gë_tick
(&
now
, 
bev
->
øã_limôög
->
cfg
);

120 i‡(
tick
 !
bev
->
øã_limôög
->
limô
.
œ°_upd©ed
)

121 
	`ev_tokí_buckë_upd©e
(&
bev
->
øã_limôög
->
limô
,

122 
bev
->
øã_limôög
->
cfg
, 
tick
);

123 
	}
}

125 
ev_uöt32_t


126 
	$ev_tokí_buckë_gë_tick
(c⁄° 
timevÆ
 *
tv
,

127 c⁄° 
ev_tokí_buckë_cfg
 *
cfg
)

137 
ev_uöt64_t
 
m£c
 = (ev_uöt64_t)
tv
->
tv_£c
 * 1000 +Åv->
tv_u£c
 / 1000;

138  ()(
m£c
 / 
cfg
->
m£c_≥r_tick
);

139 
	}
}

141 
ev_tokí_buckë_cfg
 *

142 
	$ev_tokí_buckë_cfg_√w
(
size_t
 
ªad_øã
, size_à
ªad_bur°
,

143 
size_t
 
wrôe_øã
, size_à
wrôe_bur°
,

144 c⁄° 
timevÆ
 *
tick_Àn
)

146 
ev_tokí_buckë_cfg
 *
r
;

147 
timevÆ
 
g
;

148 i‡(! 
tick_Àn
) {

149 
g
.
tv_£c
 = 1;

150 
g
.
tv_u£c
 = 0;

151 
tick_Àn
 = &
g
;

153 i‡(
ªad_øã
 > 
ªad_bur°
 || 
wrôe_øã
 > 
wrôe_bur°
 ||

154 
ªad_øã
 < 1 || 
wrôe_øã
 < 1)

155  
NULL
;

156 i‡(
ªad_øã
 > 
EV_RATE_LIMIT_MAX
 ||

157 
wrôe_øã
 > 
EV_RATE_LIMIT_MAX
 ||

158 
ªad_bur°
 > 
EV_RATE_LIMIT_MAX
 ||

159 
wrôe_bur°
 > 
EV_RATE_LIMIT_MAX
)

160  
NULL
;

161 
r
 = 
	`mm_ˇŒoc
(1, (
ev_tokí_buckë_cfg
));

162 i‡(!
r
)

163  
NULL
;

164 
r
->
ªad_øã
 =Ñead_rate;

165 
r
->
wrôe_øã
 = write_rate;

166 
r
->
ªad_maximum
 = 
ªad_bur°
;

167 
r
->
wrôe_maximum
 = 
wrôe_bur°
;

168 
	`mem˝y
(&
r
->
tick_timeout
, 
tick_Àn
, (
timevÆ
));

169 
r
->
m£c_≥r_tick
 = (
tick_Àn
->
tv_£c
 * 1000) +

170 (
tick_Àn
->
tv_u£c
 & 
COMMON_TIMEOUT_MICROSECONDS_MASK
)/1000;

171  
r
;

172 
	}
}

175 
	$ev_tokí_buckë_cfg_‰ì
(
ev_tokí_buckë_cfg
 *
cfg
)

177 
	`mm_‰ì
(
cfg
);

178 
	}
}

182 
	#MAX_TO_READ_EVER
 16384

	)

185 
	#MAX_TO_WRITE_EVER
 16384

	)

187 
	#LOCK_GROUP
(
g
Ë
	`EVLOCK_LOCK
((g)->
lock
, 0)

	)

188 
	#UNLOCK_GROUP
(
g
Ë
	`EVLOCK_UNLOCK
((g)->
lock
, 0)

	)

190 
_bev_group_su•íd_ªadög
(
buf„ªvít_øã_limô_group
 *
g
);

191 
_bev_group_su•íd_wrôög
(
buf„ªvít_øã_limô_group
 *
g
);

192 
_bev_group_unsu•íd_ªadög
(
buf„ªvít_øã_limô_group
 *
g
);

193 
_bev_group_unsu•íd_wrôög
(
buf„ªvít_øã_limô_group
 *
g
);

199 
ölöe
 
ev_ssize_t


200 
	$_buf„ªvít_gë_æim_max
(
buf„ªvít_¥iv©e
 *
bev
, 
is_wrôe
)

203 
ev_ssize_t
 
max_so_Ár
 = 
is_wrôe
?
MAX_TO_WRITE_EVER
:
MAX_TO_READ_EVER
;

205 
	#LIM
(
x
) \

206 (
is_wrôe
 ? (
x
).
wrôe_limô
 : (x).
ªad_limô
)

	)

208 
	#GROUP_SUSPENDED
(
g
) \

209 (
is_wrôe
 ? (
g
)->
wrôe_su•íded
 : (g)->
ªad_su•íded
)

	)

212 
	#CLAMPTO
(
x
) \

214 i‡(
max_so_Ár
 > (
x
)) \

215 
max_so_Ár
 = (
x
); \

216 } 0);

	)

218 i‡(!
bev
->
øã_limôög
)

219  
max_so_Ár
;

226 i‡(
bev
->
øã_limôög
->
cfg
) {

227 
	`buf„ªvít_upd©e_buckës
(
bev
);

228 
max_so_Ár
 = 
	`LIM
(
bev
->
øã_limôög
->
limô
);

230 i‡(
bev
->
øã_limôög
->
group
) {

231 
buf„ªvít_øã_limô_group
 *
g
 =

232 
bev
->
øã_limôög
->
group
;

233 
ev_ssize_t
 
sh¨e
;

234 
	`LOCK_GROUP
(
g
);

235 i‡(
	`GROUP_SUSPENDED
(
g
)) {

239 i‡(
is_wrôe
)

240 
	`buf„ªvít_su•íd_wrôe
(&
bev
->bev,

241 
BEV_SUSPEND_BW_GROUP
);

243 
	`buf„ªvít_su•íd_ªad
(&
bev
->bev,

244 
BEV_SUSPEND_BW_GROUP
);

245 
sh¨e
 = 0;

249 
sh¨e
 = 
	`LIM
(
g
->
øã_limô
Ë/ g->
n_membîs
;

250 i‡(
sh¨e
 < 
g
->
mö_sh¨e
)

251 
sh¨e
 = 
g
->
mö_sh¨e
;

253 
	`UNLOCK_GROUP
(
g
);

254 
	`CLAMPTO
(
sh¨e
);

257 i‡(
max_so_Ár
 < 0)

258 
max_so_Ár
 = 0;

259  
max_so_Ár
;

260 
	}
}

262 
ev_ssize_t


263 
	$_buf„ªvít_gë_ªad_max
(
buf„ªvít_¥iv©e
 *
bev
)

265  
	`_buf„ªvít_gë_æim_max
(
bev
, 0);

266 
	}
}

268 
ev_ssize_t


269 
	$_buf„ªvít_gë_wrôe_max
(
buf„ªvít_¥iv©e
 *
bev
)

271  
	`_buf„ªvít_gë_æim_max
(
bev
, 1);

272 
	}
}

275 
	$_buf„ªvít_de¸emít_ªad_buckës
(
buf„ªvít_¥iv©e
 *
bev
, 
ev_ssize_t
 
byãs
)

278 
r
 = 0;

280 i‡(!
bev
->
øã_limôög
)

283 i‡(
bev
->
øã_limôög
->
cfg
) {

284 
bev
->
øã_limôög
->
limô
.
ªad_limô
 -
byãs
;

285 i‡(
bev
->
øã_limôög
->
limô
.
ªad_limô
 <= 0) {

286 
	`buf„ªvít_su•íd_ªad
(&
bev
->bev, 
BEV_SUSPEND_BW
);

287 i‡(
	`evít_add
(&
bev
->
øã_limôög
->
ªfûl_buckë_evít
,

288 &
bev
->
øã_limôög
->
cfg
->
tick_timeout
) < 0)

289 
r
 = -1;

290 } i‡(
bev
->
ªad_su•íded
 & 
BEV_SUSPEND_BW
) {

291 i‡(!(
bev
->
wrôe_su•íded
 & 
BEV_SUSPEND_BW
))

292 
	`evít_dñ
(&
bev
->
øã_limôög
->
ªfûl_buckë_evít
);

293 
	`buf„ªvít_unsu•íd_ªad
(&
bev
->bev, 
BEV_SUSPEND_BW
);

297 i‡(
bev
->
øã_limôög
->
group
) {

298 
	`LOCK_GROUP
(
bev
->
øã_limôög
->
group
);

299 
bev
->
øã_limôög
->
group
->
øã_limô
.
ªad_limô
 -
byãs
;

300 
bev
->
øã_limôög
->
group
->
tŸÆ_ªad
 +
byãs
;

301 i‡(
bev
->
øã_limôög
->
group
->
øã_limô
.
ªad_limô
 <= 0) {

302 
	`_bev_group_su•íd_ªadög
(
bev
->
øã_limôög
->
group
);

303 } i‡(
bev
->
øã_limôög
->
group
->
ªad_su•íded
) {

304 
	`_bev_group_unsu•íd_ªadög
(
bev
->
øã_limôög
->
group
);

306 
	`UNLOCK_GROUP
(
bev
->
øã_limôög
->
group
);

309  
r
;

310 
	}
}

313 
	$_buf„ªvít_de¸emít_wrôe_buckës
(
buf„ªvít_¥iv©e
 *
bev
, 
ev_ssize_t
 
byãs
)

316 
r
 = 0;

318 i‡(!
bev
->
øã_limôög
)

321 i‡(
bev
->
øã_limôög
->
cfg
) {

322 
bev
->
øã_limôög
->
limô
.
wrôe_limô
 -
byãs
;

323 i‡(
bev
->
øã_limôög
->
limô
.
wrôe_limô
 <= 0) {

324 
	`buf„ªvít_su•íd_wrôe
(&
bev
->bev, 
BEV_SUSPEND_BW
);

325 i‡(
	`evít_add
(&
bev
->
øã_limôög
->
ªfûl_buckë_evít
,

326 &
bev
->
øã_limôög
->
cfg
->
tick_timeout
) < 0)

327 
r
 = -1;

328 } i‡(
bev
->
wrôe_su•íded
 & 
BEV_SUSPEND_BW
) {

329 i‡(!(
bev
->
ªad_su•íded
 & 
BEV_SUSPEND_BW
))

330 
	`evít_dñ
(&
bev
->
øã_limôög
->
ªfûl_buckë_evít
);

331 
	`buf„ªvít_unsu•íd_wrôe
(&
bev
->bev, 
BEV_SUSPEND_BW
);

335 i‡(
bev
->
øã_limôög
->
group
) {

336 
	`LOCK_GROUP
(
bev
->
øã_limôög
->
group
);

337 
bev
->
øã_limôög
->
group
->
øã_limô
.
wrôe_limô
 -
byãs
;

338 
bev
->
øã_limôög
->
group
->
tŸÆ_wrôãn
 +
byãs
;

339 i‡(
bev
->
øã_limôög
->
group
->
øã_limô
.
wrôe_limô
 <= 0) {

340 
	`_bev_group_su•íd_wrôög
(
bev
->
øã_limôög
->
group
);

341 } i‡(
bev
->
øã_limôög
->
group
->
wrôe_su•íded
) {

342 
	`_bev_group_unsu•íd_wrôög
(
bev
->
øã_limôög
->
group
);

344 
	`UNLOCK_GROUP
(
bev
->
øã_limôög
->
group
);

347  
r
;

348 
	}
}

352 
	$_bev_group_su•íd_ªadög
(
buf„ªvít_øã_limô_group
 *
g
)

355 
buf„ªvít_¥iv©e
 *
bev
;

356 
g
->
ªad_su•íded
 = 1;

357 
g
->
≥ndög_unsu•íd_ªad
 = 0;

365 
	`TAILQ_FOREACH
(
bev
, &
g
->
membîs
, 
øã_limôög
->
√xt_ö_group
) {

366 i‡(
	`EVLOCK_TRY_LOCK
(
bev
->
lock
)) {

367 
	`buf„ªvít_su•íd_ªad
(&
bev
->bev,

368 
BEV_SUSPEND_BW_GROUP
);

369 
	`EVLOCK_UNLOCK
(
bev
->
lock
, 0);

373 
	}
}

377 
	$_bev_group_su•íd_wrôög
(
buf„ªvít_øã_limô_group
 *
g
)

380 
buf„ªvít_¥iv©e
 *
bev
;

381 
g
->
wrôe_su•íded
 = 1;

382 
g
->
≥ndög_unsu•íd_wrôe
 = 0;

383 
	`TAILQ_FOREACH
(
bev
, &
g
->
membîs
, 
øã_limôög
->
√xt_ö_group
) {

384 i‡(
	`EVLOCK_TRY_LOCK
(
bev
->
lock
)) {

385 
	`buf„ªvít_su•íd_wrôe
(&
bev
->bev,

386 
BEV_SUSPEND_BW_GROUP
);

387 
	`EVLOCK_UNLOCK
(
bev
->
lock
, 0);

391 
	}
}

396 
	$_bev_ªfûl_ˇŒback
(
evutû_sockë_t
 
fd
, 
wh©
, *
¨g
)

398 
tick
;

399 
timevÆ
 
now
;

400 
buf„ªvít_¥iv©e
 *
bev
 = 
¨g
;

401 
agaö
 = 0;

402 
	`BEV_LOCK
(&
bev
->bev);

403 i‡(!
bev
->
øã_limôög
 || !bev->øã_limôög->
cfg
) {

404 
	`BEV_UNLOCK
(&
bev
->bev);

409 
	`evít_ba£_gëtimeofday_ˇched
(
bev
->bev.
ev_ba£
, &
now
);

410 
tick
 = 
	`ev_tokí_buckë_gë_tick
(&
now
,

411 
bev
->
øã_limôög
->
cfg
);

412 
	`ev_tokí_buckë_upd©e
(&
bev
->
øã_limôög
->
limô
,

413 
bev
->
øã_limôög
->
cfg
,

414 
tick
);

417 i‡((
bev
->
ªad_su•íded
 & 
BEV_SUSPEND_BW
)) {

418 i‡(
bev
->
øã_limôög
->
limô
.
ªad_limô
 > 0)

419 
	`buf„ªvít_unsu•íd_ªad
(&
bev
->bev, 
BEV_SUSPEND_BW
);

421 
agaö
 = 1;

423 i‡((
bev
->
wrôe_su•íded
 & 
BEV_SUSPEND_BW
)) {

424 i‡(
bev
->
øã_limôög
->
limô
.
wrôe_limô
 > 0)

425 
	`buf„ªvít_unsu•íd_wrôe
(&
bev
->bev, 
BEV_SUSPEND_BW
);

427 
agaö
 = 1;

429 i‡(
agaö
) {

437 
	`evít_add
(&
bev
->
øã_limôög
->
ªfûl_buckë_evít
,

438 &
bev
->
øã_limôög
->
cfg
->
tick_timeout
);

440 
	`BEV_UNLOCK
(&
bev
->bev);

441 
	}
}

444 
buf„ªvít_¥iv©e
 *

445 
	$_bev_group_øndom_ñemít
(
buf„ªvít_øã_limô_group
 *
group
)

447 
which
;

448 
buf„ªvít_¥iv©e
 *
bev
;

452 i‡(!
group
->
n_membîs
)

453  
NULL
;

455 
	`EVUTIL_ASSERT
(! 
	`TAILQ_EMPTY
(&
group
->
membîs
));

457 
which
 = 
	`_evutû_wókønd
(Ë% 
group
->
n_membîs
;

459 
bev
 = 
	`TAILQ_FIRST
(&
group
->
membîs
);

460 
which
--)

461 
bev
 = 
	`TAILQ_NEXT
(bev, 
øã_limôög
->
√xt_ö_group
);

463  
bev
;

464 
	}
}

473 
	#FOREACH_RANDOM_ORDER
(
block
) \

475 
fú°
 = 
	`_bev_group_øndom_ñemít
(
g
); \

476 
bev
 = 
fú°
; bev !
	`TAILQ_END
(&
g
->
membîs
); \

477 
bev
 = 
	`TAILQ_NEXT
(bev, 
øã_limôög
->
√xt_ö_group
)) { \

478 
block
 ; \

480 
bev
 = 
	`TAILQ_FIRST
(&
g
->
membîs
); bev && bev !
fú°
; \

481 
bev
 = 
	`TAILQ_NEXT
(bev, 
øã_limôög
->
√xt_ö_group
)) { \

482 
block
 ; \

484 } 0)

	)

487 
	$_bev_group_unsu•íd_ªadög
(
buf„ªvít_øã_limô_group
 *
g
)

489 
agaö
 = 0;

490 
buf„ªvít_¥iv©e
 *
bev
, *
fú°
;

492 
g
->
ªad_su•íded
 = 0;

493 
	`FOREACH_RANDOM_ORDER
({

494 i‡(
	`EVLOCK_TRY_LOCK
(
bev
->
lock
)) {

495 
	`buf„ªvít_unsu•íd_ªad
(&
bev
->bev,

496 
BEV_SUSPEND_BW_GROUP
);

497 
	`EVLOCK_UNLOCK
(
bev
->
lock
, 0);

499 
agaö
 = 1;

502 
g
->
≥ndög_unsu•íd_ªad
 = 
agaö
;

503 
	}
}

506 
	$_bev_group_unsu•íd_wrôög
(
buf„ªvít_øã_limô_group
 *
g
)

508 
agaö
 = 0;

509 
buf„ªvít_¥iv©e
 *
bev
, *
fú°
;

510 
g
->
wrôe_su•íded
 = 0;

512 
	`FOREACH_RANDOM_ORDER
({

513 i‡(
	`EVLOCK_TRY_LOCK
(
bev
->
lock
)) {

514 
	`buf„ªvít_unsu•íd_wrôe
(&
bev
->bev,

515 
BEV_SUSPEND_BW_GROUP
);

516 
	`EVLOCK_UNLOCK
(
bev
->
lock
, 0);

518 
agaö
 = 1;

521 
g
->
≥ndög_unsu•íd_wrôe
 = 
agaö
;

522 
	}
}

528 
	$_bev_group_ªfûl_ˇŒback
(
evutû_sockë_t
 
fd
, 
wh©
, *
¨g
)

530 
buf„ªvít_øã_limô_group
 *
g
 = 
¨g
;

531 
tick
;

532 
timevÆ
 
now
;

534 
	`evít_ba£_gëtimeofday_ˇched
(
	`evít_gë_ba£
(&
g
->
ma°î_ªfûl_evít
), &
now
);

536 
	`LOCK_GROUP
(
g
);

538 
tick
 = 
	`ev_tokí_buckë_gë_tick
(&
now
, &
g
->
øã_limô_cfg
);

539 
	`ev_tokí_buckë_upd©e
(&
g
->
øã_limô
, &g->
øã_limô_cfg
, 
tick
);

541 i‡(
g
->
≥ndög_unsu•íd_ªad
 ||

542 (
g
->
ªad_su•íded
 && (g->
øã_limô
.
ªad_limô
 >g->
mö_sh¨e
))) {

543 
	`_bev_group_unsu•íd_ªadög
(
g
);

545 i‡(
g
->
≥ndög_unsu•íd_wrôe
 ||

546 (
g
->
wrôe_su•íded
 && (g->
øã_limô
.
wrôe_limô
 >g->
mö_sh¨e
))){

547 
	`_bev_group_unsu•íd_wrôög
(
g
);

555 
	`UNLOCK_GROUP
(
g
);

556 
	}
}

559 
	$buf„ªvít_£t_øã_limô
(
buf„ªvít
 *
bev
,

560 
ev_tokí_buckë_cfg
 *
cfg
)

562 
buf„ªvít_¥iv©e
 *
bevp
 =

563 
	`EVUTIL_UPCAST
(
bev
, 
buf„ªvít_¥iv©e
, bev);

564 
r
 = -1;

565 
buf„ªvít_øã_limô
 *
æim
;

566 
timevÆ
 
now
;

567 
ev_uöt32_t
 
tick
;

568 
ªöô
 = 0, 
su•íded
 = 0;

571 
	`BEV_LOCK
(
bev
);

573 i‡(
cfg
 =
NULL
) {

574 i‡(
bevp
->
øã_limôög
) {

575 
æim
 = 
bevp
->
øã_limôög
;

576 
æim
->
cfg
 = 
NULL
;

577 
	`buf„ªvít_unsu•íd_ªad
(
bev
, 
BEV_SUSPEND_BW
);

578 
	`buf„ªvít_unsu•íd_wrôe
(
bev
, 
BEV_SUSPEND_BW
);

579 i‡(
	`evít_öôülized
(&
æim
->
ªfûl_buckë_evít
))

580 
	`evít_dñ
(&
æim
->
ªfûl_buckë_evít
);

582 
r
 = 0;

583 
d⁄e
;

586 
	`evít_ba£_gëtimeofday_ˇched
(
bev
->
ev_ba£
, &
now
);

587 
tick
 = 
	`ev_tokí_buckë_gë_tick
(&
now
, 
cfg
);

589 i‡(
bevp
->
øã_limôög
 && bevp->øã_limôög->
cfg
 == cfg) {

591 
r
 = 0;

592 
d⁄e
;

594 i‡(
bevp
->
øã_limôög
 =
NULL
) {

595 
æim
 = 
	`mm_ˇŒoc
(1, (
buf„ªvít_øã_limô
));

596 i‡(!
æim
)

597 
d⁄e
;

598 
bevp
->
øã_limôög
 = 
æim
;

600 
æim
 = 
bevp
->
øã_limôög
;

602 
ªöô
 = 
æim
->
cfg
 !
NULL
;

604 
æim
->
cfg
 = cfg;

605 
	`ev_tokí_buckë_öô
(&
æim
->
limô
, 
cfg
, 
tick
, 
ªöô
);

607 i‡(
ªöô
) {

608 
	`EVUTIL_ASSERT
(
	`evít_öôülized
(&
æim
->
ªfûl_buckë_evít
));

609 
	`evít_dñ
(&
æim
->
ªfûl_buckë_evít
);

611 
	`evtimî_assign
(&
æim
->
ªfûl_buckë_evít
, 
bev
->
ev_ba£
,

612 
_bev_ªfûl_ˇŒback
, 
bevp
);

614 i‡(
æim
->
limô
.
ªad_limô
 > 0) {

615 
	`buf„ªvít_unsu•íd_ªad
(
bev
, 
BEV_SUSPEND_BW
);

617 
	`buf„ªvít_su•íd_ªad
(
bev
, 
BEV_SUSPEND_BW
);

618 
su•íded
=1;

620 i‡(
æim
->
limô
.
wrôe_limô
 > 0) {

621 
	`buf„ªvít_unsu•íd_wrôe
(
bev
, 
BEV_SUSPEND_BW
);

623 
	`buf„ªvít_su•íd_wrôe
(
bev
, 
BEV_SUSPEND_BW
);

624 
su•íded
 = 1;

627 i‡(
su•íded
)

628 
	`evít_add
(&
æim
->
ªfûl_buckë_evít
, &
cfg
->
tick_timeout
);

630 
r
 = 0;

632 
d⁄e
:

633 
	`BEV_UNLOCK
(
bev
);

634  
r
;

635 
	}
}

637 
buf„ªvít_øã_limô_group
 *

638 
	$buf„ªvít_øã_limô_group_√w
(
evít_ba£
 *
ba£
,

639 c⁄° 
ev_tokí_buckë_cfg
 *
cfg
)

641 
buf„ªvít_øã_limô_group
 *
g
;

642 
timevÆ
 
now
;

643 
ev_uöt32_t
 
tick
;

645 
	`evít_ba£_gëtimeofday_ˇched
(
ba£
, &
now
);

646 
tick
 = 
	`ev_tokí_buckë_gë_tick
(&
now
, 
cfg
);

648 
g
 = 
	`mm_ˇŒoc
(1, (
buf„ªvít_øã_limô_group
));

649 i‡(!
g
)

650  
NULL
;

651 
	`mem˝y
(&
g
->
øã_limô_cfg
, 
cfg
, (g->rate_limit_cfg));

652 
	`TAILQ_INIT
(&
g
->
membîs
);

654 
	`ev_tokí_buckë_öô
(&
g
->
øã_limô
, 
cfg
, 
tick
, 0);

656 
	`evít_assign
(&
g
->
ma°î_ªfûl_evít
, 
ba£
, -1, 
EV_PERSIST
,

657 
_bev_group_ªfûl_ˇŒback
, 
g
);

659 
	`evít_add
(&
g
->
ma°î_ªfûl_evít
, &
cfg
->
tick_timeout
);

661 
	`EVTHREAD_ALLOC_LOCK
(
g
->
lock
, 
EVTHREAD_LOCKTYPE_RECURSIVE
);

663 
	`buf„ªvít_øã_limô_group_£t_mö_sh¨e
(
g
, 64);

665  
g
;

666 
	}
}

669 
	$buf„ªvít_øã_limô_group_£t_cfg
(

670 
buf„ªvít_øã_limô_group
 *
g
,

671 c⁄° 
ev_tokí_buckë_cfg
 *
cfg
)

673 
ßme_tick
;

674 i‡(!
g
 || !
cfg
)

677 
	`LOCK_GROUP
(
g
);

678 
ßme_tick
 = 
	`evutû_timîcmp
(

679 &
g
->
øã_limô_cfg
.
tick_timeout
, &
cfg
->tick_timeout, ==);

680 
	`mem˝y
(&
g
->
øã_limô_cfg
, 
cfg
, (g->rate_limit_cfg));

682 i‡(
g
->
øã_limô
.
ªad_limô
 > (
ev_ssize_t
)
cfg
->
ªad_maximum
)

683 
g
->
øã_limô
.
ªad_limô
 = 
cfg
->
ªad_maximum
;

684 i‡(
g
->
øã_limô
.
wrôe_limô
 > (
ev_ssize_t
)
cfg
->
wrôe_maximum
)

685 
g
->
øã_limô
.
wrôe_limô
 = 
cfg
->
wrôe_maximum
;

687 i‡(!
ßme_tick
) {

689 
	`evít_add
(&
g
->
ma°î_ªfûl_evít
, &
cfg
->
tick_timeout
);

693 
	`buf„ªvít_øã_limô_group_£t_mö_sh¨e
(
g
, g->
c⁄figuªd_mö_sh¨e
);

695 
	`UNLOCK_GROUP
(
g
);

697 
	}
}

700 
	$buf„ªvít_øã_limô_group_£t_mö_sh¨e
(

701 
buf„ªvít_øã_limô_group
 *
g
,

702 
size_t
 
sh¨e
)

704 i‡(
sh¨e
 > 
EV_SSIZE_MAX
)

707 
g
->
c⁄figuªd_mö_sh¨e
 = 
sh¨e
;

711 i‡(
sh¨e
 > 
g
->
øã_limô_cfg
.
ªad_øã
)

712 
sh¨e
 = 
g
->
øã_limô_cfg
.
ªad_øã
;

713 i‡(
sh¨e
 > 
g
->
øã_limô_cfg
.
wrôe_øã
)

714 
sh¨e
 = 
g
->
øã_limô_cfg
.
wrôe_øã
;

716 
g
->
mö_sh¨e
 = 
sh¨e
;

718 
	}
}

721 
	$buf„ªvít_øã_limô_group_‰ì
(
buf„ªvít_øã_limô_group
 *
g
)

723 
	`LOCK_GROUP
(
g
);

724 
	`EVUTIL_ASSERT
(0 =
g
->
n_membîs
);

725 
	`evít_dñ
(&
g
->
ma°î_ªfûl_evít
);

726 
	`UNLOCK_GROUP
(
g
);

727 
	`EVTHREAD_FREE_LOCK
(
g
->
lock
, 
EVTHREAD_LOCKTYPE_RECURSIVE
);

728 
	`mm_‰ì
(
g
);

729 
	}
}

732 
	$buf„ªvít_add_to_øã_limô_group
(
buf„ªvít
 *
bev
,

733 
buf„ªvít_øã_limô_group
 *
g
)

735 
wsu•íd
, 
rsu•íd
;

736 
buf„ªvít_¥iv©e
 *
bevp
 =

737 
	`EVUTIL_UPCAST
(
bev
, 
buf„ªvít_¥iv©e
, bev);

738 
	`BEV_LOCK
(
bev
);

740 i‡(!
bevp
->
øã_limôög
) {

741 
buf„ªvít_øã_limô
 *
æim
;

742 
æim
 = 
	`mm_ˇŒoc
(1, (
buf„ªvít_øã_limô
));

743 i‡(!
æim
) {

744 
	`BEV_UNLOCK
(
bev
);

747 
	`evtimî_assign
(&
æim
->
ªfûl_buckë_evít
, 
bev
->
ev_ba£
,

748 
_bev_ªfûl_ˇŒback
, 
bevp
);

749 
bevp
->
øã_limôög
 = 
æim
;

752 i‡(
bevp
->
øã_limôög
->
group
 =
g
) {

753 
	`BEV_UNLOCK
(
bev
);

756 i‡(
bevp
->
øã_limôög
->
group
)

757 
	`buf„ªvít_ªmove_‰om_øã_limô_group
(
bev
);

759 
	`LOCK_GROUP
(
g
);

760 
bevp
->
øã_limôög
->
group
 = 
g
;

761 ++
g
->
n_membîs
;

762 
	`TAILQ_INSERT_TAIL
(&
g
->
membîs
, 
bevp
, 
øã_limôög
->
√xt_ö_group
);

764 
rsu•íd
 = 
g
->
ªad_su•íded
;

765 
wsu•íd
 = 
g
->
wrôe_su•íded
;

767 
	`UNLOCK_GROUP
(
g
);

769 i‡(
rsu•íd
)

770 
	`buf„ªvít_su•íd_ªad
(
bev
, 
BEV_SUSPEND_BW_GROUP
);

771 i‡(
wsu•íd
)

772 
	`buf„ªvít_su•íd_wrôe
(
bev
, 
BEV_SUSPEND_BW_GROUP
);

774 
	`BEV_UNLOCK
(
bev
);

776 
	}
}

779 
	$buf„ªvít_ªmove_‰om_øã_limô_group
(
buf„ªvít
 *
bev
)

781  
	`buf„ªvít_ªmove_‰om_øã_limô_group_öã∫Æ
(
bev
, 1);

782 
	}
}

785 
	$buf„ªvít_ªmove_‰om_øã_limô_group_öã∫Æ
(
buf„ªvít
 *
bev
,

786 
unsu•íd
)

788 
buf„ªvít_¥iv©e
 *
bevp
 =

789 
	`EVUTIL_UPCAST
(
bev
, 
buf„ªvít_¥iv©e
, bev);

790 
	`BEV_LOCK
(
bev
);

791 i‡(
bevp
->
øã_limôög
 && bevp->øã_limôög->
group
) {

792 
buf„ªvít_øã_limô_group
 *
g
 =

793 
bevp
->
øã_limôög
->
group
;

794 
	`LOCK_GROUP
(
g
);

795 
bevp
->
øã_limôög
->
group
 = 
NULL
;

796 --
g
->
n_membîs
;

797 
	`TAILQ_REMOVE
(&
g
->
membîs
, 
bevp
, 
øã_limôög
->
√xt_ö_group
);

798 
	`UNLOCK_GROUP
(
g
);

800 i‡(
unsu•íd
) {

801 
	`buf„ªvít_unsu•íd_ªad
(
bev
, 
BEV_SUSPEND_BW_GROUP
);

802 
	`buf„ªvít_unsu•íd_wrôe
(
bev
, 
BEV_SUSPEND_BW_GROUP
);

804 
	`BEV_UNLOCK
(
bev
);

806 
	}
}

817 
ev_ssize_t


818 
	$buf„ªvít_gë_ªad_limô
(
buf„ªvít
 *
bev
)

820 
ev_ssize_t
 
r
;

821 
buf„ªvít_¥iv©e
 *
bevp
;

822 
	`BEV_LOCK
(
bev
);

823 
bevp
 = 
	`BEV_UPCAST
(
bev
);

824 i‡(
bevp
->
øã_limôög
 && bevp->øã_limôög->
cfg
) {

825 
	`buf„ªvít_upd©e_buckës
(
bevp
);

826 
r
 = 
bevp
->
øã_limôög
->
limô
.
ªad_limô
;

828 
r
 = 
EV_SSIZE_MAX
;

830 
	`BEV_UNLOCK
(
bev
);

831  
r
;

832 
	}
}

836 
ev_ssize_t


837 
	$buf„ªvít_gë_wrôe_limô
(
buf„ªvít
 *
bev
)

839 
ev_ssize_t
 
r
;

840 
buf„ªvít_¥iv©e
 *
bevp
;

841 
	`BEV_LOCK
(
bev
);

842 
bevp
 = 
	`BEV_UPCAST
(
bev
);

843 i‡(
bevp
->
øã_limôög
 && bevp->øã_limôög->
cfg
) {

844 
	`buf„ªvít_upd©e_buckës
(
bevp
);

845 
r
 = 
bevp
->
øã_limôög
->
limô
.
wrôe_limô
;

847 
r
 = 
EV_SSIZE_MAX
;

849 
	`BEV_UNLOCK
(
bev
);

850  
r
;

851 
	}
}

853 
ev_ssize_t


854 
	$buf„ªvít_gë_max_to_ªad
(
buf„ªvít
 *
bev
)

856 
ev_ssize_t
 
r
;

857 
	`BEV_LOCK
(
bev
);

858 
r
 = 
	`_buf„ªvít_gë_ªad_max
(
	`BEV_UPCAST
(
bev
));

859 
	`BEV_UNLOCK
(
bev
);

860  
r
;

861 
	}
}

863 
ev_ssize_t


864 
	$buf„ªvít_gë_max_to_wrôe
(
buf„ªvít
 *
bev
)

866 
ev_ssize_t
 
r
;

867 
	`BEV_LOCK
(
bev
);

868 
r
 = 
	`_buf„ªvít_gë_wrôe_max
(
	`BEV_UPCAST
(
bev
));

869 
	`BEV_UNLOCK
(
bev
);

870  
r
;

871 
	}
}

876 
ev_ssize_t


877 
	$buf„ªvít_øã_limô_group_gë_ªad_limô
(

878 
buf„ªvít_øã_limô_group
 *
gΩ
)

880 
ev_ssize_t
 
r
;

881 
	`LOCK_GROUP
(
gΩ
);

882 
r
 = 
gΩ
->
øã_limô
.
ªad_limô
;

883 
	`UNLOCK_GROUP
(
gΩ
);

884  
r
;

885 
	}
}

889 
ev_ssize_t


890 
	$buf„ªvít_øã_limô_group_gë_wrôe_limô
(

891 
buf„ªvít_øã_limô_group
 *
gΩ
)

893 
ev_ssize_t
 
r
;

894 
	`LOCK_GROUP
(
gΩ
);

895 
r
 = 
gΩ
->
øã_limô
.
wrôe_limô
;

896 
	`UNLOCK_GROUP
(
gΩ
);

897  
r
;

898 
	}
}

901 
	$buf„ªvít_de¸emít_ªad_limô
(
buf„ªvít
 *
bev
, 
ev_ssize_t
 
de¸
)

903 
r
 = 0;

904 
ev_ssize_t
 
ﬁd_limô
, 
√w_limô
;

905 
buf„ªvít_¥iv©e
 *
bevp
;

906 
	`BEV_LOCK
(
bev
);

907 
bevp
 = 
	`BEV_UPCAST
(
bev
);

908 
	`EVUTIL_ASSERT
(
bevp
->
øã_limôög
 && bevp->øã_limôög->
cfg
);

909 
ﬁd_limô
 = 
bevp
->
øã_limôög
->
limô
.
ªad_limô
;

911 
√w_limô
 = (
bevp
->
øã_limôög
->
limô
.
ªad_limô
 -
de¸
);

912 i‡(
ﬁd_limô
 > 0 && 
√w_limô
 <= 0) {

913 
	`buf„ªvít_su•íd_ªad
(
bev
, 
BEV_SUSPEND_BW
);

914 i‡(
	`evít_add
(&
bevp
->
øã_limôög
->
ªfûl_buckë_evít
,

915 &
bevp
->
øã_limôög
->
cfg
->
tick_timeout
) < 0)

916 
r
 = -1;

917 } i‡(
ﬁd_limô
 <0 && 
√w_limô
 > 0) {

918 i‡(!(
bevp
->
wrôe_su•íded
 & 
BEV_SUSPEND_BW
))

919 
	`evít_dñ
(&
bevp
->
øã_limôög
->
ªfûl_buckë_evít
);

920 
	`buf„ªvít_unsu•íd_ªad
(
bev
, 
BEV_SUSPEND_BW
);

923 
	`BEV_UNLOCK
(
bev
);

924  
r
;

925 
	}
}

928 
	$buf„ªvít_de¸emít_wrôe_limô
(
buf„ªvít
 *
bev
, 
ev_ssize_t
 
de¸
)

932 
r
 = 0;

933 
ev_ssize_t
 
ﬁd_limô
, 
√w_limô
;

934 
buf„ªvít_¥iv©e
 *
bevp
;

935 
	`BEV_LOCK
(
bev
);

936 
bevp
 = 
	`BEV_UPCAST
(
bev
);

937 
	`EVUTIL_ASSERT
(
bevp
->
øã_limôög
 && bevp->øã_limôög->
cfg
);

938 
ﬁd_limô
 = 
bevp
->
øã_limôög
->
limô
.
wrôe_limô
;

940 
√w_limô
 = (
bevp
->
øã_limôög
->
limô
.
wrôe_limô
 -
de¸
);

941 i‡(
ﬁd_limô
 > 0 && 
√w_limô
 <= 0) {

942 
	`buf„ªvít_su•íd_wrôe
(
bev
, 
BEV_SUSPEND_BW
);

943 i‡(
	`evít_add
(&
bevp
->
øã_limôög
->
ªfûl_buckë_evít
,

944 &
bevp
->
øã_limôög
->
cfg
->
tick_timeout
) < 0)

945 
r
 = -1;

946 } i‡(
ﬁd_limô
 <0 && 
√w_limô
 > 0) {

947 i‡(!(
bevp
->
ªad_su•íded
 & 
BEV_SUSPEND_BW
))

948 
	`evít_dñ
(&
bevp
->
øã_limôög
->
ªfûl_buckë_evít
);

949 
	`buf„ªvít_unsu•íd_wrôe
(
bev
, 
BEV_SUSPEND_BW
);

952 
	`BEV_UNLOCK
(
bev
);

953  
r
;

954 
	}
}

957 
	$buf„ªvít_øã_limô_group_de¸emít_ªad
(

958 
buf„ªvít_øã_limô_group
 *
gΩ
, 
ev_ssize_t
 
de¸
)

960 
r
 = 0;

961 
ev_ssize_t
 
ﬁd_limô
, 
√w_limô
;

962 
	`LOCK_GROUP
(
gΩ
);

963 
ﬁd_limô
 = 
gΩ
->
øã_limô
.
ªad_limô
;

964 
√w_limô
 = (
gΩ
->
øã_limô
.
ªad_limô
 -
de¸
);

966 i‡(
ﬁd_limô
 > 0 && 
√w_limô
 <= 0) {

967 
	`_bev_group_su•íd_ªadög
(
gΩ
);

968 } i‡(
ﬁd_limô
 <0 && 
√w_limô
 > 0) {

969 
	`_bev_group_unsu•íd_ªadög
(
gΩ
);

972 
	`UNLOCK_GROUP
(
gΩ
);

973  
r
;

974 
	}
}

977 
	$buf„ªvít_øã_limô_group_de¸emít_wrôe
(

978 
buf„ªvít_øã_limô_group
 *
gΩ
, 
ev_ssize_t
 
de¸
)

980 
r
 = 0;

981 
ev_ssize_t
 
ﬁd_limô
, 
√w_limô
;

982 
	`LOCK_GROUP
(
gΩ
);

983 
ﬁd_limô
 = 
gΩ
->
øã_limô
.
wrôe_limô
;

984 
√w_limô
 = (
gΩ
->
øã_limô
.
wrôe_limô
 -
de¸
);

986 i‡(
ﬁd_limô
 > 0 && 
√w_limô
 <= 0) {

987 
	`_bev_group_su•íd_wrôög
(
gΩ
);

988 } i‡(
ﬁd_limô
 <0 && 
√w_limô
 > 0) {

989 
	`_bev_group_unsu•íd_wrôög
(
gΩ
);

992 
	`UNLOCK_GROUP
(
gΩ
);

993  
r
;

994 
	}
}

997 
	$buf„ªvít_øã_limô_group_gë_tŸÆs
(
buf„ªvít_øã_limô_group
 *
gΩ
,

998 
ev_uöt64_t
 *
tŸÆ_ªad_out
,Év_uöt64_à*
tŸÆ_wrôãn_out
)

1000 
	`EVUTIL_ASSERT
(
gΩ
 !
NULL
);

1001 i‡(
tŸÆ_ªad_out
)

1002 *
tŸÆ_ªad_out
 = 
gΩ
->
tŸÆ_ªad
;

1003 i‡(
tŸÆ_wrôãn_out
)

1004 *
tŸÆ_wrôãn_out
 = 
gΩ
->
tŸÆ_wrôãn
;

1005 
	}
}

1008 
	$buf„ªvít_øã_limô_group_ª£t_tŸÆs
(
buf„ªvít_øã_limô_group
 *
gΩ
)

1010 
gΩ
->
tŸÆ_ªad
 = gΩ->
tŸÆ_wrôãn
 = 0;

1011 
	}
}

	@bufferevent_sock.c

29 
	~<sys/ty≥s.h
>

31 
	~"evít2/evít-c⁄fig.h
"

33 #ifde‡
_EVENT_HAVE_SYS_TIME_H


34 
	~<sys/time.h
>

37 
	~<î∫o.h
>

38 
	~<°dio.h
>

39 
	~<°dlib.h
>

40 
	~<°rög.h
>

41 #ifde‡
_EVENT_HAVE_STDARG_H


42 
	~<°d¨g.h
>

44 #ifde‡
_EVENT_HAVE_UNISTD_H


45 
	~<uni°d.h
>

48 #ifde‡
WIN32


49 
	~<wösock2.h
>

50 
	~<ws2t˝ù.h
>

53 #ifde‡
_EVENT_HAVE_SYS_SOCKET_H


54 
	~<sys/sockë.h
>

56 #ifde‡
_EVENT_HAVE_NETINET_IN_H


57 
	~<√töë/ö.h
>

59 #ifde‡
_EVENT_HAVE_NETINET_IN6_H


60 
	~<√töë/ö6.h
>

63 
	~"evít2/utû.h
"

64 
	~"evít2/buf„ªvít.h
"

65 
	~"evít2/buf„r.h
"

66 
	~"evít2/buf„ªvít_°ru˘.h
"

67 
	~"evít2/buf„ªvít_com∑t.h
"

68 
	~"evít2/evít.h
"

69 
	~"log-öã∫Æ.h
"

70 
	~"mm-öã∫Æ.h
"

71 
	~"buf„ªvít-öã∫Æ.h
"

72 
	~"utû-öã∫Æ.h
"

73 #ifde‡
WIN32


74 
	~"io˝-öã∫Æ.h
"

78 
be_sockë_íabÀ
(
buf„ªvít
 *, );

79 
be_sockë_dißbÀ
(
buf„ªvít
 *, );

80 
be_sockë_de°ru˘
(
buf„ªvít
 *);

81 
be_sockë_adj_timeouts
(
buf„ªvít
 *);

82 
be_sockë_Êush
(
buf„ªvít
 *, , 
buf„ªvít_Êush_mode
);

83 
be_sockë_˘æ
(
buf„ªvít
 *, 
buf„ªvít_˘æ_›
, 
buf„ªvít_˘æ_d©a
 *);

85 
be_sockë_£tfd
(
buf„ªvít
 *, 
evutû_sockë_t
);

87 c⁄° 
buf„ªvít_›s
 
	gbuf„ªvít_›s_sockë
 = {

89 
evutû_off£tof
(
buf„ªvít_¥iv©e
, 
bev
),

90 
be_sockë_íabÀ
,

91 
be_sockë_dißbÀ
,

92 
be_sockë_de°ru˘
,

93 
be_sockë_adj_timeouts
,

94 
be_sockë_Êush
,

95 
be_sockë_˘æ
,

98 
	#be_sockë_add
(
ev
, 
t
) \

99 
	`_buf„ªvít_add_evít
((
ev
), (
t
))

	)

102 
	$buf„ªvít_sockë_outbuf_cb
(
evbuf„r
 *
buf
,

103 c⁄° 
evbuf„r_cb_öfo
 *
cböfo
,

104 *
¨g
)

106 
buf„ªvít
 *
bu„v
 = 
¨g
;

107 
buf„ªvít_¥iv©e
 *
bu„v_p
 =

108 
	`EVUTIL_UPCAST
(
bu„v
, 
buf„ªvít_¥iv©e
, 
bev
);

110 i‡(
cböfo
->
n_added
 &&

111 (
bu„v
->
íabÀd
 & 
EV_WRITE
) &&

112 !
	`evít_≥ndög
(&
bu„v
->
ev_wrôe
, 
EV_WRITE
, 
NULL
) &&

113 !
bu„v_p
->
wrôe_su•íded
) {

116 i‡(
	`be_sockë_add
(&
bu„v
->
ev_wrôe
, &bu„v->
timeout_wrôe
) == -1) {

120 
	}
}

123 
	$buf„ªvít_ªadcb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

125 
buf„ªvít
 *
bu„v
 = 
¨g
;

126 
buf„ªvít_¥iv©e
 *
bu„v_p
 =

127 
	`EVUTIL_UPCAST
(
bu„v
, 
buf„ªvít_¥iv©e
, 
bev
);

128 
evbuf„r
 *
öput
;

129 
ªs
 = 0;

130 
wh©
 = 
BEV_EVENT_READING
;

131 
ev_ssize_t
 
howmuch
 = -1, 
ªadmax
=-1;

133 
	`_buf„ªvít_ö¸ef_™d_lock
(
bu„v
);

135 i‡(
evít
 =
EV_TIMEOUT
) {

139 
wh©
 |
BEV_EVENT_TIMEOUT
;

140 
îr‹
;

143 
öput
 = 
bu„v
->input;

149 i‡(
bu„v
->
wm_ªad
.
high
 != 0) {

150 
howmuch
 = 
bu„v
->
wm_ªad
.
high
 - 
	`evbuf„r_gë_Àngth
(
öput
);

152 i‡(
howmuch
 <= 0) {

153 
	`buf„ªvít_wm_su•íd_ªad
(
bu„v
);

154 
d⁄e
;

157 
ªadmax
 = 
	`_buf„ªvít_gë_ªad_max
(
bu„v_p
);

158 i‡(
howmuch
 < 0 || howmuch > 
ªadmax
)

160 
howmuch
 = 
ªadmax
;

161 i‡(
bu„v_p
->
ªad_su•íded
)

162 
d⁄e
;

164 
	`evbuf„r_un‰ìze
(
öput
, 0);

165 
ªs
 = 
	`evbuf„r_ªad
(
öput
, 
fd
, ()
howmuch
);

166 
	`evbuf„r_‰ìze
(
öput
, 0);

168 i‡(
ªs
 == -1) {

169 
îr
 = 
	`evutû_sockë_gëîr‹
(
fd
);

170 i‡(
	`EVUTIL_ERR_RW_RETRIABLE
(
îr
))

171 
ªscheduÀ
;

173 
wh©
 |
BEV_EVENT_ERROR
;

174 } i‡(
ªs
 == 0) {

176 
wh©
 |
BEV_EVENT_EOF
;

179 i‡(
ªs
 <= 0)

180 
îr‹
;

182 
	`_buf„ªvít_de¸emít_ªad_buckës
(
bu„v_p
, 
ªs
);

185 i‡(
	`evbuf„r_gë_Àngth
(
öput
Ë>
bu„v
->
wm_ªad
.
low
)

186 
	`_buf„ªvít_run_ªadcb
(
bu„v
);

188 
d⁄e
;

190 
ªscheduÀ
:

191 
d⁄e
;

193 
îr‹
:

194 
	`buf„ªvít_dißbÀ
(
bu„v
, 
EV_READ
);

195 
	`_buf„ªvít_run_evítcb
(
bu„v
, 
wh©
);

197 
d⁄e
:

198 
	`_buf„ªvít_de¸ef_™d_u∆ock
(
bu„v
);

199 
	}
}

202 
	$buf„ªvít_wrôecb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

204 
buf„ªvít
 *
bu„v
 = 
¨g
;

205 
buf„ªvít_¥iv©e
 *
bu„v_p
 =

206 
	`EVUTIL_UPCAST
(
bu„v
, 
buf„ªvít_¥iv©e
, 
bev
);

207 
ªs
 = 0;

208 
wh©
 = 
BEV_EVENT_WRITING
;

209 
c⁄√˘ed
 = 0;

210 
ev_ssize_t
 
©mo°
 = -1;

212 
	`_buf„ªvít_ö¸ef_™d_lock
(
bu„v
);

214 i‡(
evít
 =
EV_TIMEOUT
) {

218 
wh©
 |
BEV_EVENT_TIMEOUT
;

219 
îr‹
;

221 i‡(
bu„v_p
->
c⁄√˘ög
) {

222 
c
 = 
	`evutû_sockë_föished_c⁄√˘ög
(
fd
);

225 i‡(
bu„v_p
->
c⁄√˘i⁄_ªfu£d
) {

226 
bu„v_p
->
c⁄√˘i⁄_ªfu£d
 = 0;

227 
c
 = -1;

230 i‡(
c
 == 0)

231 
d⁄e
;

233 
bu„v_p
->
c⁄√˘ög
 = 0;

234 i‡(
c
 < 0) {

235 
	`evít_dñ
(&
bu„v
->
ev_wrôe
);

236 
	`evít_dñ
(&
bu„v
->
ev_ªad
);

237 
	`_buf„ªvít_run_evítcb
(
bu„v
, 
BEV_EVENT_ERROR
);

238 
d⁄e
;

240 
c⁄√˘ed
 = 1;

241 #ifde‡
WIN32


242 i‡(
	`BEV_IS_ASYNC
(
bu„v
)) {

243 
	`evít_dñ
(&
bu„v
->
ev_wrôe
);

244 
	`buf„ªvít_async_£t_c⁄√˘ed
(
bu„v
);

245 
	`_buf„ªvít_run_evítcb
(
bu„v
,

246 
BEV_EVENT_CONNECTED
);

247 
d⁄e
;

250 
	`_buf„ªvít_run_evítcb
(
bu„v
,

251 
BEV_EVENT_CONNECTED
);

252 i‡(!(
bu„v
->
íabÀd
 & 
EV_WRITE
) ||

253 
bu„v_p
->
wrôe_su•íded
) {

254 
	`evít_dñ
(&
bu„v
->
ev_wrôe
);

255 
d⁄e
;

260 
©mo°
 = 
	`_buf„ªvít_gë_wrôe_max
(
bu„v_p
);

262 i‡(
bu„v_p
->
wrôe_su•íded
)

263 
d⁄e
;

265 i‡(
	`evbuf„r_gë_Àngth
(
bu„v
->
ouçut
)) {

266 
	`evbuf„r_un‰ìze
(
bu„v
->
ouçut
, 1);

267 
ªs
 = 
	`evbuf„r_wrôe_©mo°
(
bu„v
->
ouçut
, 
fd
, 
©mo°
);

268 
	`evbuf„r_‰ìze
(
bu„v
->
ouçut
, 1);

269 i‡(
ªs
 == -1) {

270 
îr
 = 
	`evutû_sockë_gëîr‹
(
fd
);

271 i‡(
	`EVUTIL_ERR_RW_RETRIABLE
(
îr
))

272 
ªscheduÀ
;

273 
wh©
 |
BEV_EVENT_ERROR
;

274 } i‡(
ªs
 == 0) {

279 
wh©
 |
BEV_EVENT_EOF
;

281 i‡(
ªs
 <= 0)

282 
îr‹
;

284 
	`_buf„ªvít_de¸emít_wrôe_buckës
(
bu„v_p
, 
ªs
);

287 i‡(
	`evbuf„r_gë_Àngth
(
bu„v
->
ouçut
) == 0) {

288 
	`evít_dñ
(&
bu„v
->
ev_wrôe
);

295 i‡((
ªs
 || !
c⁄√˘ed
) &&

296 
	`evbuf„r_gë_Àngth
(
bu„v
->
ouçut
Ë<bu„v->
wm_wrôe
.
low
) {

297 
	`_buf„ªvít_run_wrôecb
(
bu„v
);

300 
d⁄e
;

302 
ªscheduÀ
:

303 i‡(
	`evbuf„r_gë_Àngth
(
bu„v
->
ouçut
) == 0) {

304 
	`evít_dñ
(&
bu„v
->
ev_wrôe
);

306 
d⁄e
;

308 
îr‹
:

309 
	`buf„ªvít_dißbÀ
(
bu„v
, 
EV_WRITE
);

310 
	`_buf„ªvít_run_evítcb
(
bu„v
, 
wh©
);

312 
d⁄e
:

313 
	`_buf„ªvít_de¸ef_™d_u∆ock
(
bu„v
);

314 
	}
}

316 
buf„ªvít
 *

317 
	$buf„ªvít_sockë_√w
(
evít_ba£
 *
ba£
, 
evutû_sockë_t
 
fd
,

318 
›ti⁄s
)

320 
buf„ªvít_¥iv©e
 *
bu„v_p
;

321 
buf„ªvít
 *
bu„v
;

323 #ifde‡
WIN32


324 i‡(
ba£
 && 
	`evít_ba£_gë_io˝
(base))

325  
	`buf„ªvít_async_√w
(
ba£
, 
fd
, 
›ti⁄s
);

328 i‡((
bu„v_p
 = 
	`mm_ˇŒoc
(1, (
buf„ªvít_¥iv©e
)))=
NULL
)

329  
NULL
;

331 i‡(
	`buf„ªvít_öô_comm⁄
(
bu„v_p
, 
ba£
, &
buf„ªvít_›s_sockë
,

332 
›ti⁄s
) < 0) {

333 
	`mm_‰ì
(
bu„v_p
);

334  
NULL
;

336 
bu„v
 = &
bu„v_p
->
bev
;

337 
	`evbuf„r_£t_Êags
(
bu„v
->
ouçut
, 
EVBUFFER_FLAG_DRAINS_TO_FD
);

339 
	`evít_assign
(&
bu„v
->
ev_ªad
, bu„v->
ev_ba£
, 
fd
,

340 
EV_READ
|
EV_PERSIST
, 
buf„ªvít_ªadcb
, 
bu„v
);

341 
	`evít_assign
(&
bu„v
->
ev_wrôe
, bu„v->
ev_ba£
, 
fd
,

342 
EV_WRITE
|
EV_PERSIST
, 
buf„ªvít_wrôecb
, 
bu„v
);

344 
	`evbuf„r_add_cb
(
bu„v
->
ouçut
, 
buf„ªvít_sockë_outbuf_cb
, bufev);

346 
	`evbuf„r_‰ìze
(
bu„v
->
öput
, 0);

347 
	`evbuf„r_‰ìze
(
bu„v
->
ouçut
, 1);

349  
bu„v
;

350 
	}
}

353 
	$buf„ªvít_sockë_c⁄√˘
(
buf„ªvít
 *
bev
,

354 
sockaddr
 *
ß
, 
sockÀn
)

356 
buf„ªvít_¥iv©e
 *
bu„v_p
 =

357 
	`EVUTIL_UPCAST
(
bev
, 
buf„ªvít_¥iv©e
, bev);

359 
evutû_sockë_t
 
fd
;

360 
r
 = 0;

361 
ªsu…
=-1;

362 
ownfd
 = 0;

364 
	`_buf„ªvít_ö¸ef_™d_lock
(
bev
);

366 i‡(!
bu„v_p
)

367 
d⁄e
;

369 
fd
 = 
	`buf„ªvít_gëfd
(
bev
);

370 i‡(
fd
 < 0) {

371 i‡(!
ß
)

372 
d⁄e
;

373 
fd
 = 
	`sockë
(
ß
->
ß_Ámûy
, 
SOCK_STREAM
, 0);

374 i‡(
fd
 < 0)

375 
d⁄e
;

376 i‡(
	`evutû_make_sockë_n⁄blockög
(
fd
)<0)

377 
d⁄e
;

378 
ownfd
 = 1;

380 i‡(
ß
) {

381 #ifde‡
WIN32


382 i‡(
	`buf„ªvít_async_ˇn_c⁄√˘
(
bev
)) {

383 
	`buf„ªvít_£tfd
(
bev
, 
fd
);

384 
r
 = 
	`buf„ªvít_async_c⁄√˘
(
bev
, 
fd
, 
ß
, 
sockÀn
);

385 i‡(
r
 < 0)

386 
‰ìsock
;

387 
bu„v_p
->
c⁄√˘ög
 = 1;

388 
ªsu…
 = 0;

389 
d⁄e
;

392 
r
 = 
	`evutû_sockë_c⁄√˘
(&
fd
, 
ß
, 
sockÀn
);

393 i‡(
r
 < 0)

394 
‰ìsock
;

396 #ifde‡
WIN32


400 i‡(
	`BEV_IS_ASYNC
(
bev
)) {

401 
	`evít_assign
(&
bev
->
ev_wrôe
, bev->
ev_ba£
, 
fd
,

402 
EV_WRITE
|
EV_PERSIST
, 
buf„ªvít_wrôecb
, 
bev
);

405 
	`buf„ªvít_£tfd
(
bev
, 
fd
);

406 i‡(
r
 == 0) {

407 i‡(! 
	`be_sockë_íabÀ
(
bev
, 
EV_WRITE
)) {

408 
bu„v_p
->
c⁄√˘ög
 = 1;

409 
ªsu…
 = 0;

410 
d⁄e
;

412 } i‡(
r
 == 1) {

414 
ªsu…
 = 0;

415 
bu„v_p
->
c⁄√˘ög
 = 1;

416 
	`evít_a˘ive
(&
bev
->
ev_wrôe
, 
EV_WRITE
, 1);

419 
bu„v_p
->
c⁄√˘i⁄_ªfu£d
 = 1;

420 
bu„v_p
->
c⁄√˘ög
 = 1;

421 
ªsu…
 = 0;

422 
	`evít_a˘ive
(&
bev
->
ev_wrôe
, 
EV_WRITE
, 1);

425 
d⁄e
;

427 
‰ìsock
:

428 
	`_buf„ªvít_run_evítcb
(
bev
, 
BEV_EVENT_ERROR
);

429 i‡(
ownfd
)

430 
	`evutû_˛o£sockë
(
fd
);

432 
d⁄e
:

433 
	`_buf„ªvít_de¸ef_™d_u∆ock
(
bev
);

434  
ªsu…
;

435 
	}
}

438 
	$buf„ªvít_c⁄√˘_gëaddröfo_cb
(
ªsu…
, 
evutû_addröfo
 *
ai
,

439 *
¨g
)

441 
buf„ªvít
 *
bev
 = 
¨g
;

442 
buf„ªvít_¥iv©e
 *
bev_p
 =

443 
	`EVUTIL_UPCAST
(
bev
, 
buf„ªvít_¥iv©e
, bev);

444 
r
;

445 
	`BEV_LOCK
(
bev
);

447 
	`buf„ªvít_unsu•íd_wrôe
(
bev
, 
BEV_SUSPEND_LOOKUP
);

448 
	`buf„ªvít_unsu•íd_ªad
(
bev
, 
BEV_SUSPEND_LOOKUP
);

450 i‡(
ªsu…
 != 0) {

451 
bev_p
->
dns_îr‹
 = 
ªsu…
;

452 
	`_buf„ªvít_run_evítcb
(
bev
, 
BEV_EVENT_ERROR
);

453 
	`_buf„ªvít_de¸ef_™d_u∆ock
(
bev
);

454 i‡(
ai
)

455 
	`evutû_‰ìaddröfo
(
ai
);

461 
r
 = 
	`buf„ªvít_sockë_c⁄√˘
(
bev
, 
ai
->
ai_addr
, (Ôi->
ai_addæí
);

462 ()
r
;

463 
	`_buf„ªvít_de¸ef_™d_u∆ock
(
bev
);

464 
	`evutû_‰ìaddröfo
(
ai
);

465 
	}
}

468 
	$buf„ªvít_sockë_c⁄√˘_ho°«me
(
buf„ªvít
 *
bev
,

469 
evdns_ba£
 *evdns_ba£, 
Ámûy
, c⁄° *
ho°«me
, 
p‹t
)

471 
p‹tbuf
[10];

472 
evutû_addröfo
 
höt
;

473 
îr
;

474 
buf„ªvít_¥iv©e
 *
bev_p
 =

475 
	`EVUTIL_UPCAST
(
bev
, 
buf„ªvít_¥iv©e
, bev);

477 i‡(
Ámûy
 !
AF_INET
 && famûy !
AF_INET6
 && famûy !
AF_UNSPEC
)

479 i‡(
p‹t
 < 1 ||Öort > 65535)

482 
	`BEV_LOCK
(
bev
);

483 
bev_p
->
dns_îr‹
 = 0;

484 
	`BEV_UNLOCK
(
bev
);

486 
	`evutû_¢¥ötf
(
p‹tbuf
, ’‹tbuf), "%d", 
p‹t
);

488 
	`mem£t
(&
höt
, 0, (hint));

489 
höt
.
ai_Ámûy
 = 
Ámûy
;

490 
höt
.
ai_¥Ÿocﬁ
 = 
IPPROTO_TCP
;

491 
höt
.
ai_sockty≥
 = 
SOCK_STREAM
;

493 
	`buf„ªvít_su•íd_wrôe
(
bev
, 
BEV_SUSPEND_LOOKUP
);

494 
	`buf„ªvít_su•íd_ªad
(
bev
, 
BEV_SUSPEND_LOOKUP
);

496 
	`buf„ªvít_ö¸ef
(
bev
);

497 
îr
 = 
	`evutû_gëaddröfo_async
(
evdns_ba£
, 
ho°«me
, 
p‹tbuf
,

498 &
höt
, 
buf„ªvít_c⁄√˘_gëaddröfo_cb
, 
bev
);

500 i‡(
îr
 == 0) {

503 
	`buf„ªvít_unsu•íd_wrôe
(
bev
, 
BEV_SUSPEND_LOOKUP
);

504 
	`buf„ªvít_unsu•íd_ªad
(
bev
, 
BEV_SUSPEND_LOOKUP
);

507 
	}
}

510 
	$buf„ªvít_sockë_gë_dns_îr‹
(
buf„ªvít
 *
bev
)

512 
rv
;

513 
buf„ªvít_¥iv©e
 *
bev_p
 =

514 
	`EVUTIL_UPCAST
(
bev
, 
buf„ªvít_¥iv©e
, bev);

516 
	`BEV_LOCK
(
bev
);

517 
rv
 = 
bev_p
->
dns_îr‹
;

518 
	`BEV_LOCK
(
bev
);

520  
rv
;

521 
	}
}

534 
buf„ªvít
 *

535 
	$buf„ªvít_√w
(
evutû_sockë_t
 
fd
,

536 
buf„ªvít_d©a_cb
 
ªadcb
, buf„ªvít_d©a_cb 
wrôecb
,

537 
buf„ªvít_evít_cb
 
evítcb
, *
cb¨g
)

539 
buf„ªvít
 *
bu„v
;

541 i‡(!(
bu„v
 = 
	`buf„ªvít_sockë_√w
(
NULL
, 
fd
, 0)))

542  
NULL
;

544 
	`buf„ªvít_£tcb
(
bu„v
, 
ªadcb
, 
wrôecb
, 
evítcb
, 
cb¨g
);

546  
bu„v
;

547 
	}
}

551 
	$be_sockë_íabÀ
(
buf„ªvít
 *
bu„v
, 
evít
)

553 i‡(
evít
 & 
EV_READ
) {

554 i‡(
	`be_sockë_add
(&
bu„v
->
ev_ªad
,&bu„v->
timeout_ªad
) == -1)

557 i‡(
evít
 & 
EV_WRITE
) {

558 i‡(
	`be_sockë_add
(&
bu„v
->
ev_wrôe
,&bu„v->
timeout_wrôe
) == -1)

562 
	}
}

565 
	$be_sockë_dißbÀ
(
buf„ªvít
 *
bu„v
, 
evít
)

567 
buf„ªvít_¥iv©e
 *
bu„v_p
 =

568 
	`EVUTIL_UPCAST
(
bu„v
, 
buf„ªvít_¥iv©e
, 
bev
);

569 i‡(
evít
 & 
EV_READ
) {

570 i‡(
	`evít_dñ
(&
bu„v
->
ev_ªad
) == -1)

574 i‡((
evít
 & 
EV_WRITE
Ë&& ! 
bu„v_p
->
c⁄√˘ög
) {

575 i‡(
	`evít_dñ
(&
bu„v
->
ev_wrôe
) == -1)

579 
	}
}

582 
	$be_sockë_de°ru˘
(
buf„ªvít
 *
bu„v
)

584 
buf„ªvít_¥iv©e
 *
bu„v_p
 =

585 
	`EVUTIL_UPCAST
(
bu„v
, 
buf„ªvít_¥iv©e
, 
bev
);

586 
evutû_sockë_t
 
fd
;

587 
	`EVUTIL_ASSERT
(
bu„v
->
be_›s
 =&
buf„ªvít_›s_sockë
);

589 
fd
 = 
	`evít_gë_fd
(&
bu„v
->
ev_ªad
);

591 
	`evít_dñ
(&
bu„v
->
ev_ªad
);

592 
	`evít_dñ
(&
bu„v
->
ev_wrôe
);

594 i‡((
bu„v_p
->
›ti⁄s
 & 
BEV_OPT_CLOSE_ON_FREE
Ë&& 
fd
 >= 0)

595 
	`EVUTIL_CLOSESOCKET
(
fd
);

596 
	}
}

599 
	$be_sockë_adj_timeouts
(
buf„ªvít
 *
bu„v
)

601 
r
 = 0;

602 i‡(
	`evít_≥ndög
(&
bu„v
->
ev_ªad
, 
EV_READ
, 
NULL
))

603 i‡(
	`be_sockë_add
(&
bu„v
->
ev_ªad
, &bu„v->
timeout_ªad
) < 0)

604 
r
 = -1;

605 i‡(
	`evít_≥ndög
(&
bu„v
->
ev_wrôe
, 
EV_WRITE
, 
NULL
)) {

606 i‡(
	`be_sockë_add
(&
bu„v
->
ev_wrôe
, &bu„v->
timeout_wrôe
) < 0)

607 
r
 = -1;

609  
r
;

610 
	}
}

613 
	$be_sockë_Êush
(
buf„ªvít
 *
bev
, 
iŸy≥
,

614 
buf„ªvít_Êush_mode
 
mode
)

617 
	}
}

621 
	$be_sockë_£tfd
(
buf„ªvít
 *
bu„v
, 
evutû_sockë_t
 
fd
)

623 
	`BEV_LOCK
(
bu„v
);

624 
	`EVUTIL_ASSERT
(
bu„v
->
be_›s
 =&
buf„ªvít_›s_sockë
);

626 
	`evít_dñ
(&
bu„v
->
ev_ªad
);

627 
	`evít_dñ
(&
bu„v
->
ev_wrôe
);

629 
	`evít_assign
(&
bu„v
->
ev_ªad
, bu„v->
ev_ba£
, 
fd
,

630 
EV_READ
|
EV_PERSIST
, 
buf„ªvít_ªadcb
, 
bu„v
);

631 
	`evít_assign
(&
bu„v
->
ev_wrôe
, bu„v->
ev_ba£
, 
fd
,

632 
EV_WRITE
|
EV_PERSIST
, 
buf„ªvít_wrôecb
, 
bu„v
);

634 i‡(
fd
 >= 0)

635 
	`buf„ªvít_íabÀ
(
bu„v
, bu„v->
íabÀd
);

637 
	`BEV_UNLOCK
(
bu„v
);

638 
	}
}

642 
	$buf„ªvít_¥i‹ôy_£t
(
buf„ªvít
 *
bu„v
, 
¥i‹ôy
)

644 
r
 = -1;

646 
	`BEV_LOCK
(
bu„v
);

647 i‡(
bu„v
->
be_›s
 !&
buf„ªvít_›s_sockë
)

648 
d⁄e
;

650 i‡(
	`evít_¥i‹ôy_£t
(&
bu„v
->
ev_ªad
, 
¥i‹ôy
) == -1)

651 
d⁄e
;

652 i‡(
	`evít_¥i‹ôy_£t
(&
bu„v
->
ev_wrôe
, 
¥i‹ôy
) == -1)

653 
d⁄e
;

655 
r
 = 0;

656 
d⁄e
:

657 
	`BEV_UNLOCK
(
bu„v
);

658  
r
;

659 
	}
}

663 
	$buf„ªvít_ba£_£t
(
evít_ba£
 *
ba£
, 
buf„ªvít
 *
bu„v
)

665 
ªs
 = -1;

667 
	`BEV_LOCK
(
bu„v
);

668 i‡(
bu„v
->
be_›s
 !&
buf„ªvít_›s_sockë
)

669 
d⁄e
;

671 
bu„v
->
ev_ba£
 = 
ba£
;

673 
ªs
 = 
	`evít_ba£_£t
(
ba£
, &
bu„v
->
ev_ªad
);

674 i‡(
ªs
 == -1)

675 
d⁄e
;

677 
ªs
 = 
	`evít_ba£_£t
(
ba£
, &
bu„v
->
ev_wrôe
);

678 
d⁄e
:

679 
	`BEV_UNLOCK
(
bu„v
);

680  
ªs
;

681 
	}
}

684 
	$be_sockë_˘æ
(
buf„ªvít
 *
bev
, 
buf„ªvít_˘æ_›
 
›
,

685 
buf„ªvít_˘æ_d©a
 *
d©a
)

687 
›
) {

688 
BEV_CTRL_SET_FD
:

689 
	`be_sockë_£tfd
(
bev
, 
d©a
->
fd
);

691 
BEV_CTRL_GET_FD
:

692 
d©a
->
fd
 = 
	`evít_gë_fd
(&
bev
->
ev_ªad
);

694 
BEV_CTRL_GET_UNDERLYING
:

695 
BEV_CTRL_CANCEL_ALL
:

699 
	}
}

	@changelist-internal.h

26 #i‚de‡
_CHANGELIST_H_


27 
	#_CHANGELIST_H_


	)

50 
	~"evít2/utû.h
"

53 
	sevít_ch™ge
 {

55 
evutû_sockë_t
 
	mfd
;

58 
	mﬁd_evíts
;

63 
ev_uöt8_t
 
	mªad_ch™ge
;

64 
ev_uöt8_t
 
	mwrôe_ch™ge
;

70 
	#EV_CHANGE_ADD
 0x01

	)

72 
	#EV_CHANGE_DEL
 0x02

	)

74 
	#EV_CHANGE_SIGNAL
 
EV_SIGNAL


	)

76 
	#EV_CHANGE_PERSIST
 
EV_PERSIST


	)

78 
	#EV_CHANGE_ET
 
EV_ET


	)

82 
	#EVENT_CHANGELIST_FDINFO_SIZE
 ()

	)

85 
evít_ch™gñi°_öô
(
evít_ch™gñi°
 *
ch™gñi°
);

89 
evít_ch™gñi°_ªmove_Æl
(
evít_ch™gñi°
 *
ch™gñi°
,

90 
evít_ba£
 *
ba£
);

92 
evít_ch™gñi°_‰ìmem
(
evít_ch™gñi°
 *
ch™gñi°
);

95 
evít_ch™gñi°_add
(
evít_ba£
 *
ba£
, 
evutû_sockë_t
 
fd
, 
ﬁd
, 
evíts
,

96 *
p
);

98 
evít_ch™gñi°_dñ
(
evít_ba£
 *
ba£
, 
evutû_sockë_t
 
fd
, 
ﬁd
, 
evíts
,

99 *
p
);

	@compat/sys/queue.h

35 #i‚def 
_SYS_QUEUE_H_


36 
	#_SYS_QUEUE_H_


	)

88 
	#SLIST_HEAD
(
«me
, 
ty≥
) \

89 
	s«me
 { \

90 
ty≥
 *
¶h_fú°
; \

91 }

	)

93 
	#SLIST_HEAD_INITIALIZER
(
hód
) \

94 { 
NULL
 }

	)

96 #i‚de‡
WIN32


97 
	#SLIST_ENTRY
(
ty≥
) \

99 
ty≥
 *
¶e_√xt
; \

100 }

	)

106 
	#SLIST_FIRST
(
hód
Ë((hód)->
¶h_fú°
)

	)

107 
	#SLIST_END
(
hód
Ë
NULL


	)

108 
	#SLIST_EMPTY
(
hód
Ë(
	`SLIST_FIRST
(hódË=
	`SLIST_END
(hód))

	)

109 
	#SLIST_NEXT
(
ñm
, 
fõld
Ë(”lm)->fõld.
¶e_√xt
)

	)

111 
	#SLIST_FOREACH
(
v¨
, 
hód
, 
fõld
) \

112 (
v¨
Ë
	`SLIST_FIRST
(
hód
); \

113 (
v¨
Ë!
	`SLIST_END
(
hód
); \

114 (
v¨
Ë
	`SLIST_NEXT
(v¨, 
fõld
))

	)

119 
	#SLIST_INIT
(
hód
) { \

120 
	`SLIST_FIRST
(
hód
Ë
	`SLIST_END
(head); \

121 }

	)

123 
	#SLIST_INSERT_AFTER
(
¶i°ñm
, 
ñm
, 
fõld
) do { \

124 (
ñm
)->
fõld
.
¶e_√xt
 = (
¶i°ñm
)->field.sle_next; \

125 (
¶i°ñm
)->
fõld
.
¶e_√xt
 = (
ñm
); \

126 } 0)

	)

128 
	#SLIST_INSERT_HEAD
(
hód
, 
ñm
, 
fõld
) do { \

129 (
ñm
)->
fõld
.
¶e_√xt
 = (
hód
)->
¶h_fú°
; \

130 (
hód
)->
¶h_fú°
 = (
ñm
); \

131 } 0)

	)

133 
	#SLIST_REMOVE_HEAD
(
hód
, 
fõld
) do { \

134 (
hód
)->
¶h_fú°
 = (hód)->¶h_fú°->
fõld
.
¶e_√xt
; \

135 } 0)

	)

140 
	#LIST_HEAD
(
«me
, 
ty≥
) \

141 
	s«me
 { \

142 
ty≥
 *
lh_fú°
; \

143 }

	)

145 
	#LIST_HEAD_INITIALIZER
(
hód
) \

146 { 
NULL
 }

	)

148 
	#LIST_ENTRY
(
ty≥
) \

150 
ty≥
 *
À_√xt
; \

151 
ty≥
 **
À_¥ev
; \

152 }

	)

157 
	#LIST_FIRST
(
hód
Ë((hód)->
lh_fú°
)

	)

158 
	#LIST_END
(
hód
Ë
NULL


	)

159 
	#LIST_EMPTY
(
hód
Ë(
	`LIST_FIRST
(hódË=
	`LIST_END
(hód))

	)

160 
	#LIST_NEXT
(
ñm
, 
fõld
Ë(”lm)->fõld.
À_√xt
)

	)

162 
	#LIST_FOREACH
(
v¨
, 
hód
, 
fõld
) \

163 (
v¨
Ë
	`LIST_FIRST
(
hód
); \

164 (
v¨
)!
	`LIST_END
(
hód
); \

165 (
v¨
Ë
	`LIST_NEXT
(v¨, 
fõld
))

	)

170 
	#LIST_INIT
(
hód
) do { \

171 
	`LIST_FIRST
(
hód
Ë
	`LIST_END
(head); \

172 } 0)

	)

174 
	#LIST_INSERT_AFTER
(
li°ñm
, 
ñm
, 
fõld
) do { \

175 i‡(((
ñm
)->
fõld
.
À_√xt
 = (
li°ñm
)->fõld.À_√xtË!
NULL
) \

176 (
li°ñm
)->
fõld
.
À_√xt
->fõld.
À_¥ev
 = \

177 &(
ñm
)->
fõld
.
À_√xt
; \

178 (
li°ñm
)->
fõld
.
À_√xt
 = (
ñm
); \

179 (
ñm
)->
fõld
.
À_¥ev
 = &(
li°ñm
)->fõld.
À_√xt
; \

180 } 0)

	)

182 
	#LIST_INSERT_BEFORE
(
li°ñm
, 
ñm
, 
fõld
) do { \

183 (
ñm
)->
fõld
.
À_¥ev
 = (
li°ñm
)->field.le_prev; \

184 (
ñm
)->
fõld
.
À_√xt
 = (
li°ñm
); \

185 *(
li°ñm
)->
fõld
.
À_¥ev
 = (
ñm
); \

186 (
li°ñm
)->
fõld
.
À_¥ev
 = &(
ñm
)->fõld.
À_√xt
; \

187 } 0)

	)

189 
	#LIST_INSERT_HEAD
(
hód
, 
ñm
, 
fõld
) do { \

190 i‡(((
ñm
)->
fõld
.
À_√xt
 = (
hód
)->
lh_fú°
Ë!
NULL
) \

191 (
hód
)->
lh_fú°
->
fõld
.
À_¥ev
 = &(
ñm
)->fõld.
À_√xt
;\

192 (
hód
)->
lh_fú°
 = (
ñm
); \

193 (
ñm
)->
fõld
.
À_¥ev
 = &(
hód
)->
lh_fú°
; \

194 } 0)

	)

196 
	#LIST_REMOVE
(
ñm
, 
fõld
) do { \

197 i‡((
ñm
)->
fõld
.
À_√xt
 !
NULL
) \

198 (
ñm
)->
fõld
.
À_√xt
->fõld.
À_¥ev
 = \

199 (
ñm
)->
fõld
.
À_¥ev
; \

200 *(
ñm
)->
fõld
.
À_¥ev
 = (ñm)->fõld.
À_√xt
; \

201 } 0)

	)

203 
	#LIST_REPLACE
(
ñm
, 
ñm2
, 
fõld
) do { \

204 i‡(((
ñm2
)->
fõld
.
À_√xt
 = (
ñm
)->fõld.À_√xtË!
NULL
) \

205 (
ñm2
)->
fõld
.
À_√xt
->fõld.
À_¥ev
 = \

206 &(
ñm2
)->
fõld
.
À_√xt
; \

207 (
ñm2
)->
fõld
.
À_¥ev
 = (
ñm
)->field.le_prev; \

208 *(
ñm2
)->
fõld
.
À_¥ev
 = (elm2); \

209 } 0)

	)

214 
	#SIMPLEQ_HEAD
(
«me
, 
ty≥
) \

215 
	s«me
 { \

216 
ty≥
 *
sqh_fú°
; \

217 
ty≥
 **
sqh_œ°
; \

218 }

	)

220 
	#SIMPLEQ_HEAD_INITIALIZER
(
hód
) \

221 { 
NULL
, &(
hód
).
sqh_fú°
 }

	)

223 
	#SIMPLEQ_ENTRY
(
ty≥
) \

225 
ty≥
 *
sqe_√xt
; \

226 }

	)

231 
	#SIMPLEQ_FIRST
(
hód
Ë((hód)->
sqh_fú°
)

	)

232 
	#SIMPLEQ_END
(
hód
Ë
NULL


	)

233 
	#SIMPLEQ_EMPTY
(
hód
Ë(
	`SIMPLEQ_FIRST
(hódË=
	`SIMPLEQ_END
(hód))

	)

234 
	#SIMPLEQ_NEXT
(
ñm
, 
fõld
Ë(”lm)->fõld.
sqe_√xt
)

	)

236 
	#SIMPLEQ_FOREACH
(
v¨
, 
hód
, 
fõld
) \

237 (
v¨
Ë
	`SIMPLEQ_FIRST
(
hód
); \

238 (
v¨
Ë!
	`SIMPLEQ_END
(
hód
); \

239 (
v¨
Ë
	`SIMPLEQ_NEXT
(v¨, 
fõld
))

	)

244 
	#SIMPLEQ_INIT
(
hód
) do { \

245 (
hód
)->
sqh_fú°
 = 
NULL
; \

246 (
hód
)->
sqh_œ°
 = &(hód)->
sqh_fú°
; \

247 } 0)

	)

249 
	#SIMPLEQ_INSERT_HEAD
(
hód
, 
ñm
, 
fõld
) do { \

250 i‡(((
ñm
)->
fõld
.
sqe_√xt
 = (
hód
)->
sqh_fú°
Ë=
NULL
) \

251 (
hód
)->
sqh_œ°
 = &(
ñm
)->
fõld
.
sqe_√xt
; \

252 (
hód
)->
sqh_fú°
 = (
ñm
); \

253 } 0)

	)

255 
	#SIMPLEQ_INSERT_TAIL
(
hód
, 
ñm
, 
fõld
) do { \

256 (
ñm
)->
fõld
.
sqe_√xt
 = 
NULL
; \

257 *(
hód
)->
sqh_œ°
 = (
ñm
); \

258 (
hód
)->
sqh_œ°
 = &(
ñm
)->
fõld
.
sqe_√xt
; \

259 } 0)

	)

261 
	#SIMPLEQ_INSERT_AFTER
(
hód
, 
li°ñm
, 
ñm
, 
fõld
) do { \

262 i‡(((
ñm
)->
fõld
.
sqe_√xt
 = (
li°ñm
)->fõld.sqe_√xtË=
NULL
)\

263 (
hód
)->
sqh_œ°
 = &(
ñm
)->
fõld
.
sqe_√xt
; \

264 (
li°ñm
)->
fõld
.
sqe_√xt
 = (
ñm
); \

265 } 0)

	)

267 
	#SIMPLEQ_REMOVE_HEAD
(
hód
, 
ñm
, 
fõld
) do { \

268 i‡(((
hód
)->
sqh_fú°
 = (
ñm
)->
fõld
.
sqe_√xt
Ë=
NULL
) \

269 (
hód
)->
sqh_œ°
 = &(hód)->
sqh_fú°
; \

270 } 0)

	)

275 
	#TAILQ_HEAD
(
«me
, 
ty≥
) \

276 
	s«me
 { \

277 
ty≥
 *
tqh_fú°
; \

278 
ty≥
 **
tqh_œ°
; \

279 }

	)

281 
	#TAILQ_HEAD_INITIALIZER
(
hód
) \

282 { 
NULL
, &(
hód
).
tqh_fú°
 }

	)

284 
	#TAILQ_ENTRY
(
ty≥
) \

286 
ty≥
 *
tqe_√xt
; \

287 
ty≥
 **
tqe_¥ev
; \

288 }

	)

293 
	#TAILQ_FIRST
(
hód
Ë((hód)->
tqh_fú°
)

	)

294 
	#TAILQ_END
(
hód
Ë
NULL


	)

295 
	#TAILQ_NEXT
(
ñm
, 
fõld
Ë(”lm)->fõld.
tqe_√xt
)

	)

296 
	#TAILQ_LAST
(
hód
, 
hód«me
) \

297 (*(((
hód«me
 *)((
hód
)->
tqh_œ°
))->tqh_œ°))

	)

299 
	#TAILQ_PREV
(
ñm
, 
hód«me
, 
fõld
) \

300 (*(((
hód«me
 *)((
ñm
)->
fõld
.
tqe_¥ev
))->
tqh_œ°
))

	)

301 
	#TAILQ_EMPTY
(
hód
) \

302 (
	`TAILQ_FIRST
(
hód
Ë=
	`TAILQ_END
(hód))

	)

304 
	#TAILQ_FOREACH
(
v¨
, 
hód
, 
fõld
) \

305 (
v¨
Ë
	`TAILQ_FIRST
(
hód
); \

306 (
v¨
Ë!
	`TAILQ_END
(
hód
); \

307 (
v¨
Ë
	`TAILQ_NEXT
(v¨, 
fõld
))

	)

309 
	#TAILQ_FOREACH_REVERSE
(
v¨
, 
hód
, 
hód«me
, 
fõld
) \

310 (
v¨
Ë
	`TAILQ_LAST
(
hód
, 
hód«me
); \

311 (
v¨
Ë!
	`TAILQ_END
(
hód
); \

312 (
v¨
Ë
	`TAILQ_PREV
(v¨, 
hód«me
, 
fõld
))

	)

317 
	#TAILQ_INIT
(
hód
) do { \

318 (
hód
)->
tqh_fú°
 = 
NULL
; \

319 (
hód
)->
tqh_œ°
 = &(hód)->
tqh_fú°
; \

320 } 0)

	)

322 
	#TAILQ_INSERT_HEAD
(
hód
, 
ñm
, 
fõld
) do { \

323 i‡(((
ñm
)->
fõld
.
tqe_√xt
 = (
hód
)->
tqh_fú°
Ë!
NULL
) \

324 (
hód
)->
tqh_fú°
->
fõld
.
tqe_¥ev
 = \

325 &(
ñm
)->
fõld
.
tqe_√xt
; \

327 (
hód
)->
tqh_œ°
 = &(
ñm
)->
fõld
.
tqe_√xt
; \

328 (
hód
)->
tqh_fú°
 = (
ñm
); \

329 (
ñm
)->
fõld
.
tqe_¥ev
 = &(
hód
)->
tqh_fú°
; \

330 } 0)

	)

332 
	#TAILQ_INSERT_TAIL
(
hód
, 
ñm
, 
fõld
) do { \

333 (
ñm
)->
fõld
.
tqe_√xt
 = 
NULL
; \

334 (
ñm
)->
fõld
.
tqe_¥ev
 = (
hód
)->
tqh_œ°
; \

335 *(
hód
)->
tqh_œ°
 = (
ñm
); \

336 (
hód
)->
tqh_œ°
 = &(
ñm
)->
fõld
.
tqe_√xt
; \

337 } 0)

	)

339 
	#TAILQ_INSERT_AFTER
(
hód
, 
li°ñm
, 
ñm
, 
fõld
) do { \

340 i‡(((
ñm
)->
fõld
.
tqe_√xt
 = (
li°ñm
)->fõld.tqe_√xtË!
NULL
)\

341 (
ñm
)->
fõld
.
tqe_√xt
->fõld.
tqe_¥ev
 = \

342 &(
ñm
)->
fõld
.
tqe_√xt
; \

344 (
hód
)->
tqh_œ°
 = &(
ñm
)->
fõld
.
tqe_√xt
; \

345 (
li°ñm
)->
fõld
.
tqe_√xt
 = (
ñm
); \

346 (
ñm
)->
fõld
.
tqe_¥ev
 = &(
li°ñm
)->fõld.
tqe_√xt
; \

347 } 0)

	)

349 
	#TAILQ_INSERT_BEFORE
(
li°ñm
, 
ñm
, 
fõld
) do { \

350 (
ñm
)->
fõld
.
tqe_¥ev
 = (
li°ñm
)->field.tqe_prev; \

351 (
ñm
)->
fõld
.
tqe_√xt
 = (
li°ñm
); \

352 *(
li°ñm
)->
fõld
.
tqe_¥ev
 = (
ñm
); \

353 (
li°ñm
)->
fõld
.
tqe_¥ev
 = &(
ñm
)->fõld.
tqe_√xt
; \

354 } 0)

	)

356 
	#TAILQ_REMOVE
(
hód
, 
ñm
, 
fõld
) do { \

357 i‡(((
ñm
)->
fõld
.
tqe_√xt
Ë!
NULL
) \

358 (
ñm
)->
fõld
.
tqe_√xt
->fõld.
tqe_¥ev
 = \

359 (
ñm
)->
fõld
.
tqe_¥ev
; \

361 (
hód
)->
tqh_œ°
 = (
ñm
)->
fõld
.
tqe_¥ev
; \

362 *(
ñm
)->
fõld
.
tqe_¥ev
 = (ñm)->fõld.
tqe_√xt
; \

363 } 0)

	)

365 
	#TAILQ_REPLACE
(
hód
, 
ñm
, 
ñm2
, 
fõld
) do { \

366 i‡(((
ñm2
)->
fõld
.
tqe_√xt
 = (
ñm
)->fõld.tqe_√xtË!
NULL
) \

367 (
ñm2
)->
fõld
.
tqe_√xt
->fõld.
tqe_¥ev
 = \

368 &(
ñm2
)->
fõld
.
tqe_√xt
; \

370 (
hód
)->
tqh_œ°
 = &(
ñm2
)->
fõld
.
tqe_√xt
; \

371 (
ñm2
)->
fõld
.
tqe_¥ev
 = (
ñm
)->field.tqe_prev; \

372 *(
ñm2
)->
fõld
.
tqe_¥ev
 = (elm2); \

373 } 0)

	)

378 
	#CIRCLEQ_HEAD
(
«me
, 
ty≥
) \

379 
	s«me
 { \

380 
ty≥
 *
cqh_fú°
; \

381 
ty≥
 *
cqh_œ°
; \

382 }

	)

384 
	#CIRCLEQ_HEAD_INITIALIZER
(
hód
) \

385 { 
	`CIRCLEQ_END
(&
hód
), CIRCLEQ_END(&hódË}

	)

387 
	#CIRCLEQ_ENTRY
(
ty≥
) \

389 
ty≥
 *
cqe_√xt
; \

390 
ty≥
 *
cqe_¥ev
; \

391 }

	)

396 
	#CIRCLEQ_FIRST
(
hód
Ë((hód)->
cqh_fú°
)

	)

397 
	#CIRCLEQ_LAST
(
hód
Ë((hód)->
cqh_œ°
)

	)

398 
	#CIRCLEQ_END
(
hód
Ë((*)(hód))

	)

399 
	#CIRCLEQ_NEXT
(
ñm
, 
fõld
Ë(”lm)->fõld.
cqe_√xt
)

	)

400 
	#CIRCLEQ_PREV
(
ñm
, 
fõld
Ë(”lm)->fõld.
cqe_¥ev
)

	)

401 
	#CIRCLEQ_EMPTY
(
hód
) \

402 (
	`CIRCLEQ_FIRST
(
hód
Ë=
	`CIRCLEQ_END
(hód))

	)

404 
	#CIRCLEQ_FOREACH
(
v¨
, 
hód
, 
fõld
) \

405 (
v¨
Ë
	`CIRCLEQ_FIRST
(
hód
); \

406 (
v¨
Ë!
	`CIRCLEQ_END
(
hód
); \

407 (
v¨
Ë
	`CIRCLEQ_NEXT
(v¨, 
fõld
))

	)

409 
	#CIRCLEQ_FOREACH_REVERSE
(
v¨
, 
hód
, 
fõld
) \

410 (
v¨
Ë
	`CIRCLEQ_LAST
(
hód
); \

411 (
v¨
Ë!
	`CIRCLEQ_END
(
hód
); \

412 (
v¨
Ë
	`CIRCLEQ_PREV
(v¨, 
fõld
))

	)

417 
	#CIRCLEQ_INIT
(
hód
) do { \

418 (
hód
)->
cqh_fú°
 = 
	`CIRCLEQ_END
(head); \

419 (
hód
)->
cqh_œ°
 = 
	`CIRCLEQ_END
(head); \

420 } 0)

	)

422 
	#CIRCLEQ_INSERT_AFTER
(
hód
, 
li°ñm
, 
ñm
, 
fõld
) do { \

423 (
ñm
)->
fõld
.
cqe_√xt
 = (
li°ñm
)->field.cqe_next; \

424 (
ñm
)->
fõld
.
cqe_¥ev
 = (
li°ñm
); \

425 i‡((
li°ñm
)->
fõld
.
cqe_√xt
 =
	`CIRCLEQ_END
(
hód
)) \

426 (
hód
)->
cqh_œ°
 = (
ñm
); \

428 (
li°ñm
)->
fõld
.
cqe_√xt
->fõld.
cqe_¥ev
 = (
ñm
); \

429 (
li°ñm
)->
fõld
.
cqe_√xt
 = (
ñm
); \

430 } 0)

	)

432 
	#CIRCLEQ_INSERT_BEFORE
(
hód
, 
li°ñm
, 
ñm
, 
fõld
) do { \

433 (
ñm
)->
fõld
.
cqe_√xt
 = (
li°ñm
); \

434 (
ñm
)->
fõld
.
cqe_¥ev
 = (
li°ñm
)->field.cqe_prev; \

435 i‡((
li°ñm
)->
fõld
.
cqe_¥ev
 =
	`CIRCLEQ_END
(
hód
)) \

436 (
hód
)->
cqh_fú°
 = (
ñm
); \

438 (
li°ñm
)->
fõld
.
cqe_¥ev
->fõld.
cqe_√xt
 = (
ñm
); \

439 (
li°ñm
)->
fõld
.
cqe_¥ev
 = (
ñm
); \

440 } 0)

	)

442 
	#CIRCLEQ_INSERT_HEAD
(
hód
, 
ñm
, 
fõld
) do { \

443 (
ñm
)->
fõld
.
cqe_√xt
 = (
hód
)->
cqh_fú°
; \

444 (
ñm
)->
fõld
.
cqe_¥ev
 = 
	`CIRCLEQ_END
(
hód
); \

445 i‡((
hód
)->
cqh_œ°
 =
	`CIRCLEQ_END
(head)) \

446 (
hód
)->
cqh_œ°
 = (
ñm
); \

448 (
hód
)->
cqh_fú°
->
fõld
.
cqe_¥ev
 = (
ñm
); \

449 (
hód
)->
cqh_fú°
 = (
ñm
); \

450 } 0)

	)

452 
	#CIRCLEQ_INSERT_TAIL
(
hód
, 
ñm
, 
fõld
) do { \

453 (
ñm
)->
fõld
.
cqe_√xt
 = 
	`CIRCLEQ_END
(
hód
); \

454 (
ñm
)->
fõld
.
cqe_¥ev
 = (
hód
)->
cqh_œ°
; \

455 i‡((
hód
)->
cqh_fú°
 =
	`CIRCLEQ_END
(head)) \

456 (
hód
)->
cqh_fú°
 = (
ñm
); \

458 (
hód
)->
cqh_œ°
->
fõld
.
cqe_√xt
 = (
ñm
); \

459 (
hód
)->
cqh_œ°
 = (
ñm
); \

460 } 0)

	)

462 
	#CIRCLEQ_REMOVE
(
hód
, 
ñm
, 
fõld
) do { \

463 i‡((
ñm
)->
fõld
.
cqe_√xt
 =
	`CIRCLEQ_END
(
hód
)) \

464 (
hód
)->
cqh_œ°
 = (
ñm
)->
fõld
.
cqe_¥ev
; \

466 (
ñm
)->
fõld
.
cqe_√xt
->fõld.
cqe_¥ev
 = \

467 (
ñm
)->
fõld
.
cqe_¥ev
; \

468 i‡((
ñm
)->
fõld
.
cqe_¥ev
 =
	`CIRCLEQ_END
(
hód
)) \

469 (
hód
)->
cqh_fú°
 = (
ñm
)->
fõld
.
cqe_√xt
; \

471 (
ñm
)->
fõld
.
cqe_¥ev
->fõld.
cqe_√xt
 = \

472 (
ñm
)->
fõld
.
cqe_√xt
; \

473 } 0)

	)

475 
	#CIRCLEQ_REPLACE
(
hód
, 
ñm
, 
ñm2
, 
fõld
) do { \

476 i‡(((
ñm2
)->
fõld
.
cqe_√xt
 = (
ñm
)->field.cqe_next) == \

477 
	`CIRCLEQ_END
(
hód
)) \

478 (
hód
).
cqh_œ°
 = (
ñm2
); \

480 (
ñm2
)->
fõld
.
cqe_√xt
->fõld.
cqe_¥ev
 = (elm2); \

481 i‡(((
ñm2
)->
fõld
.
cqe_¥ev
 = (
ñm
)->field.cqe_prev) == \

482 
	`CIRCLEQ_END
(
hód
)) \

483 (
hód
).
cqh_fú°
 = (
ñm2
); \

485 (
ñm2
)->
fõld
.
cqe_¥ev
->fõld.
cqe_√xt
 = (elm2); \

486 } 0)

	)

	@config.h

20 
	#HAVE_ARPA_INET_H
 1

	)

23 
	#HAVE_CLOCK_GETTIME
 1

	)

27 
	#HAVE_DECL_CTL_KERN
 1

	)

31 
	#HAVE_DECL_KERN_ARND
 0

	)

35 
	#HAVE_DECL_KERN_RANDOM
 1

	)

39 
	#HAVE_DECL_RANDOM_UUID
 1

	)

45 
	#HAVE_DLFCN_H
 1

	)

48 
	#HAVE_EPOLL
 1

	)

51 
	#HAVE_EPOLL_CTL
 1

	)

54 
	#HAVE_EVENTFD
 1

	)

60 
	#HAVE_FCNTL
 1

	)

63 
	#HAVE_FCNTL_H
 1

	)

66 
	#HAVE_FD_MASK
 1

	)

69 
	#HAVE_GETADDRINFO
 1

	)

72 
	#HAVE_GETEGID
 1

	)

75 
	#HAVE_GETEUID
 1

	)

90 
	#HAVE_GETNAMEINFO
 1

	)

93 
	#HAVE_GETPROTOBYNUMBER
 1

	)

99 
	#HAVE_GETTIMEOFDAY
 1

	)

102 
	#HAVE_INET_ATON
 1

	)

105 
	#HAVE_INET_NTOP
 1

	)

108 
	#HAVE_INET_PTON
 1

	)

111 
	#HAVE_INTTYPES_H
 1

	)

120 
	#HAVE_LIBZ
 1

	)

123 
	#HAVE_MEMORY_H
 1

	)

126 
	#HAVE_MMAP
 1

	)

129 
	#HAVE_NETDB_H
 1

	)

135 
	#HAVE_NETINET_IN_H
 1

	)

138 
	#HAVE_OPENSSL
 1

	)

141 
	#HAVE_OPENSSL_BIO_H
 1

	)

144 
	#HAVE_PIPE
 1

	)

147 
	#HAVE_POLL
 1

	)

150 
	#HAVE_POLL_H
 1

	)

162 
	#HAVE_PTHREADS
 1

	)

165 
	#HAVE_PUTENV
 1

	)

168 
	#HAVE_SA_FAMILY_T
 1

	)

171 
	#HAVE_SELECT
 1

	)

174 
	#HAVE_SENDFILE
 1

	)

177 
	#HAVE_SETENV
 1

	)

180 
	#HAVE_SETFD
 1

	)

183 
	#HAVE_SIGACTION
 1

	)

186 
	#HAVE_SIGNAL
 1

	)

189 
	#HAVE_SPLICE
 1

	)

192 
	#HAVE_STDARG_H
 1

	)

195 
	#HAVE_STDDEF_H
 1

	)

198 
	#HAVE_STDINT_H
 1

	)

201 
	#HAVE_STDLIB_H
 1

	)

204 
	#HAVE_STRINGS_H
 1

	)

207 
	#HAVE_STRING_H
 1

	)

213 
	#HAVE_STRSEP
 1

	)

216 
	#HAVE_STRTOK_R
 1

	)

219 
	#HAVE_STRTOLL
 1

	)

222 
	#HAVE_STRUCT_ADDRINFO
 1

	)

225 
	#HAVE_STRUCT_IN6_ADDR
 1

	)

228 
	#HAVE_STRUCT_IN6_ADDR_S6_ADDR16
 1

	)

231 
	#HAVE_STRUCT_IN6_ADDR_S6_ADDR32
 1

	)

234 
	#HAVE_STRUCT_SOCKADDR_IN6
 1

	)

243 
	#HAVE_STRUCT_SOCKADDR_STORAGE
 1

	)

246 
	#HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY
 1

	)

252 
	#HAVE_SYSCTL
 1

	)

258 
	#HAVE_SYS_EPOLL_H
 1

	)

261 
	#HAVE_SYS_EVENTFD_H
 1

	)

267 
	#HAVE_SYS_IOCTL_H
 1

	)

270 
	#HAVE_SYS_MMAN_H
 1

	)

273 
	#HAVE_SYS_PARAM_H
 1

	)

276 
	#HAVE_SYS_QUEUE_H
 1

	)

279 
	#HAVE_SYS_SELECT_H
 1

	)

282 
	#HAVE_SYS_SENDFILE_H
 1

	)

285 
	#HAVE_SYS_SOCKET_H
 1

	)

288 
	#HAVE_SYS_STAT_H
 1

	)

291 
	#HAVE_SYS_SYSCTL_H
 1

	)

294 
	#HAVE_SYS_TIME_H
 1

	)

297 
	#HAVE_SYS_TYPES_H
 1

	)

300 
	#HAVE_SYS_UIO_H
 1

	)

303 
	#HAVE_SYS_WAIT_H
 1

	)

306 
	#HAVE_TAILQFOREACH
 1

	)

309 
	#HAVE_TIMERADD
 1

	)

312 
	#HAVE_TIMERCLEAR
 1

	)

315 
	#HAVE_TIMERCMP
 1

	)

318 
	#HAVE_TIMERISSET
 1

	)

321 
	#HAVE_UINT16_T
 1

	)

324 
	#HAVE_UINT32_T
 1

	)

327 
	#HAVE_UINT64_T
 1

	)

330 
	#HAVE_UINT8_T
 1

	)

333 
	#HAVE_UINTPTR_T
 1

	)

336 
	#HAVE_UMASK
 1

	)

339 
	#HAVE_UNISTD_H
 1

	)

342 
	#HAVE_UNSETENV
 1

	)

345 
	#HAVE_VASPRINTF
 1

	)

351 
	#HAVE_ZLIB_H
 1

	)

355 
	#LT_OBJDIR
 ".libs/"

	)

361 
	#NUMERIC_VERSION
 0x02001500

	)

364 
	#PACKAGE
 "libevít"

	)

367 
	#PACKAGE_BUGREPORT
 ""

	)

370 
	#PACKAGE_NAME
 ""

	)

373 
	#PACKAGE_STRING
 ""

	)

376 
	#PACKAGE_TARNAME
 ""

	)

379 
	#PACKAGE_URL
 ""

	)

382 
	#PACKAGE_VERSION
 ""

	)

389 
	#SIZEOF_INT
 4

	)

392 
	#SIZEOF_LONG
 8

	)

395 
	#SIZEOF_LONG_LONG
 8

	)

398 
	#SIZEOF_PTHREAD_T
 8

	)

401 
	#SIZEOF_SHORT
 2

	)

404 
	#SIZEOF_SIZE_T
 8

	)

407 
	#SIZEOF_VOID_P
 8

	)

410 
	#STDC_HEADERS
 1

	)

413 
	#TIME_WITH_SYS_TIME
 1

	)

416 
	#VERSION
 "2.0.21-°abÀ"

	)

426 #i‚de‡
__˝lu•lus


	@defer-internal.h

26 #i‚de‡
_DEFER_INTERNAL_H_


27 
	#_DEFER_INTERNAL_H_


	)

29 #ifde‡
__˝lu•lus


33 
	~"evít2/evít-c⁄fig.h
"

34 
	~<sys/queue.h
>

36 
de„ºed_cb
;

38 (*
de„ºed_cb_‚
)(
	tde„ºed_cb
 *, *);

42 
	sde„ºed_cb
 {

44 
TAILQ_ENTRY
 (
de„ºed_cb
Ë
cb_√xt
;

46 
queued
 : 1;

48 
de„ºed_cb_‚
 
cb
;

50 *
¨g
;

54 
	sde„ºed_cb_queue
 {

56 *
lock
;

59 
a˘ive_cou¡
;

62 (*
nŸify_‚
)(
de„ºed_cb_queue
 *, *);

63 *
nŸify_¨g
;

67 
TAILQ_HEAD
 (
de„ºed_cb_li°
, 
de„ºed_cb
) deferred_cb_list;

77 
evít_de„ºed_cb_öô
(
de„ºed_cb
 *, 
de„ºed_cb_‚
, *);

81 
evít_de„ºed_cb_ˇn˚l
(
de„ºed_cb_queue
 *, 
de„ºed_cb
 *);

85 
evít_de„ºed_cb_scheduÀ
(
de„ºed_cb_queue
 *, 
de„ºed_cb
 *);

87 
	#LOCK_DEFERRED_QUEUE
(
q
) \

88 
	`EVLOCK_LOCK
((
q
)->
lock
, 0)

	)

89 
	#UNLOCK_DEFERRED_QUEUE
(
q
) \

90 
	`EVLOCK_UNLOCK
((
q
)->
lock
, 0)

	)

92 #ifde‡
__˝lu•lus


96 
evít_de„ºed_cb_queue_öô
(
de„ºed_cb_queue
 *);

97 
de„ºed_cb_queue
 *
evít_ba£_gë_de„ºed_cb_queue
(
evít_ba£
 *);

	@devpoll.c

27 
	~"evít2/evít-c⁄fig.h
"

29 
	~<sys/ty≥s.h
>

30 
	~<sys/ªsour˚.h
>

31 #ifde‡
_EVENT_HAVE_SYS_TIME_H


32 
	~<sys/time.h
>

34 
	~<sys/queue.h
>

35 
	~<sys/devpﬁl.h
>

36 
	~<sig«l.h
>

37 
	~<°dio.h
>

38 
	~<°dlib.h
>

39 
	~<°rög.h
>

40 
	~<uni°d.h
>

41 
	~<f˙é.h
>

42 
	~<î∫o.h
>

44 
	~"evít2/evít.h
"

45 
	~"evít2/evít_°ru˘.h
"

46 
	~"evít2/thªad.h
"

47 
	~"evít-öã∫Æ.h
"

48 
	~"evsig«l-öã∫Æ.h
"

49 
	~"log-öã∫Æ.h
"

50 
	~"evm≠-öã∫Æ.h
"

51 
	~"evthªad-öã∫Æ.h
"

53 
	sdevpﬁl›
 {

54 
pﬁlfd
 *
	mevíts
;

55 
	m√víts
;

56 
	mdpfd
;

57 
pﬁlfd
 *
	mch™ges
;

58 
	mnch™ges
;

61 *
devpﬁl_öô
(
evít_ba£
 *);

62 
devpﬁl_add
(
evít_ba£
 *, 
fd
, 
ﬁd
, 
evíts
, *);

63 
devpﬁl_dñ
(
evít_ba£
 *, 
fd
, 
ﬁd
, 
evíts
, *);

64 
devpﬁl_di•©ch
(
evít_ba£
 *, 
timevÆ
 *);

65 
devpﬁl_dóŒoc
(
evít_ba£
 *);

67 c⁄° 
evít›
 
	gdevpﬁl›s
 = {

69 
devpﬁl_öô
,

70 
devpﬁl_add
,

71 
devpﬁl_dñ
,

72 
devpﬁl_di•©ch
,

73 
devpﬁl_dóŒoc
,

75 
EV_FEATURE_FDS
|
EV_FEATURE_O1
,

79 
	#NEVENT
 32000

	)

82 
	$devpﬁl_commô
(
devpﬁl›
 *devpollop)

88 i‡(
	`pwrôe
(
devpﬁl›
->
dpfd
, devpﬁl›->
ch™ges
,

89 (
pﬁlfd
Ë* 
devpﬁl›
->
nch™ges
, 0) == -1)

92 
devpﬁl›
->
nch™ges
 = 0;

94 
	}
}

97 
	$devpﬁl_queue
(
devpﬁl›
 *devpﬁl›, 
fd
, 
evíts
) {

98 
pﬁlfd
 *
pfd
;

100 i‡(
devpﬁl›
->
nch™ges
 >devpﬁl›->
√víts
) {

105 i‡(
	`devpﬁl_commô
(
devpﬁl›
) != 0)

109 
pfd
 = &
devpﬁl›
->
ch™ges
[devpﬁl›->
nch™ges
++];

110 
pfd
->
fd
 = fd;

111 
pfd
->
evíts
 =Évents;

112 
pfd
->
ªvíts
 = 0;

115 
	}
}

118 
	$devpﬁl_öô
(
evít_ba£
 *
ba£
)

120 
dpfd
, 
nfûes
 = 
NEVENT
;

121 
æimô
 
æ
;

122 
devpﬁl›
 *devpollop;

124 i‡(!(
devpﬁl›
 = 
	`mm_ˇŒoc
(1, (devpollop))))

125  (
NULL
);

127 i‡(
	`gëæimô
(
RLIMIT_NOFILE
, &
æ
) == 0 &&

128 
æ
.
æim_cur
 !
RLIM_INFINITY
)

129 
nfûes
 = 
æ
.
æim_cur
;

132 i‡((
dpfd
 = 
	`evutû_›í_˛o£⁄exec
("/dev/pﬁl", 
O_RDWR
, 0)) == -1) {

133 
	`evít_w¨n
("open: /dev/poll");

134 
	`mm_‰ì
(
devpﬁl›
);

135  (
NULL
);

138 
devpﬁl›
->
dpfd
 = dpfd;

143 
devpﬁl›
->
evíts
 = 
	`mm_ˇŒoc
(
nfûes
, (
pﬁlfd
));

144 i‡(
devpﬁl›
->
evíts
 =
NULL
) {

145 
	`mm_‰ì
(
devpﬁl›
);

146 
	`˛o£
(
dpfd
);

147  (
NULL
);

149 
devpﬁl›
->
√víts
 = 
nfûes
;

151 
devpﬁl›
->
ch™ges
 = 
	`mm_ˇŒoc
(
nfûes
, (
pﬁlfd
));

152 i‡(
devpﬁl›
->
ch™ges
 =
NULL
) {

153 
	`mm_‰ì
(
devpﬁl›
->
evíts
);

154 
	`mm_‰ì
(
devpﬁl›
);

155 
	`˛o£
(
dpfd
);

156  (
NULL
);

159 
	`evsig_öô
(
ba£
);

161  (
devpﬁl›
);

162 
	}
}

165 
	$devpﬁl_di•©ch
(
evít_ba£
 *
ba£
, 
timevÆ
 *
tv
)

167 
devpﬁl›
 *devpﬁl› = 
ba£
->
evba£
;

168 
pﬁlfd
 *
evíts
 = 
devpﬁl›
->events;

169 
dvpﬁl
 
dvp
;

170 
i
, 
ªs
, 
timeout
 = -1;

172 i‡(
devpﬁl›
->
nch™ges
)

173 
	`devpﬁl_commô
(
devpﬁl›
);

175 i‡(
tv
 !
NULL
)

176 
timeout
 = 
tv
->
tv_£c
 * 1000 + (tv->
tv_u£c
 + 999) / 1000;

178 
dvp
.
dp_fds
 = 
devpﬁl›
->
evíts
;

179 
dvp
.
dp_nfds
 = 
devpﬁl›
->
√víts
;

180 
dvp
.
dp_timeout
 = 
timeout
;

182 
	`EVBASE_RELEASE_LOCK
(
ba£
, 
th_ba£_lock
);

184 
ªs
 = 
	`io˘l
(
devpﬁl›
->
dpfd
, 
DP_POLL
, &
dvp
);

186 
	`EVBASE_ACQUIRE_LOCK
(
ba£
, 
th_ba£_lock
);

188 i‡(
ªs
 == -1) {

189 i‡(
î∫o
 !
EINTR
) {

190 
	`evít_w¨n
("ioctl: DP_POLL");

197 
	`evít_debug
(("%s: devpﬁl_waôÑï‹t†%d", 
__func__
, 
ªs
));

199 
i
 = 0; i < 
ªs
; i++) {

200 
which
 = 0;

201 
wh©
 = 
evíts
[
i
].
ªvíts
;

203 i‡(
wh©
 & 
POLLHUP
)

204 
wh©
 |
POLLIN
 | 
POLLOUT
;

205 i‡(
wh©
 & 
POLLERR
)

206 
wh©
 |
POLLIN
 | 
POLLOUT
;

208 i‡(
wh©
 & 
POLLIN
)

209 
which
 |
EV_READ
;

210 i‡(
wh©
 & 
POLLOUT
)

211 
which
 |
EV_WRITE
;

213 i‡(!
which
)

217 
	`evm≠_io_a˘ive
(
ba£
, 
evíts
[
i
].
fd
, 
which
);

221 
	}
}

225 
	$devpﬁl_add
(
evít_ba£
 *
ba£
, 
fd
, 
ﬁd
, 
evíts
, *
p
)

227 
devpﬁl›
 *devpﬁl› = 
ba£
->
evba£
;

228 
ªs
;

229 ()
p
;

238 
ªs
 = 0;

239 i‡(
evíts
 & 
EV_READ
)

240 
ªs
 |
POLLIN
;

241 i‡(
evíts
 & 
EV_WRITE
)

242 
ªs
 |
POLLOUT
;

244 i‡(
	`devpﬁl_queue
(
devpﬁl›
, 
fd
, 
ªs
) != 0)

248 
	}
}

251 
	$devpﬁl_dñ
(
evít_ba£
 *
ba£
, 
fd
, 
ﬁd
, 
evíts
, *
p
)

253 
devpﬁl›
 *devpﬁl› = 
ba£
->
evba£
;

254 
ªs
;

255 ()
p
;

257 
ªs
 = 0;

258 i‡(
evíts
 & 
EV_READ
)

259 
ªs
 |
POLLIN
;

260 i‡(
evíts
 & 
EV_WRITE
)

261 
ªs
 |
POLLOUT
;

270 i‡(
	`devpﬁl_queue
(
devpﬁl›
, 
fd
, 
POLLREMOVE
) != 0)

273 i‡((
ªs
 & (
POLLIN
|
POLLOUT
)) != (POLLIN|POLLOUT)) {

279 i‡((
ªs
 & 
POLLIN
Ë&& (
ﬁd
 & 
EV_WRITE
)) {

281 
	`devpﬁl_queue
(
devpﬁl›
, 
fd
, 
POLLOUT
);

282 } i‡((
ªs
 & 
POLLOUT
Ë&& (
ﬁd
 & 
EV_READ
)) {

284 
	`devpﬁl_queue
(
devpﬁl›
, 
fd
, 
POLLIN
);

289 
	}
}

292 
	$devpﬁl_dóŒoc
(
evít_ba£
 *
ba£
)

294 
devpﬁl›
 *devpﬁl› = 
ba£
->
evba£
;

296 
	`evsig_dóŒoc
(
ba£
);

297 i‡(
devpﬁl›
->
evíts
)

298 
	`mm_‰ì
(
devpﬁl›
->
evíts
);

299 i‡(
devpﬁl›
->
ch™ges
)

300 
	`mm_‰ì
(
devpﬁl›
->
ch™ges
);

301 i‡(
devpﬁl›
->
dpfd
 >= 0)

302 
	`˛o£
(
devpﬁl›
->
dpfd
);

304 
	`mem£t
(
devpﬁl›
, 0, (devpollop));

305 
	`mm_‰ì
(
devpﬁl›
);

306 
	}
}

	@epoll.c

27 
	~"evít2/evít-c⁄fig.h
"

29 
	~<°döt.h
>

30 
	~<sys/ty≥s.h
>

31 
	~<sys/ªsour˚.h
>

32 #ifde‡
_EVENT_HAVE_SYS_TIME_H


33 
	~<sys/time.h
>

35 
	~<sys/queue.h
>

36 
	~<sys/ïﬁl.h
>

37 
	~<sig«l.h
>

38 
	~<limôs.h
>

39 
	~<°dio.h
>

40 
	~<°dlib.h
>

41 
	~<°rög.h
>

42 
	~<uni°d.h
>

43 
	~<î∫o.h
>

44 #ifde‡
_EVENT_HAVE_FCNTL_H


45 
	~<f˙é.h
>

48 
	~"evít-öã∫Æ.h
"

49 
	~"evsig«l-öã∫Æ.h
"

50 
	~"evít2/thªad.h
"

51 
	~"evthªad-öã∫Æ.h
"

52 
	~"log-öã∫Æ.h
"

53 
	~"evm≠-öã∫Æ.h
"

54 
	~"ch™gñi°-öã∫Æ.h
"

56 
	sïﬁl›
 {

57 
ïﬁl_evít
 *
	mevíts
;

58 
	m√víts
;

59 
	mïfd
;

62 *
ïﬁl_öô
(
evít_ba£
 *);

63 
ïﬁl_di•©ch
(
evít_ba£
 *, 
timevÆ
 *);

64 
ïﬁl_dóŒoc
(
evít_ba£
 *);

66 c⁄° 
evít›
 
	gïﬁl›s_ch™gñi°
 = {

68 
ïﬁl_öô
,

69 
evít_ch™gñi°_add
,

70 
evít_ch™gñi°_dñ
,

71 
ïﬁl_di•©ch
,

72 
ïﬁl_dóŒoc
,

74 
EV_FEATURE_ET
|
EV_FEATURE_O1
,

75 
EVENT_CHANGELIST_FDINFO_SIZE


79 
ïﬁl_noch™gñi°_add
(
evít_ba£
 *
ba£
, 
evutû_sockë_t
 
fd
,

80 
ﬁd
, 
evíts
, *
p
);

81 
ïﬁl_noch™gñi°_dñ
(
evít_ba£
 *
ba£
, 
evutû_sockë_t
 
fd
,

82 
ﬁd
, 
evíts
, *
p
);

84 c⁄° 
evít›
 
	gïﬁl›s
 = {

86 
ïﬁl_öô
,

87 
ïﬁl_noch™gñi°_add
,

88 
ïﬁl_noch™gñi°_dñ
,

89 
ïﬁl_di•©ch
,

90 
ïﬁl_dóŒoc
,

92 
EV_FEATURE_ET
|
EV_FEATURE_O1
,

96 
	#INITIAL_NEVENT
 32

	)

97 
	#MAX_NEVENT
 4096

	)

105 
	#MAX_EPOLL_TIMEOUT_MSEC
 (35*60*1000)

	)

108 
	$ïﬁl_öô
(
evít_ba£
 *
ba£
)

110 
ïfd
;

111 
ïﬁl›
 *epollop;

115 i‡((
ïfd
 = 
	`ïﬁl_¸óã
(32000)) == -1) {

116 i‡(
î∫o
 !
ENOSYS
)

117 
	`evít_w¨n
("epoll_create");

118  (
NULL
);

121 
	`evutû_make_sockë_˛o£⁄exec
(
ïfd
);

123 i‡(!(
ïﬁl›
 = 
	`mm_ˇŒoc
(1, (epollop)))) {

124 
	`˛o£
(
ïfd
);

125  (
NULL
);

128 
ïﬁl›
->
ïfd
 =Épfd;

131 
ïﬁl›
->
evíts
 = 
	`mm_ˇŒoc
(
INITIAL_NEVENT
, (
ïﬁl_evít
));

132 i‡(
ïﬁl›
->
evíts
 =
NULL
) {

133 
	`mm_‰ì
(
ïﬁl›
);

134 
	`˛o£
(
ïfd
);

135  (
NULL
);

137 
ïﬁl›
->
√víts
 = 
INITIAL_NEVENT
;

139 i‡((
ba£
->
Êags
 & 
EVENT_BASE_FLAG_EPOLL_USE_CHANGELIST
) != 0 ||

140 ((
ba£
->
Êags
 & 
EVENT_BASE_FLAG_IGNORE_ENV
) == 0 &&

141 
	`evutû_gëív
("EVENT_EPOLL_USE_CHANGELIST"Ë!
NULL
))

142 
ba£
->
ev£l
 = &
ïﬁl›s_ch™gñi°
;

144 
	`evsig_öô
(
ba£
);

146  (
ïﬁl›
);

147 
	}
}

150 
	$ch™ge_to_°rög
(
ch™ge
)

152 
ch™ge
 &(
EV_CHANGE_ADD
|
EV_CHANGE_DEL
);

153 i‡(
ch™ge
 =
EV_CHANGE_ADD
) {

155 } i‡(
ch™ge
 =
EV_CHANGE_DEL
) {

157 } i‡(
ch™ge
 == 0) {

162 
	}
}

165 
	$ïﬁl_›_to_°rög
(
›
)

167  
›
 =
EPOLL_CTL_ADD
?"ADD":

168 
›
 =
EPOLL_CTL_DEL
?"DEL":

169 
›
 =
EPOLL_CTL_MOD
?"MOD":

171 
	}
}

174 
	$ïﬁl_≠∂y_⁄e_ch™ge
(
evít_ba£
 *
ba£
,

175 
ïﬁl›
 *epollop,

176 c⁄° 
evít_ch™ge
 *
ch
)

178 
ïﬁl_evít
 
ïev
;

179 
›
, 
evíts
 = 0;

194 i‡((
ch
->
ªad_ch™ge
 & 
EV_CHANGE_ADD
) ||

195 (
ch
->
wrôe_ch™ge
 & 
EV_CHANGE_ADD
)) {

198 
evíts
 = 0;

199 
›
 = 
EPOLL_CTL_ADD
;

200 i‡(
ch
->
ªad_ch™ge
 & 
EV_CHANGE_ADD
) {

201 
evíts
 |
EPOLLIN
;

202 } i‡(
ch
->
ªad_ch™ge
 & 
EV_CHANGE_DEL
) {

204 } i‡(
ch
->
ﬁd_evíts
 & 
EV_READ
) {

205 
evíts
 |
EPOLLIN
;

207 i‡(
ch
->
wrôe_ch™ge
 & 
EV_CHANGE_ADD
) {

208 
evíts
 |
EPOLLOUT
;

209 } i‡(
ch
->
wrôe_ch™ge
 & 
EV_CHANGE_DEL
) {

211 } i‡(
ch
->
ﬁd_evíts
 & 
EV_WRITE
) {

212 
evíts
 |
EPOLLOUT
;

214 i‡((
ch
->
ªad_ch™ge
|ch->
wrôe_ch™ge
Ë& 
EV_ET
)

215 
evíts
 |
EPOLLET
;

217 i‡(
ch
->
ﬁd_evíts
) {

232 
›
 = 
EPOLL_CTL_MOD
;

234 } i‡((
ch
->
ªad_ch™ge
 & 
EV_CHANGE_DEL
) ||

235 (
ch
->
wrôe_ch™ge
 & 
EV_CHANGE_DEL
)) {

238 
›
 = 
EPOLL_CTL_DEL
;

240 i‡(
ch
->
ªad_ch™ge
 & 
EV_CHANGE_DEL
) {

241 i‡(
ch
->
wrôe_ch™ge
 & 
EV_CHANGE_DEL
) {

242 
evíts
 = 
EPOLLIN
|
EPOLLOUT
;

243 } i‡(
ch
->
ﬁd_evíts
 & 
EV_WRITE
) {

244 
evíts
 = 
EPOLLOUT
;

245 
›
 = 
EPOLL_CTL_MOD
;

247 
evíts
 = 
EPOLLIN
;

249 } i‡(
ch
->
wrôe_ch™ge
 & 
EV_CHANGE_DEL
) {

250 i‡(
ch
->
ﬁd_evíts
 & 
EV_READ
) {

251 
evíts
 = 
EPOLLIN
;

252 
›
 = 
EPOLL_CTL_MOD
;

254 
evíts
 = 
EPOLLOUT
;

259 i‡(!
evíts
)

262 
	`mem£t
(&
ïev
, 0, (epev));

263 
ïev
.
d©a
.
fd
 = 
ch
->fd;

264 
ïev
.
evíts
 =Évents;

265 i‡(
	`ïﬁl_˘l
(
ïﬁl›
->
ïfd
, 
›
, 
ch
->
fd
, &
ïev
) == -1) {

266 i‡(
›
 =
EPOLL_CTL_MOD
 && 
î∫o
 =
ENOENT
) {

271 i‡(
	`ïﬁl_˘l
(
ïﬁl›
->
ïfd
, 
EPOLL_CTL_ADD
, 
ch
->
fd
, &
ïev
) == -1) {

272 
	`evít_w¨n
("Epoll MOD(%d) on %dÑetriedás ADD;Åhat failedÅoo",

273 ()
ïev
.
evíts
, 
ch
->
fd
);

276 
	`evít_debug
(("Epoll MOD(%d) on %dÑetriedás ADD; succeeded.",

277 ()
ïev
.
evíts
,

278 
ch
->
fd
));

280 } i‡(
›
 =
EPOLL_CTL_ADD
 && 
î∫o
 =
EEXIST
) {

288 i‡(
	`ïﬁl_˘l
(
ïﬁl›
->
ïfd
, 
EPOLL_CTL_MOD
, 
ch
->
fd
, &
ïev
) == -1) {

289 
	`evít_w¨n
("Epoll ADD(%d) on %dÑetriedás MOD;Åhat failedÅoo",

290 ()
ïev
.
evíts
, 
ch
->
fd
);

293 
	`evít_debug
(("Epoll ADD(%d) on %dÑetriedás MOD; succeeded.",

294 ()
ïev
.
evíts
,

295 
ch
->
fd
));

297 } i‡(
›
 =
EPOLL_CTL_DEL
 &&

298 (
î∫o
 =
ENOENT
 ||Éºnÿ=
EBADF
 ||

299 
î∫o
 =
EPERM
)) {

303 
	`evít_debug
(("Epoll DEL(%d) on fd %d gave %s: DEL was unnecessary.",

304 ()
ïev
.
evíts
,

305 
ch
->
fd
,

306 
	`°ªº‹
(
î∫o
)));

308 
	`evít_w¨n
("Epoll %s(%d) on fd %d failed. OldÉvents were %d;Ñead change was %d (%s); write change was %d (%s)",

309 
	`ïﬁl_›_to_°rög
(
›
),

310 ()
ïev
.
evíts
,

311 
ch
->
fd
,

312 
ch
->
ﬁd_evíts
,

313 
ch
->
ªad_ch™ge
,

314 
	`ch™ge_to_°rög
(
ch
->
ªad_ch™ge
),

315 
ch
->
wrôe_ch™ge
,

316 
	`ch™ge_to_°rög
(
ch
->
wrôe_ch™ge
));

320 
	`evít_debug
(("Epoll %s(%d) on fd %d okay. [oldÉvents were %d;Ñead change was %d; write change was %d]",

321 
	`ïﬁl_›_to_°rög
(
›
),

322 ()
ïev
.
evíts
,

323 ()
ch
->
fd
,

324 
ch
->
ﬁd_evíts
,

325 
ch
->
ªad_ch™ge
,

326 
ch
->
wrôe_ch™ge
));

330 
	}
}

333 
	$ïﬁl_≠∂y_ch™ges
(
evít_ba£
 *
ba£
)

335 
evít_ch™gñi°
 *
ch™gñi°
 = &
ba£
->changelist;

336 
ïﬁl›
 *ïﬁl› = 
ba£
->
evba£
;

337 
evít_ch™ge
 *
ch
;

339 
r
 = 0;

340 
i
;

342 
i
 = 0; i < 
ch™gñi°
->
n_ch™ges
; ++i) {

343 
ch
 = &
ch™gñi°
->
ch™ges
[
i
];

344 i‡(
	`ïﬁl_≠∂y_⁄e_ch™ge
(
ba£
, 
ïﬁl›
, 
ch
) < 0)

345 
r
 = -1;

348  (
r
);

349 
	}
}

352 
	$ïﬁl_noch™gñi°_add
(
evít_ba£
 *
ba£
, 
evutû_sockë_t
 
fd
,

353 
ﬁd
, 
evíts
, *
p
)

355 
evít_ch™ge
 
ch
;

356 
ch
.
fd
 = fd;

357 
ch
.
ﬁd_evíts
 = 
ﬁd
;

358 
ch
.
ªad_ch™ge
 = ch.
wrôe_ch™ge
 = 0;

359 i‡(
evíts
 & 
EV_WRITE
)

360 
ch
.
wrôe_ch™ge
 = 
EV_CHANGE_ADD
 |

361 (
evíts
 & 
EV_ET
);

362 i‡(
evíts
 & 
EV_READ
)

363 
ch
.
ªad_ch™ge
 = 
EV_CHANGE_ADD
 |

364 (
evíts
 & 
EV_ET
);

366  
	`ïﬁl_≠∂y_⁄e_ch™ge
(
ba£
, ba£->
evba£
, &
ch
);

367 
	}
}

370 
	$ïﬁl_noch™gñi°_dñ
(
evít_ba£
 *
ba£
, 
evutû_sockë_t
 
fd
,

371 
ﬁd
, 
evíts
, *
p
)

373 
evít_ch™ge
 
ch
;

374 
ch
.
fd
 = fd;

375 
ch
.
ﬁd_evíts
 = 
ﬁd
;

376 
ch
.
ªad_ch™ge
 = ch.
wrôe_ch™ge
 = 0;

377 i‡(
evíts
 & 
EV_WRITE
)

378 
ch
.
wrôe_ch™ge
 = 
EV_CHANGE_DEL
;

379 i‡(
evíts
 & 
EV_READ
)

380 
ch
.
ªad_ch™ge
 = 
EV_CHANGE_DEL
;

382  
	`ïﬁl_≠∂y_⁄e_ch™ge
(
ba£
, ba£->
evba£
, &
ch
);

383 
	}
}

386 
	$ïﬁl_di•©ch
(
evít_ba£
 *
ba£
, 
timevÆ
 *
tv
)

388 
ïﬁl›
 *ïﬁl› = 
ba£
->
evba£
;

389 
ïﬁl_evít
 *
evíts
 = 
ïﬁl›
->events;

390 
i
, 
ªs
;

391 
timeout
 = -1;

393 i‡(
tv
 !
NULL
) {

394 
timeout
 = 
	`evutû_tv_to_m£c
(
tv
);

395 i‡(
timeout
 < 0 ||Åimeouà> 
MAX_EPOLL_TIMEOUT_MSEC
) {

398 
timeout
 = 
MAX_EPOLL_TIMEOUT_MSEC
;

402 
	`ïﬁl_≠∂y_ch™ges
(
ba£
);

403 
	`evít_ch™gñi°_ªmove_Æl
(&
ba£
->
ch™gñi°
, base);

405 
	`EVBASE_RELEASE_LOCK
(
ba£
, 
th_ba£_lock
);

407 
ªs
 = 
	`ïﬁl_waô
(
ïﬁl›
->
ïfd
, 
evíts
,Épﬁl›->
√víts
, 
timeout
);

409 
	`EVBASE_ACQUIRE_LOCK
(
ba£
, 
th_ba£_lock
);

411 i‡(
ªs
 == -1) {

412 i‡(
î∫o
 !
EINTR
) {

413 
	`evít_w¨n
("epoll_wait");

420 
	`evít_debug
(("%s:Épﬁl_waôÑï‹t†%d", 
__func__
, 
ªs
));

421 
	`EVUTIL_ASSERT
(
ªs
 <
ïﬁl›
->
√víts
);

423 
i
 = 0; i < 
ªs
; i++) {

424 
wh©
 = 
evíts
[
i
].events;

425 
ev
 = 0;

427 i‡(
wh©
 & (
EPOLLHUP
|
EPOLLERR
)) {

428 
ev
 = 
EV_READ
 | 
EV_WRITE
;

430 i‡(
wh©
 & 
EPOLLIN
)

431 
ev
 |
EV_READ
;

432 i‡(
wh©
 & 
EPOLLOUT
)

433 
ev
 |
EV_WRITE
;

436 i‡(!
ev
)

439 
	`evm≠_io_a˘ive
(
ba£
, 
evíts
[
i
].
d©a
.
fd
, 
ev
 | 
EV_ET
);

442 i‡(
ªs
 =
ïﬁl›
->
√víts
 &&Épﬁl›->√vít†< 
MAX_NEVENT
) {

445 
√w_√víts
 = 
ïﬁl›
->
√víts
 * 2;

446 
ïﬁl_evít
 *
√w_evíts
;

448 
√w_evíts
 = 
	`mm_ªÆloc
(
ïﬁl›
->
evíts
,

449 
√w_√víts
 * (
ïﬁl_evít
));

450 i‡(
√w_evíts
) {

451 
ïﬁl›
->
evíts
 = 
√w_evíts
;

452 
ïﬁl›
->
√víts
 = 
√w_√víts
;

457 
	}
}

461 
	$ïﬁl_dóŒoc
(
evít_ba£
 *
ba£
)

463 
ïﬁl›
 *ïﬁl› = 
ba£
->
evba£
;

465 
	`evsig_dóŒoc
(
ba£
);

466 i‡(
ïﬁl›
->
evíts
)

467 
	`mm_‰ì
(
ïﬁl›
->
evíts
);

468 i‡(
ïﬁl›
->
ïfd
 >= 0)

469 
	`˛o£
(
ïﬁl›
->
ïfd
);

471 
	`mem£t
(
ïﬁl›
, 0, (epollop));

472 
	`mm_‰ì
(
ïﬁl›
);

473 
	}
}

	@epoll_sub.c

27 
	~<°döt.h
>

29 
	~<sys/∑øm.h
>

30 
	~<sys/ty≥s.h
>

31 
	~<sys/sysˇŒ.h
>

32 
	~<sys/ïﬁl.h
>

33 
	~<uni°d.h
>

36 
	$ïﬁl_¸óã
(
size
)

38  (
	`sysˇŒ
(
__NR_ïﬁl_¸óã
, 
size
));

39 
	}
}

42 
	$ïﬁl_˘l
(
ïfd
, 
›
, 
fd
, 
ïﬁl_evít
 *
evít
)

45  (
	`sysˇŒ
(
__NR_ïﬁl_˘l
, 
ïfd
, 
›
, 
fd
, 
evít
));

46 
	}
}

49 
	$ïﬁl_waô
(
ïfd
, 
ïﬁl_evít
 *
evíts
, 
maxevíts
, 
timeout
)

51  (
	`sysˇŒ
(
__NR_ïﬁl_waô
, 
ïfd
, 
evíts
, 
maxevíts
, 
timeout
));

52 
	}
}

	@evbuffer-internal.h

27 #i‚de‡
_EVBUFFER_INTERNAL_H_


28 
	#_EVBUFFER_INTERNAL_H_


	)

30 #ifde‡
__˝lu•lus


34 
	~"evít2/evít-c⁄fig.h
"

35 
	~"evít2/utû.h
"

36 
	~"utû-öã∫Æ.h
"

37 
	~"de„r-öã∫Æ.h
"

42 
	#EVBUFFER_CB_NODEFER
 2

	)

44 #ifde‡
WIN32


45 
	~<wösock2.h
>

47 
	~<sys/queue.h
>

52 #i‡
_EVENT_SIZEOF_VOID_P
 < 8

53 
	#MIN_BUFFER_SIZE
 512

	)

55 
	#MIN_BUFFER_SIZE
 1024

	)

60 
	sevbuf„r_cb_íåy
 {

62 
TAILQ_ENTRY
(
evbuf„r_cb_íåy
Ë
√xt
;

67 
evbuf„r_cb_func
 
cb_func
;

68 
evbuf„r_cb
 
cb_obsﬁëe
;

69 } 
cb
;

71 *
cb¨g
;

73 
ev_uöt32_t
 
Êags
;

76 
buf„ªvít
;

77 
evbuf„r_chaö
;

78 
	sevbuf„r
 {

80 
evbuf„r_chaö
 *
fú°
;

82 
evbuf„r_chaö
 *
œ°
;

97 
evbuf„r_chaö
 **
œ°_wôh_d©≠
;

100 
size_t
 
tŸÆ_Àn
;

104 
size_t
 
n_add_f‹_cb
;

107 
size_t
 
n_dñ_f‹_cb
;

109 #i‚de‡
_EVENT_DISABLE_THREAD_SUPPORT


111 *
lock
;

115 
own_lock
 : 1;

118 
‰ìze_°¨t
 : 1;

121 
‰ìze_íd
 : 1;

127 
de„ºed_cbs
 : 1;

128 #ifde‡
WIN32


130 
is_ovîœµed
 : 1;

133 
ev_uöt32_t
 
Êags
;

136 
de„ºed_cb_queue
 *
cb_queue
;

142 
ªf˙t
;

146 
de„ºed_cb
 
de„ºed
;

149 
TAILQ_HEAD
(
evbuf„r_cb_queue
, 
evbuf„r_cb_íåy
Ë
ˇŒbacks
;

153 
buf„ªvít
 *
∑ª¡
;

157 
	sevbuf„r_chaö
 {

159 
evbuf„r_chaö
 *
√xt
;

162 
size_t
 
buf„r_Àn
;

166 
ev_off_t
 
mißlign
;

171 
size_t
 
off
;

174 
Êags
;

175 
	#EVBUFFER_MMAP
 0x0001

	)

176 
	#EVBUFFER_SENDFILE
 0x0002

	)

177 
	#EVBUFFER_REFERENCE
 0x0004

	)

178 
	#EVBUFFER_IMMUTABLE
 0x0008

	)

181 
	#EVBUFFER_MEM_PINNED_R
 0x0010

	)

182 
	#EVBUFFER_MEM_PINNED_W
 0x0020

	)

183 
	#EVBUFFER_MEM_PINNED_ANY
 (
EVBUFFER_MEM_PINNED_R
|
EVBUFFER_MEM_PINNED_W
)

	)

186 
	#EVBUFFER_DANGLING
 0x0040

	)

194 *
buf„r
;

201 
	sevbuf„r_chaö_fd
 {

202 
fd
;

207 
	sevbuf„r_chaö_ª„ªn˚
 {

208 
evbuf„r_ªf_˛ónup_cb
 
˛ónup‚
;

209 *
exåa
;

212 
	#EVBUFFER_CHAIN_SIZE
 (
evbuf„r_chaö
)

	)

214 
	#EVBUFFER_CHAIN_EXTRA
(
t
, 
c
Ë— *)((
evbuf„r_chaö
 *)(cË+ 1)

	)

217 
	#ASSERT_EVBUFFER_LOCKED
(
buf„r
) \

218 
	`EVLOCK_ASSERT_LOCKED
((
buf„r
)->
lock
)

	)

220 
	#EVBUFFER_LOCK
(
buf„r
) \

222 
	`EVLOCK_LOCK
((
buf„r
)->
lock
, 0); \

223 } 0)

	)

224 
	#EVBUFFER_UNLOCK
(
buf„r
) \

226 
	`EVLOCK_UNLOCK
((
buf„r
)->
lock
, 0); \

227 } 0)

	)

228 
	#EVBUFFER_LOCK2
(
buf„r1
, 
buf„r2
) \

230 
	`EVLOCK_LOCK2
((
buf„r1
)->
lock
, (
buf„r2
)->lock, 0, 0); \

231 } 0)

	)

232 
	#EVBUFFER_UNLOCK2
(
buf„r1
, 
buf„r2
) \

234 
	`EVLOCK_UNLOCK2
((
buf„r1
)->
lock
, (
buf„r2
)->lock, 0, 0); \

235 } 0)

	)

238 
_evbuf„r_ö¸ef
(
evbuf„r
 *
buf
);

240 
_evbuf„r_ö¸ef_™d_lock
(
evbuf„r
 *
buf
);

243 
_evbuf„r_chaö_pö
(
evbuf„r_chaö
 *
chaö
, 
Êag
);

245 
_evbuf„r_chaö_u≈ö
(
evbuf„r_chaö
 *
chaö
, 
Êag
);

248 
_evbuf„r_de¸ef_™d_u∆ock
(
evbuf„r
 *
buf„r
);

252 
_evbuf„r_ex∑nd_Á°
(
evbuf„r
 *, 
size_t
, );

260 
_evbuf„r_ªad_£tup_vecs
(
evbuf„r
 *
buf
, 
ev_ssize_t
 
howmuch
,

261 
evbuf„r_iovec
 *
vecs
, 
n_vecs
, 
evbuf„r_chaö
 ***
chaöp
,

262 
exa˘
);

265 
	#WSABUF_FROM_EVBUFFER_IOV
(
i
,
ei
) do { \

266 (
i
)->
buf
 = (
ei
)->
iov_ba£
; \

267 (
i
)->
Àn
 = ()(
ei
)->
iov_Àn
; \

268 } 0)

	)

273 
evbuf„r_£t_∑ª¡
(
evbuf„r
 *
buf
, 
buf„ªvít
 *
bev
);

275 
evbuf„r_övoke_ˇŒbacks
(
evbuf„r
 *
buf
);

277 #ifde‡
__˝lu•lus


	@evdns.c

51 
	~<sys/ty≥s.h
>

52 
	~"evít2/evít-c⁄fig.h
"

54 #i‚de‡
_FORTIFY_SOURCE


55 
	#_FORTIFY_SOURCE
 3

	)

58 
	~<°rög.h
>

59 
	~<f˙é.h
>

60 #ifde‡
_EVENT_HAVE_SYS_TIME_H


61 
	~<sys/time.h
>

63 #ifde‡
_EVENT_HAVE_STDINT_H


64 
	~<°döt.h
>

66 
	~<°dlib.h
>

67 
	~<°rög.h
>

68 
	~<î∫o.h
>

69 #ifde‡
_EVENT_HAVE_UNISTD_H


70 
	~<uni°d.h
>

72 
	~<limôs.h
>

73 
	~<sys/°©.h
>

74 
	~<°dio.h
>

75 
	~<°d¨g.h
>

76 #ifde‡
WIN32


77 
	~<wösock2.h
>

78 
	~<ws2t˝ù.h
>

79 #i‚de‡
_WIN32_IE


80 
	#_WIN32_IE
 0x400

	)

82 
	~<shlobj.h
>

85 
	~"evít2/dns.h
"

86 
	~"evít2/dns_°ru˘.h
"

87 
	~"evít2/dns_com∑t.h
"

88 
	~"evít2/utû.h
"

89 
	~"evít2/evít.h
"

90 
	~"evít2/evít_°ru˘.h
"

91 
	~"evít2/thªad.h
"

93 
	~"evít2/buf„ªvít.h
"

94 
	~"evít2/buf„ªvít_°ru˘.h
"

95 
	~"buf„ªvít-öã∫Æ.h
"

97 
	~"de„r-öã∫Æ.h
"

98 
	~"log-öã∫Æ.h
"

99 
	~"mm-öã∫Æ.h
"

100 
	~"°æ˝y-öã∫Æ.h
"

101 
	~"ùv6-öã∫Æ.h
"

102 
	~"utû-öã∫Æ.h
"

103 
	~"evthªad-öã∫Æ.h
"

104 #ifde‡
WIN32


105 
	~<˘y≥.h
>

106 
	~<wösock2.h
>

107 
	~<wödows.h
>

108 
	~<ùhÕ≠i.h
>

109 
	~<io.h
>

111 
	~<sys/sockë.h
>

112 
	~<√töë/ö.h
>

113 
	~<¨∑/öë.h
>

116 #ifde‡
_EVENT_HAVE_NETINET_IN6_H


117 
	~<√töë/ö6.h
>

120 
	#EVDNS_LOG_DEBUG
 0

	)

121 
	#EVDNS_LOG_WARN
 1

	)

122 
	#EVDNS_LOG_MSG
 2

	)

124 #i‚de‡
HOST_NAME_MAX


125 
	#HOST_NAME_MAX
 255

	)

128 
	~<°dio.h
>

130 #unde‡
MIN


131 
	#MIN
(
a
,
b
Ë(◊)<(b)?◊):(b))

	)

133 
	#ASSERT_VALID_REQUEST
(
ªq
) \

134 
	`EVUTIL_ASSERT
((
ªq
)->
h™dÀ
 && (ªq)->h™dÀ->
cuºít_ªq
 =‘eq))

	)

136 
	#u64
 
ev_uöt64_t


	)

137 
	#u32
 
ev_uöt32_t


	)

138 
	#u16
 
ev_uöt16_t


	)

139 
	#u8
 
ev_uöt8_t


	)

143 
	#MAX_V4_ADDRS
 32

	)

144 
	#MAX_V6_ADDRS
 32

	)

147 
	#TYPE_A
 
EVDNS_TYPE_A


	)

148 
	#TYPE_CNAME
 5

	)

149 
	#TYPE_PTR
 
EVDNS_TYPE_PTR


	)

150 
	#TYPE_SOA
 
EVDNS_TYPE_SOA


	)

151 
	#TYPE_AAAA
 
EVDNS_TYPE_AAAA


	)

153 
	#CLASS_INET
 
EVDNS_CLASS_INET


	)

159 
	sevdns_ªque°
 {

160 
ªque°
 *
	mcuºít_ªq
;

161 
evdns_ba£
 *
	mba£
;

163 
	m≥ndög_cb
;

167 
	m£¨ch_ödex
;

168 
£¨ch_°©e
 *
	m£¨ch_°©e
;

169 *
	m£¨ch_‹ig«me
;

170 
	m£¨ch_Êags
;

173 
	sªque°
 {

174 
u8
 *
	mªque°
;

175 
u8
 
	mªque°_ty≥
;

176 
	mªque°_Àn
;

177 
	mªissue_cou¡
;

178 
	mtx_cou¡
;

179 *
	mu£r_poöãr
;

180 
evdns_ˇŒback_ty≥
 
	mu£r_ˇŒback
;

181 
«me£rvî
 *
	mns
;

185 
ªque°
 *
	m√xt
, *
	m¥ev
;

187 
evít
 
	mtimeout_evít
;

189 
u16
 
	må™s_id
;

190 
	mªque°_≠≥nded
 :1;

191 
	må™smô_me
 :1;

194 **
	mput_˙ame_ö_±r
;

196 
evdns_ba£
 *
	mba£
;

198 
evdns_ªque°
 *
	mh™dÀ
;

201 
	sª∂y
 {

202 
	mty≥
;

203 
	mhave_™swî
 : 1;

206 
u32
 
	maddrcou¡
;

207 
u32
 
	maddªs£s
[
MAX_V4_ADDRS
];

208 } 
	ma
;

210 
u32
 
	maddrcou¡
;

211 
ö6_addr
 
	maddªs£s
[
MAX_V6_ADDRS
];

212 } 
	mØØ
;

214 
	m«me
[
HOST_NAME_MAX
];

215 } 
	m±r
;

216 } 
	md©a
;

219 
	s«me£rvî
 {

220 
evutû_sockë_t
 
	msockë
;

221 
sockaddr_°‹age
 
	maddªss
;

222 
ev_sockÀn_t
 
	maddæí
;

223 
	mÁûed_times
;

224 
	mtimedout
;

225 
evít
 
	mevít
;

227 
«me£rvî
 *
	m√xt
, *
	m¥ev
;

228 
evít
 
	mtimeout_evít
;

232 
evdns_ªque°
 *
	m¥obe_ªque°
;

233 
	m°©e
;

234 
	mchoked
;

235 
	mwrôe_waôög
;

236 
evdns_ba£
 *
	mba£
;

242 
	sevdns_£rvî_p‹t
 {

243 
evutû_sockë_t
 
	msockë
;

244 
	mªf˙t
;

245 
	mchoked
;

246 
	m˛osög
;

247 
evdns_ªque°_ˇŒback_‚_ty≥
 
	mu£r_ˇŒback
;

248 *
	mu£r_d©a
;

249 
evít
 
	mevít
;

251 
£rvî_ªque°
 *
	m≥ndög_ª∂õs
;

252 
evít_ba£
 *
	mevít_ba£
;

254 #i‚de‡
_EVENT_DISABLE_THREAD_SUPPORT


255 *
	mlock
;

260 
	s£rvî_ª∂y_ôem
 {

261 
£rvî_ª∂y_ôem
 *
	m√xt
;

262 *
	m«me
;

263 
u16
 
	mty≥
;

264 
u16
 
	m˛ass
;

265 
u32
 
	mâl
;

266 
	mis_«me
;

267 
u16
 
	md©Æí
;

268 *
	md©a
;

273 
	s£rvî_ªque°
 {

277 
£rvî_ªque°
 *
	m√xt_≥ndög
;

278 
£rvî_ªque°
 *
	m¥ev_≥ndög
;

280 
u16
 
	må™s_id
;

281 
evdns_£rvî_p‹t
 *
	mp‹t
;

282 
sockaddr_°‹age
 
	maddr
;

283 
ev_sockÀn_t
 
	maddæí
;

285 
	mn_™swî
;

286 
	mn_auth‹ôy
;

287 
	mn_addôi⁄Æ
;

289 
£rvî_ª∂y_ôem
 *
	m™swî
;

290 
£rvî_ª∂y_ôem
 *
	mauth‹ôy
;

291 
£rvî_ª∂y_ôem
 *
	maddôi⁄Æ
;

295 *
	mª•⁄£
;

296 
size_t
 
	mª•⁄£_Àn
;

299 
evdns_£rvî_ªque°
 
	mba£
;

302 
	sevdns_ba£
 {

306 
ªque°
 **
	mªq_hóds
;

309 
ªque°
 *
	mªq_waôög_hód
;

311 
«me£rvî
 *
	m£rvî_hód
;

312 
	mn_ªq_hóds
;

314 
evít_ba£
 *
	mevít_ba£
;

317 
	mglobÆ_good_«me£rvîs
;

321 
	mglobÆ_ªque°s_öÊight
;

324 
	mglobÆ_ªque°s_waôög
;

326 
	mglobÆ_max_ªque°s_öÊight
;

328 
timevÆ
 
	mglobÆ_timeout
;

329 
	mglobÆ_max_ªissues
;

330 
	mglobÆ_max_ªå™smôs
;

332 
	mglobÆ_max_«me£rvî_timeout
;

334 
	mglobÆ_øndomize_ˇ£
;

338 
timevÆ
 
	mglobÆ_«me£rvî_¥obe_öôül_timeout
;

341 
sockaddr_°‹age
 
	mglobÆ_outgoög_addªss
;

343 
ev_sockÀn_t
 
	mglobÆ_outgoög_addæí
;

345 
timevÆ
 
	mglobÆ_gëaddröfo_Ælow_skew
;

347 
	mgëaddröfo_ùv4_timeouts
;

348 
	mgëaddröfo_ùv6_timeouts
;

349 
	mgëaddröfo_ùv4_™swîed
;

350 
	mgëaddröfo_ùv6_™swîed
;

352 
£¨ch_°©e
 *
	mglobÆ_£¨ch_°©e
;

354 
TAILQ_HEAD
(
ho°s_li°
, 
ho°s_íåy
Ë
	mho°sdb
;

356 #i‚de‡
_EVENT_DISABLE_THREAD_SUPPORT


357 *
	mlock
;

361 
	sho°s_íåy
 {

362 
TAILQ_ENTRY
(
ho°s_íåy
Ë
	m√xt
;

364 
sockaddr
 
	mß
;

365 
sockaddr_ö
 
	msö
;

366 
sockaddr_ö6
 
	msö6
;

367 } 
	maddr
;

368 
	maddæí
;

369 
	mho°«me
[1];

372 
evdns_ba£
 *
	gcuºít_ba£
 = 
NULL
;

374 
evdns_ba£
 *

375 
	$evdns_gë_globÆ_ba£
()

377  
cuºít_ba£
;

378 
	}
}

382 
	#TO_SERVER_REQUEST
(
ba£_±r
) \

383 ((
£rvî_ªque°
*) \

384 (((*)(
ba£_±r
Ë- 
	`evutû_off£tof
(
£rvî_ªque°
, 
ba£
))))

	)

386 
	#REQ_HEAD
(
ba£
, 
id
Ë((ba£)->
ªq_hóds
[id % (ba£)->
n_ªq_hóds
])

	)

388 
«me£rvî
 *
«me£rvî_pick
(
evdns_ba£
 *
ba£
);

389 
evdns_ªque°_ö£π
(
ªque°
 *
ªq
, ªque° **
hód
);

390 
evdns_ªque°_ªmove
(
ªque°
 *
ªq
, ªque° **
hód
);

391 
«me£rvî_ªady_ˇŒback
(
evutû_sockë_t
 
fd
, 
evíts
, *
¨g
);

392 
evdns_å™smô
(
evdns_ba£
 *
ba£
);

393 
evdns_ªque°_å™smô
(
ªque°
 *
ªq
);

394 
«me£rvî_£nd_¥obe
(
«me£rvî
 *c⁄° 
ns
);

395 
£¨ch_ªque°_föished
(
evdns_ªque°
 *const);

396 
£¨ch_åy_√xt
(
evdns_ªque°
 *c⁄° 
ªq
);

397 
ªque°
 *
£¨ch_ªque°_√w
(
evdns_ba£
 *
ba£
, 
evdns_ªque°
 *
h™dÀ
, 
ty≥
, c⁄° *c⁄° 
«me
, 
Êags
, 
evdns_ˇŒback_ty≥
 
u£r_ˇŒback
, *
u£r_¨g
);

398 
evdns_ªque°s_pump_waôög_queue
(
evdns_ba£
 *
ba£
);

399 
u16
 
å™ß˘i⁄_id_pick
(
evdns_ba£
 *
ba£
);

400 
ªque°
 *
ªque°_√w
(
evdns_ba£
 *
ba£
, 
evdns_ªque°
 *
h™dÀ
, 
ty≥
, c⁄° *
«me
, 
Êags
, 
evdns_ˇŒback_ty≥
 
ˇŒback
, *
±r
);

401 
ªque°_submô
(
ªque°
 *c⁄° 
ªq
);

403 
£rvî_ªque°_‰ì
(
£rvî_ªque°
 *
ªq
);

404 
£rvî_ªque°_‰ì_™swîs
(
£rvî_ªque°
 *
ªq
);

405 
£rvî_p‹t_‰ì
(
evdns_£rvî_p‹t
 *
p‹t
);

406 
£rvî_p‹t_ªady_ˇŒback
(
evutû_sockë_t
 
fd
, 
evíts
, *
¨g
);

407 
evdns_ba£_ªsﬁv_c⁄f_∑r£_im∂
(
evdns_ba£
 *
ba£
, 
Êags
, c⁄° *c⁄° 
fûíame
);

408 
evdns_ba£_£t_›ti⁄_im∂
(
evdns_ba£
 *
ba£
,

409 c⁄° *
›ti⁄
, c⁄° *
vÆ
, 
Êags
);

410 
evdns_ba£_‰ì_™d_u∆ock
(
evdns_ba£
 *
ba£
, 
Áû_ªque°s
);

412 
°πoöt
(c⁄° *c⁄° 
°r
);

414 #ifde‡
_EVENT_DISABLE_THREAD_SUPPORT


415 
	#EVDNS_LOCK
(
ba£
Ë
_EVUTIL_NIL_STMT


	)

416 
	#EVDNS_UNLOCK
(
ba£
Ë
_EVUTIL_NIL_STMT


	)

417 
	#ASSERT_LOCKED
(
ba£
Ë
_EVUTIL_NIL_STMT


	)

419 
	#EVDNS_LOCK
(
ba£
) \

420 
	`EVLOCK_LOCK
((
ba£
)->
lock
, 0)

	)

421 
	#EVDNS_UNLOCK
(
ba£
) \

422 
	`EVLOCK_UNLOCK
((
ba£
)->
lock
, 0)

	)

423 
	#ASSERT_LOCKED
(
ba£
) \

424 
	`EVLOCK_ASSERT_LOCKED
((
ba£
)->
lock
)

	)

428 
	$deÁu…_evdns_log_‚
(
w¨nög
, c⁄° *
buf
)

430 i‡(
w¨nög
 =
EVDNS_LOG_WARN
)

431 
	`evít_w¨nx
("[evdns] %s", 
buf
);

432 i‡(
w¨nög
 =
EVDNS_LOG_MSG
)

433 
	`evít_msgx
("[evdns] %s", 
buf
);

435 
	`evít_debug
(("[evdns] %s", 
buf
));

436 
	}
}

438 
evdns_debug_log_‚_ty≥
 
	gevdns_log_‚
 = 
NULL
;

441 
	$evdns_£t_log_‚
(
evdns_debug_log_‚_ty≥
 
‚
)

443 
evdns_log_‚
 = 
‚
;

444 
	}
}

446 #ifde‡
__GNUC__


447 
	#EVDNS_LOG_CHECK
 
	`__©åibuã__
 ((
	`f‹m©
(
¥ötf
, 2, 3)))

	)

449 
	#EVDNS_LOG_CHECK


	)

452 
	$_evdns_log
(
w¨n
, c⁄° *
fmt
, ...Ë
EVDNS_LOG_CHECK
;

454 
	$_evdns_log
(
w¨n
, c⁄° *
fmt
, ...)

456 
va_li°
 
¨gs
;

457 
buf
[512];

458 i‡(!
evdns_log_‚
)

460 
	`va_°¨t
(
¨gs
,
fmt
);

461 
	`evutû_v¢¥ötf
(
buf
, (buf), 
fmt
, 
¨gs
);

462 
	`va_íd
(
¨gs
);

463 i‡(
evdns_log_‚
) {

464 i‡(
w¨n
 =
EVDNS_LOG_MSG
)

465 
w¨n
 = 
EVDNS_LOG_WARN
;

466 
	`evdns_log_‚
(
w¨n
, 
buf
);

468 
	`deÁu…_evdns_log_‚
(
w¨n
, 
buf
);

471 
	}
}

473 
	#log
 
_evdns_log


	)

478 
ªque°
 *

479 
	$ªque°_föd_‰om_å™s_id
(
evdns_ba£
 *
ba£
, 
u16
 
å™s_id
) {

480 
ªque°
 *
ªq
 = 
	`REQ_HEAD
(
ba£
, 
å™s_id
);

481 
ªque°
 *c⁄° 
°¨ãd_©
 = 
ªq
;

483 
	`ASSERT_LOCKED
(
ba£
);

485 i‡(
ªq
) {

487 i‡(
ªq
->
å™s_id
 ==Årans_id) Ñeq;

488 
ªq
 =Ñeq->
√xt
;

489 } 
ªq
 !
°¨ãd_©
);

492  
NULL
;

493 
	}
}

498 
	$«me£rvî_¥od_ˇŒback
(
evutû_sockë_t
 
fd
, 
evíts
, *
¨g
) {

499 
«me£rvî
 *c⁄° 
ns
 = («me£rvî *Ë
¨g
;

500 ()
fd
;

501 ()
evíts
;

503 
	`EVDNS_LOCK
(
ns
->
ba£
);

504 
	`«me£rvî_£nd_¥obe
(
ns
);

505 
	`EVDNS_UNLOCK
(
ns
->
ba£
);

506 
	}
}

512 
	$«me£rvî_¥obe_Áûed
(
«me£rvî
 *c⁄° 
ns
) {

513 
timevÆ
 
timeout
;

514 
i
;

516 
	`ASSERT_LOCKED
(
ns
->
ba£
);

517 (Ë
	`evtimî_dñ
(&
ns
->
timeout_evít
);

518 i‡(
ns
->
°©e
 == 1) {

524 
	#MAX_PROBE_TIMEOUT
 3600

	)

525 
	#TIMEOUT_BACKOFF_FACTOR
 3

	)

527 
	`mem˝y
(&
timeout
, &
ns
->
ba£
->
globÆ_«me£rvî_¥obe_öôül_timeout
,

528 (
timevÆ
));

529 
i
=
ns
->
Áûed_times
; i > 0 && 
timeout
.
tv_£c
 < 
MAX_PROBE_TIMEOUT
; --i) {

530 
timeout
.
tv_£c
 *
TIMEOUT_BACKOFF_FACTOR
;

531 
timeout
.
tv_u£c
 *
TIMEOUT_BACKOFF_FACTOR
;

532 i‡(
timeout
.
tv_u£c
 > 1000000) {

533 
timeout
.
tv_£c
 +timeout.
tv_u£c
 / 1000000;

534 
timeout
.
tv_u£c
 %= 1000000;

537 i‡(
timeout
.
tv_£c
 > 
MAX_PROBE_TIMEOUT
) {

538 
timeout
.
tv_£c
 = 
MAX_PROBE_TIMEOUT
;

539 
timeout
.
tv_u£c
 = 0;

542 
ns
->
Áûed_times
++;

544 i‡(
	`evtimî_add
(&
ns
->
timeout_evít
, &
timeout
) < 0) {

545 
addrbuf
[128];

546 
	`log
(
EVDNS_LOG_WARN
,

548 
	`evutû_f‹m©_sockaddr_p‹t
(

549 (
sockaddr
 *)&
ns
->
addªss
,

550 
addrbuf
, (addrbuf)));

552 
	}
}

557 
	$«me£rvî_Áûed
(
«me£rvî
 *c⁄° 
ns
, c⁄° *
msg
) {

558 
ªque°
 *
ªq
, *
°¨ãd_©
;

559 
evdns_ba£
 *
ba£
 = 
ns
->base;

560 
i
;

561 
addrbuf
[128];

563 
	`ASSERT_LOCKED
(
ba£
);

566 i‡(!
ns
->
°©e
) ;

568 
	`log
(
EVDNS_LOG_MSG
, "Nameserver %s has failed: %s",

569 
	`evutû_f‹m©_sockaddr_p‹t
(

570 (
sockaddr
 *)&
ns
->
addªss
,

571 
addrbuf
, (addrbuf)),

572 
msg
);

574 
ba£
->
globÆ_good_«me£rvîs
--;

575 
	`EVUTIL_ASSERT
(
ba£
->
globÆ_good_«me£rvîs
 >= 0);

576 i‡(
ba£
->
globÆ_good_«me£rvîs
 == 0) {

577 
	`log
(
EVDNS_LOG_MSG
, "AllÇameservers have failed");

580 
ns
->
°©e
 = 0;

581 
ns
->
Áûed_times
 = 1;

583 i‡(
	`evtimî_add
(&
ns
->
timeout_evít
,

584 &
ba£
->
globÆ_«me£rvî_¥obe_öôül_timeout
) < 0) {

585 
	`log
(
EVDNS_LOG_WARN
,

587 
	`evutû_f‹m©_sockaddr_p‹t
(

588 (
sockaddr
 *)&
ns
->
addªss
,

589 
addrbuf
, (addrbuf)));

599 i‡(!
ba£
->
globÆ_good_«me£rvîs
) ;

601 
i
 = 0; i < 
ba£
->
n_ªq_hóds
; ++i) {

602 
ªq
 = 
°¨ãd_©
 = 
ba£
->
ªq_hóds
[
i
];

603 i‡(
ªq
) {

605 i‡(
ªq
->
tx_cou¡
 =0 &&Ñeq->
ns
 ==Çs) {

608 
ªq
->
ns
 = 
	`«me£rvî_pick
(
ba£
);

610 
ªq
 =Ñeq->
√xt
;

611 } 
ªq
 !
°¨ãd_©
);

614 
	}
}

617 
	$«me£rvî_up
(
«me£rvî
 *c⁄° 
ns
)

619 
addrbuf
[128];

620 
	`ASSERT_LOCKED
(
ns
->
ba£
);

621 i‡(
ns
->
°©e
) ;

622 
	`log
(
EVDNS_LOG_MSG
, "Nameserver %s is back up",

623 
	`evutû_f‹m©_sockaddr_p‹t
(

624 (
sockaddr
 *)&
ns
->
addªss
,

625 
addrbuf
, (addrbuf)));

626 
	`evtimî_dñ
(&
ns
->
timeout_evít
);

627 i‡(
ns
->
¥obe_ªque°
) {

628 
	`evdns_ˇn˚l_ªque°
(
ns
->
ba£
,Çs->
¥obe_ªque°
);

629 
ns
->
¥obe_ªque°
 = 
NULL
;

631 
ns
->
°©e
 = 1;

632 
ns
->
Áûed_times
 = 0;

633 
ns
->
timedout
 = 0;

634 
ns
->
ba£
->
globÆ_good_«me£rvîs
++;

635 
	}
}

638 
	$ªque°_å™s_id_£t
(
ªque°
 *c⁄° 
ªq
, c⁄° 
u16
 
å™s_id
) {

639 
ªq
->
å™s_id
 =Årans_id;

640 *((
u16
 *Ë
ªq
->
ªque°
Ë
	`ht⁄s
(
å™s_id
);

641 
	}
}

648 
	$ªque°_föished
(
ªque°
 *c⁄° 
ªq
, ªque° **
hód
, 
‰ì_h™dÀ
) {

649 
evdns_ba£
 *
ba£
 = 
ªq
->base;

650 
was_öÊight
 = (
hód
 !&
ba£
->
ªq_waôög_hód
);

651 
	`EVDNS_LOCK
(
ba£
);

652 
	`ASSERT_VALID_REQUEST
(
ªq
);

654 i‡(
hód
)

655 
	`evdns_ªque°_ªmove
(
ªq
, 
hód
);

657 
	`log
(
EVDNS_LOG_DEBUG
, "RemovögÅimeouàf‹Ñeque° %p", 
ªq
);

658 i‡(
was_öÊight
) {

659 
	`evtimî_dñ
(&
ªq
->
timeout_evít
);

660 
ba£
->
globÆ_ªque°s_öÊight
--;

662 
ba£
->
globÆ_ªque°s_waôög
--;

665 
	`evít_debug_u«ssign
(&
ªq
->
timeout_evít
);

667 i‡(!
ªq
->
ªque°_≠≥nded
) {

669 
	`mm_‰ì
(
ªq
->
ªque°
);

675 i‡(
ªq
->
h™dÀ
) {

676 
	`EVUTIL_ASSERT
(
ªq
->
h™dÀ
->
cuºít_ªq
 ==Ñeq);

678 i‡(
‰ì_h™dÀ
) {

679 
	`£¨ch_ªque°_föished
(
ªq
->
h™dÀ
);

680 
ªq
->
h™dÀ
->
cuºít_ªq
 = 
NULL
;

681 i‡(! 
ªq
->
h™dÀ
->
≥ndög_cb
) {

684 
	`mm_‰ì
(
ªq
->
h™dÀ
);

686 
ªq
->
h™dÀ
 = 
NULL
;

689 
ªq
->
h™dÀ
->
cuºít_ªq
 = 
NULL
;

693 
	`mm_‰ì
(
ªq
);

695 
	`evdns_ªque°s_pump_waôög_queue
(
ba£
);

696 
	`EVDNS_UNLOCK
(
ba£
);

697 
	}
}

706 
	$ªque°_ªissue
(
ªque°
 *
ªq
) {

707 c⁄° 
«me£rvî
 *c⁄° 
œ°_ns
 = 
ªq
->
ns
;

708 
	`ASSERT_LOCKED
(
ªq
->
ba£
);

709 
	`ASSERT_VALID_REQUEST
(
ªq
);

713 
ªq
->
ns
 = 
	`«me£rvî_pick
‘eq->
ba£
);

714 i‡(
ªq
->
ns
 =
œ°_ns
) {

721 
ªq
->
ªissue_cou¡
++;

722 
ªq
->
tx_cou¡
 = 0;

723 
ªq
->
å™smô_me
 = 1;

726 
	}
}

731 
	$evdns_ªque°s_pump_waôög_queue
(
evdns_ba£
 *
ba£
) {

732 
	`ASSERT_LOCKED
(
ba£
);

733 
ba£
->
globÆ_ªque°s_öÊight
 < ba£->
globÆ_max_ªque°s_öÊight
 &&

734 
ba£
->
globÆ_ªque°s_waôög
) {

735 
ªque°
 *
ªq
;

737 
	`EVUTIL_ASSERT
(
ba£
->
ªq_waôög_hód
);

738 
ªq
 = 
ba£
->
ªq_waôög_hód
;

739 
	`evdns_ªque°_ªmove
(
ªq
, &
ba£
->
ªq_waôög_hód
);

741 
ba£
->
globÆ_ªque°s_waôög
--;

742 
ba£
->
globÆ_ªque°s_öÊight
++;

744 
ªq
->
ns
 = 
	`«me£rvî_pick
(
ba£
);

745 
	`ªque°_å™s_id_£t
(
ªq
, 
	`å™ß˘i⁄_id_pick
(
ba£
));

747 
	`evdns_ªque°_ö£π
(
ªq
, &
	`REQ_HEAD
(
ba£
,Ñeq->
å™s_id
));

748 
	`evdns_ªque°_å™smô
(
ªq
);

749 
	`evdns_å™smô
(
ba£
);

751 
	}
}

754 
	sde„ºed_ª∂y_ˇŒback
 {

755 
de„ºed_cb
 
	mde„ºed
;

756 
evdns_ªque°
 *
	mh™dÀ
;

757 
u8
 
	mªque°_ty≥
;

758 
u8
 
	mhave_ª∂y
;

759 
u32
 
	mâl
;

760 
u32
 
	mîr
;

761 
evdns_ˇŒback_ty≥
 
	mu£r_ˇŒback
;

762 
ª∂y
 
	mª∂y
;

766 
	$ª∂y_run_ˇŒback
(
de„ºed_cb
 *
d
, *
u£r_poöãr
)

768 
de„ºed_ª∂y_ˇŒback
 *
cb
 =

769 
	`EVUTIL_UPCAST
(
d
, 
de„ºed_ª∂y_ˇŒback
, 
de„ºed
);

771 
cb
->
ªque°_ty≥
) {

772 
TYPE_A
:

773 i‡(
cb
->
have_ª∂y
)

774 
cb
->
	`u£r_ˇŒback
(
DNS_ERR_NONE
, 
DNS_IPv4_A
,

775 
cb
->
ª∂y
.
d©a
.
a
.
addrcou¡
, cb->
âl
,

776 
cb
->
ª∂y
.
d©a
.
a
.
addªs£s
,

777 
u£r_poöãr
);

779 
cb
->
	`u£r_ˇŒback
(cb->
îr
, 0, 0, cb->
âl
, 
NULL
, 
u£r_poöãr
);

781 
TYPE_PTR
:

782 i‡(
cb
->
have_ª∂y
) {

783 *
«me
 = 
cb
->
ª∂y
.
d©a
.
±r
.name;

784 
cb
->
	`u£r_ˇŒback
(
DNS_ERR_NONE
, 
DNS_PTR
, 1, cb->
âl
,

785 &
«me
, 
u£r_poöãr
);

787 
cb
->
	`u£r_ˇŒback
(cb->
îr
, 0, 0, cb->
âl
, 
NULL
, 
u£r_poöãr
);

790 
TYPE_AAAA
:

791 i‡(
cb
->
have_ª∂y
)

792 
cb
->
	`u£r_ˇŒback
(
DNS_ERR_NONE
, 
DNS_IPv6_AAAA
,

793 
cb
->
ª∂y
.
d©a
.
ØØ
.
addrcou¡
, cb->
âl
,

794 
cb
->
ª∂y
.
d©a
.
ØØ
.
addªs£s
,

795 
u£r_poöãr
);

797 
cb
->
	`u£r_ˇŒback
(cb->
îr
, 0, 0, cb->
âl
, 
NULL
, 
u£r_poöãr
);

800 
	`EVUTIL_ASSERT
(0);

803 i‡(
cb
->
h™dÀ
 && cb->h™dÀ->
≥ndög_cb
) {

804 
	`mm_‰ì
(
cb
->
h™dÀ
);

807 
	`mm_‰ì
(
cb
);

808 
	}
}

811 
	$ª∂y_scheduÀ_ˇŒback
(
ªque°
 *c⁄° 
ªq
, 
u32
 
âl
, u32 
îr
, 
ª∂y
 *reply)

813 
de„ºed_ª∂y_ˇŒback
 *
d
 = 
	`mm_ˇŒoc
(1, (*d));

815 i‡(!
d
) {

816 
	`evít_w¨n
("%s: Couldn'tállocate space for deferred callback.",

817 
__func__
);

821 
	`ASSERT_LOCKED
(
ªq
->
ba£
);

823 
d
->
ªque°_ty≥
 = 
ªq
->request_type;

824 
d
->
u£r_ˇŒback
 = 
ªq
->user_callback;

825 
d
->
âl
 =Åtl;

826 
d
->
îr
 =Érr;

827 i‡(
ª∂y
) {

828 
d
->
have_ª∂y
 = 1;

829 
	`mem˝y
(&
d
->
ª∂y
,Ñeply, (reply));

832 i‡(
ªq
->
h™dÀ
) {

833 
ªq
->
h™dÀ
->
≥ndög_cb
 = 1;

834 
d
->
h™dÀ
 = 
ªq
->handle;

837 
	`evít_de„ºed_cb_öô
(&
d
->
de„ºed
, 
ª∂y_run_ˇŒback
,

838 
ªq
->
u£r_poöãr
);

839 
	`evít_de„ºed_cb_scheduÀ
(

840 
	`evít_ba£_gë_de„ºed_cb_queue
(
ªq
->
ba£
->
evít_ba£
),

841 &
d
->
de„ºed
);

842 
	}
}

846 
	$ª∂y_h™dÀ
(
ªque°
 *c⁄° 
ªq
, 
u16
 
Êags
, 
u32
 
âl
, 
ª∂y
 *reply) {

847 
îr‹
;

848 
addrbuf
[128];

849 c⁄° 
îr‹_codes
[] = {

850 
DNS_ERR_FORMAT
, 
DNS_ERR_SERVERFAILED
, 
DNS_ERR_NOTEXIST
,

851 
DNS_ERR_NOTIMPL
, 
DNS_ERR_REFUSED


854 
	`ASSERT_LOCKED
(
ªq
->
ba£
);

855 
	`ASSERT_VALID_REQUEST
(
ªq
);

857 i‡(
Êags
 & 0x020‡|| !
ª∂y
 || !ª∂y->
have_™swî
) {

859 i‡(
Êags
 & 0x0200) {

860 
îr‹
 = 
DNS_ERR_TRUNCATED
;

861 } i‡(
Êags
 & 0x000f) {

862 
u16
 
îr‹_code
 = (
Êags
 & 0x000f) - 1;

863 i‡(
îr‹_code
 > 4) {

864 
îr‹
 = 
DNS_ERR_UNKNOWN
;

866 
îr‹
 = 
îr‹_codes
[
îr‹_code
];

868 } i‡(
ª∂y
 && !ª∂y->
have_™swî
) {

869 
îr‹
 = 
DNS_ERR_NODATA
;

871 
îr‹
 = 
DNS_ERR_UNKNOWN
;

874 
îr‹
) {

875 
DNS_ERR_NOTIMPL
:

876 
DNS_ERR_REFUSED
:

878 i‡(
ªq
->
ªissue_cou¡
 <Ñeq->
ba£
->
globÆ_max_ªissues
) {

879 
msg
[64];

880 
	`evutû_¢¥ötf
(
msg
, (msg), "BadÑesponse %d (%s)",

881 
îr‹
, 
	`evdns_îr_to_°rög
(error));

882 
	`«me£rvî_Áûed
(
ªq
->
ns
, 
msg
);

883 i‡(!
	`ªque°_ªissue
(
ªq
)) ;

886 
DNS_ERR_SERVERFAILED
:

892 
	`log
(
EVDNS_LOG_DEBUG
, "Gotá SERVERFAILED fromÇameserver"

894 
	`evutû_f‹m©_sockaddr_p‹t
(

895 (
sockaddr
 *)&
ªq
->
ns
->
addªss
,

896 
addrbuf
, (addrbuf)));

900 i‡(
ªq
->
h™dÀ
 =ªq->
ns
->
¥obe_ªque°
) {

902 
ªq
->
ns
->
¥obe_ªque°
 = 
NULL
;

905 
	`«me£rvî_up
(
ªq
->
ns
);

908 i‡(
ªq
->
h™dÀ
->
£¨ch_°©e
 &&

909 
ªq
->
ªque°_ty≥
 !
TYPE_PTR
) {

912 i‡(!
	`£¨ch_åy_√xt
(
ªq
->
h™dÀ
)) {

923 
	`ª∂y_scheduÀ_ˇŒback
(
ªq
, 
âl
, 
îr‹
, 
NULL
);

924 
	`ªque°_föished
(
ªq
, &
	`REQ_HEAD
‘eq->
ba£
,Ñeq->
å™s_id
), 1);

927 
	`ª∂y_scheduÀ_ˇŒback
(
ªq
, 
âl
, 0, 
ª∂y
);

928 i‡(
ªq
->
h™dÀ
 =ªq->
ns
->
¥obe_ªque°
)

929 
ªq
->
ns
->
¥obe_ªque°
 = 
NULL
;

930 
	`«me£rvî_up
(
ªq
->
ns
);

931 
	`ªque°_föished
(
ªq
, &
	`REQ_HEAD
‘eq->
ba£
,Ñeq->
å™s_id
), 1);

933 
	}
}

936 
	$«me_∑r£
(
u8
 *
∑ckë
, 
Àngth
, *
idx
, *
«me_out
, 
«me_out_Àn
) {

937 
«me_íd
 = -1;

938 
j
 = *
idx
;

939 
±r_cou¡
 = 0;

940 
	#GET32
(
x
Ëdÿ{ i‡(
j
 + 4 > 
Àngth
Ë
îr
; 
	`mem˝y
(&
_t32
, 
∑ckë
 + j, 4); j +4; x = 
	`¡ohl
(_t32); } 0)

	)

941 
	#GET16
(
x
Ëdÿ{ i‡(
j
 + 2 > 
Àngth
Ë
îr
; 
	`mem˝y
(&
_t
, 
∑ckë
 + j, 2); j +2; x = 
	`¡ohs
(_t); } 0)

	)

942 
	#GET8
(
x
Ëdÿ{ i‡(
j
 >
Àngth
Ë
îr
; x = 
∑ckë
[j++]; } 0)

	)

944 *
˝
 = 
«me_out
;

945 c⁄° *c⁄° 
íd
 = 
«me_out
 + 
«me_out_Àn
;

954 
u8
 
œbñ_Àn
;

955 i‡(
j
 >
Àngth
)  -1;

956 
	`GET8
(
œbñ_Àn
);

957 i‡(!
œbñ_Àn
) ;

958 i‡(
œbñ_Àn
 & 0xc0) {

959 
u8
 
±r_low
;

960 
	`GET8
(
±r_low
);

961 i‡(
«me_íd
 < 0Ë«me_íd = 
j
;

962 
j
 = ((()
œbñ_Àn
 & 0x3fË<< 8Ë+ 
±r_low
;

964 i‡(
j
 < 0 || j >
Àngth
)  -1;

967 i‡(++
±r_cou¡
 > 
Àngth
)  -1;

970 i‡(
œbñ_Àn
 > 63)  -1;

971 i‡(
˝
 !
«me_out
) {

972 i‡(
˝
 + 1 >
íd
)  -1;

973 *
˝
++ = '.';

975 i‡(
˝
 + 
œbñ_Àn
 >
íd
)  -1;

976 
	`mem˝y
(
˝
, 
∑ckë
 + 
j
, 
œbñ_Àn
);

977 
˝
 +
œbñ_Àn
;

978 
j
 +
œbñ_Àn
;

980 i‡(
˝
 >
íd
)  -1;

981 *
˝
 = '\0';

982 i‡(
«me_íd
 < 0)

983 *
idx
 = 
j
;

985 *
idx
 = 
«me_íd
;

987 
îr
:

989 
	}
}

993 
	$ª∂y_∑r£
(
evdns_ba£
 *
ba£
, 
u8
 *
∑ckë
, 
Àngth
) {

994 
j
 = 0, 
k
 = 0;

995 
u16
 
_t
;

996 
u32
 
_t32
;

997 
tmp_«me
[256], 
cmp_«me
[256];

998 
«me_m©ches
 = 0;

1000 
u16
 
å™s_id
, 
que°i⁄s
, 
™swîs
, 
auth‹ôy
, 
addôi⁄Æ
, 
d©Æígth
;

1001 
u16
 
Êags
 = 0;

1002 
u32
 
âl
, 
âl_r
 = 0xffffffff;

1003 
ª∂y
Ñeply;

1004 
ªque°
 *
ªq
 = 
NULL
;

1005 
i
;

1007 
	`ASSERT_LOCKED
(
ba£
);

1009 
	`GET16
(
å™s_id
);

1010 
	`GET16
(
Êags
);

1011 
	`GET16
(
que°i⁄s
);

1012 
	`GET16
(
™swîs
);

1013 
	`GET16
(
auth‹ôy
);

1014 
	`GET16
(
addôi⁄Æ
);

1015 (Ë
auth‹ôy
;

1016 (Ë
addôi⁄Æ
;

1018 
ªq
 = 
	`ªque°_föd_‰om_å™s_id
(
ba£
, 
å™s_id
);

1019 i‡(!
ªq
)  -1;

1020 
	`EVUTIL_ASSERT
(
ªq
->
ba£
 == base);

1022 
	`mem£t
(&
ª∂y
, 0, (reply));

1025 i‡(!(
Êags
 & 0x8000))  -1;

1026 i‡((
Êags
 & 0x020fË&& (Êag†& 0x020fË!
DNS_ERR_NOTEXIST
) {

1028 
îr
;

1033 
	#SKIP_NAME
 \

1034 dÿ{ 
tmp_«me
[0] = '\0'; \

1035 i‡(
	`«me_∑r£
(
∑ckë
, 
Àngth
, &
j
, 
tmp_«me
, \

1036 (
tmp_«me
))<0) \

1037 
îr
; \

1038 } 0)

	)

1039 
	#TEST_NAME
 \

1040 dÿ{ 
tmp_«me
[0] = '\0'; \

1041 
cmp_«me
[0] = '\0'; \

1042 
k
 = 
j
; \

1043 i‡(
	`«me_∑r£
(
∑ckë
, 
Àngth
, &
j
, 
tmp_«me
, \

1044 (
tmp_«me
))<0) \

1045 
îr
; \

1046 i‡(
	`«me_∑r£
(
ªq
->
ªque°
,Ñeq->
ªque°_Àn
, &
k
, \

1047 
cmp_«me
, (cmp_name))<0) \

1048 
îr
; \

1049 i‡(
ba£
->
globÆ_øndomize_ˇ£
) { \

1050 i‡(
	`°rcmp
(
tmp_«me
, 
cmp_«me
) == 0) \

1051 
«me_m©ches
 = 1; \

1053 i‡(
	`evutû_ascii_°rˇ£cmp
(
tmp_«me
, 
cmp_«me
) == 0) \

1054 
«me_m©ches
 = 1; \

1056 } 0)

	)

1058 
ª∂y
.
ty≥
 = 
ªq
->
ªque°_ty≥
;

1061 
i
 = 0; i < 
que°i⁄s
; ++i) {

1065 
TEST_NAME
;

1066 
j
 += 4;

1067 i‡(
j
 > 
Àngth
Ë
îr
;

1070 i‡(!
«me_m©ches
)

1071 
îr
;

1077 
i
 = 0; i < 
™swîs
; ++i) {

1078 
u16
 
ty≥
, 
˛ass
;

1080 
SKIP_NAME
;

1081 
	`GET16
(
ty≥
);

1082 
	`GET16
(
˛ass
);

1083 
	`GET32
(
âl
);

1084 
	`GET16
(
d©Æígth
);

1086 i‡(
ty≥
 =
TYPE_A
 && 
˛ass
 =
CLASS_INET
) {

1087 
addrcou¡
, 
addπoc›y
;

1088 i‡(
ªq
->
ªque°_ty≥
 !
TYPE_A
) {

1089 
j
 +
d©Æígth
; ;

1091 i‡((
d©Æígth
 & 3) != 0)

1092 
îr
;

1093 
addrcou¡
 = 
d©Æígth
 >> 2;

1094 
addπoc›y
 = 
	`MIN
(
MAX_V4_ADDRS
 - 
ª∂y
.
d©a
.
a
.
addrcou¡
, ()addrcount);

1096 
âl_r
 = 
	`MIN
—é_r, 
âl
);

1098 i‡(
j
 + 4*
addπoc›y
 > 
Àngth
Ë
îr
;

1099 
	`mem˝y
(&
ª∂y
.
d©a
.
a
.
addªs£s
[ª∂y.d©a.a.
addrcou¡
],

1100 
∑ckë
 + 
j
, 4*
addπoc›y
);

1101 
j
 +4*
addπoc›y
;

1102 
ª∂y
.
d©a
.
a
.
addrcou¡
 +
addπoc›y
;

1103 
ª∂y
.
have_™swî
 = 1;

1104 i‡(
ª∂y
.
d©a
.
a
.
addrcou¡
 =
MAX_V4_ADDRS
) ;

1105 } i‡(
ty≥
 =
TYPE_PTR
 && 
˛ass
 =
CLASS_INET
) {

1106 i‡(
ªq
->
ªque°_ty≥
 !
TYPE_PTR
) {

1107 
j
 +
d©Æígth
; ;

1109 i‡(
	`«me_∑r£
(
∑ckë
, 
Àngth
, &
j
, 
ª∂y
.
d©a
.
±r
.
«me
,

1110 (
ª∂y
.
d©a
.
±r
.
«me
))<0)

1111 
îr
;

1112 
âl_r
 = 
	`MIN
—é_r, 
âl
);

1113 
ª∂y
.
have_™swî
 = 1;

1115 } i‡(
ty≥
 =
TYPE_CNAME
) {

1116 
˙ame
[
HOST_NAME_MAX
];

1117 i‡(!
ªq
->
put_˙ame_ö_±r
 || *req->put_cname_in_ptr) {

1118 
j
 +
d©Æígth
; ;

1120 i‡(
	`«me_∑r£
(
∑ckë
, 
Àngth
, &
j
, 
˙ame
,

1121 (
˙ame
))<0)

1122 
îr
;

1123 *
ªq
->
put_˙ame_ö_±r
 = 
	`mm_°rdup
(
˙ame
);

1124 } i‡(
ty≥
 =
TYPE_AAAA
 && 
˛ass
 =
CLASS_INET
) {

1125 
addrcou¡
, 
addπoc›y
;

1126 i‡(
ªq
->
ªque°_ty≥
 !
TYPE_AAAA
) {

1127 
j
 +
d©Æígth
; ;

1129 i‡((
d©Æígth
 & 15) != 0)

1130 
îr
;

1131 
addrcou¡
 = 
d©Æígth
 >> 4;

1132 
addπoc›y
 = 
	`MIN
(
MAX_V6_ADDRS
 - 
ª∂y
.
d©a
.
ØØ
.
addrcou¡
, ()addrcount);

1133 
âl_r
 = 
	`MIN
—é_r, 
âl
);

1136 i‡(
j
 + 16*
addπoc›y
 > 
Àngth
Ë
îr
;

1137 
	`mem˝y
(&
ª∂y
.
d©a
.
ØØ
.
addªs£s
[ª∂y.d©a.ØØ.
addrcou¡
],

1138 
∑ckë
 + 
j
, 16*
addπoc›y
);

1139 
ª∂y
.
d©a
.
ØØ
.
addrcou¡
 +
addπoc›y
;

1140 
j
 +16*
addπoc›y
;

1141 
ª∂y
.
have_™swî
 = 1;

1142 i‡(
ª∂y
.
d©a
.
ØØ
.
addrcou¡
 =
MAX_V6_ADDRS
) ;

1145 
j
 +
d©Æígth
;

1149 i‡(!
ª∂y
.
have_™swî
) {

1150 
i
 = 0; i < 
auth‹ôy
; ++i) {

1151 
u16
 
ty≥
, 
˛ass
;

1152 
SKIP_NAME
;

1153 
	`GET16
(
ty≥
);

1154 
	`GET16
(
˛ass
);

1155 
	`GET32
(
âl
);

1156 
	`GET16
(
d©Æígth
);

1157 i‡(
ty≥
 =
TYPE_SOA
 && 
˛ass
 =
CLASS_INET
) {

1158 
u32
 
£rül
, 
ª‰esh
, 
ªåy
, 
expúe
, 
möimum
;

1159 
SKIP_NAME
;

1160 
SKIP_NAME
;

1161 
	`GET32
(
£rül
);

1162 
	`GET32
(
ª‰esh
);

1163 
	`GET32
(
ªåy
);

1164 
	`GET32
(
expúe
);

1165 
	`GET32
(
möimum
);

1166 ()
expúe
;

1167 ()
ªåy
;

1168 ()
ª‰esh
;

1169 ()
£rül
;

1170 
âl_r
 = 
	`MIN
—é_r, 
âl
);

1171 
âl_r
 = 
	`MIN
—é_r, 
möimum
);

1174 
j
 +
d©Æígth
;

1179 i‡(
âl_r
 == 0xffffffff)

1180 
âl_r
 = 0;

1182 
	`ª∂y_h™dÀ
(
ªq
, 
Êags
, 
âl_r
, &
ª∂y
);

1184 
îr
:

1185 i‡(
ªq
)

1186 
	`ª∂y_h™dÀ
(
ªq
, 
Êags
, 0, 
NULL
);

1188 
	}
}

1194 
	$ªque°_∑r£
(
u8
 *
∑ckë
, 
Àngth
, 
evdns_£rvî_p‹t
 *
p‹t
, 
sockaddr
 *
addr
, 
ev_sockÀn_t
 
addæí
)

1196 
j
 = 0;

1197 
u16
 
_t
;

1198 
tmp_«me
[256];

1200 
i
;

1201 
u16
 
å™s_id
, 
Êags
, 
que°i⁄s
, 
™swîs
, 
auth‹ôy
, 
addôi⁄Æ
;

1202 
£rvî_ªque°
 *
£rvî_ªq
 = 
NULL
;

1204 
	`ASSERT_LOCKED
(
p‹t
);

1207 
	`GET16
(
å™s_id
);

1208 
	`GET16
(
Êags
);

1209 
	`GET16
(
que°i⁄s
);

1210 
	`GET16
(
™swîs
);

1211 
	`GET16
(
auth‹ôy
);

1212 
	`GET16
(
addôi⁄Æ
);

1213 ()
™swîs
;

1214 ()
addôi⁄Æ
;

1215 ()
auth‹ôy
;

1217 i‡(
Êags
 & 0x8000)  -1;

1218 
Êags
 &= 0x0110;

1220 
£rvî_ªq
 = 
	`mm_mÆloc
((
£rvî_ªque°
));

1221 i‡(
£rvî_ªq
 =
NULL
)  -1;

1222 
	`mem£t
(
£rvî_ªq
, 0, (
£rvî_ªque°
));

1224 
£rvî_ªq
->
å™s_id
 =Årans_id;

1225 
	`mem˝y
(&
£rvî_ªq
->
addr
,áddr, 
addæí
);

1226 
£rvî_ªq
->
addæí
 =áddrlen;

1228 
£rvî_ªq
->
ba£
.
Êags
 = flags;

1229 
£rvî_ªq
->
ba£
.
nque°i⁄s
 = 0;

1230 
£rvî_ªq
->
ba£
.
que°i⁄s
 = 
	`mm_ˇŒoc
((
evdns_£rvî_que°i⁄
 *), questions);

1231 i‡(
£rvî_ªq
->
ba£
.
que°i⁄s
 =
NULL
)

1232 
îr
;

1234 
i
 = 0; i < 
que°i⁄s
; ++i) {

1235 
u16
 
ty≥
, 
˛ass
;

1236 
evdns_£rvî_que°i⁄
 *
q
;

1237 
«mñí
;

1238 i‡(
	`«me_∑r£
(
∑ckë
, 
Àngth
, &
j
, 
tmp_«me
, (tmp_name))<0)

1239 
îr
;

1240 
	`GET16
(
ty≥
);

1241 
	`GET16
(
˛ass
);

1242 
«mñí
 = ()
	`°æí
(
tmp_«me
);

1243 
q
 = 
	`mm_mÆloc
((
evdns_£rvî_que°i⁄
Ë+ 
«mñí
);

1244 i‡(!
q
)

1245 
îr
;

1246 
q
->
ty≥
 =Åype;

1247 
q
->
dns_que°i⁄_˛ass
 = 
˛ass
;

1248 
	`mem˝y
(
q
->
«me
, 
tmp_«me
, 
«mñí
+1);

1249 
£rvî_ªq
->
ba£
.
que°i⁄s
[£rvî_ªq->ba£.
nque°i⁄s
++] = 
q
;

1254 
£rvî_ªq
->
p‹t
 =Öort;

1255 
p‹t
->
ªf˙t
++;

1258 i‡(
Êags
 & 0x7800) {

1259 
	`evdns_£rvî_ªque°_ª•⁄d
(&(
£rvî_ªq
->
ba£
), 
DNS_ERR_NOTIMPL
);

1263 
p‹t
->
	`u£r_ˇŒback
(&(
£rvî_ªq
->
ba£
),Ö‹t->
u£r_d©a
);

1266 
îr
:

1267 i‡(
£rvî_ªq
) {

1268 i‡(
£rvî_ªq
->
ba£
.
que°i⁄s
) {

1269 
i
 = 0; i < 
£rvî_ªq
->
ba£
.
nque°i⁄s
; ++i)

1270 
	`mm_‰ì
(
£rvî_ªq
->
ba£
.
que°i⁄s
[
i
]);

1271 
	`mm_‰ì
(
£rvî_ªq
->
ba£
.
que°i⁄s
);

1273 
	`mm_‰ì
(
£rvî_ªq
);

1277 #unde‡
SKIP_NAME


1278 #unde‡
GET32


1279 #unde‡
GET16


1280 #unde‡
GET8


1281 
	}
}

1285 
evdns_£t_å™ß˘i⁄_id_‚
(
	$ev_uöt16_t
 (*
‚
)())

1287 
	}
}

1290 
evdns_£t_øndom_byãs_‚
((*
‚
)(*, 
size_t
))

1292 
	}
}

1295 
u16


1296 
	$å™ß˘i⁄_id_pick
(
evdns_ba£
 *
ba£
) {

1297 
	`ASSERT_LOCKED
(
ba£
);

1299 
u16
 
å™s_id
;

1300 
	`evutû_£cuª_∫g_gë_byãs
(&
å™s_id
, (trans_id));

1302 i‡(
å™s_id
 == 0xffff) ;

1304 i‡(
	`ªque°_föd_‰om_å™s_id
(
ba£
, 
å™s_id
Ë=
NULL
)

1305  
å™s_id
;

1307 
	}
}

1312 
«me£rvî
 *

1313 
	$«me£rvî_pick
(
evdns_ba£
 *
ba£
) {

1314 
«me£rvî
 *
°¨ãd_©
 = 
ba£
->
£rvî_hód
, *
picked
;

1315 
	`ASSERT_LOCKED
(
ba£
);

1316 i‡(!
ba£
->
£rvî_hód
Ë 
NULL
;

1320 i‡(!
ba£
->
globÆ_good_«me£rvîs
) {

1321 
ba£
->
£rvî_hód
 = ba£->£rvî_hód->
√xt
;

1322  
ba£
->
£rvî_hód
;

1327 i‡(
ba£
->
£rvî_hód
->
°©e
) {

1329 
picked
 = 
ba£
->
£rvî_hód
;

1330 
ba£
->
£rvî_hód
 = ba£->£rvî_hód->
√xt
;

1331  
picked
;

1334 
ba£
->
£rvî_hód
 = ba£->£rvî_hód->
√xt
;

1335 i‡(
ba£
->
£rvî_hód
 =
°¨ãd_©
) {

1339 
	`EVUTIL_ASSERT
(
ba£
->
globÆ_good_«me£rvîs
 == 0);

1340 
picked
 = 
ba£
->
£rvî_hód
;

1341 
ba£
->
£rvî_hód
 = ba£->£rvî_hód->
√xt
;

1342  
picked
;

1345 
	}
}

1349 
	$«me£rvî_ªad
(
«me£rvî
 *
ns
) {

1350 
sockaddr_°‹age
 
ss
;

1351 
ev_sockÀn_t
 
addæí
 = (
ss
);

1352 
u8
 
∑ckë
[1500];

1353 
addrbuf
[128];

1354 
	`ASSERT_LOCKED
(
ns
->
ba£
);

1357 c⁄° 
r
 = 
	`ªcv‰om
(
ns
->
sockë
, (*)
∑ckë
,

1358 (
∑ckë
), 0,

1359 (
sockaddr
*)&
ss
, &
addæí
);

1360 i‡(
r
 < 0) {

1361 
îr
 = 
	`evutû_sockë_gëîr‹
(
ns
->
sockë
);

1362 i‡(
	`EVUTIL_ERR_RW_RETRIABLE
(
îr
))

1364 
	`«me£rvî_Áûed
(
ns
,

1365 
	`evutû_sockë_îr‹_to_°rög
(
îr
));

1368 i‡(
	`evutû_sockaddr_cmp
((
sockaddr
*)&
ss
,

1369 (
sockaddr
*)&
ns
->
addªss
, 0)) {

1370 
	`log
(
EVDNS_LOG_WARN
, "Address mismatch onÑeceived "

1372 
	`evutû_f‹m©_sockaddr_p‹t
(

1373 (
sockaddr
 *)&
ss
,

1374 
addrbuf
, (addrbuf)));

1378 
ns
->
timedout
 = 0;

1379 
	`ª∂y_∑r£
(
ns
->
ba£
, 
∑ckë
, 
r
);

1381 
	}
}

1386 
	$£rvî_p‹t_ªad
(
evdns_£rvî_p‹t
 *
s
) {

1387 
u8
 
∑ckë
[1500];

1388 
sockaddr_°‹age
 
addr
;

1389 
ev_sockÀn_t
 
addæí
;

1390 
r
;

1391 
	`ASSERT_LOCKED
(
s
);

1394 
addæí
 = (
sockaddr_°‹age
);

1395 
r
 = 
	`ªcv‰om
(
s
->
sockë
, (*)
∑ckë
, (packet), 0,

1396 (
sockaddr
*Ë&
addr
, &
addæí
);

1397 i‡(
r
 < 0) {

1398 
îr
 = 
	`evutû_sockë_gëîr‹
(
s
->
sockë
);

1399 i‡(
	`EVUTIL_ERR_RW_RETRIABLE
(
îr
))

1401 
	`log
(
EVDNS_LOG_WARN
,

1403 
	`evutû_sockë_îr‹_to_°rög
(
îr
),Érr);

1406 
	`ªque°_∑r£
(
∑ckë
, 
r
, 
s
, (
sockaddr
*Ë&
addr
, 
addæí
);

1408 
	}
}

1412 
	$£rvî_p‹t_Êush
(
evdns_£rvî_p‹t
 *
p‹t
)

1414 
£rvî_ªque°
 *
ªq
 = 
p‹t
->
≥ndög_ª∂õs
;

1415 
	`ASSERT_LOCKED
(
p‹t
);

1416 
ªq
) {

1417 
r
 = 
	`£ndto
(
p‹t
->
sockë
, 
ªq
->
ª•⁄£
, (Ïeq->
ª•⁄£_Àn
, 0,

1418 (
sockaddr
*Ë&
ªq
->
addr
, (
ev_sockÀn_t
Ïeq->
addæí
);

1419 i‡(
r
 < 0) {

1420 
îr
 = 
	`evutû_sockë_gëîr‹
(
p‹t
->
sockë
);

1421 i‡(
	`EVUTIL_ERR_RW_RETRIABLE
(
îr
))

1423 
	`log
(
EVDNS_LOG_WARN
, "Eº‹ %†(%dËwhûêwrôögÑe•⁄£Åÿp‹t; dr›pög", 
	`evutû_sockë_îr‹_to_°rög
(
îr
),Érr);

1425 i‡(
	`£rvî_ªque°_‰ì
(
ªq
)) {

1429 
	`EVUTIL_ASSERT
(
ªq
 !
p‹t
->
≥ndög_ª∂õs
);

1430 
ªq
 = 
p‹t
->
≥ndög_ª∂õs
;

1435 (Ë
	`evít_dñ
(&
p‹t
->
evít
);

1436 
	`evít_assign
(&
p‹t
->
evít
,Ö‹t->
evít_ba£
,

1437 
p‹t
->
sockë
, 
EV_READ
 | 
EV_PERSIST
,

1438 
£rvî_p‹t_ªady_ˇŒback
, 
p‹t
);

1440 i‡(
	`evít_add
(&
p‹t
->
evít
, 
NULL
) < 0) {

1441 
	`log
(
EVDNS_LOG_WARN
, "Error fromÜibevent whenáddingÉvent for DNS server.");

1444 
	}
}

1450 
	$«me£rvî_wrôe_waôög
(
«me£rvî
 *
ns
, 
waôög
) {

1451 
	`ASSERT_LOCKED
(
ns
->
ba£
);

1452 i‡(
ns
->
wrôe_waôög
 =
waôög
) ;

1454 
ns
->
wrôe_waôög
 = 
waôög
;

1455 (Ë
	`evít_dñ
(&
ns
->
evít
);

1456 
	`evít_assign
(&
ns
->
evít
,Çs->
ba£
->
evít_ba£
,

1457 
ns
->
sockë
, 
EV_READ
 | (
waôög
 ? 
EV_WRITE
 : 0Ë| 
EV_PERSIST
,

1458 
«me£rvî_ªady_ˇŒback
, 
ns
);

1459 i‡(
	`evít_add
(&
ns
->
evít
, 
NULL
) < 0) {

1460 
addrbuf
[128];

1461 
	`log
(
EVDNS_LOG_WARN
, "Error fromÜibevent whenáddingÉvent for %s",

1462 
	`evutû_f‹m©_sockaddr_p‹t
(

1463 (
sockaddr
 *)&
ns
->
addªss
,

1464 
addrbuf
, (addrbuf)));

1467 
	}
}

1472 
	$«me£rvî_ªady_ˇŒback
(
evutû_sockë_t
 
fd
, 
evíts
, *
¨g
) {

1473 
«me£rvî
 *
ns
 = («me£rvî *Ë
¨g
;

1474 ()
fd
;

1476 
	`EVDNS_LOCK
(
ns
->
ba£
);

1477 i‡(
evíts
 & 
EV_WRITE
) {

1478 
ns
->
choked
 = 0;

1479 i‡(!
	`evdns_å™smô
(
ns
->
ba£
)) {

1480 
	`«me£rvî_wrôe_waôög
(
ns
, 0);

1483 i‡(
evíts
 & 
EV_READ
) {

1484 
	`«me£rvî_ªad
(
ns
);

1486 
	`EVDNS_UNLOCK
(
ns
->
ba£
);

1487 
	}
}

1492 
	$£rvî_p‹t_ªady_ˇŒback
(
evutû_sockë_t
 
fd
, 
evíts
, *
¨g
) {

1493 
evdns_£rvî_p‹t
 *
p‹t
 = (evdns_£rvî_p‹à*Ë
¨g
;

1494 (Ë
fd
;

1496 
	`EVDNS_LOCK
(
p‹t
);

1497 i‡(
evíts
 & 
EV_WRITE
) {

1498 
p‹t
->
choked
 = 0;

1499 
	`£rvî_p‹t_Êush
(
p‹t
);

1501 i‡(
evíts
 & 
EV_READ
) {

1502 
	`£rvî_p‹t_ªad
(
p‹t
);

1504 
	`EVDNS_UNLOCK
(
p‹t
);

1505 
	}
}

1509 
	#MAX_LABELS
 128

	)

1511 
	sdn¶abñ_íåy
 { *
	mv
; 
off_t
 
	mpos
; };

1512 
	sdn¶abñ_èbÀ
 {

1513 
	mn_œbñs
;

1515 
dn¶abñ_íåy
 
	mœbñs
[
MAX_LABELS
];

1520 
	$dn¶abñ_èbÀ_öô
(
dn¶abñ_èbÀ
 *
èbÀ
)

1522 
èbÀ
->
n_œbñs
 = 0;

1523 
	}
}

1527 
	$dn¶abñ_˛ór
(
dn¶abñ_èbÀ
 *
èbÀ
)

1529 
i
;

1530 
i
 = 0; i < 
èbÀ
->
n_œbñs
; ++i)

1531 
	`mm_‰ì
(
èbÀ
->
œbñs
[
i
].
v
);

1532 
èbÀ
->
n_œbñs
 = 0;

1533 
	}
}

1538 
	$dn¶abñ_èbÀ_gë_pos
(c⁄° 
dn¶abñ_èbÀ
 *
èbÀ
, c⁄° *
œbñ
)

1540 
i
;

1541 
i
 = 0; i < 
èbÀ
->
n_œbñs
; ++i) {

1542 i‡(!
	`°rcmp
(
œbñ
, 
èbÀ
->
œbñs
[
i
].
v
))

1543  
èbÀ
->
œbñs
[
i
].
pos
;

1546 
	}
}

1550 
	$dn¶abñ_èbÀ_add
(
dn¶abñ_èbÀ
 *
èbÀ
, c⁄° *
œbñ
, 
off_t
 
pos
)

1552 *
v
;

1553 
p
;

1554 i‡(
èbÀ
->
n_œbñs
 =
MAX_LABELS
)

1556 
v
 = 
	`mm_°rdup
(
œbñ
);

1557 i‡(
v
 =
NULL
)

1559 
p
 = 
èbÀ
->
n_œbñs
++;

1560 
èbÀ
->
œbñs
[
p
].
v
 = v;

1561 
èbÀ
->
œbñs
[
p
].
pos
 =Öos;

1564 
	}
}

1577 
off_t


1578 
	$dn¢ame_to_œbñs
(
u8
 *c⁄° 
buf
, 
size_t
 
buf_Àn
, 
off_t
 
j
,

1579 c⁄° *
«me
, c⁄° 
size_t
 
«me_Àn
,

1580 
dn¶abñ_èbÀ
 *
èbÀ
) {

1581 c⁄° *
íd
 = 
«me
 + 
«me_Àn
;

1582 
ªf
 = 0;

1583 
u16
 
_t
;

1585 
	#APPEND16
(
x
) do { \

1586 i‡(
j
 + 2 > (
off_t
)
buf_Àn
) \

1587 
ovîÊow
; \

1588 
_t
 = 
	`ht⁄s
(
x
); \

1589 
	`mem˝y
(
buf
 + 
j
, &
_t
, 2); \

1590 
j
 += 2; \

1591 } 0)

	)

1592 
	#APPEND32
(
x
) do { \

1593 i‡(
j
 + 4 > (
off_t
)
buf_Àn
) \

1594 
ovîÊow
; \

1595 
_t32
 = 
	`ht⁄l
(
x
); \

1596 
	`mem˝y
(
buf
 + 
j
, &
_t32
, 4); \

1597 
j
 += 4; \

1598 } 0)

	)

1600 i‡(
«me_Àn
 > 255)  -2;

1603 c⁄° *c⁄° 
°¨t
 = 
«me
;

1604 i‡(
èbÀ
 && (
ªf
 = 
	`dn¶abñ_èbÀ_gë_pos
—abÀ, 
«me
)) >= 0) {

1605 
	`APPEND16
(
ªf
 | 0xc000);

1606  
j
;

1608 
«me
 = 
	`°rchr
(name, '.');

1609 i‡(!
«me
) {

1610 c⁄° 
size_t
 
œbñ_Àn
 = 
íd
 - 
°¨t
;

1611 i‡(
œbñ_Àn
 > 63)  -1;

1612 i‡((
size_t
)(
j
+
œbñ_Àn
+1Ë> 
buf_Àn
)  -2;

1613 i‡(
èbÀ
Ë
	`dn¶abñ_èbÀ_add
—abÀ, 
°¨t
, 
j
);

1614 
buf
[
j
++] = (
ev_uöt8_t
)
œbñ_Àn
;

1616 
	`mem˝y
(
buf
 + 
j
, 
°¨t
, 
œbñ_Àn
);

1617 
j
 +(Ë
œbñ_Àn
;

1621 c⁄° 
size_t
 
œbñ_Àn
 = 
«me
 - 
°¨t
;

1622 i‡(
œbñ_Àn
 > 63)  -1;

1623 i‡((
size_t
)(
j
+
œbñ_Àn
+1Ë> 
buf_Àn
)  -2;

1624 i‡(
èbÀ
Ë
	`dn¶abñ_èbÀ_add
—abÀ, 
°¨t
, 
j
);

1625 
buf
[
j
++] = (
ev_uöt8_t
)
œbñ_Àn
;

1627 
	`mem˝y
(
buf
 + 
j
, 
°¨t
, 
œbñ_Àn
);

1628 
j
 +(Ë
œbñ_Àn
;

1630 
«me
++;

1637 i‡(!
j
 || 
buf
[j-1]) buf[j++] = 0;

1638  
j
;

1639 
ovîÊow
:

1641 
	}
}

1646 
size_t


1647 
	$evdns_ªque°_Àn
(c⁄° 
size_t
 
«me_Àn
) {

1649 
«me_Àn
 + 2 +

1651 
	}
}

1658 
	$evdns_ªque°_d©a_buûd
(c⁄° *c⁄° 
«me
, c⁄° 
size_t
 
«me_Àn
,

1659 c⁄° 
u16
 
å™s_id
, c⁄° u16 
ty≥
, c⁄° u16 
˛ass
,

1660 
u8
 *c⁄° 
buf
, 
size_t
 
buf_Àn
) {

1661 
off_t
 
j
 = 0;

1662 
u16
 
_t
;

1664 
	`APPEND16
(
å™s_id
);

1665 
	`APPEND16
(0x0100);

1666 
	`APPEND16
(1);

1667 
	`APPEND16
(0);

1668 
	`APPEND16
(0);

1669 
	`APPEND16
(0);

1671 
j
 = 
	`dn¢ame_to_œbñs
(
buf
, 
buf_Àn
, j, 
«me
, 
«me_Àn
, 
NULL
);

1672 i‡(
j
 < 0) {

1673  ()
j
;

1676 
	`APPEND16
(
ty≥
);

1677 
	`APPEND16
(
˛ass
);

1679  ()
j
;

1680 
ovîÊow
:

1682 
	}
}

1685 
evdns_£rvî_p‹t
 *

1686 
	$evdns_add_£rvî_p‹t_wôh_ba£
(
evít_ba£
 *
ba£
, 
evutû_sockë_t
 
sockë
, 
Êags
, 
evdns_ªque°_ˇŒback_‚_ty≥
 
cb
, *
u£r_d©a
)

1688 
evdns_£rvî_p‹t
 *
p‹t
;

1689 i‡(
Êags
)

1690  
NULL
;

1691 i‡(!(
p‹t
 = 
	`mm_mÆloc
((
evdns_£rvî_p‹t
))))

1692  
NULL
;

1693 
	`mem£t
(
p‹t
, 0, (
evdns_£rvî_p‹t
));

1696 
p‹t
->
sockë
 = socket;

1697 
p‹t
->
ªf˙t
 = 1;

1698 
p‹t
->
choked
 = 0;

1699 
p‹t
->
˛osög
 = 0;

1700 
p‹t
->
u£r_ˇŒback
 = 
cb
;

1701 
p‹t
->
u£r_d©a
 = user_data;

1702 
p‹t
->
≥ndög_ª∂õs
 = 
NULL
;

1703 
p‹t
->
evít_ba£
 = 
ba£
;

1705 
	`evít_assign
(&
p‹t
->
evít
,Ö‹t->
evít_ba£
,

1706 
p‹t
->
sockë
, 
EV_READ
 | 
EV_PERSIST
,

1707 
£rvî_p‹t_ªady_ˇŒback
, 
p‹t
);

1708 i‡(
	`evít_add
(&
p‹t
->
evít
, 
NULL
) < 0) {

1709 
	`mm_‰ì
(
p‹t
);

1710  
NULL
;

1712 
	`EVTHREAD_ALLOC_LOCK
(
p‹t
->
lock
, 
EVTHREAD_LOCKTYPE_RECURSIVE
);

1713  
p‹t
;

1714 
	}
}

1716 
evdns_£rvî_p‹t
 *

1717 
	$evdns_add_£rvî_p‹t
(
evutû_sockë_t
 
sockë
, 
Êags
, 
evdns_ªque°_ˇŒback_‚_ty≥
 
cb
, *
u£r_d©a
)

1719  
	`evdns_add_£rvî_p‹t_wôh_ba£
(
NULL
, 
sockë
, 
Êags
, 
cb
, 
u£r_d©a
);

1720 
	}
}

1724 
	$evdns_˛o£_£rvî_p‹t
(
evdns_£rvî_p‹t
 *
p‹t
)

1726 
	`EVDNS_LOCK
(
p‹t
);

1727 i‡(--
p‹t
->
ªf˙t
 == 0) {

1728 
	`EVDNS_UNLOCK
(
p‹t
);

1729 
	`£rvî_p‹t_‰ì
(
p‹t
);

1731 
p‹t
->
˛osög
 = 1;

1733 
	}
}

1737 
	$evdns_£rvî_ªque°_add_ª∂y
(
evdns_£rvî_ªque°
 *
_ªq
, 
£˘i⁄
, c⁄° *
«me
, 
ty≥
, 
˛ass
, 
âl
, 
d©Æí
, 
is_«me
, c⁄° *
d©a
)

1739 
£rvî_ªque°
 *
ªq
 = 
	`TO_SERVER_REQUEST
(
_ªq
);

1740 
£rvî_ª∂y_ôem
 **
ôemp
, *
ôem
;

1741 *
cou¡p
;

1742 
ªsu…
 = -1;

1744 
	`EVDNS_LOCK
(
ªq
->
p‹t
);

1745 i‡(
ªq
->
ª•⁄£
)

1746 
d⁄e
;

1748 
£˘i⁄
) {

1749 
EVDNS_ANSWER_SECTION
:

1750 
ôemp
 = &
ªq
->
™swî
;

1751 
cou¡p
 = &
ªq
->
n_™swî
;

1753 
EVDNS_AUTHORITY_SECTION
:

1754 
ôemp
 = &
ªq
->
auth‹ôy
;

1755 
cou¡p
 = &
ªq
->
n_auth‹ôy
;

1757 
EVDNS_ADDITIONAL_SECTION
:

1758 
ôemp
 = &
ªq
->
addôi⁄Æ
;

1759 
cou¡p
 = &
ªq
->
n_addôi⁄Æ
;

1762 
d⁄e
;

1764 *
ôemp
) {

1765 
ôemp
 = &((*ôemp)->
√xt
);

1767 
ôem
 = 
	`mm_mÆloc
((
£rvî_ª∂y_ôem
));

1768 i‡(!
ôem
)

1769 
d⁄e
;

1770 
ôem
->
√xt
 = 
NULL
;

1771 i‡(!(
ôem
->
«me
 = 
	`mm_°rdup
(name))) {

1772 
	`mm_‰ì
(
ôem
);

1773 
d⁄e
;

1775 
ôem
->
ty≥
 =Åype;

1776 
ôem
->
dns_que°i⁄_˛ass
 = 
˛ass
;

1777 
ôem
->
âl
 =Åtl;

1778 
ôem
->
is_«me
 = is_name != 0;

1779 
ôem
->
d©Æí
 = 0;

1780 
ôem
->
d©a
 = 
NULL
;

1781 i‡(
d©a
) {

1782 i‡(
ôem
->
is_«me
) {

1783 i‡(!(
ôem
->
d©a
 = 
	`mm_°rdup
(data))) {

1784 
	`mm_‰ì
(
ôem
->
«me
);

1785 
	`mm_‰ì
(
ôem
);

1786 
d⁄e
;

1788 
ôem
->
d©Æí
 = (
u16
)-1;

1790 i‡(!(
ôem
->
d©a
 = 
	`mm_mÆloc
(
d©Æí
))) {

1791 
	`mm_‰ì
(
ôem
->
«me
);

1792 
	`mm_‰ì
(
ôem
);

1793 
d⁄e
;

1795 
ôem
->
d©Æí
 = datalen;

1796 
	`mem˝y
(
ôem
->
d©a
, d©a, 
d©Æí
);

1800 *
ôemp
 = 
ôem
;

1801 ++(*
cou¡p
);

1802 
ªsu…
 = 0;

1803 
d⁄e
:

1804 
	`EVDNS_UNLOCK
(
ªq
->
p‹t
);

1805  
ªsu…
;

1806 
	}
}

1810 
	$evdns_£rvî_ªque°_add_a_ª∂y
(
evdns_£rvî_ªque°
 *
ªq
, c⁄° *
«me
, 
n
, c⁄° *
addrs
, 
âl
)

1812  
	`evdns_£rvî_ªque°_add_ª∂y
(

1813 
ªq
, 
EVDNS_ANSWER_SECTION
, 
«me
, 
TYPE_A
, 
CLASS_INET
,

1814 
âl
, 
n
*4, 0, 
addrs
);

1815 
	}
}

1819 
	$evdns_£rvî_ªque°_add_ØØ_ª∂y
(
evdns_£rvî_ªque°
 *
ªq
, c⁄° *
«me
, 
n
, c⁄° *
addrs
, 
âl
)

1821  
	`evdns_£rvî_ªque°_add_ª∂y
(

1822 
ªq
, 
EVDNS_ANSWER_SECTION
, 
«me
, 
TYPE_AAAA
, 
CLASS_INET
,

1823 
âl
, 
n
*16, 0, 
addrs
);

1824 
	}
}

1828 
	$evdns_£rvî_ªque°_add_±r_ª∂y
(
evdns_£rvî_ªque°
 *
ªq
, 
ö_addr
 *
ö
, c⁄° *
öaddr_«me
, c⁄° *
ho°«me
, 
âl
)

1830 
u32
 
a
;

1831 
buf
[32];

1832 i‡(
ö
 && 
öaddr_«me
)

1834 i‡(!
ö
 && !
öaddr_«me
)

1836 i‡(
ö
) {

1837 
a
 = 
	`¡ohl
(
ö
->
s_addr
);

1838 
	`evutû_¢¥ötf
(
buf
, (buf), "%d.%d.%d.%d.in-addr.arpa",

1839 ()(
u8
)((
a
 )&0xff),

1840 ()(
u8
)((
a
>>8 )&0xff),

1841 ()(
u8
)((
a
>>16)&0xff),

1842 ()(
u8
)((
a
>>24)&0xff));

1843 
öaddr_«me
 = 
buf
;

1845  
	`evdns_£rvî_ªque°_add_ª∂y
(

1846 
ªq
, 
EVDNS_ANSWER_SECTION
, 
öaddr_«me
, 
TYPE_PTR
, 
CLASS_INET
,

1847 
âl
, -1, 1, 
ho°«me
);

1848 
	}
}

1852 
	$evdns_£rvî_ªque°_add_˙ame_ª∂y
(
evdns_£rvî_ªque°
 *
ªq
, c⁄° *
«me
, c⁄° *
˙ame
, 
âl
)

1854  
	`evdns_£rvî_ªque°_add_ª∂y
(

1855 
ªq
, 
EVDNS_ANSWER_SECTION
, 
«me
, 
TYPE_CNAME
, 
CLASS_INET
,

1856 
âl
, -1, 1, 
˙ame
);

1857 
	}
}

1861 
	$evdns_£rvî_ªque°_£t_Êags
(
evdns_£rvî_ªque°
 *
exªq
, 
Êags
)

1863 
£rvî_ªque°
 *
ªq
 = 
	`TO_SERVER_REQUEST
(
exªq
);

1864 
ªq
->
ba£
.
Êags
 &~(
EVDNS_FLAGS_AA
|
EVDNS_FLAGS_RD
);

1865 
ªq
->
ba£
.
Êags
 |= flags;

1866 
	}
}

1869 
	$evdns_£rvî_ªque°_f‹m©_ª•⁄£
(
£rvî_ªque°
 *
ªq
, 
îr
)

1871 
buf
[1500];

1872 
size_t
 
buf_Àn
 = (
buf
);

1873 
off_t
 
j
 = 0, 
r
;

1874 
u16
 
_t
;

1875 
u32
 
_t32
;

1876 
i
;

1877 
u16
 
Êags
;

1878 
dn¶abñ_èbÀ
 
èbÀ
;

1880 i‡(
îr
 < 0 ||Érr > 15)  -1;

1884 
Êags
 = 
ªq
->
ba£
.flags;

1885 
Êags
 |(0x8000 | 
îr
);

1887 
	`dn¶abñ_èbÀ_öô
(&
èbÀ
);

1888 
	`APPEND16
(
ªq
->
å™s_id
);

1889 
	`APPEND16
(
Êags
);

1890 
	`APPEND16
(
ªq
->
ba£
.
nque°i⁄s
);

1891 
	`APPEND16
(
ªq
->
n_™swî
);

1892 
	`APPEND16
(
ªq
->
n_auth‹ôy
);

1893 
	`APPEND16
(
ªq
->
n_addôi⁄Æ
);

1896 
i
=0; i < 
ªq
->
ba£
.
nque°i⁄s
; ++i) {

1897 c⁄° *
s
 = 
ªq
->
ba£
.
que°i⁄s
[
i
]->
«me
;

1898 
j
 = 
	`dn¢ame_to_œbñs
(
buf
, 
buf_Àn
, j, 
s
, 
	`°æí
(s), &
èbÀ
);

1899 i‡(
j
 < 0) {

1900 
	`dn¶abñ_˛ór
(&
èbÀ
);

1901  (Ë
j
;

1903 
	`APPEND16
(
ªq
->
ba£
.
que°i⁄s
[
i
]->
ty≥
);

1904 
	`APPEND16
(
ªq
->
ba£
.
que°i⁄s
[
i
]->
dns_que°i⁄_˛ass
);

1908 
i
=0; i<3; ++i) {

1909 
£rvî_ª∂y_ôem
 *
ôem
;

1910 i‡(
i
==0)

1911 
ôem
 = 
ªq
->
™swî
;

1912 i‡(
i
==1)

1913 
ôem
 = 
ªq
->
auth‹ôy
;

1915 
ôem
 = 
ªq
->
addôi⁄Æ
;

1916 
ôem
) {

1917 
r
 = 
	`dn¢ame_to_œbñs
(
buf
, 
buf_Àn
, 
j
, 
ôem
->
«me
, 
	`°æí
(ôem->«me), &
èbÀ
);

1918 i‡(
r
 < 0)

1919 
ovîÊow
;

1920 
j
 = 
r
;

1922 
	`APPEND16
(
ôem
->
ty≥
);

1923 
	`APPEND16
(
ôem
->
dns_que°i⁄_˛ass
);

1924 
	`APPEND32
(
ôem
->
âl
);

1925 i‡(
ôem
->
is_«me
) {

1926 
off_t
 
Àn_idx
 = 
j
, 
«me_°¨t
;

1927 
j
 += 2;

1928 
«me_°¨t
 = 
j
;

1929 
r
 = 
	`dn¢ame_to_œbñs
(
buf
, 
buf_Àn
, 
j
, 
ôem
->
d©a
, 
	`°æí
(ôem->d©a), &
èbÀ
);

1930 i‡(
r
 < 0)

1931 
ovîÊow
;

1932 
j
 = 
r
;

1933 
_t
 = 
	`ht⁄s
–(Ë(
j
-
«me_°¨t
) );

1934 
	`mem˝y
(
buf
+
Àn_idx
, &
_t
, 2);

1936 
	`APPEND16
(
ôem
->
d©Æí
);

1937 i‡(
j
+
ôem
->
d©Æí
 > (
off_t
)
buf_Àn
)

1938 
ovîÊow
;

1939 
	`mem˝y
(
buf
+
j
, 
ôem
->
d©a
, iãm->
d©Æí
);

1940 
j
 +
ôem
->
d©Æí
;

1942 
ôem
 = iãm->
√xt
;

1946 i‡(
j
 > 512) {

1947 
ovîÊow
:

1948 
j
 = 512;

1949 
buf
[2] |= 0x02;

1952 
ªq
->
ª•⁄£_Àn
 = 
j
;

1954 i‡(!(
ªq
->
ª•⁄£
 = 
	`mm_mÆloc
‘eq->
ª•⁄£_Àn
))) {

1955 
	`£rvî_ªque°_‰ì_™swîs
(
ªq
);

1956 
	`dn¶abñ_˛ór
(&
èbÀ
);

1959 
	`mem˝y
(
ªq
->
ª•⁄£
, 
buf
,Ñeq->
ª•⁄£_Àn
);

1960 
	`£rvî_ªque°_‰ì_™swîs
(
ªq
);

1961 
	`dn¶abñ_˛ór
(&
èbÀ
);

1963 
	}
}

1967 
	$evdns_£rvî_ªque°_ª•⁄d
(
evdns_£rvî_ªque°
 *
_ªq
, 
îr
)

1969 
£rvî_ªque°
 *
ªq
 = 
	`TO_SERVER_REQUEST
(
_ªq
);

1970 
evdns_£rvî_p‹t
 *
p‹t
 = 
ªq
->port;

1971 
r
 = -1;

1973 
	`EVDNS_LOCK
(
p‹t
);

1974 i‡(!
ªq
->
ª•⁄£
) {

1975 i‡((
r
 = 
	`evdns_£rvî_ªque°_f‹m©_ª•⁄£
(
ªq
, 
îr
))<0)

1976 
d⁄e
;

1979 
r
 = 
	`£ndto
(
p‹t
->
sockë
, 
ªq
->
ª•⁄£
, (Ïeq->
ª•⁄£_Àn
, 0,

1980 (
sockaddr
*Ë&
ªq
->
addr
, (
ev_sockÀn_t
Ïeq->
addæí
);

1981 i‡(
r
<0) {

1982 
sock_îr
 = 
	`evutû_sockë_gëîr‹
(
p‹t
->
sockë
);

1983 i‡(
	`EVUTIL_ERR_RW_RETRIABLE
(
sock_îr
))

1984 
d⁄e
;

1986 i‡(
p‹t
->
≥ndög_ª∂õs
) {

1987 
ªq
->
¥ev_≥ndög
 = 
p‹t
->
≥ndög_ª∂õs
->prev_pending;

1988 
ªq
->
√xt_≥ndög
 = 
p‹t
->
≥ndög_ª∂õs
;

1989 
ªq
->
¥ev_≥ndög
->
√xt_≥ndög
 =

1990 
ªq
->
√xt_≥ndög
->
¥ev_≥ndög
 =Ñeq;

1992 
ªq
->
¥ev_≥ndög
 =Ñeq->
√xt_≥ndög
 =Ñeq;

1993 
p‹t
->
≥ndög_ª∂õs
 = 
ªq
;

1994 
p‹t
->
choked
 = 1;

1996 (Ë
	`evít_dñ
(&
p‹t
->
evít
);

1997 
	`evít_assign
(&
p‹t
->
evít
,Ö‹t->
evít_ba£
,Ö‹t->
sockë
, (p‹t->
˛osög
?0:
EV_READ
Ë| 
EV_WRITE
 | 
EV_PERSIST
, 
£rvî_p‹t_ªady_ˇŒback
,Öort);

1999 i‡(
	`evít_add
(&
p‹t
->
evít
, 
NULL
) < 0) {

2000 
	`log
(
EVDNS_LOG_WARN
, "Error fromÜibevent whenáddingÉvent for DNS server");

2005 
r
 = 1;

2006 
d⁄e
;

2008 i‡(
	`£rvî_ªque°_‰ì
(
ªq
)) {

2009 
r
 = 0;

2010 
d⁄e
;

2013 i‡(
p‹t
->
≥ndög_ª∂õs
)

2014 
	`£rvî_p‹t_Êush
(
p‹t
);

2016 
r
 = 0;

2017 
d⁄e
:

2018 
	`EVDNS_UNLOCK
(
p‹t
);

2019  
r
;

2020 
	}
}

2024 
	$£rvî_ªque°_‰ì_™swîs
(
£rvî_ªque°
 *
ªq
)

2026 
£rvî_ª∂y_ôem
 *
vi˘im
, *
√xt
, **
li°
;

2027 
i
;

2028 
i
 = 0; i < 3; ++i) {

2029 i‡(
i
==0)

2030 
li°
 = &
ªq
->
™swî
;

2031 i‡(
i
==1)

2032 
li°
 = &
ªq
->
auth‹ôy
;

2034 
li°
 = &
ªq
->
addôi⁄Æ
;

2036 
vi˘im
 = *
li°
;

2037 
vi˘im
) {

2038 
√xt
 = 
vi˘im
->next;

2039 
	`mm_‰ì
(
vi˘im
->
«me
);

2040 i‡(
vi˘im
->
d©a
)

2041 
	`mm_‰ì
(
vi˘im
->
d©a
);

2042 
	`mm_‰ì
(
vi˘im
);

2043 
vi˘im
 = 
√xt
;

2045 *
li°
 = 
NULL
;

2047 
	}
}

2052 
	$£rvî_ªque°_‰ì
(
£rvî_ªque°
 *
ªq
)

2054 
i
, 
rc
=1, 
lock
=0;

2055 i‡(
ªq
->
ba£
.
que°i⁄s
) {

2056 
i
 = 0; i < 
ªq
->
ba£
.
nque°i⁄s
; ++i)

2057 
	`mm_‰ì
(
ªq
->
ba£
.
que°i⁄s
[
i
]);

2058 
	`mm_‰ì
(
ªq
->
ba£
.
que°i⁄s
);

2061 i‡(
ªq
->
p‹t
) {

2062 
	`EVDNS_LOCK
(
ªq
->
p‹t
);

2063 
lock
=1;

2064 i‡(
ªq
->
p‹t
->
≥ndög_ª∂õs
 ==Ñeq) {

2065 i‡(
ªq
->
√xt_≥ndög
 &&Ñeq->next_pending !=Ñeq)

2066 
ªq
->
p‹t
->
≥ndög_ª∂õs
 =Ñeq->
√xt_≥ndög
;

2068 
ªq
->
p‹t
->
≥ndög_ª∂õs
 = 
NULL
;

2070 
rc
 = --
ªq
->
p‹t
->
ªf˙t
;

2073 i‡(
ªq
->
ª•⁄£
) {

2074 
	`mm_‰ì
(
ªq
->
ª•⁄£
);

2077 
	`£rvî_ªque°_‰ì_™swîs
(
ªq
);

2079 i‡(
ªq
->
√xt_≥ndög
 &&Ñeq->next_pending !=Ñeq) {

2080 
ªq
->
√xt_≥ndög
->
¥ev_≥ndög
 =Ñeq->prev_pending;

2081 
ªq
->
¥ev_≥ndög
->
√xt_≥ndög
 =Ñeq->next_pending;

2084 i‡(
rc
 == 0) {

2085 
	`EVDNS_UNLOCK
(
ªq
->
p‹t
);

2086 
	`£rvî_p‹t_‰ì
(
ªq
->
p‹t
);

2087 
	`mm_‰ì
(
ªq
);

2090 i‡(
lock
)

2091 
	`EVDNS_UNLOCK
(
ªq
->
p‹t
);

2092 
	`mm_‰ì
(
ªq
);

2094 
	}
}

2098 
	$£rvî_p‹t_‰ì
(
evdns_£rvî_p‹t
 *
p‹t
)

2100 
	`EVUTIL_ASSERT
(
p‹t
);

2101 
	`EVUTIL_ASSERT
(!
p‹t
->
ªf˙t
);

2102 
	`EVUTIL_ASSERT
(!
p‹t
->
≥ndög_ª∂õs
);

2103 i‡(
p‹t
->
sockë
 > 0) {

2104 
	`evutû_˛o£sockë
(
p‹t
->
sockë
);

2105 
p‹t
->
sockë
 = -1;

2107 (Ë
	`evít_dñ
(&
p‹t
->
evít
);

2108 
	`evít_debug_u«ssign
(&
p‹t
->
evít
);

2109 
	`EVTHREAD_FREE_LOCK
(
p‹t
->
lock
, 
EVTHREAD_LOCKTYPE_RECURSIVE
);

2110 
	`mm_‰ì
(
p‹t
);

2111 
	}
}

2115 
	$evdns_£rvî_ªque°_dr›
(
evdns_£rvî_ªque°
 *
_ªq
)

2117 
£rvî_ªque°
 *
ªq
 = 
	`TO_SERVER_REQUEST
(
_ªq
);

2118 
	`£rvî_ªque°_‰ì
(
ªq
);

2120 
	}
}

2124 
	$evdns_£rvî_ªque°_gë_ªque°ög_addr
(
evdns_£rvî_ªque°
 *
_ªq
, 
sockaddr
 *
ß
, 
addr_Àn
)

2126 
£rvî_ªque°
 *
ªq
 = 
	`TO_SERVER_REQUEST
(
_ªq
);

2127 i‡(
addr_Àn
 < ()
ªq
->
addæí
)

2129 
	`mem˝y
(
ß
, &(
ªq
->
addr
),Ñeq->
addæí
);

2130  
ªq
->
addæí
;

2131 
	}
}

2133 #unde‡
APPEND16


2134 #unde‡
APPEND32


2139 
	$evdns_ªque°_timeout_ˇŒback
(
evutû_sockë_t
 
fd
, 
evíts
, *
¨g
) {

2140 
ªque°
 *c⁄° 
ªq
 = (ªque° *Ë
¨g
;

2141 
evdns_ba£
 *
ba£
 = 
ªq
->base;

2143 (Ë
fd
;

2144 (Ë
evíts
;

2146 
	`log
(
EVDNS_LOG_DEBUG
, "Reque° %∞timed out", 
¨g
);

2147 
	`EVDNS_LOCK
(
ba£
);

2149 
ªq
->
ns
->
timedout
++;

2150 i‡(
ªq
->
ns
->
timedout
 >Ñeq->
ba£
->
globÆ_max_«me£rvî_timeout
) {

2151 
ªq
->
ns
->
timedout
 = 0;

2152 
	`«me£rvî_Áûed
(
ªq
->
ns
, "requestÅimed out.");

2155 i‡(
ªq
->
tx_cou¡
 >ªq->
ba£
->
globÆ_max_ªå™smôs
) {

2157 
	`log
(
EVDNS_LOG_DEBUG
, "Giving up onÑequest %p;Åx_count==%d",

2158 
¨g
, 
ªq
->
tx_cou¡
);

2159 
	`ª∂y_scheduÀ_ˇŒback
(
ªq
, 0, 
DNS_ERR_TIMEOUT
, 
NULL
);

2160 
	`ªque°_föished
(
ªq
, &
	`REQ_HEAD
‘eq->
ba£
,Ñeq->
å™s_id
), 1);

2163 
«me£rvî
 *
√w_ns
;

2164 
	`log
(
EVDNS_LOG_DEBUG
, "RetransmittingÑequest %p;Åx_count==%d",

2165 
¨g
, 
ªq
->
tx_cou¡
);

2166 (Ë
	`evtimî_dñ
(&
ªq
->
timeout_evít
);

2167 
√w_ns
 = 
	`«me£rvî_pick
(
ba£
);

2168 i‡(
√w_ns
)

2169 
ªq
->
ns
 = 
√w_ns
;

2170 
	`evdns_ªque°_å™smô
(
ªq
);

2172 
	`EVDNS_UNLOCK
(
ba£
);

2173 
	}
}

2182 
	$evdns_ªque°_å™smô_to
(
ªque°
 *
ªq
, 
«me£rvî
 *
£rvî
) {

2183 
r
;

2184 
	`ASSERT_LOCKED
(
ªq
->
ba£
);

2185 
	`ASSERT_VALID_REQUEST
(
ªq
);

2186 
r
 = 
	`£ndto
(
£rvî
->
sockë
, (*)
ªq
->
ªque°
,Ñeq->
ªque°_Àn
, 0,

2187 (
sockaddr
 *)&
£rvî
->
addªss
, sîvî->
addæí
);

2188 i‡(
r
 < 0) {

2189 
îr
 = 
	`evutû_sockë_gëîr‹
(
£rvî
->
sockë
);

2190 i‡(
	`EVUTIL_ERR_RW_RETRIABLE
(
îr
))

2192 
	`«me£rvî_Áûed
(
ªq
->
ns
, 
	`evutû_sockë_îr‹_to_°rög
(
îr
));

2194 } i‡(
r
 !()
ªq
->
ªque°_Àn
) {

2199 
	}
}

2208 
	$evdns_ªque°_å™smô
(
ªque°
 *
ªq
) {

2209 
ªtcode
 = 0, 
r
;

2211 
	`ASSERT_LOCKED
(
ªq
->
ba£
);

2212 
	`ASSERT_VALID_REQUEST
(
ªq
);

2215 
ªq
->
å™smô_me
 = 1;

2216 
	`EVUTIL_ASSERT
(
ªq
->
å™s_id
 != 0xffff);

2218 i‡(
ªq
->
ns
->
choked
) {

2224 
r
 = 
	`evdns_ªque°_å™smô_to
(
ªq
,Ñeq->
ns
);

2225 
r
) {

2228 
ªq
->
ns
->
choked
 = 1;

2229 
	`«me£rvî_wrôe_waôög
(
ªq
->
ns
, 1);

2233 
ªtcode
 = 1;

2238 
	`log
(
EVDNS_LOG_DEBUG
,

2239 "SëtögÅimeouàf‹Ñeque° %p, síàtÿ«me£rvî %p", 
ªq
,Ñeq->
ns
);

2240 i‡(
	`evtimî_add
(&
ªq
->
timeout_evít
, &ªq->
ba£
->
globÆ_timeout
) < 0) {

2241 
	`log
(
EVDNS_LOG_WARN
,

2243 
ªq
);

2246 
ªq
->
tx_cou¡
++;

2247 
ªq
->
å™smô_me
 = 0;

2248  
ªtcode
;

2250 
	}
}

2253 
	$«me£rvî_¥obe_ˇŒback
(
ªsu…
, 
ty≥
, 
cou¡
, 
âl
, *
addªs£s
, *
¨g
) {

2254 
«me£rvî
 *c⁄° 
ns
 = («me£rvî *Ë
¨g
;

2255 (Ë
ty≥
;

2256 (Ë
cou¡
;

2257 (Ë
âl
;

2258 (Ë
addªs£s
;

2260 i‡(
ªsu…
 =
DNS_ERR_CANCEL
) {

2267 
	`EVDNS_LOCK
(
ns
->
ba£
);

2268 
ns
->
¥obe_ªque°
 = 
NULL
;

2269 i‡(
ªsu…
 =
DNS_ERR_NONE
 ||Ñesu… =
DNS_ERR_NOTEXIST
) {

2271 
	`«me£rvî_up
(
ns
);

2273 
	`«me£rvî_¥obe_Áûed
(
ns
);

2275 
	`EVDNS_UNLOCK
(
ns
->
ba£
);

2276 
	}
}

2279 
	$«me£rvî_£nd_¥obe
(
«me£rvî
 *c⁄° 
ns
) {

2280 
evdns_ªque°
 *
h™dÀ
;

2281 
ªque°
 *
ªq
;

2282 
addrbuf
[128];

2286 
	`ASSERT_LOCKED
(
ns
->
ba£
);

2287 
	`log
(
EVDNS_LOG_DEBUG
, "SendingÖrobeÅo %s",

2288 
	`evutû_f‹m©_sockaddr_p‹t
(

2289 (
sockaddr
 *)&
ns
->
addªss
,

2290 
addrbuf
, (addrbuf)));

2291 
h™dÀ
 = 
	`mm_ˇŒoc
(1, (*handle));

2292 i‡(!
h™dÀ
) ;

2293 
ªq
 = 
	`ªque°_√w
(
ns
->
ba£
, 
h™dÀ
, 
TYPE_A
, "googÀ.com", 
DNS_QUERY_NO_SEARCH
, 
«me£rvî_¥obe_ˇŒback
,Çs);

2294 i‡(!
ªq
) {

2295 
	`mm_‰ì
(
h™dÀ
);

2298 
ns
->
¥obe_ªque°
 = 
h™dÀ
;

2300 
	`ªque°_å™s_id_£t
(
ªq
, 
	`å™ß˘i⁄_id_pick
(
ns
->
ba£
));

2301 
ªq
->
ns
 =Çs;

2302 
	`ªque°_submô
(
ªq
);

2303 
	}
}

2309 
	$evdns_å™smô
(
evdns_ba£
 *
ba£
) {

2310 
did_åy_to_å™smô
 = 0;

2311 
i
;

2313 
	`ASSERT_LOCKED
(
ba£
);

2314 
i
 = 0; i < 
ba£
->
n_ªq_hóds
; ++i) {

2315 i‡(
ba£
->
ªq_hóds
[
i
]) {

2316 
ªque°
 *c⁄° 
°¨ãd_©
 = 
ba£
->
ªq_hóds
[
i
], *
ªq
 = started_at;

2319 i‡(
ªq
->
å™smô_me
) {

2320 
did_åy_to_å™smô
 = 1;

2321 
	`evdns_ªque°_å™smô
(
ªq
);

2324 
ªq
 =Ñeq->
√xt
;

2325 } 
ªq
 !
°¨ãd_©
);

2329  
did_åy_to_å™smô
;

2330 
	}
}

2334 
	$evdns_ba£_cou¡_«me£rvîs
(
evdns_ba£
 *
ba£
)

2336 c⁄° 
«me£rvî
 *
£rvî
;

2337 
n
 = 0;

2339 
	`EVDNS_LOCK
(
ba£
);

2340 
£rvî
 = 
ba£
->
£rvî_hód
;

2341 i‡(!
£rvî
)

2342 
d⁄e
;

2344 ++
n
;

2345 
£rvî
 = sîvî->
√xt
;

2346 } 
£rvî
 !
ba£
->
£rvî_hód
);

2347 
d⁄e
:

2348 
	`EVDNS_UNLOCK
(
ba£
);

2349  
n
;

2350 
	}
}

2353 
	$evdns_cou¡_«me£rvîs
()

2355  
	`evdns_ba£_cou¡_«me£rvîs
(
cuºít_ba£
);

2356 
	}
}

2360 
	$evdns_ba£_˛ór_«me£rvîs_™d_su•íd
(
evdns_ba£
 *
ba£
)

2362 
«me£rvî
 *
£rvî
, *
°¨ãd_©
;

2363 
i
;

2365 
	`EVDNS_LOCK
(
ba£
);

2366 
£rvî
 = 
ba£
->
£rvî_hód
;

2367 
°¨ãd_©
 = 
ba£
->
£rvî_hód
;

2368 i‡(!
£rvî
) {

2369 
	`EVDNS_UNLOCK
(
ba£
);

2373 
«me£rvî
 *
√xt
 = 
£rvî
->next;

2374 (Ë
	`evít_dñ
(&
£rvî
->
evít
);

2375 i‡(
	`evtimî_öôülized
(&
£rvî
->
timeout_evít
))

2376 (Ë
	`evtimî_dñ
(&
£rvî
->
timeout_evít
);

2377 i‡(
£rvî
->
¥obe_ªque°
) {

2378 
	`evdns_ˇn˚l_ªque°
(
£rvî
->
ba£
, sîvî->
¥obe_ªque°
);

2379 
£rvî
->
¥obe_ªque°
 = 
NULL
;

2381 i‡(
£rvî
->
sockë
 >= 0)

2382 
	`evutû_˛o£sockë
(
£rvî
->
sockë
);

2383 
	`mm_‰ì
(
£rvî
);

2384 i‡(
√xt
 =
°¨ãd_©
)

2386 
£rvî
 = 
√xt
;

2388 
ba£
->
£rvî_hód
 = 
NULL
;

2389 
ba£
->
globÆ_good_«me£rvîs
 = 0;

2391 
i
 = 0; i < 
ba£
->
n_ªq_hóds
; ++i) {

2392 
ªque°
 *
ªq
, *
ªq_°¨ãd_©
;

2393 
ªq
 = 
ªq_°¨ãd_©
 = 
ba£
->
ªq_hóds
[
i
];

2394 
ªq
) {

2395 
ªque°
 *
√xt
 = 
ªq
->next;

2396 
ªq
->
tx_cou¡
 =Ñeq->
ªissue_cou¡
 = 0;

2397 
ªq
->
ns
 = 
NULL
;

2399 (Ë
	`evtimî_dñ
(&
ªq
->
timeout_evít
);

2400 
ªq
->
å™s_id
 = 0;

2401 
ªq
->
å™smô_me
 = 0;

2403 
ba£
->
globÆ_ªque°s_waôög
++;

2404 
	`evdns_ªque°_ö£π
(
ªq
, &
ba£
->
ªq_waôög_hód
);

2409 
ba£
->
ªq_waôög_hód
 = ba£->ªq_waôög_hód->
¥ev
;

2411 i‡(
√xt
 =
ªq_°¨ãd_©
)

2413 
ªq
 = 
√xt
;

2415 
ba£
->
ªq_hóds
[
i
] = 
NULL
;

2418 
ba£
->
globÆ_ªque°s_öÊight
 = 0;

2420 
	`EVDNS_UNLOCK
(
ba£
);

2422 
	}
}

2425 
	$evdns_˛ór_«me£rvîs_™d_su•íd
()

2427  
	`evdns_ba£_˛ór_«me£rvîs_™d_su•íd
(
cuºít_ba£
);

2428 
	}
}

2433 
	$evdns_ba£_ªsume
(
evdns_ba£
 *
ba£
)

2435 
	`EVDNS_LOCK
(
ba£
);

2436 
	`evdns_ªque°s_pump_waôög_queue
(
ba£
);

2437 
	`EVDNS_UNLOCK
(
ba£
);

2439 
	}
}

2442 
	$evdns_ªsume
()

2444  
	`evdns_ba£_ªsume
(
cuºít_ba£
);

2445 
	}
}

2448 
	$_evdns_«me£rvî_add_im∂
(
evdns_ba£
 *
ba£
, c⁄° 
sockaddr
 *
addªss
, 
addæí
) {

2451 c⁄° 
«me£rvî
 *
£rvî
 = 
ba£
->
£rvî_hód
, *c⁄° 
°¨ãd_©
 = base->server_head;

2452 
«me£rvî
 *
ns
;

2453 
îr
 = 0;

2454 
addrbuf
[128];

2456 
	`ASSERT_LOCKED
(
ba£
);

2457 i‡(
£rvî
) {

2459 i‡(!
	`evutû_sockaddr_cmp
((
sockaddr
*)&
£rvî
->
addªss
,áddress, 1))  3;

2460 
£rvî
 = sîvî->
√xt
;

2461 } 
£rvî
 !
°¨ãd_©
);

2463 i‡(
addæí
 > ()(
ns
->
addªss
)) {

2464 
	`log
(
EVDNS_LOG_DEBUG
, "Addæí %dÅoÿl⁄g.", ()
addæí
);

2468 
ns
 = (
«me£rvî
 *Ë
	`mm_mÆloc
((nameserver));

2469 i‡(!
ns
)  -1;

2471 
	`mem£t
(
ns
, 0, (
«me£rvî
));

2472 
ns
->
ba£
 = base;

2474 
	`evtimî_assign
(&
ns
->
timeout_evít
,Çs->
ba£
->
evít_ba£
, 
«me£rvî_¥od_ˇŒback
,Çs);

2476 
ns
->
sockë
 = 
	`sockë
(
addªss
->
ß_Ámûy
, 
SOCK_DGRAM
, 0);

2477 i‡(
ns
->
sockë
 < 0Ë{ 
îr
 = 1; 
out1
; }

2478 
	`evutû_make_sockë_˛o£⁄exec
(
ns
->
sockë
);

2479 
	`evutû_make_sockë_n⁄blockög
(
ns
->
sockë
);

2481 i‡(
ba£
->
globÆ_outgoög_addæí
 &&

2482 !
	`evutû_sockaddr_is_lo›back
(
addªss
)) {

2483 i‡(
	`böd
(
ns
->
sockë
,

2484 (
sockaddr
*)&
ba£
->
globÆ_outgoög_addªss
,

2485 
ba£
->
globÆ_outgoög_addæí
) < 0) {

2486 
	`log
(
EVDNS_LOG_WARN
,"Couldn't bindÅo outgoingáddress");

2487 
îr
 = 2;

2488 
out2
;

2492 
	`mem˝y
(&
ns
->
addªss
,áddªss, 
addæí
);

2493 
ns
->
addæí
 =áddrlen;

2494 
ns
->
°©e
 = 1;

2495 
	`evít_assign
(&
ns
->
evít
,Çs->
ba£
->
evít_ba£
,Çs->
sockë
, 
EV_READ
 | 
EV_PERSIST
, 
«me£rvî_ªady_ˇŒback
,Çs);

2496 i‡(
	`evít_add
(&
ns
->
evít
, 
NULL
) < 0) {

2497 
îr
 = 2;

2498 
out2
;

2501 
	`log
(
EVDNS_LOG_DEBUG
, "AddedÇameserver %sás %p",

2502 
	`evutû_f‹m©_sockaddr_p‹t
(
addªss
, 
addrbuf
, ◊ddrbuf)), 
ns
);

2505 i‡(!
ba£
->
£rvî_hód
) {

2506 
ns
->
√xt
 =Çs->
¥ev
 =Çs;

2507 
ba£
->
£rvî_hód
 = 
ns
;

2509 
ns
->
√xt
 = 
ba£
->
£rvî_hód
->next;

2510 
ns
->
¥ev
 = 
ba£
->
£rvî_hód
;

2511 
ba£
->
£rvî_hód
->
√xt
 = 
ns
;

2512 
ns
->
√xt
->
¥ev
 =Çs;

2515 
ba£
->
globÆ_good_«me£rvîs
++;

2519 
out2
:

2520 
	`evutû_˛o£sockë
(
ns
->
sockë
);

2521 
out1
:

2522 
	`evít_debug_u«ssign
(&
ns
->
evít
);

2523 
	`mm_‰ì
(
ns
);

2524 
	`log
(
EVDNS_LOG_WARN
, "UnableÅoáddÇameserver %s:Érror %d",

2525 
	`evutû_f‹m©_sockaddr_p‹t
(
addªss
, 
addrbuf
, ◊ddrbuf)), 
îr
);

2526  
îr
;

2527 
	}
}

2531 
	$evdns_ba£_«me£rvî_add
(
evdns_ba£
 *
ba£
, 
addªss
)

2533 
sockaddr_ö
 
sö
;

2534 
ªs
;

2535 
	`mem£t
(&
sö
, 0, (sin));

2536 
sö
.
sö_addr
.
s_addr
 = 
addªss
;

2537 
sö
.
sö_p‹t
 = 
	`ht⁄s
(53);

2538 
sö
.
sö_Ámûy
 = 
AF_INET
;

2539 
	`EVDNS_LOCK
(
ba£
);

2540 
ªs
 = 
	`_evdns_«me£rvî_add_im∂
(
ba£
, (
sockaddr
*)&
sö
, (sin));

2541 
	`EVDNS_UNLOCK
(
ba£
);

2542  
ªs
;

2543 
	}
}

2546 
	$evdns_«me£rvî_add
(
addªss
) {

2547 i‡(!
cuºít_ba£
)

2548 
cuºít_ba£
 = 
	`evdns_ba£_√w
(
NULL
, 0);

2549  
	`evdns_ba£_«me£rvî_add
(
cuºít_ba£
, 
addªss
);

2550 
	}
}

2553 
	$sockaddr_£ç‹t
(
sockaddr
 *
ß
, 
ev_uöt16_t
 
p‹t
)

2555 i‡(
ß
->
ß_Ámûy
 =
AF_INET
) {

2556 ((
sockaddr_ö
 *)
ß
)->
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

2557 } i‡(
ß
->
ß_Ámûy
 =
AF_INET6
) {

2558 ((
sockaddr_ö6
 *)
ß
)->
sö6_p‹t
 = 
	`ht⁄s
(
p‹t
);

2560 
	}
}

2562 
ev_uöt16_t


2563 
	$sockaddr_gëp‹t
(
sockaddr
 *
ß
)

2565 i‡(
ß
->
ß_Ámûy
 =
AF_INET
) {

2566  
	`¡ohs
(((
sockaddr_ö
 *)
ß
)->
sö_p‹t
);

2567 } i‡(
ß
->
ß_Ámûy
 =
AF_INET6
) {

2568  
	`¡ohs
(((
sockaddr_ö6
 *)
ß
)->
sö6_p‹t
);

2572 
	}
}

2576 
	$evdns_ba£_«me£rvî_ù_add
(
evdns_ba£
 *
ba£
, c⁄° *
ù_as_°rög
) {

2577 
sockaddr_°‹age
 
ss
;

2578 
sockaddr
 *
ß
;

2579 
Àn
 = (
ss
);

2580 
ªs
;

2581 i‡(
	`evutû_∑r£_sockaddr_p‹t
(
ù_as_°rög
, (
sockaddr
 *)&
ss
,

2582 &
Àn
)) {

2583 
	`log
(
EVDNS_LOG_WARN
, "UnableÅoÖarseÇameserveráddress %s",

2584 
ù_as_°rög
);

2587 
ß
 = (
sockaddr
 *Ë&
ss
;

2588 i‡(
	`sockaddr_gëp‹t
(
ß
) == 0)

2589 
	`sockaddr_£ç‹t
(
ß
, 53);

2591 
	`EVDNS_LOCK
(
ba£
);

2592 
ªs
 = 
	`_evdns_«me£rvî_add_im∂
(
ba£
, 
ß
, 
Àn
);

2593 
	`EVDNS_UNLOCK
(
ba£
);

2594  
ªs
;

2595 
	}
}

2598 
	$evdns_«me£rvî_ù_add
(c⁄° *
ù_as_°rög
) {

2599 i‡(!
cuºít_ba£
)

2600 
cuºít_ba£
 = 
	`evdns_ba£_√w
(
NULL
, 0);

2601  
	`evdns_ba£_«me£rvî_ù_add
(
cuºít_ba£
, 
ù_as_°rög
);

2602 
	}
}

2605 
	$evdns_ba£_«me£rvî_sockaddr_add
(
evdns_ba£
 *
ba£
,

2606 c⁄° 
sockaddr
 *
ß
, 
ev_sockÀn_t
 
Àn
, 
Êags
)

2608 
ªs
;

2609 
	`EVUTIL_ASSERT
(
ba£
);

2610 
	`EVDNS_LOCK
(
ba£
);

2611 
ªs
 = 
	`_evdns_«me£rvî_add_im∂
(
ba£
, 
ß
, 
Àn
);

2612 
	`EVDNS_UNLOCK
(
ba£
);

2613  
ªs
;

2614 
	}
}

2618 
	$evdns_ªque°_ªmove
(
ªque°
 *
ªq
, ªque° **
hód
)

2620 
	`ASSERT_LOCKED
(
ªq
->
ba£
);

2621 
	`ASSERT_VALID_REQUEST
(
ªq
);

2625 
ªque°
 *
±r
;

2626 
found
 = 0;

2627 
	`EVUTIL_ASSERT
(*
hód
 !
NULL
);

2629 
±r
 = *
hód
;

2631 i‡(
±r
 =
ªq
) {

2632 
found
 = 1;

2635 
±r
 =Öå->
√xt
;

2636 } 
±r
 !*
hód
);

2637 
	`EVUTIL_ASSERT
(
found
);

2639 
	`EVUTIL_ASSERT
(
ªq
->
√xt
);

2643 i‡(
ªq
->
√xt
 ==Ñeq) {

2645 *
hód
 = 
NULL
;

2647 
ªq
->
√xt
->
¥ev
 =Ñeq->prev;

2648 
ªq
->
¥ev
->
√xt
 =Ñeq->next;

2649 i‡(*
hód
 =
ªq
Ë*hód =Ñeq->
√xt
;

2651 
ªq
->
√xt
 =Ñeq->
¥ev
 = 
NULL
;

2652 
	}
}

2656 
	$evdns_ªque°_ö£π
(
ªque°
 *
ªq
, ªque° **
hód
) {

2657 
	`ASSERT_LOCKED
(
ªq
->
ba£
);

2658 
	`ASSERT_VALID_REQUEST
(
ªq
);

2659 i‡(!*
hód
) {

2660 *
hód
 = 
ªq
;

2661 
ªq
->
√xt
 =Ñeq->
¥ev
 =Ñeq;

2665 
ªq
->
¥ev
 = (*
hód
)->prev;

2666 
ªq
->
¥ev
->
√xt
 =Ñeq;

2667 
ªq
->
√xt
 = *
hód
;

2668 (*
hód
)->
¥ev
 = 
ªq
;

2669 
	}
}

2672 
	$°rög_num_dŸs
(c⁄° *
s
) {

2673 
cou¡
 = 0;

2674 (
s
 = 
	`°rchr
(s, '.'))) {

2675 
s
++;

2676 
cou¡
++;

2678  
cou¡
;

2679 
	}
}

2681 
ªque°
 *

2682 
	$ªque°_√w
(
evdns_ba£
 *
ba£
, 
evdns_ªque°
 *
h™dÀ
, 
ty≥
,

2683 c⁄° *
«me
, 
Êags
, 
evdns_ˇŒback_ty≥
 
ˇŒback
,

2684 *
u£r_±r
) {

2686 c⁄° 
issuög_now
 =

2687 (
ba£
->
globÆ_ªque°s_öÊight
 < ba£->
globÆ_max_ªque°s_öÊight
) ? 1 : 0;

2689 c⁄° 
size_t
 
«me_Àn
 = 
	`°æí
(
«me
);

2690 c⁄° 
size_t
 
ªque°_max_Àn
 = 
	`evdns_ªque°_Àn
(
«me_Àn
);

2691 c⁄° 
u16
 
å™s_id
 = 
issuög_now
 ? 
	`å™ß˘i⁄_id_pick
(
ba£
) : 0xffff;

2693 
ªque°
 *c⁄° 
ªq
 =

2694 
	`mm_mÆloc
((
ªque°
Ë+ 
ªque°_max_Àn
);

2695 
æí
;

2696 
«mebuf
[256];

2697 (Ë
Êags
;

2699 
	`ASSERT_LOCKED
(
ba£
);

2701 i‡(!
ªq
Ë 
NULL
;

2703 i‡(
«me_Àn
 >(
«mebuf
)) {

2704 
	`mm_‰ì
(
ªq
);

2705  
NULL
;

2708 
	`mem£t
(
ªq
, 0, (
ªque°
));

2709 
ªq
->
ba£
 = base;

2711 
	`evtimî_assign
(&
ªq
->
timeout_evít
,Ñeq->
ba£
->
evít_ba£
, 
evdns_ªque°_timeout_ˇŒback
,Ñeq);

2713 i‡(
ba£
->
globÆ_øndomize_ˇ£
) {

2714 
i
;

2715 
øndbôs
[((
«mebuf
)+7)/8];

2716 
	`°æ˝y
(
«mebuf
, 
«me
, (namebuf));

2717 
	`evutû_£cuª_∫g_gë_byãs
(
øndbôs
, (
«me_Àn
+7)/8);

2718 
i
 = 0; i < 
«me_Àn
; ++i) {

2719 i‡(
	`EVUTIL_ISALPHA
(
«mebuf
[
i
])) {

2720 i‡((
øndbôs
[
i
 >> 3] & (1<<(i & 7))))

2721 
«mebuf
[
i
] |= 0x20;

2723 
«mebuf
[
i
] &= ~0x20;

2726 
«me
 = 
«mebuf
;

2730 
ªq
->
ªque°
 = ((
u8
 *)Ñeq) + (request);

2732 
ªq
->
ªque°_≠≥nded
 = 1;

2733 
æí
 = 
	`evdns_ªque°_d©a_buûd
(
«me
, 
«me_Àn
, 
å™s_id
,

2734 
ty≥
, 
CLASS_INET
, 
ªq
->
ªque°
, 
ªque°_max_Àn
);

2735 i‡(
æí
 < 0)

2736 
îr1
;

2738 
ªq
->
ªque°_Àn
 = 
æí
;

2739 
ªq
->
å™s_id
 =Årans_id;

2740 
ªq
->
tx_cou¡
 = 0;

2741 
ªq
->
ªque°_ty≥
 = 
ty≥
;

2742 
ªq
->
u£r_poöãr
 = 
u£r_±r
;

2743 
ªq
->
u£r_ˇŒback
 = 
ˇŒback
;

2744 
ªq
->
ns
 = 
issuög_now
 ? 
	`«me£rvî_pick
(
ba£
Ë: 
NULL
;

2745 
ªq
->
√xt
 =Ñeq->
¥ev
 = 
NULL
;

2746 
ªq
->
h™dÀ
 = handle;

2747 i‡(
h™dÀ
) {

2748 
h™dÀ
->
cuºít_ªq
 = 
ªq
;

2749 
h™dÀ
->
ba£
 = base;

2752  
ªq
;

2753 
îr1
:

2754 
	`mm_‰ì
(
ªq
);

2755  
NULL
;

2756 
	}
}

2759 
	$ªque°_submô
(
ªque°
 *c⁄° 
ªq
) {

2760 
evdns_ba£
 *
ba£
 = 
ªq
->base;

2761 
	`ASSERT_LOCKED
(
ba£
);

2762 
	`ASSERT_VALID_REQUEST
(
ªq
);

2763 i‡(
ªq
->
ns
) {

2766 
	`evdns_ªque°_ö£π
(
ªq
, &
	`REQ_HEAD
(
ba£
,Ñeq->
å™s_id
));

2767 
ba£
->
globÆ_ªque°s_öÊight
++;

2768 
	`evdns_ªque°_å™smô
(
ªq
);

2770 
	`evdns_ªque°_ö£π
(
ªq
, &
ba£
->
ªq_waôög_hód
);

2771 
ba£
->
globÆ_ªque°s_waôög
++;

2773 
	}
}

2777 
	$evdns_ˇn˚l_ªque°
(
evdns_ba£
 *
ba£
, 
evdns_ªque°
 *
h™dÀ
)

2779 
ªque°
 *
ªq
;

2781 i‡(!
h™dÀ
->
cuºít_ªq
)

2784 i‡(!
ba£
) {

2786 
ba£
 = 
h™dÀ
->base;

2787 i‡(!
ba£
)

2788 
ba£
 = 
h™dÀ
->
cuºít_ªq
->base;

2791 
	`EVDNS_LOCK
(
ba£
);

2792 i‡(
h™dÀ
->
≥ndög_cb
) {

2793 
	`EVDNS_UNLOCK
(
ba£
);

2797 
ªq
 = 
h™dÀ
->
cuºít_ªq
;

2798 
	`ASSERT_VALID_REQUEST
(
ªq
);

2800 
	`ª∂y_scheduÀ_ˇŒback
(
ªq
, 0, 
DNS_ERR_CANCEL
, 
NULL
);

2801 i‡(
ªq
->
ns
) {

2803 
	`ªque°_föished
(
ªq
, &
	`REQ_HEAD
(
ba£
,Ñeq->
å™s_id
), 1);

2806 
	`ªque°_föished
(
ªq
, &
ba£
->
ªq_waôög_hód
, 1);

2808 
	`EVDNS_UNLOCK
(
ba£
);

2809 
	}
}

2812 
evdns_ªque°
 *

2813 
	$evdns_ba£_ªsﬁve_ùv4
(
evdns_ba£
 *
ba£
, c⁄° *
«me
, 
Êags
,

2814 
evdns_ˇŒback_ty≥
 
ˇŒback
, *
±r
) {

2815 
evdns_ªque°
 *
h™dÀ
;

2816 
ªque°
 *
ªq
;

2817 
	`log
(
EVDNS_LOG_DEBUG
, "Resﬁvêªque°ed f‹ %s", 
«me
);

2818 
h™dÀ
 = 
	`mm_ˇŒoc
(1, (*handle));

2819 i‡(
h™dÀ
 =
NULL
)

2820  
NULL
;

2821 
	`EVDNS_LOCK
(
ba£
);

2822 i‡(
Êags
 & 
DNS_QUERY_NO_SEARCH
) {

2823 
ªq
 =

2824 
	`ªque°_√w
(
ba£
, 
h™dÀ
, 
TYPE_A
, 
«me
, 
Êags
,

2825 
ˇŒback
, 
±r
);

2826 i‡(
ªq
)

2827 
	`ªque°_submô
(
ªq
);

2829 
	`£¨ch_ªque°_√w
(
ba£
, 
h™dÀ
, 
TYPE_A
, 
«me
, 
Êags
,

2830 
ˇŒback
, 
±r
);

2832 i‡(
h™dÀ
->
cuºít_ªq
 =
NULL
) {

2833 
	`mm_‰ì
(
h™dÀ
);

2834 
h™dÀ
 = 
NULL
;

2836 
	`EVDNS_UNLOCK
(
ba£
);

2837  
h™dÀ
;

2838 
	}
}

2840 
	$evdns_ªsﬁve_ùv4
(c⁄° *
«me
, 
Êags
,

2841 
evdns_ˇŒback_ty≥
 
ˇŒback
, *
±r
)

2843  
	`evdns_ba£_ªsﬁve_ùv4
(
cuºít_ba£
, 
«me
, 
Êags
, 
ˇŒback
, 
±r
)

2845 
	}
}

2849 
evdns_ªque°
 *

2850 
	$evdns_ba£_ªsﬁve_ùv6
(
evdns_ba£
 *
ba£
,

2851 c⁄° *
«me
, 
Êags
,

2852 
evdns_ˇŒback_ty≥
 
ˇŒback
, *
±r
)

2854 
evdns_ªque°
 *
h™dÀ
;

2855 
ªque°
 *
ªq
;

2856 
	`log
(
EVDNS_LOG_DEBUG
, "Resﬁvêªque°ed f‹ %s", 
«me
);

2857 
h™dÀ
 = 
	`mm_ˇŒoc
(1, (*handle));

2858 i‡(
h™dÀ
 =
NULL
)

2859  
NULL
;

2860 
	`EVDNS_LOCK
(
ba£
);

2861 i‡(
Êags
 & 
DNS_QUERY_NO_SEARCH
) {

2862 
ªq
 = 
	`ªque°_√w
(
ba£
, 
h™dÀ
, 
TYPE_AAAA
, 
«me
, 
Êags
,

2863 
ˇŒback
, 
±r
);

2864 i‡(
ªq
)

2865 
	`ªque°_submô
(
ªq
);

2867 
	`£¨ch_ªque°_√w
(
ba£
, 
h™dÀ
, 
TYPE_AAAA
, 
«me
, 
Êags
,

2868 
ˇŒback
, 
±r
);

2870 i‡(
h™dÀ
->
cuºít_ªq
 =
NULL
) {

2871 
	`mm_‰ì
(
h™dÀ
);

2872 
h™dÀ
 = 
NULL
;

2874 
	`EVDNS_UNLOCK
(
ba£
);

2875  
h™dÀ
;

2876 
	}
}

2878 
	$evdns_ªsﬁve_ùv6
(c⁄° *
«me
, 
Êags
,

2879 
evdns_ˇŒback_ty≥
 
ˇŒback
, *
±r
) {

2880  
	`evdns_ba£_ªsﬁve_ùv6
(
cuºít_ba£
, 
«me
, 
Êags
, 
ˇŒback
, 
±r
)

2882 
	}
}

2884 
evdns_ªque°
 *

2885 
	$evdns_ba£_ªsﬁve_ªvî£
(
evdns_ba£
 *
ba£
, c⁄° 
ö_addr
 *
ö
, 
Êags
, 
evdns_ˇŒback_ty≥
 
ˇŒback
, *
±r
) {

2886 
buf
[32];

2887 
evdns_ªque°
 *
h™dÀ
;

2888 
ªque°
 *
ªq
;

2889 
u32
 
a
;

2890 
	`EVUTIL_ASSERT
(
ö
);

2891 
a
 = 
	`¡ohl
(
ö
->
s_addr
);

2892 
	`evutû_¢¥ötf
(
buf
, (buf), "%d.%d.%d.%d.in-addr.arpa",

2893 ()(
u8
)((
a
 )&0xff),

2894 ()(
u8
)((
a
>>8 )&0xff),

2895 ()(
u8
)((
a
>>16)&0xff),

2896 ()(
u8
)((
a
>>24)&0xff));

2897 
h™dÀ
 = 
	`mm_ˇŒoc
(1, (*handle));

2898 i‡(
h™dÀ
 =
NULL
)

2899  
NULL
;

2900 
	`log
(
EVDNS_LOG_DEBUG
, "Resﬁvêªque°ed f‹ %†‘evî£)", 
buf
);

2901 
	`EVDNS_LOCK
(
ba£
);

2902 
ªq
 = 
	`ªque°_√w
(
ba£
, 
h™dÀ
, 
TYPE_PTR
, 
buf
, 
Êags
, 
ˇŒback
, 
±r
);

2903 i‡(
ªq
)

2904 
	`ªque°_submô
(
ªq
);

2905 i‡(
h™dÀ
->
cuºít_ªq
 =
NULL
) {

2906 
	`mm_‰ì
(
h™dÀ
);

2907 
h™dÀ
 = 
NULL
;

2909 
	`EVDNS_UNLOCK
(
ba£
);

2910  (
h™dÀ
);

2911 
	}
}

2913 
	$evdns_ªsﬁve_ªvî£
(c⁄° 
ö_addr
 *
ö
, 
Êags
, 
evdns_ˇŒback_ty≥
 
ˇŒback
, *
±r
) {

2914  
	`evdns_ba£_ªsﬁve_ªvî£
(
cuºít_ba£
, 
ö
, 
Êags
, 
ˇŒback
, 
±r
)

2916 
	}
}

2918 
evdns_ªque°
 *

2919 
	$evdns_ba£_ªsﬁve_ªvî£_ùv6
(
evdns_ba£
 *
ba£
, c⁄° 
ö6_addr
 *
ö
, 
Êags
, 
evdns_ˇŒback_ty≥
 
ˇŒback
, *
±r
) {

2921 
buf
[73];

2922 *
˝
;

2923 
evdns_ªque°
 *
h™dÀ
;

2924 
ªque°
 *
ªq
;

2925 
i
;

2926 
	`EVUTIL_ASSERT
(
ö
);

2927 
˝
 = 
buf
;

2928 
i
=15; i >= 0; --i) {

2929 
u8
 
byã
 = 
ö
->
s6_addr
[
i
];

2930 *
˝
++ = "0123456789abcdef"[
byã
 & 0x0f];

2931 *
˝
++ = '.';

2932 *
˝
++ = "0123456789abcdef"[
byã
 >> 4];

2933 *
˝
++ = '.';

2935 
	`EVUTIL_ASSERT
(
˝
 + 
	`°æí
("ù6.¨∑"Ë< 
buf
+(buf));

2936 
	`mem˝y
(
˝
, "ù6.¨∑", 
	`°æí
("ip6.arpa")+1);

2937 
h™dÀ
 = 
	`mm_ˇŒoc
(1, (*handle));

2938 i‡(
h™dÀ
 =
NULL
)

2939  
NULL
;

2940 
	`log
(
EVDNS_LOG_DEBUG
, "Resﬁvêªque°ed f‹ %†‘evî£)", 
buf
);

2941 
	`EVDNS_LOCK
(
ba£
);

2942 
ªq
 = 
	`ªque°_√w
(
ba£
, 
h™dÀ
, 
TYPE_PTR
, 
buf
, 
Êags
, 
ˇŒback
, 
±r
);

2943 i‡(
ªq
)

2944 
	`ªque°_submô
(
ªq
);

2945 i‡(
h™dÀ
->
cuºít_ªq
 =
NULL
) {

2946 
	`mm_‰ì
(
h™dÀ
);

2947 
h™dÀ
 = 
NULL
;

2949 
	`EVDNS_UNLOCK
(
ba£
);

2950  (
h™dÀ
);

2951 
	}
}

2953 
	$evdns_ªsﬁve_ªvî£_ùv6
(c⁄° 
ö6_addr
 *
ö
, 
Êags
, 
evdns_ˇŒback_ty≥
 
ˇŒback
, *
±r
) {

2954  
	`evdns_ba£_ªsﬁve_ªvî£_ùv6
(
cuºít_ba£
, 
ö
, 
Êags
, 
ˇŒback
, 
±r
)

2956 
	}
}

2971 
	s£¨ch_domaö
 {

2972 
	mÀn
;

2973 
£¨ch_domaö
 *
	m√xt
;

2977 
	s£¨ch_°©e
 {

2978 
	mªfcou¡
;

2979 
	mndŸs
;

2980 
	mnum_domaös
;

2981 
£¨ch_domaö
 *
	mhód
;

2985 
	$£¨ch_°©e_de¸ef
(
£¨ch_°©e
 *c⁄° 
°©e
) {

2986 i‡(!
°©e
) ;

2987 
°©e
->
ªfcou¡
--;

2988 i‡(!
°©e
->
ªfcou¡
) {

2989 
£¨ch_domaö
 *
√xt
, *
dom
;

2990 
dom
 = 
°©e
->
hód
; dom; dom = 
√xt
) {

2991 
√xt
 = 
dom
->next;

2992 
	`mm_‰ì
(
dom
);

2994 
	`mm_‰ì
(
°©e
);

2996 
	}
}

2998 
£¨ch_°©e
 *

2999 
	$£¨ch_°©e_√w
() {

3000 
£¨ch_°©e
 *
°©e
 = (£¨ch_°©ê*Ë
	`mm_mÆloc
((search_state));

3001 i‡(!
°©e
Ë 
NULL
;

3002 
	`mem£t
(
°©e
, 0, (
£¨ch_°©e
));

3003 
°©e
->
ªfcou¡
 = 1;

3004 
°©e
->
ndŸs
 = 1;

3006  
°©e
;

3007 
	}
}

3010 
	$£¨ch_po°fix_˛ór
(
evdns_ba£
 *
ba£
) {

3011 
	`£¨ch_°©e_de¸ef
(
ba£
->
globÆ_£¨ch_°©e
);

3013 
ba£
->
globÆ_£¨ch_°©e
 = 
	`£¨ch_°©e_√w
();

3014 
	}
}

3018 
	$evdns_ba£_£¨ch_˛ór
(
evdns_ba£
 *
ba£
)

3020 
	`EVDNS_LOCK
(
ba£
);

3021 
	`£¨ch_po°fix_˛ór
(
ba£
);

3022 
	`EVDNS_UNLOCK
(
ba£
);

3023 
	}
}

3026 
	$evdns_£¨ch_˛ór
() {

3027 
	`evdns_ba£_£¨ch_˛ór
(
cuºít_ba£
);

3028 
	}
}

3031 
	$£¨ch_po°fix_add
(
evdns_ba£
 *
ba£
, c⁄° *
domaö
) {

3032 
size_t
 
domaö_Àn
;

3033 
£¨ch_domaö
 *
sdomaö
;

3034 
domaö
[0] == '.') domain++;

3035 
domaö_Àn
 = 
	`°æí
(
domaö
);

3037 
	`ASSERT_LOCKED
(
ba£
);

3038 i‡(!
ba£
->
globÆ_£¨ch_°©e
Ëba£->globÆ_£¨ch_°©ê
	`£¨ch_°©e_√w
();

3039 i‡(!
ba£
->
globÆ_£¨ch_°©e
) ;

3040 
ba£
->
globÆ_£¨ch_°©e
->
num_domaös
++;

3042 
sdomaö
 = (
£¨ch_domaö
 *Ë
	`mm_mÆloc
((£¨ch_domaöË+ 
domaö_Àn
);

3043 i‡(!
sdomaö
) ;

3044 
	`mem˝y
–((
u8
 *Ë
sdomaö
Ë+ (
£¨ch_domaö
), 
domaö
, 
domaö_Àn
);

3045 
sdomaö
->
√xt
 = 
ba£
->
globÆ_£¨ch_°©e
->
hód
;

3046 
sdomaö
->
Àn
 = (Ë
domaö_Àn
;

3048 
ba£
->
globÆ_£¨ch_°©e
->
hód
 = 
sdomaö
;

3049 
	}
}

3054 
	$£¨ch_ªvî£
(
evdns_ba£
 *
ba£
) {

3055 
£¨ch_domaö
 *
cur
, *
¥ev
 = 
NULL
, *
√xt
;

3056 
	`ASSERT_LOCKED
(
ba£
);

3057 
cur
 = 
ba£
->
globÆ_£¨ch_°©e
->
hód
;

3058 
cur
) {

3059 
√xt
 = 
cur
->next;

3060 
cur
->
√xt
 = 
¥ev
;

3061 
¥ev
 = 
cur
;

3062 
cur
 = 
√xt
;

3065 
ba£
->
globÆ_£¨ch_°©e
->
hód
 = 
¥ev
;

3066 
	}
}

3070 
	$evdns_ba£_£¨ch_add
(
evdns_ba£
 *
ba£
, c⁄° *
domaö
) {

3071 
	`EVDNS_LOCK
(
ba£
);

3072 
	`£¨ch_po°fix_add
(
ba£
, 
domaö
);

3073 
	`EVDNS_UNLOCK
(
ba£
);

3074 
	}
}

3076 
	$evdns_£¨ch_add
(c⁄° *
domaö
) {

3077 
	`evdns_ba£_£¨ch_add
(
cuºít_ba£
, 
domaö
);

3078 
	}
}

3082 
	$evdns_ba£_£¨ch_ndŸs_£t
(
evdns_ba£
 *
ba£
, c⁄° 
ndŸs
) {

3083 
	`EVDNS_LOCK
(
ba£
);

3084 i‡(!
ba£
->
globÆ_£¨ch_°©e
Ëba£->globÆ_£¨ch_°©ê
	`£¨ch_°©e_√w
();

3085 i‡(
ba£
->
globÆ_£¨ch_°©e
)

3086 
ba£
->
globÆ_£¨ch_°©e
->
ndŸs
 =Çdots;

3087 
	`EVDNS_UNLOCK
(
ba£
);

3088 
	}
}

3090 
	$evdns_£¨ch_ndŸs_£t
(c⁄° 
ndŸs
) {

3091 
	`evdns_ba£_£¨ch_ndŸs_£t
(
cuºít_ba£
, 
ndŸs
);

3092 
	}
}

3095 
	$£¨ch_£t_‰om_ho°«me
(
evdns_ba£
 *
ba£
) {

3096 
ho°«me
[
HOST_NAME_MAX
 + 1], *
domaö«me
;

3098 
	`ASSERT_LOCKED
(
ba£
);

3099 
	`£¨ch_po°fix_˛ór
(
ba£
);

3100 i‡(
	`gëho°«me
(
ho°«me
, (hostname))) ;

3101 
domaö«me
 = 
	`°rchr
(
ho°«me
, '.');

3102 i‡(!
domaö«me
) ;

3103 
	`£¨ch_po°fix_add
(
ba£
, 
domaö«me
);

3104 
	}
}

3108 
	$£¨ch_make_√w
(c⁄° 
£¨ch_°©e
 *c⁄° 
°©e
, 
n
, c⁄° *c⁄° 
ba£_«me
) {

3109 c⁄° 
size_t
 
ba£_Àn
 = 
	`°æí
(
ba£_«me
);

3110 c⁄° 
√ed_to_≠≥nd_dŸ
 = 
ba£_«me
[
ba£_Àn
 - 1] == '.' ? 0 : 1;

3111 
£¨ch_domaö
 *
dom
;

3113 
dom
 = 
°©e
->
hód
; dom; dom = dom->
√xt
) {

3114 i‡(!
n
--) {

3117 c⁄° 
u8
 *c⁄° 
po°fix
 = ((u8 *Ë
dom
Ë+ (
£¨ch_domaö
);

3118 c⁄° 
po°fix_Àn
 = 
dom
->
Àn
;

3119 *c⁄° 
√w«me
 = (*Ë
	`mm_mÆloc
(
ba£_Àn
 + 
√ed_to_≠≥nd_dŸ
 + 
po°fix_Àn
 + 1);

3120 i‡(!
√w«me
Ë 
NULL
;

3121 
	`mem˝y
(
√w«me
, 
ba£_«me
, 
ba£_Àn
);

3122 i‡(
√ed_to_≠≥nd_dŸ
Ë
√w«me
[
ba£_Àn
] = '.';

3123 
	`mem˝y
(
√w«me
 + 
ba£_Àn
 + 
√ed_to_≠≥nd_dŸ
, 
po°fix
, 
po°fix_Àn
);

3124 
√w«me
[
ba£_Àn
 + 
√ed_to_≠≥nd_dŸ
 + 
po°fix_Àn
] = 0;

3125  
√w«me
;

3130 
	`EVUTIL_ASSERT
(0);

3131  
NULL
;

3132 
	}
}

3134 
ªque°
 *

3135 
	$£¨ch_ªque°_√w
(
evdns_ba£
 *
ba£
, 
evdns_ªque°
 *
h™dÀ
,

3136 
ty≥
, c⁄° *c⁄° 
«me
, 
Êags
,

3137 
evdns_ˇŒback_ty≥
 
u£r_ˇŒback
, *
u£r_¨g
) {

3138 
	`ASSERT_LOCKED
(
ba£
);

3139 
	`EVUTIL_ASSERT
(
ty≥
 =
TYPE_A
 ||Åy≥ =
TYPE_AAAA
);

3140 
	`EVUTIL_ASSERT
(
h™dÀ
->
cuºít_ªq
 =
NULL
);

3141 i‡–((
Êags
 & 
DNS_QUERY_NO_SEARCH
) == 0) &&

3142 
ba£
->
globÆ_£¨ch_°©e
 &&

3143 
ba£
->
globÆ_£¨ch_°©e
->
num_domaös
) {

3145 
ªque°
 *
ªq
;

3146 i‡(
	`°rög_num_dŸs
(
«me
Ë>
ba£
->
globÆ_£¨ch_°©e
->
ndŸs
) {

3147 
ªq
 = 
	`ªque°_√w
(
ba£
, 
h™dÀ
, 
ty≥
, 
«me
, 
Êags
, 
u£r_ˇŒback
, 
u£r_¨g
);

3148 i‡(!
ªq
Ë 
NULL
;

3149 
h™dÀ
->
£¨ch_ödex
 = -1;

3151 *c⁄° 
√w_«me
 = 
	`£¨ch_make_√w
(
ba£
->
globÆ_£¨ch_°©e
, 0, 
«me
);

3152 i‡(!
√w_«me
Ë 
NULL
;

3153 
ªq
 = 
	`ªque°_√w
(
ba£
, 
h™dÀ
, 
ty≥
, 
√w_«me
, 
Êags
, 
u£r_ˇŒback
, 
u£r_¨g
);

3154 
	`mm_‰ì
(
√w_«me
);

3155 i‡(!
ªq
Ë 
NULL
;

3156 
h™dÀ
->
£¨ch_ödex
 = 0;

3158 
	`EVUTIL_ASSERT
(
h™dÀ
->
£¨ch_‹ig«me
 =
NULL
);

3159 
h™dÀ
->
£¨ch_‹ig«me
 = 
	`mm_°rdup
(
«me
);

3160 i‡(
h™dÀ
->
£¨ch_‹ig«me
 =
NULL
) {

3162 i‡(
ªq
)

3163 
	`mm_‰ì
(
ªq
);

3164  
NULL
;

3166 
h™dÀ
->
£¨ch_°©e
 = 
ba£
->
globÆ_£¨ch_°©e
;

3167 
h™dÀ
->
£¨ch_Êags
 = 
Êags
;

3168 
ba£
->
globÆ_£¨ch_°©e
->
ªfcou¡
++;

3169 
	`ªque°_submô
(
ªq
);

3170  
ªq
;

3172 
ªque°
 *c⁄° 
ªq
 = 
	`ªque°_√w
(
ba£
, 
h™dÀ
, 
ty≥
, 
«me
, 
Êags
, 
u£r_ˇŒback
, 
u£r_¨g
);

3173 i‡(!
ªq
Ë 
NULL
;

3174 
	`ªque°_submô
(
ªq
);

3175  
ªq
;

3177 
	}
}

3185 
	$£¨ch_åy_√xt
(
evdns_ªque°
 *c⁄° 
h™dÀ
) {

3186 
ªque°
 *
ªq
 = 
h™dÀ
->
cuºít_ªq
;

3187 
evdns_ba£
 *
ba£
 = 
ªq
->base;

3188 
ªque°
 *
√wªq
;

3189 
	`ASSERT_LOCKED
(
ba£
);

3190 i‡(
h™dÀ
->
£¨ch_°©e
) {

3192 *
√w_«me
;

3193 
h™dÀ
->
£¨ch_ödex
++;

3194 i‡(
h™dÀ
->
£¨ch_ödex
 >h™dÀ->
£¨ch_°©e
->
num_domaös
) {

3197 i‡(
	`°rög_num_dŸs
(
h™dÀ
->
£¨ch_‹ig«me
Ë< h™dÀ->
£¨ch_°©e
->
ndŸs
) {

3199 
√wªq
 = 
	`ªque°_√w
(
ba£
, 
NULL
, 
ªq
->
ªque°_ty≥
, 
h™dÀ
->
£¨ch_‹ig«me
, h™dÀ->
£¨ch_Êags
,Ñeq->
u£r_ˇŒback
,Ñeq->
u£r_poöãr
);

3200 
	`log
(
EVDNS_LOG_DEBUG
, "Sórch:ÅryögÑaw quîy %s", 
h™dÀ
->
£¨ch_‹ig«me
);

3201 i‡(
√wªq
) {

3202 
	`£¨ch_ªque°_föished
(
h™dÀ
);

3203 
submô_√xt
;

3209 
√w_«me
 = 
	`£¨ch_make_√w
(
h™dÀ
->
£¨ch_°©e
, h™dÀ->
£¨ch_ödex
, h™dÀ->
£¨ch_‹ig«me
);

3210 i‡(!
√w_«me
)  1;

3211 
	`log
(
EVDNS_LOG_DEBUG
, "Sórch:ÇowÅryög %†(%d)", 
√w_«me
, 
h™dÀ
->
£¨ch_ödex
);

3212 
√wªq
 = 
	`ªque°_√w
(
ba£
, 
NULL
, 
ªq
->
ªque°_ty≥
, 
√w_«me
, 
h™dÀ
->
£¨ch_Êags
,Ñeq->
u£r_ˇŒback
,Ñeq->
u£r_poöãr
);

3213 
	`mm_‰ì
(
√w_«me
);

3214 i‡(!
√wªq
)  1;

3215 
submô_√xt
;

3219 
submô_√xt
:

3220 
	`ªque°_föished
(
ªq
, &
	`REQ_HEAD
‘eq->
ba£
,Ñeq->
å™s_id
), 0);

3221 
h™dÀ
->
cuºít_ªq
 = 
√wªq
;

3222 
√wªq
->
h™dÀ
 = handle;

3223 
	`ªque°_submô
(
√wªq
);

3225 
	}
}

3228 
	$£¨ch_ªque°_föished
(
evdns_ªque°
 *c⁄° 
h™dÀ
) {

3229 
	`ASSERT_LOCKED
(
h™dÀ
->
cuºít_ªq
->
ba£
);

3230 i‡(
h™dÀ
->
£¨ch_°©e
) {

3231 
	`£¨ch_°©e_de¸ef
(
h™dÀ
->
£¨ch_°©e
);

3232 
h™dÀ
->
£¨ch_°©e
 = 
NULL
;

3234 i‡(
h™dÀ
->
£¨ch_‹ig«me
) {

3235 
	`mm_‰ì
(
h™dÀ
->
£¨ch_‹ig«me
);

3236 
h™dÀ
->
£¨ch_‹ig«me
 = 
NULL
;

3238 
	}
}

3244 
	$evdns_ªsﬁv_£t_deÁu…s
(
evdns_ba£
 *
ba£
, 
Êags
) {

3246 
	`ASSERT_LOCKED
(
ba£
);

3247 i‡(
Êags
 & 
DNS_OPTION_SEARCH
Ë
	`£¨ch_£t_‰om_ho°«me
(
ba£
);

3248 i‡(
Êags
 & 
DNS_OPTION_NAMESERVERS
Ë
	`evdns_ba£_«me£rvî_ù_add
(
ba£
,"127.0.0.1");

3249 
	}
}

3251 #i‚de‡
_EVENT_HAVE_STRTOK_R


3253 
	$°πok_r
(*
s
, c⁄° *
dñim
, **
°©e
) {

3254 *
˝
, *
°¨t
;

3255 
°¨t
 = 
˝
 = 
s
 ? s : *
°©e
;

3256 i‡(!
˝
)

3257  
NULL
;

3258 *
˝
 && !
	`°rchr
(
dñim
, *cp))

3259 ++
˝
;

3260 i‡(!*
˝
) {

3261 i‡(
˝
 =
°¨t
)

3262  
NULL
;

3263 *
°©e
 = 
NULL
;

3264  
°¨t
;

3266 *
˝
++ = '\0';

3267 *
°©e
 = 
˝
;

3268  
°¨t
;

3270 
	}
}

3275 
	$°πoöt
(c⁄° *c⁄° 
°r
)

3277 *
íd±r
;

3278 c⁄° 
r
 = 
	`°πﬁ
(
°r
, &
íd±r
, 10);

3279 i‡(*
íd±r
)  -1;

3280  
r
;

3281 
	}
}

3285 
	$°πŸimevÆ
(c⁄° *c⁄° 
°r
, 
timevÆ
 *
out
)

3287 
d
;

3288 *
íd±r
;

3289 
d
 = 
	`°πod
(
°r
, &
íd±r
);

3290 i‡(*
íd±r
)  -1;

3291 i‡(
d
 < 0)  -1;

3292 
out
->
tv_£c
 = (Ë
d
;

3293 
out
->
tv_u£c
 = (Ë((
d
 - () d)*1000000);

3294 i‡(
out
->
tv_£c
 =0 && out->
tv_u£c
 < 1000)

3297 
	}
}

3301 
	$°πoöt_˛ù≥d
(c⁄° *c⁄° 
°r
, 
mö
, 
max
)

3303 
r
 = 
	`°πoöt
(
°r
);

3304 i‡(
r
 == -1)

3305  
r
;

3306 i‡(
r
<
mö
)

3307  
mö
;

3308 i‡(
r
>
max
)

3309  
max
;

3311  
r
;

3312 
	}
}

3315 
	$evdns_ba£_£t_max_ªque°s_öÊight
(
evdns_ba£
 *
ba£
, 
maxöÊight
)

3317 
ﬁd_n_hóds
 = 
ba£
->
n_ªq_hóds
, 
n_hóds
;

3318 
ªque°
 **
ﬁd_hóds
 = 
ba£
->
ªq_hóds
, **
√w_hóds
, *
ªq
;

3319 
i
;

3321 
	`ASSERT_LOCKED
(
ba£
);

3322 i‡(
maxöÊight
 < 1)

3323 
maxöÊight
 = 1;

3324 
n_hóds
 = (
maxöÊight
+4) / 5;

3325 
	`EVUTIL_ASSERT
(
n_hóds
 > 0);

3326 
√w_hóds
 = 
	`mm_ˇŒoc
(
n_hóds
, (
ªque°
*));

3327 i‡(!
√w_hóds
)

3329 i‡(
ﬁd_hóds
) {

3330 
i
 = 0; i < 
ﬁd_n_hóds
; ++i) {

3331 
ﬁd_hóds
[
i
]) {

3332 
ªq
 = 
ﬁd_hóds
[
i
];

3333 
	`evdns_ªque°_ªmove
(
ªq
, &
ﬁd_hóds
[
i
]);

3334 
	`evdns_ªque°_ö£π
(
ªq
, &
√w_hóds
[ªq->
å™s_id
 % 
n_hóds
]);

3337 
	`mm_‰ì
(
ﬁd_hóds
);

3339 
ba£
->
ªq_hóds
 = 
√w_hóds
;

3340 
ba£
->
n_ªq_hóds
 = 
n_hóds
;

3341 
ba£
->
globÆ_max_ªque°s_öÊight
 = 
maxöÊight
;

3343 
	}
}

3347 
	$evdns_ba£_£t_›ti⁄
(
evdns_ba£
 *
ba£
,

3348 c⁄° *
›ti⁄
, c⁄° *
vÆ
)

3350 
ªs
;

3351 
	`EVDNS_LOCK
(
ba£
);

3352 
ªs
 = 
	`evdns_ba£_£t_›ti⁄_im∂
(
ba£
, 
›ti⁄
, 
vÆ
, 
DNS_OPTIONS_ALL
);

3353 
	`EVDNS_UNLOCK
(
ba£
);

3354  
ªs
;

3355 
	}
}

3357 
ölöe
 

3358 
	$°r_m©ches_›ti⁄
(c⁄° *
s1
, c⁄° *
›ti⁄«me
)

3363 
size_t
 
›éí
 = 
	`°æí
(
›ti⁄«me
);

3364 
size_t
 
¶í
 = 
	`°æí
(
s1
);

3365 i‡(
¶í
 =
›éí
 || slen == optlen - 1)

3366  !
	`°∫cmp
(
s1
, 
›ti⁄«me
, 
¶í
);

3367 i‡(
¶í
 > 
›éí
)

3368  !
	`°∫cmp
(
s1
, 
›ti⁄«me
, 
›éí
);

3371 
	}
}

3374 
	$evdns_ba£_£t_›ti⁄_im∂
(
evdns_ba£
 *
ba£
,

3375 c⁄° *
›ti⁄
, c⁄° *
vÆ
, 
Êags
)

3377 
	`ASSERT_LOCKED
(
ba£
);

3378 i‡(
	`°r_m©ches_›ti⁄
(
›ti⁄
, "ndots:")) {

3379 c⁄° 
ndŸs
 = 
	`°πoöt
(
vÆ
);

3380 i‡(
ndŸs
 == -1)  -1;

3381 i‡(!(
Êags
 & 
DNS_OPTION_SEARCH
))  0;

3382 
	`log
(
EVDNS_LOG_DEBUG
, "SëtögÇdŸ†tÿ%d", 
ndŸs
);

3383 i‡(!
ba£
->
globÆ_£¨ch_°©e
Ëba£->globÆ_£¨ch_°©ê
	`£¨ch_°©e_√w
();

3384 i‡(!
ba£
->
globÆ_£¨ch_°©e
)  -1;

3385 
ba£
->
globÆ_£¨ch_°©e
->
ndŸs
 =Çdots;

3386 } i‡(
	`°r_m©ches_›ti⁄
(
›ti⁄
, "timeout:")) {

3387 
timevÆ
 
tv
;

3388 i‡(
	`°πŸimevÆ
(
vÆ
, &
tv
) == -1)  -1;

3389 i‡(!(
Êags
 & 
DNS_OPTION_MISC
))  0;

3390 
	`log
(
EVDNS_LOG_DEBUG
, "SëtögÅimeouàtÿ%s", 
vÆ
);

3391 
	`mem˝y
(&
ba£
->
globÆ_timeout
, &
tv
, (
timevÆ
));

3392 } i‡(
	`°r_m©ches_›ti⁄
(
›ti⁄
, "getaddrinfo-allow-skew:")) {

3393 
timevÆ
 
tv
;

3394 i‡(
	`°πŸimevÆ
(
vÆ
, &
tv
) == -1)  -1;

3395 i‡(!(
Êags
 & 
DNS_OPTION_MISC
))  0;

3396 
	`log
(
EVDNS_LOG_DEBUG
, "Setting getaddrinfo-allow-skewÅo %s",

3397 
vÆ
);

3398 
	`mem˝y
(&
ba£
->
globÆ_gëaddröfo_Ælow_skew
, &
tv
,

3399 (
timevÆ
));

3400 } i‡(
	`°r_m©ches_›ti⁄
(
›ti⁄
, "max-timeouts:")) {

3401 c⁄° 
maxtimeout
 = 
	`°πoöt_˛ù≥d
(
vÆ
, 1, 255);

3402 i‡(
maxtimeout
 == -1)  -1;

3403 i‡(!(
Êags
 & 
DNS_OPTION_MISC
))  0;

3404 
	`log
(
EVDNS_LOG_DEBUG
, "Setting maximumállowedÅimeoutsÅo %d",

3405 
maxtimeout
);

3406 
ba£
->
globÆ_max_«me£rvî_timeout
 = 
maxtimeout
;

3407 } i‡(
	`°r_m©ches_›ti⁄
(
›ti⁄
, "max-inflight:")) {

3408 c⁄° 
maxöÊight
 = 
	`°πoöt_˛ù≥d
(
vÆ
, 1, 65000);

3409 i‡(
maxöÊight
 == -1)  -1;

3410 i‡(!(
Êags
 & 
DNS_OPTION_MISC
))  0;

3411 
	`log
(
EVDNS_LOG_DEBUG
, "Setting maximum inflightÑequestsÅo %d",

3412 
maxöÊight
);

3413 
	`evdns_ba£_£t_max_ªque°s_öÊight
(
ba£
, 
maxöÊight
);

3414 } i‡(
	`°r_m©ches_›ti⁄
(
›ti⁄
, "attempts:")) {

3415 
ªåõs
 = 
	`°πoöt
(
vÆ
);

3416 i‡(
ªåõs
 == -1)  -1;

3417 i‡(
ªåõs
 > 255)Ñetries = 255;

3418 i‡(!(
Êags
 & 
DNS_OPTION_MISC
))  0;

3419 
	`log
(
EVDNS_LOG_DEBUG
, "SëtögÑërõ†tÿ%d", 
ªåõs
);

3420 
ba£
->
globÆ_max_ªå™smôs
 = 
ªåõs
;

3421 } i‡(
	`°r_m©ches_›ti⁄
(
›ti⁄
, "randomize-case:")) {

3422 
øndˇ£
 = 
	`°πoöt
(
vÆ
);

3423 i‡(!(
Êags
 & 
DNS_OPTION_MISC
))  0;

3424 
ba£
->
globÆ_øndomize_ˇ£
 = 
øndˇ£
;

3425 } i‡(
	`°r_m©ches_›ti⁄
(
›ti⁄
, "bind-to:")) {

3428 
Àn
 = (
ba£
->
globÆ_outgoög_addªss
);

3429 i‡(!(
Êags
 & 
DNS_OPTION_NAMESERVERS
))  0;

3430 i‡(
	`evutû_∑r£_sockaddr_p‹t
(
vÆ
,

3431 (
sockaddr
*)&
ba£
->
globÆ_outgoög_addªss
, &
Àn
))

3433 
ba£
->
globÆ_outgoög_addæí
 = 
Àn
;

3434 } i‡(
	`°r_m©ches_›ti⁄
(
›ti⁄
, "initial-probe-timeout:")) {

3435 
timevÆ
 
tv
;

3436 i‡(
	`°πŸimevÆ
(
vÆ
, &
tv
) == -1)  -1;

3437 i‡(
tv
.
tv_£c
 > 3600)

3438 
tv
.
tv_£c
 = 3600;

3439 i‡(!(
Êags
 & 
DNS_OPTION_MISC
))  0;

3440 
	`log
(
EVDNS_LOG_DEBUG
, "Setting initialÖrobeÅimeoutÅo %s",

3441 
vÆ
);

3442 
	`mem˝y
(&
ba£
->
globÆ_«me£rvî_¥obe_öôül_timeout
, &
tv
,

3443 (
tv
));

3446 
	}
}

3449 
	$evdns_£t_›ti⁄
(c⁄° *
›ti⁄
, c⁄° *
vÆ
, 
Êags
)

3451 i‡(!
cuºít_ba£
)

3452 
cuºít_ba£
 = 
	`evdns_ba£_√w
(
NULL
, 0);

3453  
	`evdns_ba£_£t_›ti⁄
(
cuºít_ba£
, 
›ti⁄
, 
vÆ
);

3454 
	}
}

3457 
	$ªsﬁv_c⁄f_∑r£_löe
(
evdns_ba£
 *
ba£
, *c⁄° 
°¨t
, 
Êags
) {

3458 *
°πok_°©e
;

3459 c⁄° *c⁄° 
dñims
 = " \t";

3460 
	#NEXT_TOKEN
 
	`°πok_r
(
NULL
, 
dñims
, &
°πok_°©e
)

	)

3463 *c⁄° 
fú°_tokí
 = 
	`°πok_r
(
°¨t
, 
dñims
, &
°πok_°©e
);

3464 
	`ASSERT_LOCKED
(
ba£
);

3465 i‡(!
fú°_tokí
) ;

3467 i‡(!
	`°rcmp
(
fú°_tokí
, "«me£rvî"Ë&& (
Êags
 & 
DNS_OPTION_NAMESERVERS
)) {

3468 c⁄° *c⁄° 
«me£rvî
 = 
NEXT_TOKEN
;

3470 i‡(
«me£rvî
)

3471 
	`evdns_ba£_«me£rvî_ù_add
(
ba£
, 
«me£rvî
);

3472 } i‡(!
	`°rcmp
(
fú°_tokí
, "domaö"Ë&& (
Êags
 & 
DNS_OPTION_SEARCH
)) {

3473 c⁄° *c⁄° 
domaö
 = 
NEXT_TOKEN
;

3474 i‡(
domaö
) {

3475 
	`£¨ch_po°fix_˛ór
(
ba£
);

3476 
	`£¨ch_po°fix_add
(
ba£
, 
domaö
);

3478 } i‡(!
	`°rcmp
(
fú°_tokí
, "£¨ch"Ë&& (
Êags
 & 
DNS_OPTION_SEARCH
)) {

3479 c⁄° *
domaö
;

3480 
	`£¨ch_po°fix_˛ór
(
ba£
);

3482 (
domaö
 = 
NEXT_TOKEN
)) {

3483 
	`£¨ch_po°fix_add
(
ba£
, 
domaö
);

3485 
	`£¨ch_ªvî£
(
ba£
);

3486 } i‡(!
	`°rcmp
(
fú°_tokí
, "options")) {

3487 c⁄° *
›ti⁄
;

3488 (
›ti⁄
 = 
NEXT_TOKEN
)) {

3489 c⁄° *
vÆ
 = 
	`°rchr
(
›ti⁄
, ':');

3490 
	`evdns_ba£_£t_›ti⁄_im∂
(
ba£
, 
›ti⁄
, 
vÆ
 ? vÆ+1 : "", 
Êags
);

3493 #unde‡
NEXT_TOKEN


3494 
	}
}

3505 
	$evdns_ba£_ªsﬁv_c⁄f_∑r£
(
evdns_ba£
 *
ba£
, 
Êags
, c⁄° *c⁄° 
fûíame
) {

3506 
ªs
;

3507 
	`EVDNS_LOCK
(
ba£
);

3508 
ªs
 = 
	`evdns_ba£_ªsﬁv_c⁄f_∑r£_im∂
(
ba£
, 
Êags
, 
fûíame
);

3509 
	`EVDNS_UNLOCK
(
ba£
);

3510  
ªs
;

3511 
	}
}

3514 
	$evdns_gë_deÁu…_ho°s_fûíame
()

3516 #ifde‡
WIN32


3522 
∑th
[
MAX_PATH
+1];

3523 c⁄° 
ho°fûe
[] = "\\drivers\\etc\\hosts";

3524 *
∑th_out
;

3525 
size_t
 
Àn_out
;

3527 i‡(! 
	`SHGëS≥cülFﬁdîP©hA
(
NULL
, 
∑th
, 
CSIDL_SYSTEM
, 0))

3528  
NULL
;

3529 
Àn_out
 = 
	`°æí
(
∑th
)+°æí(
ho°fûe
);

3530 
∑th_out
 = 
	`mm_mÆloc
(
Àn_out
+1);

3531 
	`evutû_¢¥ötf
(
∑th_out
, 
Àn_out
, "%s%s", 
∑th
, 
ho°fûe
);

3532  
∑th_out
;

3534  
	`mm_°rdup
("/etc/hosts");

3536 
	}
}

3539 
	$evdns_ba£_ªsﬁv_c⁄f_∑r£_im∂
(
evdns_ba£
 *
ba£
, 
Êags
, c⁄° *c⁄° 
fûíame
) {

3540 
size_t
 
n
;

3541 *
ªsﬁv
;

3542 *
°¨t
;

3543 
îr
 = 0;

3545 
	`log
(
EVDNS_LOG_DEBUG
, "P¨sögÑesﬁv.c⁄‡fûê%s", 
fûíame
);

3547 i‡(
Êags
 & 
DNS_OPTION_HOSTSFILE
) {

3548 *
‚ame
 = 
	`evdns_gë_deÁu…_ho°s_fûíame
();

3549 
	`evdns_ba£_lﬂd_ho°s
(
ba£
, 
‚ame
);

3550 i‡(
‚ame
)

3551 
	`mm_‰ì
(
‚ame
);

3554 i‡((
îr
 = 
	`evutû_ªad_fûe
(
fûíame
, &
ªsﬁv
, &
n
, 0)) < 0) {

3555 i‡(
îr
 == -1) {

3557 
	`evdns_ªsﬁv_£t_deÁu…s
(
ba£
, 
Êags
);

3564 
°¨t
 = 
ªsﬁv
;

3566 *c⁄° 
√wlöe
 = 
	`°rchr
(
°¨t
, '\n');

3567 i‡(!
√wlöe
) {

3568 
	`ªsﬁv_c⁄f_∑r£_löe
(
ba£
, 
°¨t
, 
Êags
);

3571 *
√wlöe
 = 0;

3572 
	`ªsﬁv_c⁄f_∑r£_löe
(
ba£
, 
°¨t
, 
Êags
);

3573 
°¨t
 = 
√wlöe
 + 1;

3577 i‡(!
ba£
->
£rvî_hód
 && (
Êags
 & 
DNS_OPTION_NAMESERVERS
)) {

3579 
	`evdns_ba£_«me£rvî_ù_add
(
ba£
, "127.0.0.1");

3580 
îr
 = 6;

3582 i‡(
Êags
 & 
DNS_OPTION_SEARCH
 && (!
ba£
->
globÆ_£¨ch_°©e
 || ba£->globÆ_£¨ch_°©e->
num_domaös
 == 0)) {

3583 
	`£¨ch_£t_‰om_ho°«me
(
ba£
);

3586 
	`mm_‰ì
(
ªsﬁv
);

3587  
îr
;

3588 
	}
}

3591 
	$evdns_ªsﬁv_c⁄f_∑r£
(
Êags
, c⁄° *c⁄° 
fûíame
) {

3592 i‡(!
cuºít_ba£
)

3593 
cuºít_ba£
 = 
	`evdns_ba£_√w
(
NULL
, 0);

3594  
	`evdns_ba£_ªsﬁv_c⁄f_∑r£
(
cuºít_ba£
, 
Êags
, 
fûíame
);

3595 
	}
}

3598 #ifde‡
WIN32


3601 
	$evdns_«me£rvî_ù_add_löe
(
evdns_ba£
 *
ba£
, c⁄° *
ùs
) {

3602 c⁄° *
addr
;

3603 *
buf
;

3604 
r
;

3605 
	`ASSERT_LOCKED
(
ba£
);

3606 *
ùs
) {

3607 
	`is•a˚
(*
ùs
) || *ips == ',' || *ips == '\t')

3608 ++
ùs
;

3609 
addr
 = 
ùs
;

3610 
	`isdigô
(*
ùs
) || *ips == '.' || *ips == ':' ||

3611 *
ùs
=='[' || *ips==']')

3612 ++
ùs
;

3613 
buf
 = 
	`mm_mÆloc
(
ùs
-
addr
+1);

3614 i‡(!
buf
)  4;

3615 
	`mem˝y
(
buf
, 
addr
, 
ùs
-addr);

3616 
buf
[
ùs
-
addr
] = '\0';

3617 
r
 = 
	`evdns_ba£_«me£rvî_ù_add
(
ba£
, 
buf
);

3618 
	`mm_‰ì
(
buf
);

3619 i‡(
r
) Ñ;

3622 
	}
}

3624 
	$DWORD
(
	tWINAPI
 *
	tGëNëw‹kP¨ams_‚_t
)(
	tFIXED_INFO
 *, 
	tDWORD
*);

3629 
	$lﬂd_«me£rvîs_wôh_gë√tw‹k∑øms
(
evdns_ba£
 *
ba£
)

3632 
FIXED_INFO
 *
fixed
;

3633 
HMODULE
 
h™dÀ
 = 0;

3634 
ULONG
 
size
 = (
FIXED_INFO
);

3635 *
buf
 = 
NULL
;

3636 
°©us
 = 0, 
r
, 
added_™y
;

3637 
IP_ADDR_STRING
 *
ns
;

3638 
GëNëw‹kP¨ams_‚_t
 
‚
;

3640 
	`ASSERT_LOCKED
(
ba£
);

3641 i‡(!(
h™dÀ
 = 
	`evutû_lﬂd_wödows_sy°em_libøry
(

3642 
	`TEXT
("iphlpapi.dll")))) {

3643 
	`log
(
EVDNS_LOG_WARN
, "CouldÇot open iphlpapi.dll");

3644 
°©us
 = -1;

3645 
d⁄e
;

3647 i‡(!(
‚
 = (
GëNëw‹kP¨ams_‚_t
Ë
	`GëProcAddªss
(
h™dÀ
, "GetNetworkParams"))) {

3648 
	`log
(
EVDNS_LOG_WARN
, "CouldÇot getáddress of function.");

3649 
°©us
 = -1;

3650 
d⁄e
;

3653 
buf
 = 
	`mm_mÆloc
(
size
);

3654 i‡(!
buf
Ë{ 
°©us
 = 4; 
d⁄e
; }

3655 
fixed
 = 
buf
;

3656 
r
 = 
	`‚
(
fixed
, &
size
);

3657 i‡(
r
 !
ERROR_SUCCESS
 &&Ñ !
ERROR_BUFFER_OVERFLOW
) {

3658 
°©us
 = -1;

3659 
d⁄e
;

3661 i‡(
r
 !
ERROR_SUCCESS
) {

3662 
	`mm_‰ì
(
buf
);

3663 
buf
 = 
	`mm_mÆloc
(
size
);

3664 i‡(!
buf
Ë{ 
°©us
 = 4; 
d⁄e
; }

3665 
fixed
 = 
buf
;

3666 
r
 = 
	`‚
(
fixed
, &
size
);

3667 i‡(
r
 !
ERROR_SUCCESS
) {

3668 
	`log
(
EVDNS_LOG_DEBUG
, "fn() failed.");

3669 
°©us
 = -1;

3670 
d⁄e
;

3674 
	`EVUTIL_ASSERT
(
fixed
);

3675 
added_™y
 = 0;

3676 
ns
 = &(
fixed
->
DnsSîvîLi°
);

3677 
ns
) {

3678 
r
 = 
	`evdns_«me£rvî_ù_add_löe
(
ba£
, 
ns
->
IpAddªss
.
Såög
);

3679 i‡(
r
) {

3680 
	`log
(
EVDNS_LOG_DEBUG
,"CouldÇotáddÇameserver %sÅoÜist,error: %d",

3681 (
ns
->
IpAddªss
.
Såög
),()
	`GëLa°Eº‹
());

3682 
°©us
 = 
r
;

3684 ++
added_™y
;

3685 
	`log
(
EVDNS_LOG_DEBUG
,"Suc˚ssfuŒyádded %†a†«me£rvî",
ns
->
IpAddªss
.
Såög
);

3688 
ns
 =Çs->
Next
;

3691 i‡(!
added_™y
) {

3692 
	`log
(
EVDNS_LOG_DEBUG
, "NoÇameserversádded.");

3693 i‡(
°©us
 == 0)

3694 
°©us
 = -1;

3696 
°©us
 = 0;

3699 
d⁄e
:

3700 i‡(
buf
)

3701 
	`mm_‰ì
(
buf
);

3702 i‡(
h™dÀ
)

3703 
	`FªeLibøry
(
h™dÀ
);

3704  
°©us
;

3705 
	}
}

3708 
	$c⁄fig_«me£rvî_‰om_ªg_key
(
evdns_ba£
 *
ba£
, 
HKEY
 
key
, c⁄° 
TCHAR
 *
subkey
)

3710 *
buf
;

3711 
DWORD
 
bufsz
 = 0, 
ty≥
 = 0;

3712 
°©us
 = 0;

3714 
	`ASSERT_LOCKED
(
ba£
);

3715 i‡(
	`RegQuîyVÆueEx
(
key
, 
subkey
, 0, &
ty≥
, 
NULL
, &
bufsz
)

3716 !
ERROR_MORE_DATA
)

3718 i‡(!(
buf
 = 
	`mm_mÆloc
(
bufsz
)))

3721 i‡(
	`RegQuîyVÆueEx
(
key
, 
subkey
, 0, &
ty≥
, (
LPBYTE
)
buf
, &
bufsz
)

3722 =
ERROR_SUCCESS
 && 
bufsz
 > 1) {

3723 
°©us
 = 
	`evdns_«me£rvî_ù_add_löe
(
ba£
,
buf
);

3726 
	`mm_‰ì
(
buf
);

3727  
°©us
;

3728 
	}
}

3730 
	#SERVICES_KEY
 
	`TEXT
("Sy°em\\CuºítC⁄åﬁSë\\Sîvi˚s\\")

	)

3731 
	#WIN_NS_9X_KEY
 
SERVICES_KEY
 
	`TEXT
("VxD\\MSTCP")

	)

3732 
	#WIN_NS_NT_KEY
 
SERVICES_KEY
 
	`TEXT
("T˝ù\\P¨amëîs")

	)

3735 
	$lﬂd_«me£rvîs_‰om_ªgi°ry
(
evdns_ba£
 *
ba£
)

3737 
found
 = 0;

3738 
r
;

3739 
	#TRY
(
k
, 
«me
) \

3740 i‡(!
found
 && 
	`c⁄fig_«me£rvî_‰om_ªg_key
(
ba£
,
k
,
	`TEXT
(
«me
)) == 0) { \

3741 
	`log
(
EVDNS_LOG_DEBUG
,"FoundÇame£rvî†ö %s/%s",#k,
«me
); \

3742 
found
 = 1; \

3743 } i‡(!
found
) { \

3744 
	`log
(
EVDNS_LOG_DEBUG
,"Didn't findÇameservers in %s/%s", \

3746 }

	)

3748 
	`ASSERT_LOCKED
(
ba£
);

3750 i‡((()
	`GëVîsi⁄
()) > 0) {

3751 
HKEY
 
¡_key
 = 0, 
öãrÁ˚s_key
 = 0;

3753 i‡(
	`RegO≥nKeyEx
(
HKEY_LOCAL_MACHINE
, 
WIN_NS_NT_KEY
, 0,

3754 
KEY_READ
, &
¡_key
Ë!
ERROR_SUCCESS
) {

3755 
	`log
(
EVDNS_LOG_DEBUG
,"Couldn'à›íÇàkey, %d",()
	`GëLa°Eº‹
());

3758 
r
 = 
	`RegO≥nKeyEx
(
¡_key
, 
	`TEXT
("Interfaces"), 0,

3759 
KEY_QUERY_VALUE
|
KEY_ENUMERATE_SUB_KEYS
,

3760 &
öãrÁ˚s_key
);

3761 i‡(
r
 !
ERROR_SUCCESS
) {

3762 
	`log
(
EVDNS_LOG_DEBUG
,"Couldn'à›í i¡îÁ˚†key, %d",()
	`GëLa°Eº‹
());

3765 
	`TRY
(
¡_key
, "NameServer");

3766 
	`TRY
(
¡_key
, "DhcpNameServer");

3767 
	`TRY
(
öãrÁ˚s_key
, "NameServer");

3768 
	`TRY
(
öãrÁ˚s_key
, "DhcpNameServer");

3769 
	`RegClo£Key
(
öãrÁ˚s_key
);

3770 
	`RegClo£Key
(
¡_key
);

3772 
HKEY
 
wö_key
 = 0;

3773 i‡(
	`RegO≥nKeyEx
(
HKEY_LOCAL_MACHINE
, 
WIN_NS_9X_KEY
, 0,

3774 
KEY_READ
, &
wö_key
Ë!
ERROR_SUCCESS
) {

3775 
	`log
(
EVDNS_LOG_DEBUG
, "Couldn'à›íÑegi°ry key, %d", ()
	`GëLa°Eº‹
());

3778 
	`TRY
(
wö_key
, "NameServer");

3779 
	`RegClo£Key
(
wö_key
);

3782 i‡(
found
 == 0) {

3783 
	`log
(
EVDNS_LOG_WARN
,"Didn't findányÇameservers.");

3786  
found
 ? 0 : -1;

3787 #unde‡
TRY


3788 
	}
}

3791 
	$evdns_ba£_c⁄fig_wödows_«me£rvîs
(
evdns_ba£
 *
ba£
)

3793 
r
;

3794 *
‚ame
;

3795 i‡(
ba£
 =
NULL
)

3796 
ba£
 = 
cuºít_ba£
;

3797 i‡(
ba£
 =
NULL
)

3799 
	`EVDNS_LOCK
(
ba£
);

3800 i‡(
	`lﬂd_«me£rvîs_wôh_gë√tw‹k∑øms
(
ba£
) == 0) {

3801 
	`EVDNS_UNLOCK
(
ba£
);

3804 
r
 = 
	`lﬂd_«me£rvîs_‰om_ªgi°ry
(
ba£
);

3806 
‚ame
 = 
	`evdns_gë_deÁu…_ho°s_fûíame
();

3807 
	`evdns_ba£_lﬂd_ho°s
(
ba£
, 
‚ame
);

3808 i‡(
‚ame
)

3809 
	`mm_‰ì
(
‚ame
);

3811 
	`EVDNS_UNLOCK
(
ba£
);

3812  
r
;

3813 
	}
}

3816 
	$evdns_c⁄fig_wödows_«me£rvîs
()

3818 i‡(!
cuºít_ba£
) {

3819 
cuºít_ba£
 = 
	`evdns_ba£_√w
(
NULL
, 1);

3820  
cuºít_ba£
 =
NULL
 ? -1 : 0;

3822  
	`evdns_ba£_c⁄fig_wödows_«me£rvîs
(
cuºít_ba£
);

3824 
	}
}

3827 
evdns_ba£
 *

3828 
	$evdns_ba£_√w
(
evít_ba£
 *evít_ba£, 
öôülize_«me£rvîs
)

3830 
evdns_ba£
 *
ba£
;

3832 i‡(
	`evutû_£cuª_∫g_öô
() < 0) {

3833 
	`log
(
EVDNS_LOG_WARN
, "UnableÅo seedÑandomÇumber generator; "

3835  
NULL
;

3841 
	`evutû_£t_evdns_gëaddröfo_‚
(
evdns_gëaddröfo
);

3843 
ba£
 = 
	`mm_mÆloc
((
evdns_ba£
));

3844 i‡(
ba£
 =
NULL
)

3845  (
NULL
);

3846 
	`mem£t
(
ba£
, 0, (
evdns_ba£
));

3847 
ba£
->
ªq_waôög_hód
 = 
NULL
;

3849 
	`EVTHREAD_ALLOC_LOCK
(
ba£
->
lock
, 
EVTHREAD_LOCKTYPE_RECURSIVE
);

3850 
	`EVDNS_LOCK
(
ba£
);

3853 
ba£
->
ªq_hóds
 = 
NULL
;

3855 
	`evdns_ba£_£t_max_ªque°s_öÊight
(
ba£
, 64);

3857 
ba£
->
£rvî_hód
 = 
NULL
;

3858 
ba£
->
evít_ba£
 =Évent_base;

3859 
ba£
->
globÆ_good_«me£rvîs
 = ba£->
globÆ_ªque°s_öÊight
 =

3860 
ba£
->
globÆ_ªque°s_waôög
 = 0;

3862 
ba£
->
globÆ_timeout
.
tv_£c
 = 5;

3863 
ba£
->
globÆ_timeout
.
tv_u£c
 = 0;

3864 
ba£
->
globÆ_max_ªissues
 = 1;

3865 
ba£
->
globÆ_max_ªå™smôs
 = 3;

3866 
ba£
->
globÆ_max_«me£rvî_timeout
 = 3;

3867 
ba£
->
globÆ_£¨ch_°©e
 = 
NULL
;

3868 
ba£
->
globÆ_øndomize_ˇ£
 = 1;

3869 
ba£
->
globÆ_gëaddröfo_Ælow_skew
.
tv_£c
 = 3;

3870 
ba£
->
globÆ_gëaddröfo_Ælow_skew
.
tv_u£c
 = 0;

3871 
ba£
->
globÆ_«me£rvî_¥obe_öôül_timeout
.
tv_£c
 = 10;

3872 
ba£
->
globÆ_«me£rvî_¥obe_öôül_timeout
.
tv_u£c
 = 0;

3874 
	`TAILQ_INIT
(&
ba£
->
ho°sdb
);

3876 i‡(
öôülize_«me£rvîs
) {

3877 
r
;

3878 #ifde‡
WIN32


3879 
r
 = 
	`evdns_ba£_c⁄fig_wödows_«me£rvîs
(
ba£
);

3881 
r
 = 
	`evdns_ba£_ªsﬁv_c⁄f_∑r£
(
ba£
, 
DNS_OPTIONS_ALL
, "/etc/resolv.conf");

3883 i‡(
r
 == -1) {

3884 
	`evdns_ba£_‰ì_™d_u∆ock
(
ba£
, 0);

3885  
NULL
;

3888 
	`EVDNS_UNLOCK
(
ba£
);

3889  
ba£
;

3890 
	}
}

3893 
	$evdns_öô
()

3895 
evdns_ba£
 *
ba£
 = 
	`evdns_ba£_√w
(
NULL
, 1);

3896 i‡(
ba£
) {

3897 
cuºít_ba£
 = 
ba£
;

3902 
	}
}

3905 
	$evdns_îr_to_°rög
(
îr
)

3907 
îr
) {

3908 
DNS_ERR_NONE
:  "noÉrror";

3909 
DNS_ERR_FORMAT
:  "misformatted query";

3910 
DNS_ERR_SERVERFAILED
:  "server failed";

3911 
DNS_ERR_NOTEXIST
:  "name doesÇotÉxist";

3912 
DNS_ERR_NOTIMPL
:  "queryÇot implemented";

3913 
DNS_ERR_REFUSED
:  "refused";

3915 
DNS_ERR_TRUNCATED
:  "replyÅruncated or ill-formed";

3916 
DNS_ERR_UNKNOWN
:  "unknown";

3917 
DNS_ERR_TIMEOUT
:  "requestÅimed out";

3918 
DNS_ERR_SHUTDOWN
:  "dns subsystem shut down";

3919 
DNS_ERR_CANCEL
:  "dnsÑequest canceled";

3920 
DNS_ERR_NODATA
:  "noÑecords inÅheÑeply";

3923 
	}
}

3926 
	$evdns_«me£rvî_‰ì
(
«me£rvî
 *
£rvî
)

3928 i‡(
£rvî
->
sockë
 >= 0)

3929 
	`evutû_˛o£sockë
(
£rvî
->
sockë
);

3930 (Ë
	`evít_dñ
(&
£rvî
->
evít
);

3931 
	`evít_debug_u«ssign
(&
£rvî
->
evít
);

3932 i‡(
£rvî
->
°©e
 == 0)

3933 (Ë
	`evít_dñ
(&
£rvî
->
timeout_evít
);

3934 
	`evít_debug_u«ssign
(&
£rvî
->
timeout_evít
);

3935 
	`mm_‰ì
(
£rvî
);

3936 
	}
}

3939 
	$evdns_ba£_‰ì_™d_u∆ock
(
evdns_ba£
 *
ba£
, 
Áû_ªque°s
)

3941 
«me£rvî
 *
£rvî
, *
£rvî_√xt
;

3942 
£¨ch_domaö
 *
dom
, *
dom_√xt
;

3943 
i
;

3949 
i
 = 0; i < 
ba£
->
n_ªq_hóds
; ++i) {

3950 
ba£
->
ªq_hóds
[
i
]) {

3951 i‡(
Áû_ªque°s
)

3952 
	`ª∂y_scheduÀ_ˇŒback
(
ba£
->
ªq_hóds
[
i
], 0, 
DNS_ERR_SHUTDOWN
, 
NULL
);

3953 
	`ªque°_föished
(
ba£
->
ªq_hóds
[
i
], &
	`REQ_HEAD
(ba£, ba£->ªq_hóds[i]->
å™s_id
), 1);

3956 
ba£
->
ªq_waôög_hód
) {

3957 i‡(
Áû_ªque°s
)

3958 
	`ª∂y_scheduÀ_ˇŒback
(
ba£
->
ªq_waôög_hód
, 0, 
DNS_ERR_SHUTDOWN
, 
NULL
);

3959 
	`ªque°_föished
(
ba£
->
ªq_waôög_hód
, &base->req_waiting_head, 1);

3961 
ba£
->
globÆ_ªque°s_öÊight
 = ba£->
globÆ_ªque°s_waôög
 = 0;

3963 
£rvî
 = 
ba£
->
£rvî_hód
; sîvî; sîvî = 
£rvî_√xt
) {

3964 
£rvî_√xt
 = 
£rvî
->
√xt
;

3965 
	`evdns_«me£rvî_‰ì
(
£rvî
);

3966 i‡(
£rvî_√xt
 =
ba£
->
£rvî_hód
)

3969 
ba£
->
£rvî_hód
 = 
NULL
;

3970 
ba£
->
globÆ_good_«me£rvîs
 = 0;

3972 i‡(
ba£
->
globÆ_£¨ch_°©e
) {

3973 
dom
 = 
ba£
->
globÆ_£¨ch_°©e
->
hód
; dom; dom = 
dom_√xt
) {

3974 
dom_√xt
 = 
dom
->
√xt
;

3975 
	`mm_‰ì
(
dom
);

3977 
	`mm_‰ì
(
ba£
->
globÆ_£¨ch_°©e
);

3978 
ba£
->
globÆ_£¨ch_°©e
 = 
NULL
;

3982 
ho°s_íåy
 *
vi˘im
;

3983 (
vi˘im
 = 
	`TAILQ_FIRST
(&
ba£
->
ho°sdb
))) {

3984 
	`TAILQ_REMOVE
(&
ba£
->
ho°sdb
, 
vi˘im
, 
√xt
);

3985 
	`mm_‰ì
(
vi˘im
);

3989 
	`mm_‰ì
(
ba£
->
ªq_hóds
);

3991 
	`EVDNS_UNLOCK
(
ba£
);

3992 
	`EVTHREAD_FREE_LOCK
(
ba£
->
lock
, 
EVTHREAD_LOCKTYPE_RECURSIVE
);

3994 
	`mm_‰ì
(
ba£
);

3995 
	}
}

3998 
	$evdns_ba£_‰ì
(
evdns_ba£
 *
ba£
, 
Áû_ªque°s
)

4000 
	`EVDNS_LOCK
(
ba£
);

4001 
	`evdns_ba£_‰ì_™d_u∆ock
(
ba£
, 
Áû_ªque°s
);

4002 
	}
}

4005 
	$evdns_shutdown
(
Áû_ªque°s
)

4007 i‡(
cuºít_ba£
) {

4008 
evdns_ba£
 *
b
 = 
cuºít_ba£
;

4009 
cuºít_ba£
 = 
NULL
;

4010 
	`evdns_ba£_‰ì
(
b
, 
Áû_ªque°s
);

4012 
evdns_log_‚
 = 
NULL
;

4013 
	}
}

4016 
	$evdns_ba£_∑r£_ho°s_löe
(
evdns_ba£
 *
ba£
, *
löe
)

4018 *
°πok_°©e
;

4019 c⁄° *c⁄° 
dñims
 = " \t";

4020 *c⁄° 
addr
 = 
	`°πok_r
(
löe
, 
dñims
, &
°πok_°©e
);

4021 *
ho°«me
, *
hash
;

4022 
sockaddr_°‹age
 
ss
;

4023 
sockÀn
 = (
ss
);

4024 
	`ASSERT_LOCKED
(
ba£
);

4026 
	#NEXT_TOKEN
 
	`°πok_r
(
NULL
, 
dñims
, &
°πok_°©e
)

	)

4028 i‡(!
addr
 || *addr == '#')

4031 
	`mem£t
(&
ss
, 0, (ss));

4032 i‡(
	`evutû_∑r£_sockaddr_p‹t
(
addr
, (
sockaddr
*)&
ss
, &
sockÀn
)<0)

4034 i‡(
sockÀn
 > ()(
sockaddr_ö6
))

4037 i‡(
	`sockaddr_gëp‹t
((
sockaddr
*)&
ss
))

4040 (
ho°«me
 = 
NEXT_TOKEN
)) {

4041 
ho°s_íåy
 *
he
;

4042 
size_t
 
«mñí
;

4043 i‡((
hash
 = 
	`°rchr
(
ho°«me
, '#'))) {

4044 i‡(
hash
 =
ho°«me
)

4046 *
hash
 = '\0';

4049 
«mñí
 = 
	`°æí
(
ho°«me
);

4051 
he
 = 
	`mm_ˇŒoc
(1, (
ho°s_íåy
)+
«mñí
);

4052 i‡(!
he
)

4054 
	`EVUTIL_ASSERT
(
sockÀn
 <()(
he
->
addr
));

4055 
	`mem˝y
(&
he
->
addr
, &
ss
, 
sockÀn
);

4056 
	`mem˝y
(
he
->
ho°«me
, ho°«me, 
«mñí
+1);

4057 
he
->
addæí
 = 
sockÀn
;

4059 
	`TAILQ_INSERT_TAIL
(&
ba£
->
ho°sdb
, 
he
, 
√xt
);

4061 i‡(
hash
)

4066 #unde‡
NEXT_TOKEN


4067 
	}
}

4070 
	$evdns_ba£_lﬂd_ho°s_im∂
(
evdns_ba£
 *
ba£
, c⁄° *
ho°s_‚ame
)

4072 *
°r
=
NULL
, *
˝
, *
eﬁ
;

4073 
size_t
 
Àn
;

4074 
îr
=0;

4076 
	`ASSERT_LOCKED
(
ba£
);

4078 i‡(
ho°s_‚ame
 =
NULL
 ||

4079 (
îr
 = 
	`evutû_ªad_fûe
(
ho°s_‚ame
, &
°r
, &
Àn
, 0)) < 0) {

4080 
tmp
[64];

4081 
	`°æ˝y
(
tmp
, "127.0.0.1Üocalhost", (tmp));

4082 
	`evdns_ba£_∑r£_ho°s_löe
(
ba£
, 
tmp
);

4083 
	`°æ˝y
(
tmp
, "::1Üocalhost", (tmp));

4084 
	`evdns_ba£_∑r£_ho°s_löe
(
ba£
, 
tmp
);

4085  
îr
 ? -1 : 0;

4090 
˝
 = 
°r
;

4092 
eﬁ
 = 
	`°rchr
(
˝
, '\n');

4094 i‡(
eﬁ
) {

4095 *
eﬁ
 = '\0';

4096 
	`evdns_ba£_∑r£_ho°s_löe
(
ba£
, 
˝
);

4097 
˝
 = 
eﬁ
+1;

4099 
	`evdns_ba£_∑r£_ho°s_löe
(
ba£
, 
˝
);

4104 
	`mm_‰ì
(
°r
);

4106 
	}
}

4109 
	$evdns_ba£_lﬂd_ho°s
(
evdns_ba£
 *
ba£
, c⁄° *
ho°s_‚ame
)

4111 
ªs
;

4112 i‡(!
ba£
)

4113 
ba£
 = 
cuºít_ba£
;

4114 
	`EVDNS_LOCK
(
ba£
);

4115 
ªs
 = 
	`evdns_ba£_lﬂd_ho°s_im∂
(
ba£
, 
ho°s_‚ame
);

4116 
	`EVDNS_UNLOCK
(
ba£
);

4117  
ªs
;

4118 
	}
}

4121 
	sgëaddröfo_subªque°
 {

4122 
evdns_ªque°
 *
	mr
;

4123 
ev_uöt32_t
 
	mty≥
;

4127 
	sevdns_gëaddröfo_ªque°
 {

4128 
evdns_ba£
 *
	mevdns_ba£
;

4131 
evutû_addröfo
 
	mhöts
;

4133 
evdns_gëaddröfo_cb
 
	mu£r_cb
;

4135 *
	mu£r_d©a
;

4137 
ev_uöt16_t
 
	mp‹t
;

4139 
gëaddröfo_subªque°
 
	mùv4_ªque°
;

4141 
gëaddröfo_subªque°
 
	mùv6_ªque°
;

4144 *
	m˙ame_ªsu…
;

4148 
evutû_addröfo
 *
	m≥ndög_ªsu…
;

4151 
evít
 
	mtimeout
;

4154 
	m≥ndög_îr‹
;

4156 
	mu£r_ˇn˚Àd
 : 1;

4159 
	mªque°_d⁄e
 : 1;

4164 
	$evdns_îr_to_gëaddröfo_îr
(
e1
)

4167 i‡(
e1
 =
DNS_ERR_NONE
)

4169 i‡(
e1
 =
DNS_ERR_NOTEXIST
)

4170  
EVUTIL_EAI_NONAME
;

4172  
EVUTIL_EAI_FAIL
;

4173 
	}
}

4177 
	$gëaddröfo_mîge_îr
(
e1
, 
e2
)

4180 i‡(
e1
 == 0)

4181  
e2
;

4183  
e1
;

4184 
	}
}

4187 
	$‰ì_gëaddröfo_ªque°
(
evdns_gëaddröfo_ªque°
 *
d©a
)

4191 i‡(
d©a
->
≥ndög_ªsu…
)

4192 
	`evutû_‰ìaddröfo
(
d©a
->
≥ndög_ªsu…
);

4193 i‡(
d©a
->
˙ame_ªsu…
)

4194 
	`mm_‰ì
(
d©a
->
˙ame_ªsu…
);

4195 
	`evít_dñ
(&
d©a
->
timeout
);

4196 
	`mm_‰ì
(
d©a
);

4198 
	}
}

4201 
	$add_˙ame_to_ª∂y
(
evdns_gëaddröfo_ªque°
 *
d©a
,

4202 
evutû_addröfo
 *
ai
)

4204 i‡(
d©a
->
˙ame_ªsu…
 && 
ai
) {

4205 
ai
->
ai_ˇn⁄«me
 = 
d©a
->
˙ame_ªsu…
;

4206 
d©a
->
˙ame_ªsu…
 = 
NULL
;

4208 
	}
}

4215 
	$evdns_gëaddröfo_timeout_cb
(
evutû_sockë_t
 
fd
, 
wh©
, *
±r
)

4217 
v4_timedout
 = 0, 
v6_timedout
 = 0;

4218 
evdns_gëaddröfo_ªque°
 *
d©a
 = 
±r
;

4221 i‡(
d©a
->
ùv4_ªque°
.
r
) {

4224 
	`evdns_ˇn˚l_ªque°
(
NULL
, 
d©a
->
ùv4_ªque°
.
r
);

4225 
v4_timedout
 = 1;

4226 
	`EVDNS_LOCK
(
d©a
->
evdns_ba£
);

4227 ++
d©a
->
evdns_ba£
->
gëaddröfo_ùv4_timeouts
;

4228 
	`EVDNS_UNLOCK
(
d©a
->
evdns_ba£
);

4230 i‡(
d©a
->
ùv6_ªque°
.
r
) {

4233 
	`evdns_ˇn˚l_ªque°
(
NULL
, 
d©a
->
ùv6_ªque°
.
r
);

4234 
v6_timedout
 = 1;

4235 
	`EVDNS_LOCK
(
d©a
->
evdns_ba£
);

4236 ++
d©a
->
evdns_ba£
->
gëaddröfo_ùv6_timeouts
;

4237 
	`EVDNS_UNLOCK
(
d©a
->
evdns_ba£
);

4242 
	`EVUTIL_ASSERT
(!
v4_timedout
 || !
v6_timedout
);

4245 i‡(
d©a
->
≥ndög_ªsu…
) {

4246 
	`add_˙ame_to_ª∂y
(
d©a
, d©a->
≥ndög_ªsu…
);

4247 
d©a
->
	`u£r_cb
(0, d©a->
≥ndög_ªsu…
, d©a->
u£r_d©a
);

4248 
d©a
->
≥ndög_ªsu…
 = 
NULL
;

4250 
e
 = 
d©a
->
≥ndög_îr‹
;

4251 i‡(!
e
)

4252 
e
 = 
EVUTIL_EAI_AGAIN
;

4253 
d©a
->
	`u£r_cb
(
e
, 
NULL
, d©a->
u£r_d©a
);

4256 
d©a
->
u£r_cb
 = 
NULL
;

4260 i‡(!
v4_timedout
 && !
v6_timedout
) {

4262 
	`‰ì_gëaddröfo_ªque°
(
d©a
);

4264 
	}
}

4267 
	$evdns_gëaddröfo_£t_timeout
(
evdns_ba£
 *evdns_base,

4268 
evdns_gëaddröfo_ªque°
 *
d©a
)

4270  
	`evít_add
(&
d©a
->
timeout
, &
evdns_ba£
->
globÆ_gëaddröfo_Ælow_skew
);

4271 
	}
}

4273 
ölöe
 

4274 
	$evdns_ªsu…_is_™swî
(
ªsu…
)

4276  (
ªsu…
 !
DNS_ERR_NOTIMPL
 &&Ñesu… !
DNS_ERR_REFUSED
 &&

4277 
ªsu…
 !
DNS_ERR_SERVERFAILED
 &&Ñesu… !
DNS_ERR_CANCEL
);

4278 
	}
}

4281 
	$evdns_gëaddröfo_gŸªsﬁve
(
ªsu…
, 
ty≥
, 
cou¡
,

4282 
âl
, *
addªs£s
, *
¨g
)

4284 
i
;

4285 
gëaddröfo_subªque°
 *
ªq
 = 
¨g
;

4286 
gëaddröfo_subªque°
 *
Ÿhî_ªq
;

4287 
evdns_gëaddröfo_ªque°
 *
d©a
;

4289 
evutû_addröfo
 *
ªs
;

4291 
sockaddr_ö
 
sö
;

4292 
sockaddr_ö6
 
sö6
;

4293 
sockaddr
 *
ß
;

4294 
sockÀn
, 
addæí
;

4295 *
addΩ
;

4296 
îr
;

4297 
u£r_ˇn˚Àd
;

4299 
	`EVUTIL_ASSERT
(
ªq
->
ty≥
 =
DNS_IPv4_A
 ||Ñeq->ty≥ =
DNS_IPv6_AAAA
);

4300 i‡(
ªq
->
ty≥
 =
DNS_IPv4_A
) {

4301 
d©a
 = 
	`EVUTIL_UPCAST
(
ªq
, 
evdns_gëaddröfo_ªque°
, 
ùv4_ªque°
);

4302 
Ÿhî_ªq
 = &
d©a
->
ùv6_ªque°
;

4304 
d©a
 = 
	`EVUTIL_UPCAST
(
ªq
, 
evdns_gëaddröfo_ªque°
, 
ùv6_ªque°
);

4305 
Ÿhî_ªq
 = &
d©a
->
ùv4_ªque°
;

4308 
	`EVDNS_LOCK
(
d©a
->
evdns_ba£
);

4309 i‡(
	`evdns_ªsu…_is_™swî
(
ªsu…
)) {

4310 i‡(
ªq
->
ty≥
 =
DNS_IPv4_A
)

4311 ++
d©a
->
evdns_ba£
->
gëaddröfo_ùv4_™swîed
;

4313 ++
d©a
->
evdns_ba£
->
gëaddröfo_ùv6_™swîed
;

4315 
u£r_ˇn˚Àd
 = 
d©a
->user_canceled;

4316 i‡(
Ÿhî_ªq
->
r
 =
NULL
)

4317 
d©a
->
ªque°_d⁄e
 = 1;

4318 
	`EVDNS_UNLOCK
(
d©a
->
evdns_ba£
);

4320 
ªq
->
r
 = 
NULL
;

4322 i‡(
ªsu…
 =
DNS_ERR_CANCEL
 && ! 
u£r_ˇn˚Àd
) {

4325 i‡(
Ÿhî_ªq
->
r
 =
NULL
)

4326 
	`‰ì_gëaddröfo_ªque°
(
d©a
);

4330 i‡(
d©a
->
u£r_cb
 =
NULL
) {

4333 
	`‰ì_gëaddröfo_ªque°
(
d©a
);

4337 i‡(
ªsu…
 =
DNS_ERR_NONE
) {

4338 i‡(
cou¡
 == 0)

4339 
îr
 = 
EVUTIL_EAI_NODATA
;

4341 
îr
 = 0;

4343 
îr
 = 
	`evdns_îr_to_gëaddröfo_îr
(
ªsu…
);

4346 i‡(
îr
) {

4348 i‡(
Ÿhî_ªq
->
r
) {

4352 
	`evdns_gëaddröfo_£t_timeout
(
d©a
->
evdns_ba£
, data);

4353 
d©a
->
≥ndög_îr‹
 = 
îr
;

4357 i‡(
u£r_ˇn˚Àd
) {

4358 
d©a
->
	`u£r_cb
(
EVUTIL_EAI_CANCEL
, 
NULL
, d©a->
u£r_d©a
);

4359 } i‡(
d©a
->
≥ndög_ªsu…
) {

4362 
	`add_˙ame_to_ª∂y
(
d©a
, d©a->
≥ndög_ªsu…
);

4363 
d©a
->
	`u£r_cb
(0, d©a->
≥ndög_ªsu…
, d©a->
u£r_d©a
);

4364 
d©a
->
≥ndög_ªsu…
 = 
NULL
;

4366 i‡(
d©a
->
≥ndög_îr‹
)

4367 
îr
 = 
	`gëaddröfo_mîge_îr
(err,

4368 
d©a
->
≥ndög_îr‹
);

4369 
d©a
->
	`u£r_cb
(
îr
, 
NULL
, d©a->
u£r_d©a
);

4371 
	`‰ì_gëaddröfo_ªque°
(
d©a
);

4373 } i‡(
u£r_ˇn˚Àd
) {

4374 i‡(
Ÿhî_ªq
->
r
) {

4380 
d©a
->
	`u£r_cb
(
EVUTIL_EAI_CANCEL
, 
NULL
, d©a->
u£r_d©a
);

4381 
	`‰ì_gëaddröfo_ªque°
(
d©a
);

4387 
	`EVUTIL_ASSERT
(
ty≥
 =
DNS_IPv4_A
 ||Åy≥ =
DNS_IPv6_AAAA
);

4389 i‡(
ty≥
 =
DNS_IPv4_A
) {

4390 
	`mem£t
(&
sö
, 0, (sin));

4391 
sö
.
sö_Ámûy
 = 
AF_INET
;

4392 
sö
.
sö_p‹t
 = 
	`ht⁄s
(
d©a
->
p‹t
);

4394 
ß
 = (
sockaddr
 *)&
sö
;

4395 
sockÀn
 = (
sö
);

4396 
addæí
 = 4;

4397 
addΩ
 = &
sö
.
sö_addr
.
s_addr
;

4399 
	`mem£t
(&
sö6
, 0, (sin6));

4400 
sö6
.
sö6_Ámûy
 = 
AF_INET6
;

4401 
sö6
.
sö6_p‹t
 = 
	`ht⁄s
(
d©a
->
p‹t
);

4403 
ß
 = (
sockaddr
 *)&
sö6
;

4404 
sockÀn
 = (
sö6
);

4405 
addæí
 = 16;

4406 
addΩ
 = &
sö6
.
sö6_addr
.
s6_addr
;

4409 
ªs
 = 
NULL
;

4410 
i
=0; i < 
cou¡
; ++i) {

4411 
evutû_addröfo
 *
ai
;

4412 
	`mem˝y
(
addΩ
, ((*)
addªs£s
)+
i
*
addæí
,áddrlen);

4413 
ai
 = 
	`evutû_√w_addröfo
(
ß
, 
sockÀn
, &
d©a
->
höts
);

4414 i‡(!
ai
) {

4415 i‡(
Ÿhî_ªq
->
r
) {

4416 
	`evdns_ˇn˚l_ªque°
(
NULL
, 
Ÿhî_ªq
->
r
);

4418 
d©a
->
	`u£r_cb
(
EVUTIL_EAI_MEMORY
, 
NULL
, d©a->
u£r_d©a
);

4419 i‡(
ªs
)

4420 
	`evutû_‰ìaddröfo
(
ªs
);

4422 i‡(
Ÿhî_ªq
->
r
 =
NULL
)

4423 
	`‰ì_gëaddröfo_ªque°
(
d©a
);

4426 
ªs
 = 
	`evutû_addröfo_≠≥nd
‘es, 
ai
);

4429 i‡(
Ÿhî_ªq
->
r
) {

4432 
	`evdns_gëaddröfo_£t_timeout
(
d©a
->
evdns_ba£
, data);

4433 
d©a
->
≥ndög_ªsu…
 = 
ªs
;

4438 i‡(
d©a
->
≥ndög_ªsu…
) {

4439 i‡(
ªq
->
ty≥
 =
DNS_IPv4_A
)

4440 
ªs
 = 
	`evutû_addröfo_≠≥nd
(res,

4441 
d©a
->
≥ndög_ªsu…
);

4443 
ªs
 = 
	`evutû_addröfo_≠≥nd
(

4444 
d©a
->
≥ndög_ªsu…
, 
ªs
);

4445 
d©a
->
≥ndög_ªsu…
 = 
NULL
;

4449 
	`add_˙ame_to_ª∂y
(
d©a
, 
ªs
);

4450 
d©a
->
	`u£r_cb
(0, 
ªs
, d©a->
u£r_d©a
);

4453 
	`‰ì_gëaddröfo_ªque°
(
d©a
);

4455 
	}
}

4457 
ho°s_íåy
 *

4458 
	$föd_ho°s_íåy
(
evdns_ba£
 *
ba£
, c⁄° *
ho°«me
,

4459 
ho°s_íåy
 *
föd_a·î
)

4461 
ho°s_íåy
 *
e
;

4463 i‡(
föd_a·î
)

4464 
e
 = 
	`TAILQ_NEXT
(
föd_a·î
, 
√xt
);

4466 
e
 = 
	`TAILQ_FIRST
(&
ba£
->
ho°sdb
);

4468 ; 
e
;É = 
	`TAILQ_NEXT
”, 
√xt
)) {

4469 i‡(!
	`evutû_ascii_°rˇ£cmp
(
e
->
ho°«me
, hostname))

4470  
e
;

4472  
NULL
;

4473 
	}
}

4476 
	$evdns_gëaddröfo_‰omho°s
(
evdns_ba£
 *
ba£
,

4477 c⁄° *
nodíame
, 
evutû_addröfo
 *
höts
, 
ev_uöt16_t
 
p‹t
,

4478 
evutû_addröfo
 **
ªs
)

4480 
n_found
 = 0;

4481 
ho°s_íåy
 *
e
;

4482 
evutû_addröfo
 *
ai
=
NULL
;

4483 
f
 = 
höts
->
ai_Ámûy
;

4485 
	`EVDNS_LOCK
(
ba£
);

4486 
e
 = 
	`föd_ho°s_íåy
(
ba£
, 
nodíame
, 
NULL
);É;

4487 
e
 = 
	`föd_ho°s_íåy
(
ba£
, 
nodíame
,É)) {

4488 
evutû_addröfo
 *
ai_√w
;

4489 ++
n_found
;

4490 i‡((
e
->
addr
.
ß
.
ß_Ámûy
 =
AF_INET
 && 
f
 =
PF_INET6
) ||

4491 (
e
->
addr
.
ß
.
ß_Ámûy
 =
AF_INET6
 && 
f
 =
PF_INET
))

4493 
ai_√w
 = 
	`evutû_√w_addröfo
(&
e
->
addr
.
ß
,É->
addæí
, 
höts
);

4494 i‡(!
ai_√w
) {

4495 
n_found
 = 0;

4496 
out
;

4498 
	`sockaddr_£ç‹t
(
ai_√w
->
ai_addr
, 
p‹t
);

4499 
ai
 = 
	`evutû_addröfo_≠≥nd
◊i, 
ai_√w
);

4501 
	`EVDNS_UNLOCK
(
ba£
);

4502 
out
:

4503 i‡(
n_found
) {

4506 *
ªs
 = 
ai
;

4509 i‡(
ai
)

4510 
	`evutû_‰ìaddröfo
(
ai
);

4513 
	}
}

4515 
evdns_gëaddröfo_ªque°
 *

4516 
	$evdns_gëaddröfo
(
evdns_ba£
 *
dns_ba£
,

4517 c⁄° *
nodíame
, c⁄° *
£rv«me
,

4518 c⁄° 
evutû_addröfo
 *
höts_ö
,

4519 
evdns_gëaddröfo_cb
 
cb
, *
¨g
)

4521 
evdns_gëaddröfo_ªque°
 *
d©a
;

4522 
evutû_addröfo
 
höts
;

4523 
evutû_addröfo
 *
ªs
 = 
NULL
;

4524 
îr
;

4525 
p‹t
 = 0;

4526 
w™t_˙ame
 = 0;

4528 i‡(!
dns_ba£
) {

4529 
dns_ba£
 = 
cuºít_ba£
;

4530 i‡(!
dns_ba£
) {

4531 
	`log
(
EVDNS_LOG_WARN
,

4534 
	`cb
(
EVUTIL_EAI_FAIL
, 
NULL
, 
¨g
);

4535  
NULL
;

4540 i‡((
höts_ö
 && (höts_ö->
ai_Êags
 & 
EVUTIL_AI_NUMERICHOST
))) {

4541 
ªs
 = 
NULL
;

4542 
îr
 = 
	`evutû_gëaddröfo
(
nodíame
, 
£rv«me
, 
höts_ö
, &
ªs
);

4543 
	`cb
(
îr
, 
ªs
, 
¨g
);

4544  
NULL
;

4547 i‡(
höts_ö
) {

4548 
	`mem˝y
(&
höts
, 
höts_ö
, (hints));

4550 
	`mem£t
(&
höts
, 0, (hints));

4551 
höts
.
ai_Ámûy
 = 
PF_UNSPEC
;

4554 
	`evutû_adju°_höts_f‹_addrc⁄fig
(&
höts
);

4561 
îr
 = 
	`evutû_gëaddröfo_comm⁄
(
nodíame
, 
£rv«me
, &
höts
, &
ªs
, &
p‹t
);

4562 i‡(
îr
 !
EVUTIL_EAI_NEED_RESOLVE
) {

4563 
	`cb
(
îr
, 
ªs
, 
¨g
);

4564  
NULL
;

4568 i‡(!
	`evdns_gëaddröfo_‰omho°s
(
dns_ba£
, 
nodíame
, &
höts
, 
p‹t
, &
ªs
)) {

4569 
	`cb
(0, 
ªs
, 
¨g
);

4570  
NULL
;

4576 
d©a
 = 
	`mm_ˇŒoc
(1,(
evdns_gëaddröfo_ªque°
));

4577 i‡(!
d©a
) {

4578 
	`cb
(
EVUTIL_EAI_MEMORY
, 
NULL
, 
¨g
);

4579  
NULL
;

4582 
	`mem˝y
(&
d©a
->
höts
, &hints, (data->hints));

4583 
d©a
->
p‹t
 = (
ev_uöt16_t
)port;

4584 
d©a
->
ùv4_ªque°
.
ty≥
 = 
DNS_IPv4_A
;

4585 
d©a
->
ùv6_ªque°
.
ty≥
 = 
DNS_IPv6_AAAA
;

4586 
d©a
->
u£r_cb
 = 
cb
;

4587 
d©a
->
u£r_d©a
 = 
¨g
;

4588 
d©a
->
evdns_ba£
 = 
dns_ba£
;

4590 
w™t_˙ame
 = (
höts
.
ai_Êags
 & 
EVUTIL_AI_CANONNAME
);

4605 i‡(
höts
.
ai_Ámûy
 !
PF_INET6
) {

4606 
	`log
(
EVDNS_LOG_DEBUG
, "SendingÑequest for %s on ipv4ás %p",

4607 
nodíame
, &
d©a
->
ùv4_ªque°
);

4609 
d©a
->
ùv4_ªque°
.
r
 = 
	`evdns_ba£_ªsﬁve_ùv4
(
dns_ba£
,

4610 
nodíame
, 0, 
evdns_gëaddröfo_gŸªsﬁve
,

4611 &
d©a
->
ùv4_ªque°
);

4612 i‡(
w™t_˙ame
)

4613 
d©a
->
ùv4_ªque°
.
r
->
cuºít_ªq
->
put_˙ame_ö_±r
 =

4614 &
d©a
->
˙ame_ªsu…
;

4616 i‡(
höts
.
ai_Ámûy
 !
PF_INET
) {

4617 
	`log
(
EVDNS_LOG_DEBUG
, "SendingÑequest for %s on ipv6ás %p",

4618 
nodíame
, &
d©a
->
ùv6_ªque°
);

4620 
d©a
->
ùv6_ªque°
.
r
 = 
	`evdns_ba£_ªsﬁve_ùv6
(
dns_ba£
,

4621 
nodíame
, 0, 
evdns_gëaddröfo_gŸªsﬁve
,

4622 &
d©a
->
ùv6_ªque°
);

4623 i‡(
w™t_˙ame
)

4624 
d©a
->
ùv6_ªque°
.
r
->
cuºít_ªq
->
put_˙ame_ö_±r
 =

4625 &
d©a
->
˙ame_ªsu…
;

4628 
	`evtimî_assign
(&
d©a
->
timeout
, 
dns_ba£
->
evít_ba£
,

4629 
evdns_gëaddröfo_timeout_cb
, 
d©a
);

4631 i‡(
d©a
->
ùv4_ªque°
.
r
 || d©a->
ùv6_ªque°
.r) {

4632  
d©a
;

4634 
	`mm_‰ì
(
d©a
);

4635 
	`cb
(
EVUTIL_EAI_FAIL
, 
NULL
, 
¨g
);

4636  
NULL
;

4638 
	}
}

4641 
	$evdns_gëaddröfo_ˇn˚l
(
evdns_gëaddröfo_ªque°
 *
d©a
)

4643 
	`EVDNS_LOCK
(
d©a
->
evdns_ba£
);

4644 i‡(
d©a
->
ªque°_d⁄e
) {

4645 
	`EVDNS_UNLOCK
(
d©a
->
evdns_ba£
);

4648 
	`evít_dñ
(&
d©a
->
timeout
);

4649 
d©a
->
u£r_ˇn˚Àd
 = 1;

4650 i‡(
d©a
->
ùv4_ªque°
.
r
)

4651 
	`evdns_ˇn˚l_ªque°
(
d©a
->
evdns_ba£
, d©a->
ùv4_ªque°
.
r
);

4652 i‡(
d©a
->
ùv6_ªque°
.
r
)

4653 
	`evdns_ˇn˚l_ªque°
(
d©a
->
evdns_ba£
, d©a->
ùv6_ªque°
.
r
);

4654 
	`EVDNS_UNLOCK
(
d©a
->
evdns_ba£
);

4655 
	}
}

	@evdns.h

27 #i‚de‡
_EVDNS_H_


28 
	#_EVDNS_H_


	)

40 
	~<evít.h
>

41 
	~<evít2/dns.h
>

42 
	~<evít2/dns_com∑t.h
>

43 
	~<evít2/dns_°ru˘.h
>

	@event-internal.h

27 #i‚de‡
_EVENT_INTERNAL_H_


28 
	#_EVENT_INTERNAL_H_


	)

30 #ifde‡
__˝lu•lus


34 
	~"evít2/evít-c⁄fig.h
"

35 
	~<time.h
>

36 
	~<sys/queue.h
>

37 
	~"evít2/evít_°ru˘.h
"

38 
	~"möhóp-öã∫Æ.h
"

39 
	~"evsig«l-öã∫Æ.h
"

40 
	~"mm-öã∫Æ.h
"

41 
	~"de„r-öã∫Æ.h
"

46 
	#ev_sig«l_√xt
 
_ev
.
ev_sig«l
.
ev_sig«l_√xt


	)

47 
	#ev_io_√xt
 
_ev
.
ev_io
.
ev_io_√xt


	)

48 
	#ev_io_timeout
 
_ev
.
ev_io
.
ev_timeout


	)

51 
	#ev_nˇŒs
 
_ev
.
ev_sig«l
.
ev_nˇŒs


	)

52 
	#ev_≤ˇŒs
 
_ev
.
ev_sig«l
.
ev_≤ˇŒs


	)

55 
	#EV_CLOSURE_NONE
 0

	)

56 
	#EV_CLOSURE_SIGNAL
 1

	)

57 
	#EV_CLOSURE_PERSIST
 2

	)

60 
	sevít›
 {

62 c⁄° *
«me
;

68 *(*
öô
)(
evít_ba£
 *);

77 (*
add
)(
evít_ba£
 *, 
evutû_sockë_t
 
fd
, 
ﬁd
, 
evíts
, *
fdöfo
);

79 (*
dñ
)(
evít_ba£
 *, 
evutû_sockë_t
 
fd
, 
ﬁd
, 
evíts
, *
fdöfo
);

85 (*
di•©ch
)(
evít_ba£
 *, 
timevÆ
 *);

87 (*
dóŒoc
)(
evít_ba£
 *);

90 
√ed_ªöô
;

93 
evít_mëhod_„©uª
 
„©uªs
;

99 
size_t
 
fdöfo_Àn
;

102 #ifde‡
WIN32


107 
	#EVMAP_USE_HT


	)

112 #ifde‡
EVMAP_USE_HT


113 
	~"ht-öã∫Æ.h
"

114 
evít_m≠_íåy
;

115 
HT_HEAD
(
evít_io_m≠
, 
evít_m≠_íåy
);

117 
	#evít_io_m≠
 
evít_sig«l_m≠


	)

124 
	sevít_sig«l_m≠
 {

127 **
íåõs
;

129 
√¡rõs
;

136 
	scomm⁄_timeout_li°
 {

138 
evít_li°
 
evíts
;

141 
timevÆ
 
duøti⁄
;

144 
evít
 
timeout_evít
;

146 
evít_ba£
 *
ba£
;

150 
	#COMMON_TIMEOUT_MICROSECONDS_MASK
 0x000fffff

	)

152 
evít_ch™ge
;

156 
	sevít_ch™gñi°
 {

157 
evít_ch™ge
 *
ch™ges
;

158 
n_ch™ges
;

159 
ch™ges_size
;

162 #i‚de‡
_EVENT_DISABLE_DEBUG_MODE


164 
_evít_debug_mode_⁄
;

165 
	#EVENT_DEBUG_MODE_IS_ON
(Ë(
_evít_debug_mode_⁄
)

	)

167 
	#EVENT_DEBUG_MODE_IS_ON
(Ë(0)

	)

170 
	sevít_ba£
 {

173 c⁄° 
evít›
 *
	gev£l
;

175 *
	gevba£
;

179 
evít_ch™gñi°
 
	gch™gñi°
;

183 c⁄° 
evít›
 *
	gevsig£l
;

185 
evsig_öfo
 
	gsig
;

188 
	gvútuÆ_evít_cou¡
;

190 
	gevít_cou¡
;

192 
	gevít_cou¡_a˘ive
;

196 
	gevít_gŸãrm
;

198 
	gevít_bªak
;

200 
	gevít_c⁄töue
;

203 
	gevít_ru¬ög_¥i‹ôy
;

207 
	gru¬ög_lo›
;

214 
evít_li°
 *
	ga˘ivequeues
;

216 
	g«˘ivequeues
;

222 
comm⁄_timeout_li°
 **
	gcomm⁄_timeout_queues
;

224 
	gn_comm⁄_timeouts
;

226 
	gn_comm⁄_timeouts_Æloˇãd
;

230 
de„ºed_cb_queue
 
	gde„r_queue
;

233 
evít_io_m≠
 
	gio
;

236 
evít_sig«l_m≠
 
	gsigm≠
;

239 
evít_li°
 
	gevítqueue
;

242 
timevÆ
 
	gevít_tv
;

245 
mö_hóp
 
	gtimehóp
;

249 
timevÆ
 
	gtv_ˇche
;

251 #i‡
deföed
(
_EVENT_HAVE_CLOCK_GETTIME
Ë&& deföed(
CLOCK_MONOTONIC
)

254 
timevÆ
 
	gtv_˛ock_diff
;

256 
time_t
 
	gœ°_upd©ed_˛ock_diff
;

259 #i‚de‡
_EVENT_DISABLE_THREAD_SUPPORT


262 
	gth_ow√r_id
;

264 *
	gth_ba£_lock
;

266 
evít
 *
	gcuºít_evít
;

269 *
	gcuºít_evít_c⁄d
;

271 
	gcuºít_evít_waôîs
;

274 #ifde‡
WIN32


276 
evít_io˝_p‹t
 *
	gio˝
;

280 
evít_ba£_c⁄fig_Êag
 
	gÊags
;

285 
	gis_nŸify_≥ndög
;

288 
evutû_sockë_t
 
	gth_nŸify_fd
[2];

291 
evít
 
	gth_nŸify
;

293 (*
	gth_nŸify_‚
)(
evít_ba£
 *
	gba£
);

296 
	sevít_c⁄fig_íåy
 {

297 
TAILQ_ENTRY
(
evít_c⁄fig_íåy
Ë
	g√xt
;

299 c⁄° *
	gavoid_mëhod
;

304 
	sevít_c⁄fig
 {

305 
TAILQ_HEAD
(
evít_c⁄figq
, 
evít_c⁄fig_íåy
Ë
	gíåõs
;

307 
	gn_˝us_höt
;

308 
evít_mëhod_„©uª
 
	gªquúe_„©uªs
;

309 
evít_ba£_c⁄fig_Êag
 
	gÊags
;

313 #i‡
deföed
(
_EVENT_HAVE_SYS_QUEUE_H
Ë&& !deföed(
_EVENT_HAVE_TAILQFOREACH
)

314 #i‚de‡
TAILQ_FIRST


315 
	#TAILQ_FIRST
(
hód
Ë((hód)->
tqh_fú°
)

	)

317 #i‚de‡
TAILQ_END


318 
	#TAILQ_END
(
hód
Ë
NULL


	)

320 #i‚de‡
TAILQ_NEXT


321 
	#TAILQ_NEXT
(
ñm
, 
fõld
Ë(”lm)->fõld.
tqe_√xt
)

	)

324 #i‚de‡
TAILQ_FOREACH


325 
	#TAILQ_FOREACH
(
v¨
, 
hód
, 
fõld
) \

326 (
v¨
Ë
	`TAILQ_FIRST
(
hód
); \

327 (
v¨
Ë!
	`TAILQ_END
(
hód
); \

328 (
v¨
Ë
	`TAILQ_NEXT
(v¨, 
fõld
))

	)

331 #i‚de‡
TAILQ_INSERT_BEFORE


332 
	#TAILQ_INSERT_BEFORE
(
li°ñm
, 
ñm
, 
fõld
) do { \

333 (
ñm
)->
fõld
.
tqe_¥ev
 = (
li°ñm
)->field.tqe_prev; \

334 (
ñm
)->
fõld
.
tqe_√xt
 = (
li°ñm
); \

335 *(
li°ñm
)->
fõld
.
tqe_¥ev
 = (
ñm
); \

336 (
li°ñm
)->
fõld
.
tqe_¥ev
 = &(
ñm
)->fõld.
tqe_√xt
; \

337 } 0)

	)

341 
	#N_ACTIVE_CALLBACKS
(
ba£
) \

342 ((
ba£
)->
evít_cou¡_a˘ive
 + (ba£)->
de„r_queue
.
a˘ive_cou¡
)

	)

344 
_evsig_£t_h™dÀr
(
evít_ba£
 *
ba£
, 
evsig«l
,

345 (*
‚
)());

346 
_evsig_ª°‹e_h™dÀr
(
evít_ba£
 *
ba£
, 
evsig«l
);

349 
evít_a˘ive_nﬁock
(
evít
 *
ev
, 
ªs
, 
cou¡
);

352 
evít_ba£_add_vútuÆ
(
evít_ba£
 *
ba£
);

353 
evít_ba£_dñ_vútuÆ
(
evít_ba£
 *
ba£
);

361 
evít_ba£_as£π_ok
(
evít_ba£
 *
ba£
);

363 #ifde‡
__˝lu•lus


	@event.c

27 
	~"evít2/evít-c⁄fig.h
"

29 #ifde‡
WIN32


30 
	~<wösock2.h
>

31 
	#WIN32_LEAN_AND_MEAN


	)

32 
	~<wödows.h
>

33 #unde‡
WIN32_LEAN_AND_MEAN


35 
	~<sys/ty≥s.h
>

36 #i‡!
deföed
(
WIN32
Ë&& deföed(
_EVENT_HAVE_SYS_TIME_H
)

37 
	~<sys/time.h
>

39 
	~<sys/queue.h
>

40 #ifde‡
_EVENT_HAVE_SYS_SOCKET_H


41 
	~<sys/sockë.h
>

43 
	~<°dio.h
>

44 
	~<°dlib.h
>

45 #ifde‡
_EVENT_HAVE_UNISTD_H


46 
	~<uni°d.h
>

48 #ifde‡
_EVENT_HAVE_SYS_EVENTFD_H


49 
	~<sys/evítfd.h
>

51 
	~<˘y≥.h
>

52 
	~<î∫o.h
>

53 
	~<sig«l.h
>

54 
	~<°rög.h
>

55 
	~<time.h
>

57 
	~"evít2/evít.h
"

58 
	~"evít2/evít_°ru˘.h
"

59 
	~"evít2/evít_com∑t.h
"

60 
	~"evít-öã∫Æ.h
"

61 
	~"de„r-öã∫Æ.h
"

62 
	~"evthªad-öã∫Æ.h
"

63 
	~"evít2/thªad.h
"

64 
	~"evít2/utû.h
"

65 
	~"log-öã∫Æ.h
"

66 
	~"evm≠-öã∫Æ.h
"

67 
	~"io˝-öã∫Æ.h
"

68 
	~"ch™gñi°-öã∫Æ.h
"

69 
	~"ht-öã∫Æ.h
"

70 
	~"utû-öã∫Æ.h
"

72 #ifde‡
_EVENT_HAVE_EVENT_PORTS


73 c⁄° 
evít›
 
evp‹t›s
;

75 #ifde‡
_EVENT_HAVE_SELECT


76 c⁄° 
evít›
 
£À˘›s
;

78 #ifde‡
_EVENT_HAVE_POLL


79 c⁄° 
evít›
 
pﬁl›s
;

81 #ifde‡
_EVENT_HAVE_EPOLL


82 c⁄° 
evít›
 
ïﬁl›s
;

84 #ifde‡
_EVENT_HAVE_WORKING_KQUEUE


85 c⁄° 
evít›
 
kq›s
;

87 #ifde‡
_EVENT_HAVE_DEVPOLL


88 c⁄° 
evít›
 
devpﬁl›s
;

90 #ifde‡
WIN32


91 c⁄° 
evít›
 
wö32›s
;

95 c⁄° 
evít›
 *
	gevít›s
[] = {

96 #ifde‡
_EVENT_HAVE_EVENT_PORTS


97 &
evp‹t›s
,

99 #ifde‡
_EVENT_HAVE_WORKING_KQUEUE


100 &
kq›s
,

102 #ifde‡
_EVENT_HAVE_EPOLL


103 &
ïﬁl›s
,

105 #ifde‡
_EVENT_HAVE_DEVPOLL


106 &
devpﬁl›s
,

108 #ifde‡
_EVENT_HAVE_POLL


109 &
pﬁl›s
,

111 #ifde‡
_EVENT_HAVE_SELECT


112 &
£À˘›s
,

114 #ifde‡
WIN32


115 &
wö32›s
,

117 
NULL


121 
evít_ba£
 *
	gevít_globÆ_cuºít_ba£_
 = 
NULL
;

122 
	#cuºít_ba£
 
evít_globÆ_cuºít_ba£_


	)

126 
	gu£_m⁄Ÿ⁄ic
;

129 
ölöe
 
evít_add_öã∫Æ
(
evít
 *
ev
,

130 c⁄° 
timevÆ
 *
tv
, 
tv_is_absﬁuã
);

131 
ölöe
 
evít_dñ_öã∫Æ
(
evít
 *
ev
);

133 
evít_queue_ö£π
(
evít_ba£
 *, 
evít
 *, );

134 
evít_queue_ªmove
(
evít_ba£
 *, 
evít
 *, );

135 
evít_havìvíts
(
evít_ba£
 *);

137 
evít_¥o˚ss_a˘ive
(
evít_ba£
 *);

139 
timeout_√xt
(
evít_ba£
 *, 
timevÆ
 **);

140 
timeout_¥o˚ss
(
evít_ba£
 *);

141 
timeout_c‹ª˘
(
evít_ba£
 *, 
timevÆ
 *);

143 
ölöe
 
evít_sig«l_˛osuª
(
evít_ba£
 *, 
evít
 *
ev
);

144 
ölöe
 
evít_≥rsi°_˛osuª
(
evít_ba£
 *, 
evít
 *
ev
);

146 
evthªad_nŸify_ba£
(
evít_ba£
 *
ba£
);

148 #i‚de‡
_EVENT_DISABLE_DEBUG_MODE


155 
	sevít_debug_íåy
 {

156 
HT_ENTRY
(
evít_debug_íåy
Ë
	mnode
;

157 c⁄° 
evít
 *
	m±r
;

158 
	madded
 : 1;

161 
ölöe
 

162 
	$hash_debug_íåy
(c⁄° 
evít_debug_íåy
 *
e
)

168 
u
 = (Ë((
ev_uöçå_t
Ë
e
->
±r
);

172  (
u
 >> 6);

173 
	}
}

175 
ölöe
 

176 
	$eq_debug_íåy
(c⁄° 
evít_debug_íåy
 *
a
,

177 c⁄° 
evít_debug_íåy
 *
b
)

179  
a
->
±r
 =
b
->ptr;

180 
	}
}

182 
	g_evít_debug_mode_⁄
 = 0;

184 
	gevít_debug_mode_too_œã
 = 0;

185 #i‚de‡
_EVENT_DISABLE_THREAD_SUPPORT


186 *
	g_evít_debug_m≠_lock
 = 
NULL
;

188 
	$HT_HEAD
(
evít_debug_m≠
, 
evít_debug_íåy
Ë
globÆ_debug_m≠
 =

189 
	`HT_INITIALIZER
();

191 
	$HT_PROTOTYPE
(
evít_debug_m≠
, 
evít_debug_íåy
, 
node
, 
hash_debug_íåy
,

192 
eq_debug_íåy
)

193 
	$HT_GENERATE
(
evít_debug_m≠
, 
evít_debug_íåy
, 
node
, 
hash_debug_íåy
,

194 
eq_debug_íåy
, 0.5, 
mm_mÆloc
, 
mm_ªÆloc
, 
mm_‰ì
)

197 
	#_evít_debug_nŸe_£tup
(
ev
) do { \

198 i‡(
_evít_debug_mode_⁄
) { \

199 
evít_debug_íåy
 *
dít
,
föd
; \

200 
föd
.
±r
 = (
ev
); \

201 
	`EVLOCK_LOCK
(
_evít_debug_m≠_lock
, 0); \

202 
dít
 = 
	`HT_FIND
(
evít_debug_m≠
, &
globÆ_debug_m≠
, &
föd
); \

203 i‡(
dít
) { \

204 
dít
->
added
 = 0; \

206 
dít
 = 
	`mm_mÆloc
((*dent)); \

207 i‡(!
dít
) \

208 
	`evít_îr
(1, \

210 
dít
->
±r
 = (
ev
); \

211 
dít
->
added
 = 0; \

212 
	`HT_INSERT
(
evít_debug_m≠
, &
globÆ_debug_m≠
, 
dít
); \

214 
	`EVLOCK_UNLOCK
(
_evít_debug_m≠_lock
, 0); \

216 
evít_debug_mode_too_œã
 = 1; \

217 
	}
} 0)

	)

219 
	#_evít_debug_nŸe_ã¨down
(
ev
) do { \

220 i‡(
_evít_debug_mode_⁄
) { \

221 
evít_debug_íåy
 *
dít
,
föd
; \

222 
föd
.
±r
 = (
ev
); \

223 
	`EVLOCK_LOCK
(
_evít_debug_m≠_lock
, 0); \

224 
dít
 = 
	`HT_REMOVE
(
evít_debug_m≠
, &
globÆ_debug_m≠
, &
föd
); \

225 i‡(
dít
) \

226 
	`mm_‰ì
(
dít
); \

227 
	`EVLOCK_UNLOCK
(
_evít_debug_m≠_lock
, 0); \

229 
evít_debug_mode_too_œã
 = 1; \

230 } 0)

	)

232 
	#_evít_debug_nŸe_add
(
ev
) do { \

233 i‡(
_evít_debug_mode_⁄
) { \

234 
evít_debug_íåy
 *
dít
,
föd
; \

235 
föd
.
±r
 = (
ev
); \

236 
	`EVLOCK_LOCK
(
_evít_debug_m≠_lock
, 0); \

237 
dít
 = 
	`HT_FIND
(
evít_debug_m≠
, &
globÆ_debug_m≠
, &
föd
); \

238 i‡(
dít
) { \

239 
dít
->
added
 = 1; \

241 
	`evít_îrx
(
_EVENT_ERR_ABORT
, \

243 " (evíts: 0x%x, fd: "
EV_SOCK_FMT
 \

245 
__func__
, (
ev
), (ev)->
ev_evíts
, \

246 
	`EV_SOCK_ARG
((
ev
)->
ev_fd
), (ev)->
ev_Êags
); \

248 
	`EVLOCK_UNLOCK
(
_evít_debug_m≠_lock
, 0); \

250 
evít_debug_mode_too_œã
 = 1; \

251 } 0)

	)

253 
	#_evít_debug_nŸe_dñ
(
ev
) do { \

254 i‡(
_evít_debug_mode_⁄
) { \

255 
evít_debug_íåy
 *
dít
,
föd
; \

256 
föd
.
±r
 = (
ev
); \

257 
	`EVLOCK_LOCK
(
_evít_debug_m≠_lock
, 0); \

258 
dít
 = 
	`HT_FIND
(
evít_debug_m≠
, &
globÆ_debug_m≠
, &
föd
); \

259 i‡(
dít
) { \

260 
dít
->
added
 = 0; \

262 
	`evít_îrx
(
_EVENT_ERR_ABORT
, \

264 " (evíts: 0x%x, fd: "
EV_SOCK_FMT
 \

266 
__func__
, (
ev
), (ev)->
ev_evíts
, \

267 
	`EV_SOCK_ARG
((
ev
)->
ev_fd
), (ev)->
ev_Êags
); \

269 
	`EVLOCK_UNLOCK
(
_evít_debug_m≠_lock
, 0); \

271 
evít_debug_mode_too_œã
 = 1; \

272 } 0)

	)

274 
	#_evít_debug_as£π_is_£tup
(
ev
) do { \

275 i‡(
_evít_debug_mode_⁄
) { \

276 
evít_debug_íåy
 *
dít
,
föd
; \

277 
föd
.
±r
 = (
ev
); \

278 
	`EVLOCK_LOCK
(
_evít_debug_m≠_lock
, 0); \

279 
dít
 = 
	`HT_FIND
(
evít_debug_m≠
, &
globÆ_debug_m≠
, &
föd
); \

280 i‡(!
dít
) { \

281 
	`evít_îrx
(
_EVENT_ERR_ABORT
, \

283 " (evíts: 0x%x, fd: "
EV_SOCK_FMT
\

285 
__func__
, (
ev
), (ev)->
ev_evíts
, \

286 
	`EV_SOCK_ARG
((
ev
)->
ev_fd
), (ev)->
ev_Êags
); \

288 
	`EVLOCK_UNLOCK
(
_evít_debug_m≠_lock
, 0); \

290 } 0)

	)

293 
	#_evít_debug_as£π_nŸ_added
(
ev
) do { \

294 i‡(
_evít_debug_mode_⁄
) { \

295 
evít_debug_íåy
 *
dít
,
föd
; \

296 
föd
.
±r
 = (
ev
); \

297 
	`EVLOCK_LOCK
(
_evít_debug_m≠_lock
, 0); \

298 
dít
 = 
	`HT_FIND
(
evít_debug_m≠
, &
globÆ_debug_m≠
, &
föd
); \

299 i‡(
dít
 && dít->
added
) { \

300 
	`evít_îrx
(
_EVENT_ERR_ABORT
, \

302 " (evíts: 0x%x, fd: "
EV_SOCK_FMT
", " \

304 
__func__
, (
ev
), (ev)->
ev_evíts
, \

305 
	`EV_SOCK_ARG
((
ev
)->
ev_fd
), (ev)->
ev_Êags
); \

307 
	`EVLOCK_UNLOCK
(
_evít_debug_m≠_lock
, 0); \

309 } 0)

	)

311 
	#_evít_debug_nŸe_£tup
(
ev
) \

312 (()0)

	)

313 
	#_evít_debug_nŸe_ã¨down
(
ev
) \

314 (()0)

	)

315 
	#_evít_debug_nŸe_add
(
ev
) \

316 (()0)

	)

317 
	#_evít_debug_nŸe_dñ
(
ev
) \

318 (()0)

	)

319 
	#_evít_debug_as£π_is_£tup
(
ev
) \

320 (()0)

	)

321 
	#_evít_debug_as£π_nŸ_added
(
ev
) \

322 (()0)

	)

325 
	#EVENT_BASE_ASSERT_LOCKED
(
ba£
) \

326 
	`EVLOCK_ASSERT_LOCKED
((
ba£
)->
th_ba£_lock
)

	)

331 
	$dëe˘_m⁄Ÿ⁄ic
()

333 #i‡
	`deföed
(
_EVENT_HAVE_CLOCK_GETTIME
Ë&& deföed(
CLOCK_MONOTONIC
)

334 
time•ec
 
ts
;

335 
u£_m⁄Ÿ⁄ic_öôülized
 = 0;

337 i‡(
u£_m⁄Ÿ⁄ic_öôülized
)

340 i‡(
	`˛ock_gëtime
(
CLOCK_MONOTONIC
, &
ts
) == 0)

341 
u£_m⁄Ÿ⁄ic
 = 1;

343 
u£_m⁄Ÿ⁄ic_öôülized
 = 1;

345 
	}
}

349 
	#CLOCK_SYNC_INTERVAL
 -1

	)

357 
	$gëtime
(
evít_ba£
 *
ba£
, 
timevÆ
 *
ç
)

359 
	`EVENT_BASE_ASSERT_LOCKED
(
ba£
);

361 i‡(
ba£
->
tv_ˇche
.
tv_£c
) {

362 *
ç
 = 
ba£
->
tv_ˇche
;

366 #i‡
	`deföed
(
_EVENT_HAVE_CLOCK_GETTIME
Ë&& deföed(
CLOCK_MONOTONIC
)

367 i‡(
u£_m⁄Ÿ⁄ic
) {

368 
time•ec
 
ts
;

370 i‡(
	`˛ock_gëtime
(
CLOCK_MONOTONIC
, &
ts
) == -1)

373 
ç
->
tv_£c
 = 
ts
.tv_sec;

374 
ç
->
tv_u£c
 = 
ts
.
tv_n£c
 / 1000;

375 i‡(
ba£
->
œ°_upd©ed_˛ock_diff
 + 
CLOCK_SYNC_INTERVAL


376 < 
ts
.
tv_£c
) {

377 
timevÆ
 
tv
;

378 
	`evutû_gëtimeofday
(&
tv
,
NULL
);

379 
	`evutû_timîsub
(&
tv
, 
ç
, &
ba£
->
tv_˛ock_diff
);

380 
ba£
->
œ°_upd©ed_˛ock_diff
 = 
ts
.
tv_£c
;

387  (
	`evutû_gëtimeofday
(
ç
, 
NULL
));

388 
	}
}

391 
	$evít_ba£_gëtimeofday_ˇched
(
evít_ba£
 *
ba£
, 
timevÆ
 *
tv
)

393 
r
;

394 i‡(!
ba£
) {

395 
ba£
 = 
cuºít_ba£
;

396 i‡(!
cuºít_ba£
)

397  
	`evutû_gëtimeofday
(
tv
, 
NULL
);

400 
	`EVBASE_ACQUIRE_LOCK
(
ba£
, 
th_ba£_lock
);

401 i‡(
ba£
->
tv_ˇche
.
tv_£c
 == 0) {

402 
r
 = 
	`evutû_gëtimeofday
(
tv
, 
NULL
);

404 #i‡
	`deföed
(
_EVENT_HAVE_CLOCK_GETTIME
Ë&& deföed(
CLOCK_MONOTONIC
)

405 
	`evutû_timîadd
(&
ba£
->
tv_ˇche
, &ba£->
tv_˛ock_diff
, 
tv
);

407 *
tv
 = 
ba£
->
tv_ˇche
;

409 
r
 = 0;

411 
	`EVBASE_RELEASE_LOCK
(
ba£
, 
th_ba£_lock
);

412  
r
;

413 
	}
}

416 
ölöe
 

417 
	$˛ór_time_ˇche
(
evít_ba£
 *
ba£
)

419 
ba£
->
tv_ˇche
.
tv_£c
 = 0;

420 
	}
}

423 
ölöe
 

424 
	$upd©e_time_ˇche
(
evít_ba£
 *
ba£
)

426 
ba£
->
tv_ˇche
.
tv_£c
 = 0;

427 i‡(!(
ba£
->
Êags
 & 
EVENT_BASE_FLAG_NO_CACHE_TIME
))

428 
	`gëtime
(
ba£
, &ba£->
tv_ˇche
);

429 
	}
}

431 
evít_ba£
 *

432 
	$evít_öô
()

434 
evít_ba£
 *
ba£
 = 
	`evít_ba£_√w_wôh_c⁄fig
(
NULL
);

436 i‡(
ba£
 =
NULL
) {

437 
	`evít_îrx
(1, "%s: U«bÀÅÿc⁄°ru˘Évít_ba£", 
__func__
);

438  
NULL
;

441 
cuºít_ba£
 = 
ba£
;

443  (
ba£
);

444 
	}
}

446 
evít_ba£
 *

447 
	$evít_ba£_√w
()

449 
evít_ba£
 *
ba£
 = 
NULL
;

450 
evít_c⁄fig
 *
cfg
 = 
	`evít_c⁄fig_√w
();

451 i‡(
cfg
) {

452 
ba£
 = 
	`evít_ba£_√w_wôh_c⁄fig
(
cfg
);

453 
	`evít_c⁄fig_‰ì
(
cfg
);

455  
ba£
;

456 
	}
}

461 
	$evít_c⁄fig_is_avoided_mëhod
(c⁄° 
evít_c⁄fig
 *
cfg
,

462 c⁄° *
mëhod
)

464 
evít_c⁄fig_íåy
 *
íåy
;

466 
	`TAILQ_FOREACH
(
íåy
, &
cfg
->
íåõs
, 
√xt
) {

467 i‡(
íåy
->
avoid_mëhod
 !
NULL
 &&

468 
	`°rcmp
(
íåy
->
avoid_mëhod
, 
mëhod
) == 0)

473 
	}
}

477 
	$evít_is_mëhod_dißbÀd
(c⁄° *
«me
)

479 
ívú⁄mít
[64];

480 
i
;

482 
	`evutû_¢¥ötf
(
ívú⁄mít
, ”nvú⁄mít), "EVENT_NO%s", 
«me
);

483 
i
 = 8; 
ívú⁄mít
[i] != '\0'; ++i)

484 
ívú⁄mít
[
i
] = 
	`EVUTIL_TOUPPER
(environment[i]);

487  (
	`evutû_gëív
(
ívú⁄mít
Ë!
NULL
);

488 
	}
}

491 
	$evít_ba£_gë_„©uªs
(c⁄° 
evít_ba£
 *
ba£
)

493  
ba£
->
ev£l
->
„©uªs
;

494 
	}
}

497 
	$evít_de„ºed_cb_queue_öô
(
de„ºed_cb_queue
 *
cb
)

499 
	`mem£t
(
cb
, 0, (
de„ºed_cb_queue
));

500 
	`TAILQ_INIT
(&
cb
->
de„ºed_cb_li°
);

501 
	}
}

505 
	$nŸify_ba£_cbq_ˇŒback
(
de„ºed_cb_queue
 *
cb
, *
ba£±r
)

507 
evít_ba£
 *
ba£
 = 
ba£±r
;

508 i‡(
	`EVBASE_NEED_NOTIFY
(
ba£
))

509 
	`evthªad_nŸify_ba£
(
ba£
);

510 
	}
}

512 
de„ºed_cb_queue
 *

513 
	$evít_ba£_gë_de„ºed_cb_queue
(
evít_ba£
 *
ba£
)

515  
ba£
 ? &ba£->
de„r_queue
 : 
NULL
;

516 
	}
}

519 
	$evít_íabÀ_debug_mode
()

521 #i‚de‡
_EVENT_DISABLE_DEBUG_MODE


522 i‡(
_evít_debug_mode_⁄
)

523 
	`evít_îrx
(1, "%†wa†ˇŒedÅwi˚!", 
__func__
);

524 i‡(
evít_debug_mode_too_œã
)

525 
	`evít_îrx
(1, "%s must be called *before* creatingányÉvents "

526 "‹Évít_ba£s",
__func__
);

528 
_evít_debug_mode_⁄
 = 1;

530 
	`HT_INIT
(
evít_debug_m≠
, &
globÆ_debug_m≠
);

532 
	}
}

536 
	$evít_dißbÀ_debug_mode
()

538 
evít_debug_íåy
 **
ít
, *
vi˘im
;

540 
	`EVLOCK_LOCK
(
_evít_debug_m≠_lock
, 0);

541 
ít
 = 
	`HT_START
(
evít_debug_m≠
, &
globÆ_debug_m≠
);Ént; ) {

542 
vi˘im
 = *
ít
;

543 
ít
 = 
	`HT_NEXT_RMV
(
evít_debug_m≠
,&
globÆ_debug_m≠
,Ént);

544 
	`mm_‰ì
(
vi˘im
);

546 
	`HT_CLEAR
(
evít_debug_m≠
, &
globÆ_debug_m≠
);

547 
	`EVLOCK_UNLOCK
(
_evít_debug_m≠_lock
 , 0);

548 
	}
}

551 
evít_ba£
 *

552 
	$evít_ba£_√w_wôh_c⁄fig
(c⁄° 
evít_c⁄fig
 *
cfg
)

554 
i
;

555 
evít_ba£
 *
ba£
;

556 
should_check_ívú⁄mít
;

558 #i‚de‡
_EVENT_DISABLE_DEBUG_MODE


559 
evít_debug_mode_too_œã
 = 1;

562 i‡((
ba£
 = 
	`mm_ˇŒoc
(1, (
evít_ba£
))Ë=
NULL
) {

563 
	`evít_w¨n
("%s: cÆloc", 
__func__
);

564  
NULL
;

566 
	`dëe˘_m⁄Ÿ⁄ic
();

567 
	`gëtime
(
ba£
, &ba£->
evít_tv
);

569 
	`mö_hóp_˘‹
(&
ba£
->
timehóp
);

570 
	`TAILQ_INIT
(&
ba£
->
evítqueue
);

571 
ba£
->
sig
.
ev_sig«l_∑ú
[0] = -1;

572 
ba£
->
sig
.
ev_sig«l_∑ú
[1] = -1;

573 
ba£
->
th_nŸify_fd
[0] = -1;

574 
ba£
->
th_nŸify_fd
[1] = -1;

576 
	`evít_de„ºed_cb_queue_öô
(&
ba£
->
de„r_queue
);

577 
ba£
->
de„r_queue
.
nŸify_‚
 = 
nŸify_ba£_cbq_ˇŒback
;

578 
ba£
->
de„r_queue
.
nŸify_¨g
 = base;

579 i‡(
cfg
)

580 
ba£
->
Êags
 = 
cfg
->flags;

582 
	`evm≠_io_öôm≠
(&
ba£
->
io
);

583 
	`evm≠_sig«l_öôm≠
(&
ba£
->
sigm≠
);

584 
	`evít_ch™gñi°_öô
(&
ba£
->
ch™gñi°
);

586 
ba£
->
evba£
 = 
NULL
;

588 
should_check_ívú⁄mít
 =

589 !(
cfg
 && (cfg->
Êags
 & 
EVENT_BASE_FLAG_IGNORE_ENV
));

591 
i
 = 0; 
evít›s
[i] && !
ba£
->
evba£
; i++) {

592 i‡(
cfg
 !
NULL
) {

594 i‡(
	`evít_c⁄fig_is_avoided_mëhod
(
cfg
,

595 
evít›s
[
i
]->
«me
))

597 i‡((
evít›s
[
i
]->
„©uªs
 & 
cfg
->
ªquúe_„©uªs
)

598 !
cfg
->
ªquúe_„©uªs
)

603 i‡(
should_check_ívú⁄mít
 &&

604 
	`evít_is_mëhod_dißbÀd
(
evít›s
[
i
]->
«me
))

607 
ba£
->
ev£l
 = 
evít›s
[
i
];

609 
ba£
->
evba£
 = ba£->
ev£l
->
	`öô
(base);

612 i‡(
ba£
->
evba£
 =
NULL
) {

613 
	`evít_w¨nx
("%s:ÇoÉvent mechanismávailable",

614 
__func__
);

615 
ba£
->
ev£l
 = 
NULL
;

616 
	`evít_ba£_‰ì
(
ba£
);

617  
NULL
;

620 i‡(
	`evutû_gëív
("EVENT_SHOW_METHOD"))

621 
	`evít_msgx
("libevíàusög: %s", 
ba£
->
ev£l
->
«me
);

624 i‡(
	`evít_ba£_¥i‹ôy_öô
(
ba£
, 1) < 0) {

625 
	`evít_ba£_‰ì
(
ba£
);

626  
NULL
;

631 #i‚de‡
_EVENT_DISABLE_THREAD_SUPPORT


632 i‡(
	`EVTHREAD_LOCKING_ENABLED
() &&

633 (!
cfg
 || !(cfg->
Êags
 & 
EVENT_BASE_FLAG_NOLOCK
))) {

634 
r
;

635 
	`EVTHREAD_ALLOC_LOCK
(
ba£
->
th_ba£_lock
,

636 
EVTHREAD_LOCKTYPE_RECURSIVE
);

637 
ba£
->
de„r_queue
.
lock
 = ba£->
th_ba£_lock
;

638 
	`EVTHREAD_ALLOC_COND
(
ba£
->
cuºít_evít_c⁄d
);

639 
r
 = 
	`evthªad_make_ba£_nŸifübÀ
(
ba£
);

640 i‡(
r
<0) {

641 
	`evít_w¨nx
("%s: U«bÀÅÿmakêba£ÇŸifübÀ.", 
__func__
);

642 
	`evít_ba£_‰ì
(
ba£
);

643  
NULL
;

648 #ifde‡
WIN32


649 i‡(
cfg
 && (cfg->
Êags
 & 
EVENT_BASE_FLAG_STARTUP_IOCP
))

650 
	`evít_ba£_°¨t_io˝
(
ba£
, 
cfg
->
n_˝us_höt
);

653  (
ba£
);

654 
	}
}

657 
	$evít_ba£_°¨t_io˝
(
evít_ba£
 *
ba£
, 
n_˝us
)

659 #ifde‡
WIN32


660 i‡(
ba£
->
io˝
)

662 
ba£
->
io˝
 = 
	`evít_io˝_p‹t_œunch
(
n_˝us
);

663 i‡(!
ba£
->
io˝
) {

664 
	`evít_w¨nx
("%s: Couldn'àœunch IOCP", 
__func__
);

671 
	}
}

674 
	$evít_ba£_°›_io˝
(
evít_ba£
 *
ba£
)

676 #ifde‡
WIN32


677 
rv
;

679 i‡(!
ba£
->
io˝
)

681 
rv
 = 
	`evít_io˝_shutdown
(
ba£
->
io˝
, -1);

682 
	`EVUTIL_ASSERT
(
rv
 >= 0);

683 
ba£
->
io˝
 = 
NULL
;

685 
	}
}

688 
	$evít_ba£_‰ì
(
evít_ba£
 *
ba£
)

690 
i
, 
n_dñëed
=0;

691 
evít
 *
ev
;

697 i‡(
ba£
 =
NULL
 && 
cuºít_ba£
)

698 
ba£
 = 
cuºít_ba£
;

700 i‡(
ba£
 =
cuºít_ba£
)

701 
cuºít_ba£
 = 
NULL
;

703 i‡(
ba£
 =
NULL
) {

704 
	`evít_w¨nx
("%s:Çÿba£Åÿ‰ì", 
__func__
);

709 #ifde‡
WIN32


710 
	`evít_ba£_°›_io˝
(
ba£
);

714 i‡(
ba£
->
th_nŸify_fd
[0] != -1) {

715 
	`evít_dñ
(&
ba£
->
th_nŸify
);

716 
	`EVUTIL_CLOSESOCKET
(
ba£
->
th_nŸify_fd
[0]);

717 i‡(
ba£
->
th_nŸify_fd
[1] != -1)

718 
	`EVUTIL_CLOSESOCKET
(
ba£
->
th_nŸify_fd
[1]);

719 
ba£
->
th_nŸify_fd
[0] = -1;

720 
ba£
->
th_nŸify_fd
[1] = -1;

721 
	`evít_debug_u«ssign
(&
ba£
->
th_nŸify
);

725 
ev
 = 
	`TAILQ_FIRST
(&
ba£
->
evítqueue
);Év; ) {

726 
evít
 *
√xt
 = 
	`TAILQ_NEXT
(
ev
, 
ev_√xt
);

727 i‡(!(
ev
->
ev_Êags
 & 
EVLIST_INTERNAL
)) {

728 
	`evít_dñ
(
ev
);

729 ++
n_dñëed
;

731 
ev
 = 
√xt
;

733 (
ev
 = 
	`mö_hóp_t›
(&
ba£
->
timehóp
)Ë!
NULL
) {

734 
	`evít_dñ
(
ev
);

735 ++
n_dñëed
;

737 
i
 = 0; i < 
ba£
->
n_comm⁄_timeouts
; ++i) {

738 
comm⁄_timeout_li°
 *
˘l
 =

739 
ba£
->
comm⁄_timeout_queues
[
i
];

740 
	`evít_dñ
(&
˘l
->
timeout_evít
);

741 
	`evít_debug_u«ssign
(&
˘l
->
timeout_evít
);

742 
ev
 = 
	`TAILQ_FIRST
(&
˘l
->
evíts
);Év; ) {

743 
evít
 *
√xt
 = 
	`TAILQ_NEXT
(
ev
,

744 
ev_timeout_pos
.
ev_√xt_wôh_comm⁄_timeout
);

745 i‡(!(
ev
->
ev_Êags
 & 
EVLIST_INTERNAL
)) {

746 
	`evít_dñ
(
ev
);

747 ++
n_dñëed
;

749 
ev
 = 
√xt
;

751 
	`mm_‰ì
(
˘l
);

753 i‡(
ba£
->
comm⁄_timeout_queues
)

754 
	`mm_‰ì
(
ba£
->
comm⁄_timeout_queues
);

756 
i
 = 0; i < 
ba£
->
«˘ivequeues
; ++i) {

757 
ev
 = 
	`TAILQ_FIRST
(&
ba£
->
a˘ivequeues
[
i
]);Év; ) {

758 
evít
 *
√xt
 = 
	`TAILQ_NEXT
(
ev
, 
ev_a˘ive_√xt
);

759 i‡(!(
ev
->
ev_Êags
 & 
EVLIST_INTERNAL
)) {

760 
	`evít_dñ
(
ev
);

761 ++
n_dñëed
;

763 
ev
 = 
√xt
;

767 i‡(
n_dñëed
)

768 
	`evít_debug
(("%s: %dÉvents were still set in base",

769 
__func__
, 
n_dñëed
));

771 i‡(
ba£
->
ev£l
 !
NULL
 && ba£->ev£l->
dóŒoc
 != NULL)

772 
ba£
->
ev£l
->
	`dóŒoc
(base);

774 
i
 = 0; i < 
ba£
->
«˘ivequeues
; ++i)

775 
	`EVUTIL_ASSERT
(
	`TAILQ_EMPTY
(&
ba£
->
a˘ivequeues
[
i
]));

777 
	`EVUTIL_ASSERT
(
	`mö_hóp_em±y
(&
ba£
->
timehóp
));

778 
	`mö_hóp_dt‹
(&
ba£
->
timehóp
);

780 
	`mm_‰ì
(
ba£
->
a˘ivequeues
);

782 
	`EVUTIL_ASSERT
(
	`TAILQ_EMPTY
(&
ba£
->
evítqueue
));

784 
	`evm≠_io_˛ór
(&
ba£
->
io
);

785 
	`evm≠_sig«l_˛ór
(&
ba£
->
sigm≠
);

786 
	`evít_ch™gñi°_‰ìmem
(&
ba£
->
ch™gñi°
);

788 
	`EVTHREAD_FREE_LOCK
(
ba£
->
th_ba£_lock
, 
EVTHREAD_LOCKTYPE_RECURSIVE
);

789 
	`EVTHREAD_FREE_COND
(
ba£
->
cuºít_evít_c⁄d
);

791 
	`mm_‰ì
(
ba£
);

792 
	}
}

796 
	$evít_ªöô
(
evít_ba£
 *
ba£
)

798 c⁄° 
evít›
 *
ev£l
;

799 
ªs
 = 0;

800 
evít
 *
ev
;

801 
was_nŸifübÀ
 = 0;

803 
	`EVBASE_ACQUIRE_LOCK
(
ba£
, 
th_ba£_lock
);

805 
ev£l
 = 
ba£
->evsel;

814 i‡(!
ev£l
->
√ed_ªöô
)

815 
d⁄e
;

819 i‡(
ba£
->
sig
.
ev_sig«l_added
) {

822 
	`evít_queue_ªmove
(
ba£
, &ba£->
sig
.
ev_sig«l
,

823 
EVLIST_INSERTED
);

824 i‡(
ba£
->
sig
.
ev_sig«l
.
ev_Êags
 & 
EVLIST_ACTIVE
)

825 
	`evít_queue_ªmove
(
ba£
, &ba£->
sig
.
ev_sig«l
,

826 
EVLIST_ACTIVE
);

827 i‡(
ba£
->
sig
.
ev_sig«l_∑ú
[0] != -1)

828 
	`EVUTIL_CLOSESOCKET
(
ba£
->
sig
.
ev_sig«l_∑ú
[0]);

829 i‡(
ba£
->
sig
.
ev_sig«l_∑ú
[1] != -1)

830 
	`EVUTIL_CLOSESOCKET
(
ba£
->
sig
.
ev_sig«l_∑ú
[1]);

831 
ba£
->
sig
.
ev_sig«l_added
 = 0;

833 i‡(
ba£
->
th_nŸify_fd
[0] != -1) {

836 
was_nŸifübÀ
 = 1;

837 
	`evít_queue_ªmove
(
ba£
, &ba£->
th_nŸify
,

838 
EVLIST_INSERTED
);

839 i‡(
ba£
->
th_nŸify
.
ev_Êags
 & 
EVLIST_ACTIVE
)

840 
	`evít_queue_ªmove
(
ba£
, &ba£->
th_nŸify
,

841 
EVLIST_ACTIVE
);

842 
ba£
->
sig
.
ev_sig«l_added
 = 0;

843 
	`EVUTIL_CLOSESOCKET
(
ba£
->
th_nŸify_fd
[0]);

844 i‡(
ba£
->
th_nŸify_fd
[1] != -1)

845 
	`EVUTIL_CLOSESOCKET
(
ba£
->
th_nŸify_fd
[1]);

846 
ba£
->
th_nŸify_fd
[0] = -1;

847 
ba£
->
th_nŸify_fd
[1] = -1;

848 
	`evít_debug_u«ssign
(&
ba£
->
th_nŸify
);

851 i‡(
ba£
->
ev£l
->
dóŒoc
 !
NULL
)

852 
ba£
->
ev£l
->
	`dóŒoc
(base);

853 
ba£
->
evba£
 = 
ev£l
->
	`öô
(base);

854 i‡(
ba£
->
evba£
 =
NULL
) {

855 
	`evít_îrx
(1, "%s: couldÇotÑeinitializeÉvent mechanism",

856 
__func__
);

857 
ªs
 = -1;

858 
d⁄e
;

861 
	`evít_ch™gñi°_‰ìmem
(&
ba£
->
ch™gñi°
);

862 
	`evm≠_io_˛ór
(&
ba£
->
io
);

863 
	`evm≠_sig«l_˛ór
(&
ba£
->
sigm≠
);

865 
	`TAILQ_FOREACH
(
ev
, &
ba£
->
evítqueue
, 
ev_√xt
) {

866 i‡(
ev
->
ev_evíts
 & (
EV_READ
|
EV_WRITE
)) {

867 i‡(
ev
 =&
ba£
->
sig
.
ev_sig«l
) {

874 i‡(
	`evm≠_io_add
(
ba£
, 
ev
->
ev_fd
,Év) == -1)

875 
ªs
 = -1;

876 } i‡(
ev
->
ev_evíts
 & 
EV_SIGNAL
) {

877 i‡(
	`evm≠_sig«l_add
(
ba£
, ()
ev
->
ev_fd
,Év) == -1)

878 
ªs
 = -1;

882 i‡(
was_nŸifübÀ
 && 
ªs
 == 0)

883 
ªs
 = 
	`evthªad_make_ba£_nŸifübÀ
(
ba£
);

885 
d⁄e
:

886 
	`EVBASE_RELEASE_LOCK
(
ba£
, 
th_ba£_lock
);

887  (
ªs
);

888 
	}
}

891 
	$evít_gë_suµ‹ãd_mëhods
()

893 c⁄° **
mëhods
 = 
NULL
;

894 c⁄° 
evít›
 **
mëhod
;

895 c⁄° **
tmp
;

896 
i
 = 0, 
k
;

899 
mëhod
 = &
evít›s
[0]; *mëhod !
NULL
; ++method) {

900 ++
i
;

904 
tmp
 = 
	`mm_ˇŒoc
((
i
 + 1), (*));

905 i‡(
tmp
 =
NULL
)

906  (
NULL
);

909 
k
 = 0, 
i
 = 0; 
evít›s
[k] !
NULL
; ++k) {

910 
tmp
[
i
++] = 
evít›s
[
k
]->
«me
;

912 
tmp
[
i
] = 
NULL
;

914 i‡(
mëhods
 !
NULL
)

915 
	`mm_‰ì
((**)
mëhods
);

917 
mëhods
 = 
tmp
;

919  (
mëhods
);

920 
	}
}

922 
evít_c⁄fig
 *

923 
	$evít_c⁄fig_√w
()

925 
evít_c⁄fig
 *
cfg
 = 
	`mm_ˇŒoc
(1, (*cfg));

927 i‡(
cfg
 =
NULL
)

928  (
NULL
);

930 
	`TAILQ_INIT
(&
cfg
->
íåõs
);

932  (
cfg
);

933 
	}
}

936 
	$evít_c⁄fig_íåy_‰ì
(
evít_c⁄fig_íåy
 *
íåy
)

938 i‡(
íåy
->
avoid_mëhod
 !
NULL
)

939 
	`mm_‰ì
((*)
íåy
->
avoid_mëhod
);

940 
	`mm_‰ì
(
íåy
);

941 
	}
}

944 
	$evít_c⁄fig_‰ì
(
evít_c⁄fig
 *
cfg
)

946 
evít_c⁄fig_íåy
 *
íåy
;

948 (
íåy
 = 
	`TAILQ_FIRST
(&
cfg
->
íåõs
)Ë!
NULL
) {

949 
	`TAILQ_REMOVE
(&
cfg
->
íåõs
, 
íåy
, 
√xt
);

950 
	`evít_c⁄fig_íåy_‰ì
(
íåy
);

952 
	`mm_‰ì
(
cfg
);

953 
	}
}

956 
	$evít_c⁄fig_£t_Êag
(
evít_c⁄fig
 *
cfg
, 
Êag
)

958 i‡(!
cfg
)

960 
cfg
->
Êags
 |
Êag
;

962 
	}
}

965 
	$evít_c⁄fig_avoid_mëhod
(
evít_c⁄fig
 *
cfg
, c⁄° *
mëhod
)

967 
evít_c⁄fig_íåy
 *
íåy
 = 
	`mm_mÆloc
((*entry));

968 i‡(
íåy
 =
NULL
)

971 i‡((
íåy
->
avoid_mëhod
 = 
	`mm_°rdup
(
mëhod
)Ë=
NULL
) {

972 
	`mm_‰ì
(
íåy
);

976 
	`TAILQ_INSERT_TAIL
(&
cfg
->
íåõs
, 
íåy
, 
√xt
);

979 
	}
}

982 
	$evít_c⁄fig_ªquúe_„©uªs
(
evít_c⁄fig
 *
cfg
,

983 
„©uªs
)

985 i‡(!
cfg
)

987 
cfg
->
ªquúe_„©uªs
 = 
„©uªs
;

989 
	}
}

992 
	$evít_c⁄fig_£t_num_˝us_höt
(
evít_c⁄fig
 *
cfg
, 
˝us
)

994 i‡(!
cfg
)

996 
cfg
->
n_˝us_höt
 = 
˝us
;

998 
	}
}

1001 
	$evít_¥i‹ôy_öô
(
≈ri‹ôõs
)

1003  
	`evít_ba£_¥i‹ôy_öô
(
cuºít_ba£
, 
≈ri‹ôõs
);

1004 
	}
}

1009 
	$evít_ba£_¥i‹ôy_öô
(
evít_ba£
 *
ba£
, 
≈ri‹ôõs
)

1011 
i
;

1013 i‡(
	`N_ACTIVE_CALLBACKS
(
ba£
Ë|| 
≈ri‹ôõs
 < 1

1014 || 
≈ri‹ôõs
 >
EVENT_MAX_PRIORITIES
)

1017 i‡(
≈ri‹ôõs
 =
ba£
->
«˘ivequeues
)

1021 i‡(
ba£
->
«˘ivequeues
) {

1022 
	`mm_‰ì
(
ba£
->
a˘ivequeues
);

1023 
ba£
->
«˘ivequeues
 = 0;

1027 
ba£
->
a˘ivequeues
 = (
evít_li°
 *)

1028 
	`mm_ˇŒoc
(
≈ri‹ôõs
, (
evít_li°
));

1029 i‡(
ba£
->
a˘ivequeues
 =
NULL
) {

1030 
	`evít_w¨n
("%s: cÆloc", 
__func__
);

1033 
ba£
->
«˘ivequeues
 = 
≈ri‹ôõs
;

1035 
i
 = 0; i < 
ba£
->
«˘ivequeues
; ++i) {

1036 
	`TAILQ_INIT
(&
ba£
->
a˘ivequeues
[
i
]);

1040 
	}
}

1044 
	$evít_havìvíts
(
evít_ba£
 *
ba£
)

1047  (
ba£
->
vútuÆ_evít_cou¡
 > 0 || ba£->
evít_cou¡
 > 0);

1048 
	}
}

1051 
ölöe
 

1052 
	$evít_sig«l_˛osuª
(
evít_ba£
 *
ba£
, 
evít
 *
ev
)

1054 
nˇŒs
;

1055 
should_bªak
;

1058 
nˇŒs
 = 
ev
->
ev_nˇŒs
;

1059 i‡(
nˇŒs
 != 0)

1060 
ev
->
ev_≤ˇŒs
 = &
nˇŒs
;

1061 
	`EVBASE_RELEASE_LOCK
(
ba£
, 
th_ba£_lock
);

1062 
nˇŒs
) {

1063 
nˇŒs
--;

1064 
ev
->
ev_nˇŒs
 = 
nˇŒs
;

1065 i‡(
nˇŒs
 == 0)

1066 
ev
->
ev_≤ˇŒs
 = 
NULL
;

1067 (*
ev
->
ev_ˇŒback
)”v->
ev_fd
,Év->
ev_ªs
,Év->
ev_¨g
);

1069 
	`EVBASE_ACQUIRE_LOCK
(
ba£
, 
th_ba£_lock
);

1070 
should_bªak
 = 
ba£
->
evít_bªak
;

1071 
	`EVBASE_RELEASE_LOCK
(
ba£
, 
th_ba£_lock
);

1073 i‡(
should_bªak
) {

1074 i‡(
nˇŒs
 != 0)

1075 
ev
->
ev_≤ˇŒs
 = 
NULL
;

1079 
	}
}

1095 
	#MICROSECONDS_MASK
 
COMMON_TIMEOUT_MICROSECONDS_MASK


	)

1096 
	#COMMON_TIMEOUT_IDX_MASK
 0x0ff00000

	)

1097 
	#COMMON_TIMEOUT_IDX_SHIFT
 20

	)

1098 
	#COMMON_TIMEOUT_MASK
 0xf0000000

	)

1099 
	#COMMON_TIMEOUT_MAGIC
 0x50000000

	)

1101 
	#COMMON_TIMEOUT_IDX
(
tv
) \

1102 (((
tv
)->
tv_u£c
 & 
COMMON_TIMEOUT_IDX_MASK
)>>
COMMON_TIMEOUT_IDX_SHIFT
)

	)

1105 
ölöe
 

1106 
	$is_comm⁄_timeout
(c⁄° 
timevÆ
 *
tv
,

1107 c⁄° 
evít_ba£
 *
ba£
)

1109 
idx
;

1110 i‡((
tv
->
tv_u£c
 & 
COMMON_TIMEOUT_MASK
Ë!
COMMON_TIMEOUT_MAGIC
)

1112 
idx
 = 
	`COMMON_TIMEOUT_IDX
(
tv
);

1113  
idx
 < 
ba£
->
n_comm⁄_timeouts
;

1114 
	}
}

1118 
ölöe
 

1119 
	$is_ßme_comm⁄_timeout
(c⁄° 
timevÆ
 *
tv1
, c⁄° timevÆ *
tv2
)

1121  (
tv1
->
tv_u£c
 & ~
MICROSECONDS_MASK
) ==

1122 (
tv2
->
tv_u£c
 & ~
MICROSECONDS_MASK
);

1123 
	}
}

1127 
ölöe
 
comm⁄_timeout_li°
 *

1128 
	$gë_comm⁄_timeout_li°
(
evít_ba£
 *
ba£
, c⁄° 
timevÆ
 *
tv
)

1130  
ba£
->
comm⁄_timeout_queues
[
	`COMMON_TIMEOUT_IDX
(
tv
)];

1131 
	}
}

1134 
ölöe
 

1135 
	$comm⁄_timeout_ok
(c⁄° 
timevÆ
 *
tv
,

1136 
evít_ba£
 *
ba£
)

1138 c⁄° 
timevÆ
 *
ex≥˘
 =

1139 &
	`gë_comm⁄_timeout_li°
(
ba£
, 
tv
)->
duøti⁄
;

1140  
tv
->
tv_£c
 =
ex≥˘
->tv_sec &&

1141 
tv
->
tv_u£c
 =
ex≥˘
->tv_usec;

1142 
	}
}

1148 
	$comm⁄_timeout_scheduÀ
(
comm⁄_timeout_li°
 *
˘l
,

1149 c⁄° 
timevÆ
 *
now
, 
evít
 *
hód
)

1151 
timevÆ
 
timeout
 = 
hód
->
ev_timeout
;

1152 
timeout
.
tv_u£c
 &
MICROSECONDS_MASK
;

1153 
	`evít_add_öã∫Æ
(&
˘l
->
timeout_evít
, &
timeout
, 1);

1154 
	}
}

1160 
	$comm⁄_timeout_ˇŒback
(
evutû_sockë_t
 
fd
, 
wh©
, *
¨g
)

1162 
timevÆ
 
now
;

1163 
comm⁄_timeout_li°
 *
˘l
 = 
¨g
;

1164 
evít_ba£
 *
ba£
 = 
˘l
->base;

1165 
evít
 *
ev
 = 
NULL
;

1166 
	`EVBASE_ACQUIRE_LOCK
(
ba£
, 
th_ba£_lock
);

1167 
	`gëtime
(
ba£
, &
now
);

1169 
ev
 = 
	`TAILQ_FIRST
(&
˘l
->
evíts
);

1170 i‡(!
ev
 ||Év->
ev_timeout
.
tv_£c
 > 
now
.tv_sec ||

1171 (
ev
->
ev_timeout
.
tv_£c
 =
now
.tv_sec &&

1172 (
ev
->
ev_timeout
.
tv_u£c
&
MICROSECONDS_MASK
Ë> 
now
.tv_usec))

1174 
	`evít_dñ_öã∫Æ
(
ev
);

1175 
	`evít_a˘ive_nﬁock
(
ev
, 
EV_TIMEOUT
, 1);

1177 i‡(
ev
)

1178 
	`comm⁄_timeout_scheduÀ
(
˘l
, &
now
, 
ev
);

1179 
	`EVBASE_RELEASE_LOCK
(
ba£
, 
th_ba£_lock
);

1180 
	}
}

1185 
	#MAX_COMMON_TIMEOUTS
 256

	)

1187 c⁄° 
timevÆ
 *

1188 
	$evít_ba£_öô_comm⁄_timeout
(
evít_ba£
 *
ba£
,

1189 c⁄° 
timevÆ
 *
duøti⁄
)

1191 
i
;

1192 
timevÆ
 
tv
;

1193 c⁄° 
timevÆ
 *
ªsu…
=
NULL
;

1194 
comm⁄_timeout_li°
 *
√w_˘l
;

1196 
	`EVBASE_ACQUIRE_LOCK
(
ba£
, 
th_ba£_lock
);

1197 i‡(
duøti⁄
->
tv_u£c
 > 1000000) {

1198 
	`mem˝y
(&
tv
, 
duøti⁄
, (
timevÆ
));

1199 i‡(
	`is_comm⁄_timeout
(
duøti⁄
, 
ba£
))

1200 
tv
.
tv_u£c
 &
MICROSECONDS_MASK
;

1201 
tv
.
tv_£c
 +tv.
tv_u£c
 / 1000000;

1202 
tv
.
tv_u£c
 %= 1000000;

1203 
duøti⁄
 = &
tv
;

1205 
i
 = 0; i < 
ba£
->
n_comm⁄_timeouts
; ++i) {

1206 c⁄° 
comm⁄_timeout_li°
 *
˘l
 =

1207 
ba£
->
comm⁄_timeout_queues
[
i
];

1208 i‡(
duøti⁄
->
tv_£c
 =
˘l
->duration.tv_sec &&

1209 
duøti⁄
->
tv_u£c
 ==

1210 (
˘l
->
duøti⁄
.
tv_u£c
 & 
MICROSECONDS_MASK
)) {

1211 
	`EVUTIL_ASSERT
(
	`is_comm⁄_timeout
(&
˘l
->
duøti⁄
, 
ba£
));

1212 
ªsu…
 = &
˘l
->
duøti⁄
;

1213 
d⁄e
;

1216 i‡(
ba£
->
n_comm⁄_timeouts
 =
MAX_COMMON_TIMEOUTS
) {

1217 
	`evít_w¨nx
("%s: Too many commonÅimeoutsálready in use; "

1218 "wê⁄ly suµ‹à%dÖîÉvít_ba£", 
__func__
,

1219 
MAX_COMMON_TIMEOUTS
);

1220 
d⁄e
;

1222 i‡(
ba£
->
n_comm⁄_timeouts_Æloˇãd
 =ba£->
n_comm⁄_timeouts
) {

1223 
n
 = 
ba£
->
n_comm⁄_timeouts
 < 16 ? 16 :

1224 
ba£
->
n_comm⁄_timeouts
*2;

1225 
comm⁄_timeout_li°
 **
√wqueues
 =

1226 
	`mm_ªÆloc
(
ba£
->
comm⁄_timeout_queues
,

1227 
n
*(
comm⁄_timeout_queue
 *));

1228 i‡(!
√wqueues
) {

1229 
	`evít_w¨n
("%s:ÑóŒoc",
__func__
);

1230 
d⁄e
;

1232 
ba£
->
n_comm⁄_timeouts_Æloˇãd
 = 
n
;

1233 
ba£
->
comm⁄_timeout_queues
 = 
√wqueues
;

1235 
√w_˘l
 = 
	`mm_ˇŒoc
(1, (
comm⁄_timeout_li°
));

1236 i‡(!
√w_˘l
) {

1237 
	`evít_w¨n
("%s: cÆloc",
__func__
);

1238 
d⁄e
;

1240 
	`TAILQ_INIT
(&
√w_˘l
->
evíts
);

1241 
√w_˘l
->
duøti⁄
.
tv_£c
 = duration->tv_sec;

1242 
√w_˘l
->
duøti⁄
.
tv_u£c
 =

1243 
duøti⁄
->
tv_u£c
 | 
COMMON_TIMEOUT_MAGIC
 |

1244 (
ba£
->
n_comm⁄_timeouts
 << 
COMMON_TIMEOUT_IDX_SHIFT
);

1248 
	`evtimî_assign
(&
√w_˘l
->
timeout_evít
, 
ba£
,

1249 
comm⁄_timeout_ˇŒback
, 
√w_˘l
);

1250 
√w_˘l
->
timeout_evít
.
ev_Êags
 |
EVLIST_INTERNAL
;

1251 
	`evít_¥i‹ôy_£t
(&
√w_˘l
->
timeout_evít
, 0);

1252 
√w_˘l
->
ba£
 = base;

1253 
ba£
->
comm⁄_timeout_queues
[ba£->
n_comm⁄_timeouts
++] = 
√w_˘l
;

1254 
ªsu…
 = &
√w_˘l
->
duøti⁄
;

1256 
d⁄e
:

1257 i‡(
ªsu…
)

1258 
	`EVUTIL_ASSERT
(
	`is_comm⁄_timeout
(
ªsu…
, 
ba£
));

1260 
	`EVBASE_RELEASE_LOCK
(
ba£
, 
th_ba£_lock
);

1261  
ªsu…
;

1262 
	}
}

1265 
ölöe
 

1266 
	$evít_≥rsi°_˛osuª
(
evít_ba£
 *
ba£
, 
evít
 *
ev
)

1269 i‡(
ev
->
ev_io_timeout
.
tv_£c
 ||Év->ev_io_timeout.
tv_u£c
) {

1274 
timevÆ
 
run_©
, 
ªœtive_to
, 
dñay
, 
now
;

1275 
ev_uöt32_t
 
u£c_mask
 = 0;

1276 
	`EVUTIL_ASSERT
(
	`is_ßme_comm⁄_timeout
(&
ev
->
ev_timeout
,

1277 &
ev
->
ev_io_timeout
));

1278 
	`gëtime
(
ba£
, &
now
);

1279 i‡(
	`is_comm⁄_timeout
(&
ev
->
ev_timeout
, 
ba£
)) {

1280 
dñay
 = 
ev
->
ev_io_timeout
;

1281 
u£c_mask
 = 
dñay
.
tv_u£c
 & ~
MICROSECONDS_MASK
;

1282 
dñay
.
tv_u£c
 &
MICROSECONDS_MASK
;

1283 i‡(
ev
->
ev_ªs
 & 
EV_TIMEOUT
) {

1284 
ªœtive_to
 = 
ev
->
ev_timeout
;

1285 
ªœtive_to
.
tv_u£c
 &
MICROSECONDS_MASK
;

1287 
ªœtive_to
 = 
now
;

1290 
dñay
 = 
ev
->
ev_io_timeout
;

1291 i‡(
ev
->
ev_ªs
 & 
EV_TIMEOUT
) {

1292 
ªœtive_to
 = 
ev
->
ev_timeout
;

1294 
ªœtive_to
 = 
now
;

1297 
	`evutû_timîadd
(&
ªœtive_to
, &
dñay
, &
run_©
);

1298 i‡(
	`evutû_timîcmp
(&
run_©
, &
now
, <)) {

1304 
	`evutû_timîadd
(&
now
, &
dñay
, &
run_©
);

1306 
run_©
.
tv_u£c
 |
u£c_mask
;

1307 
	`evít_add_öã∫Æ
(
ev
, &
run_©
, 1);

1309 
	`EVBASE_RELEASE_LOCK
(
ba£
, 
th_ba£_lock
);

1310 (*
ev
->
ev_ˇŒback
)”v->
ev_fd
,Év->
ev_ªs
,Év->
ev_¨g
);

1311 
	}
}

1321 
	$evít_¥o˚ss_a˘ive_sögÀ_queue
(
evít_ba£
 *
ba£
,

1322 
evít_li°
 *
a˘iveq
)

1324 
evít
 *
ev
;

1325 
cou¡
 = 0;

1327 
	`EVUTIL_ASSERT
(
a˘iveq
 !
NULL
);

1329 
ev
 = 
	`TAILQ_FIRST
(
a˘iveq
);Év;Év = TAILQ_FIRST(activeq)) {

1332 i‡(
ev
->
ev_evíts
 & 
EV_PERSIST
)

1333 
	`evít_queue_ªmove
(
ba£
, 
ev
, 
EVLIST_ACTIVE
);

1335 
	`evít_dñ_öã∫Æ
(
ev
);

1336 i‡(!(
ev
->
ev_Êags
 & 
EVLIST_INTERNAL
))

1337 ++
cou¡
;

1339 
	`evít_debug
((

1341 
ev
,

1342 
ev
->
ev_ªs
 & 
EV_READ
 ? "EV_READ " : " ",

1343 
ev
->
ev_ªs
 & 
EV_WRITE
 ? "EV_WRITE " : " ",

1344 
ev
->
ev_ˇŒback
));

1346 #i‚de‡
_EVENT_DISABLE_THREAD_SUPPORT


1347 
ba£
->
cuºít_evít
 = 
ev
;

1348 
ba£
->
cuºít_evít_waôîs
 = 0;

1351 
ev
->
ev_˛osuª
) {

1352 
EV_CLOSURE_SIGNAL
:

1353 
	`evít_sig«l_˛osuª
(
ba£
, 
ev
);

1355 
EV_CLOSURE_PERSIST
:

1356 
	`evít_≥rsi°_˛osuª
(
ba£
, 
ev
);

1359 
EV_CLOSURE_NONE
:

1360 
	`EVBASE_RELEASE_LOCK
(
ba£
, 
th_ba£_lock
);

1361 (*
ev
->
ev_ˇŒback
)(

1362 
ev
->
ev_fd
,Év->
ev_ªs
,Év->
ev_¨g
);

1366 
	`EVBASE_ACQUIRE_LOCK
(
ba£
, 
th_ba£_lock
);

1367 #i‚de‡
_EVENT_DISABLE_THREAD_SUPPORT


1368 
ba£
->
cuºít_evít
 = 
NULL
;

1369 i‡(
ba£
->
cuºít_evít_waôîs
) {

1370 
ba£
->
cuºít_evít_waôîs
 = 0;

1371 
	`EVTHREAD_COND_BROADCAST
(
ba£
->
cuºít_evít_c⁄d
);

1375 i‡(
ba£
->
evít_bªak
)

1377 i‡(
ba£
->
evít_c⁄töue
)

1380  
cou¡
;

1381 
	}
}

1390 
	$evít_¥o˚ss_de„ºed_ˇŒbacks
(
de„ºed_cb_queue
 *
queue
, *
bªak±r
)

1392 
cou¡
 = 0;

1393 
de„ºed_cb
 *
cb
;

1395 
	#MAX_DEFERRED
 16

	)

1396 (
cb
 = 
	`TAILQ_FIRST
(&
queue
->
de„ºed_cb_li°
))) {

1397 
cb
->
queued
 = 0;

1398 
	`TAILQ_REMOVE
(&
queue
->
de„ºed_cb_li°
, 
cb
, 
cb_√xt
);

1399 --
queue
->
a˘ive_cou¡
;

1400 
	`UNLOCK_DEFERRED_QUEUE
(
queue
);

1402 
cb
->
	`cb
(cb, cb->
¨g
);

1404 
	`LOCK_DEFERRED_QUEUE
(
queue
);

1405 i‡(*
bªak±r
)

1407 i‡(++
cou¡
 =
MAX_DEFERRED
)

1410 #unde‡
MAX_DEFERRED


1411  
cou¡
;

1412 
	}
}

1421 
	$evít_¥o˚ss_a˘ive
(
evít_ba£
 *
ba£
)

1424 
evít_li°
 *
a˘iveq
 = 
NULL
;

1425 
i
, 
c
 = 0;

1427 
i
 = 0; i < 
ba£
->
«˘ivequeues
; ++i) {

1428 i‡(
	`TAILQ_FIRST
(&
ba£
->
a˘ivequeues
[
i
]Ë!
NULL
) {

1429 
ba£
->
evít_ru¬ög_¥i‹ôy
 = 
i
;

1430 
a˘iveq
 = &
ba£
->
a˘ivequeues
[
i
];

1431 
c
 = 
	`evít_¥o˚ss_a˘ive_sögÀ_queue
(
ba£
, 
a˘iveq
);

1432 i‡(
c
 < 0) {

1433 
ba£
->
evít_ru¬ög_¥i‹ôy
 = -1;

1435 } i‡(
c
 > 0)

1443 
	`evít_¥o˚ss_de„ºed_ˇŒbacks
(&
ba£
->
de„r_queue
,&ba£->
evít_bªak
);

1444 
ba£
->
evít_ru¬ög_¥i‹ôy
 = -1;

1445  
c
;

1446 
	}
}

1453 
	$evít_di•©ch
()

1455  (
	`evít_lo›
(0));

1456 
	}
}

1459 
	$evít_ba£_di•©ch
(
evít_ba£
 *event_base)

1461  (
	`evít_ba£_lo›
(
evít_ba£
, 0));

1462 
	}
}

1465 
	$evít_ba£_gë_mëhod
(c⁄° 
evít_ba£
 *
ba£
)

1467 
	`EVUTIL_ASSERT
(
ba£
);

1468  (
ba£
->
ev£l
->
«me
);

1469 
	}
}

1474 
	$evít_lo›exô_cb
(
evutû_sockë_t
 
fd
, 
wh©
, *
¨g
)

1476 
evít_ba£
 *
ba£
 = 
¨g
;

1477 
ba£
->
evít_gŸãrm
 = 1;

1478 
	}
}

1481 
	$evít_lo›exô
(c⁄° 
timevÆ
 *
tv
)

1483  (
	`evít_⁄˚
(-1, 
EV_TIMEOUT
, 
evít_lo›exô_cb
,

1484 
cuºít_ba£
, 
tv
));

1485 
	}
}

1488 
	$evít_ba£_lo›exô
(
evít_ba£
 *evít_ba£, c⁄° 
timevÆ
 *
tv
)

1490  (
	`evít_ba£_⁄˚
(
evít_ba£
, -1, 
EV_TIMEOUT
, 
evít_lo›exô_cb
,

1491 
evít_ba£
, 
tv
));

1492 
	}
}

1495 
	$evít_lo›bªak
()

1497  (
	`evít_ba£_lo›bªak
(
cuºít_ba£
));

1498 
	}
}

1501 
	$evít_ba£_lo›bªak
(
evít_ba£
 *event_base)

1503 
r
 = 0;

1504 i‡(
evít_ba£
 =
NULL
)

1507 
	`EVBASE_ACQUIRE_LOCK
(
evít_ba£
, 
th_ba£_lock
);

1508 
evít_ba£
->
evít_bªak
 = 1;

1510 i‡(
	`EVBASE_NEED_NOTIFY
(
evít_ba£
)) {

1511 
r
 = 
	`evthªad_nŸify_ba£
(
evít_ba£
);

1513 
r
 = (0);

1515 
	`EVBASE_RELEASE_LOCK
(
evít_ba£
, 
th_ba£_lock
);

1516  
r
;

1517 
	}
}

1520 
	$evít_ba£_gŸ_bªak
(
evít_ba£
 *event_base)

1522 
ªs
;

1523 
	`EVBASE_ACQUIRE_LOCK
(
evít_ba£
, 
th_ba£_lock
);

1524 
ªs
 = 
evít_ba£
->
evít_bªak
;

1525 
	`EVBASE_RELEASE_LOCK
(
evít_ba£
, 
th_ba£_lock
);

1526  
ªs
;

1527 
	}
}

1530 
	$evít_ba£_gŸ_exô
(
evít_ba£
 *event_base)

1532 
ªs
;

1533 
	`EVBASE_ACQUIRE_LOCK
(
evít_ba£
, 
th_ba£_lock
);

1534 
ªs
 = 
evít_ba£
->
evít_gŸãrm
;

1535 
	`EVBASE_RELEASE_LOCK
(
evít_ba£
, 
th_ba£_lock
);

1536  
ªs
;

1537 
	}
}

1542 
	$evít_lo›
(
Êags
)

1544  
	`evít_ba£_lo›
(
cuºít_ba£
, 
Êags
);

1545 
	}
}

1548 
	$evít_ba£_lo›
(
evít_ba£
 *
ba£
, 
Êags
)

1550 c⁄° 
evít›
 *
ev£l
 = 
ba£
->evsel;

1551 
timevÆ
 
tv
;

1552 
timevÆ
 *
tv_p
;

1553 
ªs
, 
d⁄e
, 
ªtvÆ
 = 0;

1557 
	`EVBASE_ACQUIRE_LOCK
(
ba£
, 
th_ba£_lock
);

1559 i‡(
ba£
->
ru¬ög_lo›
) {

1560 
	`evít_w¨nx
("%s:Ñeentrant invocation. Only oneÉvent_base_loop"

1561 " c™Ñu¿⁄ÉachÉvít_ba£áà⁄˚.", 
__func__
);

1562 
	`EVBASE_RELEASE_LOCK
(
ba£
, 
th_ba£_lock
);

1566 
ba£
->
ru¬ög_lo›
 = 1;

1568 
	`˛ór_time_ˇche
(
ba£
);

1570 i‡(
ba£
->
sig
.
ev_sig«l_added
 && ba£->sig.
ev_n_sig«ls_added
)

1571 
	`evsig_£t_ba£
(
ba£
);

1573 
d⁄e
 = 0;

1575 #i‚de‡
_EVENT_DISABLE_THREAD_SUPPORT


1576 
ba£
->
th_ow√r_id
 = 
	`EVTHREAD_GET_ID
();

1579 
ba£
->
evít_gŸãrm
 = ba£->
evít_bªak
 = 0;

1581 !
d⁄e
) {

1582 
ba£
->
evít_c⁄töue
 = 0;

1586 i‡(
ba£
->
evít_gŸãrm
) {

1590 i‡(
ba£
->
evít_bªak
) {

1594 
	`timeout_c‹ª˘
(
ba£
, &
tv
);

1596 
tv_p
 = &
tv
;

1597 i‡(!
	`N_ACTIVE_CALLBACKS
(
ba£
Ë&& !(
Êags
 & 
EVLOOP_NONBLOCK
)) {

1598 
	`timeout_√xt
(
ba£
, &
tv_p
);

1606 
	`evutû_timî˛ór
(&
tv
);

1611 i‡(!
	`evít_havìvíts
(
ba£
Ë&& !
	`N_ACTIVE_CALLBACKS
(base)) {

1612 
	`evít_debug
(("%s:Çÿevít†ªgi°îed.", 
__func__
));

1613 
ªtvÆ
 = 1;

1614 
d⁄e
;

1618 
	`gëtime
(
ba£
, &ba£->
evít_tv
);

1624 
	`˛ór_time_ˇche
(
ba£
);

1627 
ªs
 = 
ev£l
->
	`di•©ch
(
ba£
, 
tv_p
);

1629 i‡(
ªs
 == -1) {

1630 
	`evít_debug
(("%s: dispatchÑeturned unsuccessfully.",

1631 
__func__
));

1632 
ªtvÆ
 = -1;

1633 
d⁄e
;

1636 
	`upd©e_time_ˇche
(
ba£
);

1639 
	`timeout_¥o˚ss
(
ba£
);

1641 i‡(
	`N_ACTIVE_CALLBACKS
(
ba£
)) {

1643 
n
 = 
	`evít_¥o˚ss_a˘ive
(
ba£
);

1644 i‡((
Êags
 & 
EVLOOP_ONCE
)

1645 && 
	`N_ACTIVE_CALLBACKS
(
ba£
) == 0

1646 && 
n
 != 0)

1647 
d⁄e
 = 1;

1648 } i‡(
Êags
 & 
EVLOOP_NONBLOCK
)

1649 
d⁄e
 = 1;

1651 
	`evít_debug
(("%s:áskedÅÿãrmö©êlo›.", 
__func__
));

1653 
d⁄e
:

1655 
	`˛ór_time_ˇche
(
ba£
);

1656 
ba£
->
ru¬ög_lo›
 = 0;

1658 
	`EVBASE_RELEASE_LOCK
(
ba£
, 
th_ba£_lock
);

1660  (
ªtvÆ
);

1661 
	}
}

1664 
	sevít_⁄˚
 {

1665 
evít
 
	mev
;

1667 (*
	mcb
)(
	mevutû_sockë_t
, , *);

1668 *
	m¨g
;

1674 
	$evít_⁄˚_cb
(
evutû_sockë_t
 
fd
, 
evíts
, *
¨g
)

1676 
evít_⁄˚
 *
e⁄˚
 = 
¨g
;

1678 (*
e⁄˚
->
cb
)(
fd
, 
evíts
,É⁄˚->
¨g
);

1679 
	`evít_debug_u«ssign
(&
e⁄˚
->
ev
);

1680 
	`mm_‰ì
(
e⁄˚
);

1681 
	}
}

1685 
evít_⁄˚
(
evutû_sockë_t
 
fd
, 
evíts
,

1686 (*
ˇŒback
)(
evutû_sockë_t
, , *),

1687 *
¨g
, c⁄° 
timevÆ
 *
tv
)

1689  
	`evít_ba£_⁄˚
(
cuºít_ba£
, 
fd
, 
evíts
, 
ˇŒback
, 
¨g
, 
tv
);

1690 
	}
}

1694 
evít_ba£_⁄˚
(
evít_ba£
 *
ba£
, 
evutû_sockë_t
 
fd
, 
evíts
,

1695 (*
ˇŒback
)(
evutû_sockë_t
, , *),

1696 *
¨g
, c⁄° 
timevÆ
 *
tv
)

1698 
evít_⁄˚
 *
e⁄˚
;

1699 
timevÆ
 
ëv
;

1700 
ªs
 = 0;

1704 i‡(
evíts
 & (
EV_SIGNAL
|
EV_PERSIST
))

1707 i‡((
e⁄˚
 = 
	`mm_ˇŒoc
(1, (
evít_⁄˚
))Ë=
NULL
)

1710 
e⁄˚
->
cb
 = 
ˇŒback
;

1711 
e⁄˚
->
¨g
 =árg;

1713 i‡(
evíts
 =
EV_TIMEOUT
) {

1714 i‡(
tv
 =
NULL
) {

1715 
	`evutû_timî˛ór
(&
ëv
);

1716 
tv
 = &
ëv
;

1719 
	`evtimî_assign
(&
e⁄˚
->
ev
, 
ba£
, 
evít_⁄˚_cb
,Éonce);

1720 } i‡(
evíts
 & (
EV_READ
|
EV_WRITE
)) {

1721 
evíts
 &
EV_READ
|
EV_WRITE
;

1723 
	`evít_assign
(&
e⁄˚
->
ev
, 
ba£
, 
fd
, 
evíts
, 
evít_⁄˚_cb
,Éonce);

1726 
	`mm_‰ì
(
e⁄˚
);

1730 i‡(
ªs
 == 0)

1731 
ªs
 = 
	`evít_add
(&
e⁄˚
->
ev
, 
tv
);

1732 i‡(
ªs
 != 0) {

1733 
	`mm_‰ì
(
e⁄˚
);

1734  (
ªs
);

1738 
	}
}

1741 
evít_assign
(
evít
 *
ev
, 
evít_ba£
 *
ba£
, 
evutû_sockë_t
 
fd
, 
evíts
, (*
ˇŒback
)”vutû_sockë_t, , *), *
¨g
)

1743 i‡(!
ba£
)

1744 
ba£
 = 
cuºít_ba£
;

1746 
	`_evít_debug_as£π_nŸ_added
(
ev
);

1748 
ev
->
ev_ba£
 = 
ba£
;

1750 
ev
->
ev_ˇŒback
 = 
ˇŒback
;

1751 
ev
->
ev_¨g
 = 
¨g
;

1752 
ev
->
ev_fd
 = 
fd
;

1753 
ev
->
ev_evíts
 = 
evíts
;

1754 
ev
->
ev_ªs
 = 0;

1755 
ev
->
ev_Êags
 = 
EVLIST_INIT
;

1756 
ev
->
ev_nˇŒs
 = 0;

1757 
ev
->
ev_≤ˇŒs
 = 
NULL
;

1759 i‡(
evíts
 & 
EV_SIGNAL
) {

1760 i‡((
evíts
 & (
EV_READ
|
EV_WRITE
)) != 0) {

1761 
	`evít_w¨nx
("%s: EV_SIGNAL isÇot compatible with "

1762 "EV_READ o∏EV_WRITE", 
__func__
);

1765 
ev
->
ev_˛osuª
 = 
EV_CLOSURE_SIGNAL
;

1767 i‡(
evíts
 & 
EV_PERSIST
) {

1768 
	`evutû_timî˛ór
(&
ev
->
ev_io_timeout
);

1769 
ev
->
ev_˛osuª
 = 
EV_CLOSURE_PERSIST
;

1771 
ev
->
ev_˛osuª
 = 
EV_CLOSURE_NONE
;

1775 
	`mö_hóp_ñem_öô
(
ev
);

1777 i‡(
ba£
 !
NULL
) {

1779 
ev
->
ev_¥i
 = 
ba£
->
«˘ivequeues
 / 2;

1782 
	`_evít_debug_nŸe_£tup
(
ev
);

1785 
	}
}

1788 
	$evít_ba£_£t
(
evít_ba£
 *
ba£
, 
evít
 *
ev
)

1791 i‡(
ev
->
ev_Êags
 !
EVLIST_INIT
)

1794 
	`_evít_debug_as£π_is_£tup
(
ev
);

1796 
ev
->
ev_ba£
 = 
ba£
;

1797 
ev
->
ev_¥i
 = 
ba£
->
«˘ivequeues
/2;

1800 
	}
}

1803 
evít_£t
(
evít
 *
ev
, 
evutû_sockë_t
 
fd
, 
evíts
,

1804 (*
ˇŒback
)(
evutû_sockë_t
, , *), *
¨g
)

1806 
r
;

1807 
r
 = 
	`evít_assign
(
ev
, 
cuºít_ba£
, 
fd
, 
evíts
, 
ˇŒback
, 
¨g
);

1808 
	`EVUTIL_ASSERT
(
r
 == 0);

1809 
	}
}

1811 
evít
 *

1812 
evít_√w
(
evít_ba£
 *
ba£
, 
evutû_sockë_t
 
fd
, 
evíts
, (*
cb
)”vutû_sockë_t, , *), *
¨g
)

1814 
evít
 *
ev
;

1815 
ev
 = 
	`mm_mÆloc
((
evít
));

1816 i‡(
ev
 =
NULL
)

1817  (
NULL
);

1818 i‡(
	`evít_assign
(
ev
, 
ba£
, 
fd
, 
evíts
, 
cb
, 
¨g
) < 0) {

1819 
	`mm_‰ì
(
ev
);

1820  (
NULL
);

1823  (
ev
);

1824 
	}
}

1827 
	$evít_‰ì
(
evít
 *
ev
)

1829 
	`_evít_debug_as£π_is_£tup
(
ev
);

1832 
	`evít_dñ
(
ev
);

1833 
	`_evít_debug_nŸe_ã¨down
(
ev
);

1834 
	`mm_‰ì
(
ev
);

1836 
	}
}

1839 
	$evít_debug_u«ssign
(
evít
 *
ev
)

1841 
	`_evít_debug_as£π_nŸ_added
(
ev
);

1842 
	`_evít_debug_nŸe_ã¨down
(
ev
);

1844 
ev
->
ev_Êags
 &~
EVLIST_INIT
;

1845 
	}
}

1853 
	$evít_¥i‹ôy_£t
(
evít
 *
ev
, 
¥i
)

1855 
	`_evít_debug_as£π_is_£tup
(
ev
);

1857 i‡(
ev
->
ev_Êags
 & 
EVLIST_ACTIVE
)

1859 i‡(
¥i
 < 0 ||Örò>
ev
->
ev_ba£
->
«˘ivequeues
)

1862 
ev
->
ev_¥i
 = 
¥i
;

1865 
	}
}

1872 
	$evít_≥ndög
(c⁄° 
evít
 *
ev
, evít, 
timevÆ
 *
tv
)

1874 
Êags
 = 0;

1876 i‡(
	`EVUTIL_FAILURE_CHECK
(
ev
->
ev_ba£
 =
NULL
)) {

1877 
	`evít_w¨nx
("%s:Évíàha†nÿevít_ba£ së.", 
__func__
);

1881 
	`EVBASE_ACQUIRE_LOCK
(
ev
->
ev_ba£
, 
th_ba£_lock
);

1882 
	`_evít_debug_as£π_is_£tup
(
ev
);

1884 i‡(
ev
->
ev_Êags
 & 
EVLIST_INSERTED
)

1885 
Êags
 |(
ev
->
ev_evíts
 & (
EV_READ
|
EV_WRITE
|
EV_SIGNAL
));

1886 i‡(
ev
->
ev_Êags
 & 
EVLIST_ACTIVE
)

1887 
Êags
 |
ev
->
ev_ªs
;

1888 i‡(
ev
->
ev_Êags
 & 
EVLIST_TIMEOUT
)

1889 
Êags
 |
EV_TIMEOUT
;

1891 
evít
 &(
EV_TIMEOUT
|
EV_READ
|
EV_WRITE
|
EV_SIGNAL
);

1894 i‡(
tv
 !
NULL
 && (
Êags
 & 
evít
 & 
EV_TIMEOUT
)) {

1895 
timevÆ
 
tmp
 = 
ev
->
ev_timeout
;

1896 
tmp
.
tv_u£c
 &
MICROSECONDS_MASK
;

1897 #i‡
	`deföed
(
_EVENT_HAVE_CLOCK_GETTIME
Ë&& deföed(
CLOCK_MONOTONIC
)

1899 
	`evutû_timîadd
(&
ev
->
ev_ba£
->
tv_˛ock_diff
, &
tmp
, 
tv
);

1901 *
tv
 = 
tmp
;

1905 
	`EVBASE_RELEASE_LOCK
(
ev
->
ev_ba£
, 
th_ba£_lock
);

1907  (
Êags
 & 
evít
);

1908 
	}
}

1911 
	$evít_öôülized
(c⁄° 
evít
 *
ev
)

1913 i‡(!(
ev
->
ev_Êags
 & 
EVLIST_INIT
))

1917 
	}
}

1920 
	$evít_gë_assignmít
(c⁄° 
evít
 *evít, 
evít_ba£
 **
ba£_out
, 
evutû_sockë_t
 *
fd_out
, *
evíts_out
, 
evít_ˇŒback_‚
 *
ˇŒback_out
, **
¨g_out
)

1922 
	`_evít_debug_as£π_is_£tup
(
evít
);

1924 i‡(
ba£_out
)

1925 *
ba£_out
 = 
evít
->
ev_ba£
;

1926 i‡(
fd_out
)

1927 *
fd_out
 = 
evít
->
ev_fd
;

1928 i‡(
evíts_out
)

1929 *
evíts_out
 = 
evít
->
ev_evíts
;

1930 i‡(
ˇŒback_out
)

1931 *
ˇŒback_out
 = 
evít
->
ev_ˇŒback
;

1932 i‡(
¨g_out
)

1933 *
¨g_out
 = 
evít
->
ev_¨g
;

1934 
	}
}

1936 
size_t


1937 
	$evít_gë_°ru˘_evít_size
()

1939  (
evít
);

1940 
	}
}

1942 
evutû_sockë_t


1943 
	$evít_gë_fd
(c⁄° 
evít
 *
ev
)

1945 
	`_evít_debug_as£π_is_£tup
(
ev
);

1946  
ev
->
ev_fd
;

1947 
	}
}

1949 
evít_ba£
 *

1950 
	$evít_gë_ba£
(c⁄° 
evít
 *
ev
)

1952 
	`_evít_debug_as£π_is_£tup
(
ev
);

1953  
ev
->
ev_ba£
;

1954 
	}
}

1957 
	$evít_gë_evíts
(c⁄° 
evít
 *
ev
)

1959 
	`_evít_debug_as£π_is_£tup
(
ev
);

1960  
ev
->
ev_evíts
;

1961 
	}
}

1963 
evít_ˇŒback_‚


1964 
	$evít_gë_ˇŒback
(c⁄° 
evít
 *
ev
)

1966 
	`_evít_debug_as£π_is_£tup
(
ev
);

1967  
ev
->
ev_ˇŒback
;

1968 
	}
}

1971 
	$evít_gë_ˇŒback_¨g
(c⁄° 
evít
 *
ev
)

1973 
	`_evít_debug_as£π_is_£tup
(
ev
);

1974  
ev
->
ev_¨g
;

1975 
	}
}

1978 
	$evít_add
(
evít
 *
ev
, c⁄° 
timevÆ
 *
tv
)

1980 
ªs
;

1982 i‡(
	`EVUTIL_FAILURE_CHECK
(!
ev
->
ev_ba£
)) {

1983 
	`evít_w¨nx
("%s:Évíàha†nÿevít_ba£ së.", 
__func__
);

1987 
	`EVBASE_ACQUIRE_LOCK
(
ev
->
ev_ba£
, 
th_ba£_lock
);

1989 
ªs
 = 
	`evít_add_öã∫Æ
(
ev
, 
tv
, 0);

1991 
	`EVBASE_RELEASE_LOCK
(
ev
->
ev_ba£
, 
th_ba£_lock
);

1993  (
ªs
);

1994 
	}
}

2001 
	$evthªad_nŸify_ba£_deÁu…
(
evít_ba£
 *
ba£
)

2003 
buf
[1];

2004 
r
;

2005 
buf
[0] = () 0;

2006 #ifde‡
WIN32


2007 
r
 = 
	`£nd
(
ba£
->
th_nŸify_fd
[1], 
buf
, 1, 0);

2009 
r
 = 
	`wrôe
(
ba£
->
th_nŸify_fd
[1], 
buf
, 1);

2011  (
r
 < 0 && 
î∫o
 !
EAGAIN
) ? -1 : 0;

2012 
	}
}

2014 #i‡
deföed
(
_EVENT_HAVE_EVENTFD
Ë&& deföed(
_EVENT_HAVE_SYS_EVENTFD_H
)

2018 
	$evthªad_nŸify_ba£_evítfd
(
evít_ba£
 *
ba£
)

2020 
ev_uöt64_t
 
msg
 = 1;

2021 
r
;

2023 
r
 = 
	`wrôe
(
ba£
->
th_nŸify_fd
[0], (*Ë&
msg
, (msg));

2024 } 
r
 < 0 && 
î∫o
 =
EAGAIN
);

2026  (
r
 < 0) ? -1 : 0;

2027 
	}
}

2034 
	$evthªad_nŸify_ba£
(
evít_ba£
 *
ba£
)

2036 
	`EVENT_BASE_ASSERT_LOCKED
(
ba£
);

2037 i‡(!
ba£
->
th_nŸify_‚
)

2039 i‡(
ba£
->
is_nŸify_≥ndög
)

2041 
ba£
->
is_nŸify_≥ndög
 = 1;

2042  
ba£
->
	`th_nŸify_‚
(base);

2043 
	}
}

2050 
ölöe
 

2051 
	$evít_add_öã∫Æ
(
evít
 *
ev
, c⁄° 
timevÆ
 *
tv
,

2052 
tv_is_absﬁuã
)

2054 
evít_ba£
 *
ba£
 = 
ev
->
ev_ba£
;

2055 
ªs
 = 0;

2056 
nŸify
 = 0;

2058 
	`EVENT_BASE_ASSERT_LOCKED
(
ba£
);

2059 
	`_evít_debug_as£π_is_£tup
(
ev
);

2061 
	`evít_debug
((

2062 "evít_add:Évít: %∞(fd "
EV_SOCK_FMT
"), %s%s%scall %p",

2063 
ev
,

2064 
	`EV_SOCK_ARG
(
ev
->
ev_fd
),

2065 
ev
->
ev_evíts
 & 
EV_READ
 ? "EV_READ " : " ",

2066 
ev
->
ev_evíts
 & 
EV_WRITE
 ? "EV_WRITE " : " ",

2067 
tv
 ? "EV_TIMEOUT " : " ",

2068 
ev
->
ev_ˇŒback
));

2077 
	`EVUTIL_ASSERT
(!(
ev
->
ev_Êags
 & ~
EVLIST_ALL
));

2087 i‡(
tv
 !
NULL
 && !(
ev
->
ev_Êags
 & 
EVLIST_TIMEOUT
)) {

2088 i‡(
	`mö_hóp_ª£rve
(&
ba£
->
timehóp
,

2089 1 + 
	`mö_hóp_size
(&
ba£
->
timehóp
)) == -1)

2097 #i‚de‡
_EVENT_DISABLE_THREAD_SUPPORT


2098 i‡(
ba£
->
cuºít_evít
 =
ev
 && (ev->
ev_evíts
 & 
EV_SIGNAL
)

2099 && !
	`EVBASE_IN_THREAD
(
ba£
)) {

2100 ++
ba£
->
cuºít_evít_waôîs
;

2101 
	`EVTHREAD_COND_WAIT
(
ba£
->
cuºít_evít_c⁄d
, ba£->
th_ba£_lock
);

2105 i‡((
ev
->
ev_evíts
 & (
EV_READ
|
EV_WRITE
|
EV_SIGNAL
)) &&

2106 !(
ev
->
ev_Êags
 & (
EVLIST_INSERTED
|
EVLIST_ACTIVE
))) {

2108 i‡(
ev
->
ev_evíts
 & (
EV_READ
|
EV_WRITE
))

2109 
ªs
 = 
	`evm≠_io_add
(
ba£
, 
ev
->
ev_fd
,Év);

2110 i‡(
ev
->
ev_evíts
 & 
EV_SIGNAL
)

2111 
ªs
 = 
	`evm≠_sig«l_add
(
ba£
, ()
ev
->
ev_fd
,Év);

2113 i‡(
ªs
 != -1)

2114 
	`evít_queue_ö£π
(
ba£
, 
ev
, 
EVLIST_INSERTED
);

2115 i‡(
ªs
 == 1) {

2118 
nŸify
 = 1;

2119 
ªs
 = 0;

2130 i‡(
ªs
 !-1 && 
tv
 !
NULL
) {

2131 
timevÆ
 
now
;

2132 
comm⁄_timeout
;

2140 i‡(
ev
->
ev_˛osuª
 =
EV_CLOSURE_PERSIST
 && !
tv_is_absﬁuã
)

2141 
ev
->
ev_io_timeout
 = *
tv
;

2148 i‡(
ev
->
ev_Êags
 & 
EVLIST_TIMEOUT
) {

2150 i‡(
	`mö_hóp_ñt_is_t›
(
ev
))

2151 
nŸify
 = 1;

2152 
	`evít_queue_ªmove
(
ba£
, 
ev
, 
EVLIST_TIMEOUT
);

2162 i‡((
ev
->
ev_Êags
 & 
EVLIST_ACTIVE
) &&

2163 (
ev
->
ev_ªs
 & 
EV_TIMEOUT
)) {

2164 i‡(
ev
->
ev_evíts
 & 
EV_SIGNAL
) {

2168 i‡(
ev
->
ev_nˇŒs
 &&Év->
ev_≤ˇŒs
) {

2170 *
ev
->
ev_≤ˇŒs
 = 0;

2174 
	`evít_queue_ªmove
(
ba£
, 
ev
, 
EVLIST_ACTIVE
);

2177 
	`gëtime
(
ba£
, &
now
);

2179 
comm⁄_timeout
 = 
	`is_comm⁄_timeout
(
tv
, 
ba£
);

2181 i‡(
tv_is_absﬁuã
) {

2182 
ev
->
ev_timeout
 = *
tv
;

2183 } i‡(
comm⁄_timeout
) {

2184 
timevÆ
 
tmp
 = *
tv
;

2185 
tmp
.
tv_u£c
 &
MICROSECONDS_MASK
;

2186 
	`evutû_timîadd
(&
now
, &
tmp
, &
ev
->
ev_timeout
);

2187 
ev
->
ev_timeout
.
tv_u£c
 |=

2188 (
tv
->
tv_u£c
 & ~
MICROSECONDS_MASK
);

2190 
	`evutû_timîadd
(&
now
, 
tv
, &
ev
->
ev_timeout
);

2193 
	`evít_debug
((

2195 ()
tv
->
tv_£c
, 
ev
->
ev_ˇŒback
));

2197 
	`evít_queue_ö£π
(
ba£
, 
ev
, 
EVLIST_TIMEOUT
);

2198 i‡(
comm⁄_timeout
) {

2200 
comm⁄_timeout_li°
 *
˘l
 =

2201 
	`gë_comm⁄_timeout_li°
(
ba£
, &
ev
->
ev_timeout
);

2202 i‡(
ev
 =
	`TAILQ_FIRST
(&
˘l
->
evíts
)) {

2203 
	`comm⁄_timeout_scheduÀ
(
˘l
, &
now
, 
ev
);

2210 i‡(
	`mö_hóp_ñt_is_t›
(
ev
))

2211 
nŸify
 = 1;

2216 i‡(
ªs
 !-1 && 
nŸify
 && 
	`EVBASE_NEED_NOTIFY
(
ba£
))

2217 
	`evthªad_nŸify_ba£
(
ba£
);

2219 
	`_evít_debug_nŸe_add
(
ev
);

2221  (
ªs
);

2222 
	}
}

2225 
	$evít_dñ
(
evít
 *
ev
)

2227 
ªs
;

2229 i‡(
	`EVUTIL_FAILURE_CHECK
(!
ev
->
ev_ba£
)) {

2230 
	`evít_w¨nx
("%s:Évíàha†nÿevít_ba£ së.", 
__func__
);

2234 
	`EVBASE_ACQUIRE_LOCK
(
ev
->
ev_ba£
, 
th_ba£_lock
);

2236 
ªs
 = 
	`evít_dñ_öã∫Æ
(
ev
);

2238 
	`EVBASE_RELEASE_LOCK
(
ev
->
ev_ba£
, 
th_ba£_lock
);

2240  (
ªs
);

2241 
	}
}

2244 
ölöe
 

2245 
	$evít_dñ_öã∫Æ
(
evít
 *
ev
)

2247 
evít_ba£
 *
ba£
;

2248 
ªs
 = 0, 
nŸify
 = 0;

2250 
	`evít_debug
(("evít_dñ: %∞(fd "
EV_SOCK_FMT
"), callback %p",

2251 
ev
, 
	`EV_SOCK_ARG
”v->
ev_fd
),Év->
ev_ˇŒback
));

2254 i‡(
ev
->
ev_ba£
 =
NULL
)

2257 
	`EVENT_BASE_ASSERT_LOCKED
(
ev
->
ev_ba£
);

2264 
ba£
 = 
ev
->
ev_ba£
;

2265 #i‚de‡
_EVENT_DISABLE_THREAD_SUPPORT


2266 i‡(
ba£
->
cuºít_evít
 =
ev
 && !
	`EVBASE_IN_THREAD
(base)) {

2267 ++
ba£
->
cuºít_evít_waôîs
;

2268 
	`EVTHREAD_COND_WAIT
(
ba£
->
cuºít_evít_c⁄d
, ba£->
th_ba£_lock
);

2272 
	`EVUTIL_ASSERT
(!(
ev
->
ev_Êags
 & ~
EVLIST_ALL
));

2275 i‡(
ev
->
ev_evíts
 & 
EV_SIGNAL
) {

2276 i‡(
ev
->
ev_nˇŒs
 &&Év->
ev_≤ˇŒs
) {

2278 *
ev
->
ev_≤ˇŒs
 = 0;

2282 i‡(
ev
->
ev_Êags
 & 
EVLIST_TIMEOUT
) {

2290 
	`evít_queue_ªmove
(
ba£
, 
ev
, 
EVLIST_TIMEOUT
);

2293 i‡(
ev
->
ev_Êags
 & 
EVLIST_ACTIVE
)

2294 
	`evít_queue_ªmove
(
ba£
, 
ev
, 
EVLIST_ACTIVE
);

2296 i‡(
ev
->
ev_Êags
 & 
EVLIST_INSERTED
) {

2297 
	`evít_queue_ªmove
(
ba£
, 
ev
, 
EVLIST_INSERTED
);

2298 i‡(
ev
->
ev_evíts
 & (
EV_READ
|
EV_WRITE
))

2299 
ªs
 = 
	`evm≠_io_dñ
(
ba£
, 
ev
->
ev_fd
,Év);

2301 
ªs
 = 
	`evm≠_sig«l_dñ
(
ba£
, ()
ev
->
ev_fd
,Év);

2302 i‡(
ªs
 == 1) {

2304 
nŸify
 = 1;

2305 
ªs
 = 0;

2310 i‡(
ªs
 !-1 && 
nŸify
 && 
	`EVBASE_NEED_NOTIFY
(
ba£
))

2311 
	`evthªad_nŸify_ba£
(
ba£
);

2313 
	`_evít_debug_nŸe_dñ
(
ev
);

2315  (
ªs
);

2316 
	}
}

2319 
	$evít_a˘ive
(
evít
 *
ev
, 
ªs
, 
nˇŒs
)

2321 i‡(
	`EVUTIL_FAILURE_CHECK
(!
ev
->
ev_ba£
)) {

2322 
	`evít_w¨nx
("%s:Évíàha†nÿevít_ba£ së.", 
__func__
);

2326 
	`EVBASE_ACQUIRE_LOCK
(
ev
->
ev_ba£
, 
th_ba£_lock
);

2328 
	`_evít_debug_as£π_is_£tup
(
ev
);

2330 
	`evít_a˘ive_nﬁock
(
ev
, 
ªs
, 
nˇŒs
);

2332 
	`EVBASE_RELEASE_LOCK
(
ev
->
ev_ba£
, 
th_ba£_lock
);

2333 
	}
}

2337 
	$evít_a˘ive_nﬁock
(
evít
 *
ev
, 
ªs
, 
nˇŒs
)

2339 
evít_ba£
 *
ba£
;

2341 
	`evít_debug
(("evít_a˘ive: %∞(fd "
EV_SOCK_FMT
"),Ñes %d, callback %p",

2342 
ev
, 
	`EV_SOCK_ARG
”v->
ev_fd
), ()
ªs
,Év->
ev_ˇŒback
));

2346 i‡(
ev
->
ev_Êags
 & 
EVLIST_ACTIVE
) {

2347 
ev
->
ev_ªs
 |
ªs
;

2351 
ba£
 = 
ev
->
ev_ba£
;

2353 
	`EVENT_BASE_ASSERT_LOCKED
(
ba£
);

2355 
ev
->
ev_ªs
 = 
ªs
;

2357 i‡(
ev
->
ev_¥i
 < 
ba£
->
evít_ru¬ög_¥i‹ôy
)

2358 
ba£
->
evít_c⁄töue
 = 1;

2360 i‡(
ev
->
ev_evíts
 & 
EV_SIGNAL
) {

2361 #i‚de‡
_EVENT_DISABLE_THREAD_SUPPORT


2362 i‡(
ba£
->
cuºít_evít
 =
ev
 && !
	`EVBASE_IN_THREAD
(base)) {

2363 ++
ba£
->
cuºít_evít_waôîs
;

2364 
	`EVTHREAD_COND_WAIT
(
ba£
->
cuºít_evít_c⁄d
, ba£->
th_ba£_lock
);

2367 
ev
->
ev_nˇŒs
 = 
nˇŒs
;

2368 
ev
->
ev_≤ˇŒs
 = 
NULL
;

2371 
	`evít_queue_ö£π
(
ba£
, 
ev
, 
EVLIST_ACTIVE
);

2373 i‡(
	`EVBASE_NEED_NOTIFY
(
ba£
))

2374 
	`evthªad_nŸify_ba£
(
ba£
);

2375 
	}
}

2378 
	$evít_de„ºed_cb_öô
(
de„ºed_cb
 *
cb
, 
de„ºed_cb_‚
 
‚
, *
¨g
)

2380 
	`mem£t
(
cb
, 0, (
de„ºed_cb
));

2381 
cb
->cb = 
‚
;

2382 
cb
->
¨g
 =árg;

2383 
	}
}

2386 
	$evít_de„ºed_cb_ˇn˚l
(
de„ºed_cb_queue
 *
queue
,

2387 
de„ºed_cb
 *
cb
)

2389 i‡(!
queue
) {

2390 i‡(
cuºít_ba£
)

2391 
queue
 = &
cuºít_ba£
->
de„r_queue
;

2396 
	`LOCK_DEFERRED_QUEUE
(
queue
);

2397 i‡(
cb
->
queued
) {

2398 
	`TAILQ_REMOVE
(&
queue
->
de„ºed_cb_li°
, 
cb
, 
cb_√xt
);

2399 --
queue
->
a˘ive_cou¡
;

2400 
cb
->
queued
 = 0;

2402 
	`UNLOCK_DEFERRED_QUEUE
(
queue
);

2403 
	}
}

2406 
	$evít_de„ºed_cb_scheduÀ
(
de„ºed_cb_queue
 *
queue
,

2407 
de„ºed_cb
 *
cb
)

2409 i‡(!
queue
) {

2410 i‡(
cuºít_ba£
)

2411 
queue
 = &
cuºít_ba£
->
de„r_queue
;

2416 
	`LOCK_DEFERRED_QUEUE
(
queue
);

2417 i‡(!
cb
->
queued
) {

2418 
cb
->
queued
 = 1;

2419 
	`TAILQ_INSERT_TAIL
(&
queue
->
de„ºed_cb_li°
, 
cb
, 
cb_√xt
);

2420 ++
queue
->
a˘ive_cou¡
;

2421 i‡(
queue
->
nŸify_‚
)

2422 
queue
->
	`nŸify_‚
(queue, queue->
nŸify_¨g
);

2424 
	`UNLOCK_DEFERRED_QUEUE
(
queue
);

2425 
	}
}

2428 
	$timeout_√xt
(
evít_ba£
 *
ba£
, 
timevÆ
 **
tv_p
)

2431 
timevÆ
 
now
;

2432 
evít
 *
ev
;

2433 
timevÆ
 *
tv
 = *
tv_p
;

2434 
ªs
 = 0;

2436 
ev
 = 
	`mö_hóp_t›
(&
ba£
->
timehóp
);

2438 i‡(
ev
 =
NULL
) {

2440 *
tv_p
 = 
NULL
;

2441 
out
;

2444 i‡(
	`gëtime
(
ba£
, &
now
) == -1) {

2445 
ªs
 = -1;

2446 
out
;

2449 i‡(
	`evutû_timîcmp
(&
ev
->
ev_timeout
, &
now
, <=)) {

2450 
	`evutû_timî˛ór
(
tv
);

2451 
out
;

2454 
	`evutû_timîsub
(&
ev
->
ev_timeout
, &
now
, 
tv
);

2456 
	`EVUTIL_ASSERT
(
tv
->
tv_£c
 >= 0);

2457 
	`EVUTIL_ASSERT
(
tv
->
tv_u£c
 >= 0);

2458 
	`evít_debug
(("timeout_√xt: i¿%d sec⁄ds", ()
tv
->
tv_£c
));

2460 
out
:

2461  (
ªs
);

2462 
	}
}

2471 
	$timeout_c‹ª˘
(
evít_ba£
 *
ba£
, 
timevÆ
 *
tv
)

2474 
evít
 **
≥v
;

2475 
size
;

2476 
timevÆ
 
off
;

2477 
i
;

2479 i‡(
u£_m⁄Ÿ⁄ic
)

2483 
	`gëtime
(
ba£
, 
tv
);

2485 i‡(
	`evutû_timîcmp
(
tv
, &
ba£
->
evít_tv
, >=)) {

2486 
ba£
->
evít_tv
 = *
tv
;

2490 
	`evít_debug
(("%s:Åime isÑunning backwards, corrected",

2491 
__func__
));

2492 
	`evutû_timîsub
(&
ba£
->
evít_tv
, 
tv
, &
off
);

2498 
≥v
 = 
ba£
->
timehóp
.
p
;

2499 
size
 = 
ba£
->
timehóp
.
n
;

2500 ; 
size
-- > 0; ++
≥v
) {

2501 
timevÆ
 *
ev_tv
 = &(**
≥v
).
ev_timeout
;

2502 
	`evutû_timîsub
(
ev_tv
, &
off
,Év_tv);

2504 
i
=0; i<
ba£
->
n_comm⁄_timeouts
; ++i) {

2505 
evít
 *
ev
;

2506 
comm⁄_timeout_li°
 *
˘l
 =

2507 
ba£
->
comm⁄_timeout_queues
[
i
];

2508 
	`TAILQ_FOREACH
(
ev
, &
˘l
->
evíts
,

2509 
ev_timeout_pos
.
ev_√xt_wôh_comm⁄_timeout
) {

2510 
timevÆ
 *
ev_tv
 = &
ev
->
ev_timeout
;

2511 
ev_tv
->
tv_u£c
 &
MICROSECONDS_MASK
;

2512 
	`evutû_timîsub
(
ev_tv
, &
off
,Év_tv);

2513 
ev_tv
->
tv_u£c
 |
COMMON_TIMEOUT_MAGIC
 |

2514 (
i
<<
COMMON_TIMEOUT_IDX_SHIFT
);

2519 
ba£
->
evít_tv
 = *
tv
;

2520 
	}
}

2524 
	$timeout_¥o˚ss
(
evít_ba£
 *
ba£
)

2527 
timevÆ
 
now
;

2528 
evít
 *
ev
;

2530 i‡(
	`mö_hóp_em±y
(&
ba£
->
timehóp
)) {

2534 
	`gëtime
(
ba£
, &
now
);

2536 (
ev
 = 
	`mö_hóp_t›
(&
ba£
->
timehóp
))) {

2537 i‡(
	`evutû_timîcmp
(&
ev
->
ev_timeout
, &
now
, >))

2541 
	`evít_dñ_öã∫Æ
(
ev
);

2543 
	`evít_debug
(("timeout_process: call %p",

2544 
ev
->
ev_ˇŒback
));

2545 
	`evít_a˘ive_nﬁock
(
ev
, 
EV_TIMEOUT
, 1);

2547 
	}
}

2551 
	$evít_queue_ªmove
(
evít_ba£
 *
ba£
, 
evít
 *
ev
, 
queue
)

2553 
	`EVENT_BASE_ASSERT_LOCKED
(
ba£
);

2555 i‡(!(
ev
->
ev_Êags
 & 
queue
)) {

2556 
	`evít_îrx
(1, "%s: %p(fd "
EV_SOCK_FMT
"ËnŸ o¿queuê%x", 
__func__
,

2557 
ev
, 
	`EV_SOCK_ARG
”v->
ev_fd
), 
queue
);

2561 i‡(~
ev
->
ev_Êags
 & 
EVLIST_INTERNAL
)

2562 
ba£
->
evít_cou¡
--;

2564 
ev
->
ev_Êags
 &~
queue
;

2565 
queue
) {

2566 
EVLIST_INSERTED
:

2567 
	`TAILQ_REMOVE
(&
ba£
->
evítqueue
, 
ev
, 
ev_√xt
);

2569 
EVLIST_ACTIVE
:

2570 
ba£
->
evít_cou¡_a˘ive
--;

2571 
	`TAILQ_REMOVE
(&
ba£
->
a˘ivequeues
[
ev
->
ev_¥i
],

2572 
ev
, 
ev_a˘ive_√xt
);

2574 
EVLIST_TIMEOUT
:

2575 i‡(
	`is_comm⁄_timeout
(&
ev
->
ev_timeout
, 
ba£
)) {

2576 
comm⁄_timeout_li°
 *
˘l
 =

2577 
	`gë_comm⁄_timeout_li°
(
ba£
, &
ev
->
ev_timeout
);

2578 
	`TAILQ_REMOVE
(&
˘l
->
evíts
, 
ev
,

2579 
ev_timeout_pos
.
ev_√xt_wôh_comm⁄_timeout
);

2581 
	`mö_hóp_îa£
(&
ba£
->
timehóp
, 
ev
);

2585 
	`evít_îrx
(1, "%s: unknow¿queuê%x", 
__func__
, 
queue
);

2587 
	}
}

2591 
	$ö£π_comm⁄_timeout_ö‹dî
(
comm⁄_timeout_li°
 *
˘l
,

2592 
evít
 *
ev
)

2594 
evít
 *
e
;

2602 
	`TAILQ_FOREACH_REVERSE
(
e
, &
˘l
->
evíts
,

2603 
evít_li°
, 
ev_timeout_pos
.
ev_√xt_wôh_comm⁄_timeout
) {

2608 
	`EVUTIL_ASSERT
(

2609 
	`is_ßme_comm⁄_timeout
(&
e
->
ev_timeout
, &
ev
->ev_timeout));

2610 i‡(
	`evutû_timîcmp
(&
ev
->
ev_timeout
, &
e
->ev_timeout, >=)) {

2611 
	`TAILQ_INSERT_AFTER
(&
˘l
->
evíts
, 
e
, 
ev
,

2612 
ev_timeout_pos
.
ev_√xt_wôh_comm⁄_timeout
);

2616 
	`TAILQ_INSERT_HEAD
(&
˘l
->
evíts
, 
ev
,

2617 
ev_timeout_pos
.
ev_√xt_wôh_comm⁄_timeout
);

2618 
	}
}

2621 
	$evít_queue_ö£π
(
evít_ba£
 *
ba£
, 
evít
 *
ev
, 
queue
)

2623 
	`EVENT_BASE_ASSERT_LOCKED
(
ba£
);

2625 i‡(
ev
->
ev_Êags
 & 
queue
) {

2627 i‡(
queue
 & 
EVLIST_ACTIVE
)

2630 
	`evít_îrx
(1, "%s: %p(fd "
EV_SOCK_FMT
"ËÆªady o¿queuê%x", 
__func__
,

2631 
ev
, 
	`EV_SOCK_ARG
”v->
ev_fd
), 
queue
);

2635 i‡(~
ev
->
ev_Êags
 & 
EVLIST_INTERNAL
)

2636 
ba£
->
evít_cou¡
++;

2638 
ev
->
ev_Êags
 |
queue
;

2639 
queue
) {

2640 
EVLIST_INSERTED
:

2641 
	`TAILQ_INSERT_TAIL
(&
ba£
->
evítqueue
, 
ev
, 
ev_√xt
);

2643 
EVLIST_ACTIVE
:

2644 
ba£
->
evít_cou¡_a˘ive
++;

2645 
	`TAILQ_INSERT_TAIL
(&
ba£
->
a˘ivequeues
[
ev
->
ev_¥i
],

2646 
ev
,
ev_a˘ive_√xt
);

2648 
EVLIST_TIMEOUT
: {

2649 i‡(
	`is_comm⁄_timeout
(&
ev
->
ev_timeout
, 
ba£
)) {

2650 
comm⁄_timeout_li°
 *
˘l
 =

2651 
	`gë_comm⁄_timeout_li°
(
ba£
, &
ev
->
ev_timeout
);

2652 
	`ö£π_comm⁄_timeout_ö‹dî
(
˘l
, 
ev
);

2654 
	`mö_hóp_push
(&
ba£
->
timehóp
, 
ev
);

2658 
	`evít_îrx
(1, "%s: unknow¿queuê%x", 
__func__
, 
queue
);

2660 
	}
}

2665 
	$evít_gë_vîsi⁄
()

2667  (
_EVENT_VERSION
);

2668 
	}
}

2670 
ev_uöt32_t


2671 
	$evít_gë_vîsi⁄_numbî
()

2673  (
_EVENT_NUMERIC_VERSION
);

2674 
	}
}

2682 
	$evít_gë_mëhod
()

2684  (
cuºít_ba£
->
ev£l
->
«me
);

2685 
	}
}

2687 #i‚de‡
_EVENT_DISABLE_MM_REPLACEMENT


2688 *(*
	g_mm_mÆloc_‚
)(
size_t
 
	gsz
Ë
NULL
;

2689 *(*
	g_mm_ªÆloc_‚
)(*
	gp
, 
size_t
 
	gsz
Ë
NULL
;

2690 (*
_mm_‰ì_‚
)(*
p
Ë
NULL
;

2693 
	$evít_mm_mÆloc_
(
size_t
 
sz
)

2695 i‡(
_mm_mÆloc_‚
)

2696  
	`_mm_mÆloc_‚
(
sz
);

2698  
	`mÆloc
(
sz
);

2699 
	}
}

2702 
	$evít_mm_ˇŒoc_
(
size_t
 
cou¡
, size_à
size
)

2704 i‡(
_mm_mÆloc_‚
) {

2705 
size_t
 
sz
 = 
cou¡
 * 
size
;

2706 *
p
 = 
	`_mm_mÆloc_‚
(
sz
);

2707 i‡(
p
)

2708 
	`mem£t
(
p
, 0, 
sz
);

2709  
p
;

2711  
	`ˇŒoc
(
cou¡
, 
size
);

2712 
	}
}

2715 
	$evít_mm_°rdup_
(c⁄° *
°r
)

2717 i‡(
_mm_mÆloc_‚
) {

2718 
size_t
 
 
 = 
	`°æí
(
°r
);

2719 *
p
 = 
	`_mm_mÆloc_‚
(
 
+1);

2720 i‡(
p
)

2721 
	`mem˝y
(
p
, 
°r
, 
 
+1);

2722  
p
;

2724 #ifde‡
WIN32


2725  
	`_°rdup
(
°r
);

2727  
	`°rdup
(
°r
);

2729 
	}
}

2732 
	$evít_mm_ªÆloc_
(*
±r
, 
size_t
 
sz
)

2734 i‡(
_mm_ªÆloc_‚
)

2735  
	`_mm_ªÆloc_‚
(
±r
, 
sz
);

2737  
	`ªÆloc
(
±r
, 
sz
);

2738 
	}
}

2741 
	$evít_mm_‰ì_
(*
±r
)

2743 i‡(
_mm_‰ì_‚
)

2744 
	`_mm_‰ì_‚
(
±r
);

2746 
	`‰ì
(
±r
);

2747 
	}
}

2750 
evít_£t_mem_fun˘i⁄s
(*(*
mÆloc_‚
)(
size_t
 
sz
),

2751 *(*
ªÆloc_‚
)(*
±r
, 
size_t
 
sz
),

2752 (*
‰ì_‚
)(*
±r
))

2754 
_mm_mÆloc_‚
 = 
mÆloc_‚
;

2755 
_mm_ªÆloc_‚
 = 
ªÆloc_‚
;

2756 
_mm_‰ì_‚
 = 
‰ì_‚
;

2757 
	}
}

2760 #i‡
deföed
(
_EVENT_HAVE_EVENTFD
Ë&& deföed(
_EVENT_HAVE_SYS_EVENTFD_H
)

2762 
	$evthªad_nŸify_døö_evítfd
(
evutû_sockë_t
 
fd
, 
wh©
, *
¨g
)

2764 
ev_uöt64_t
 
msg
;

2765 
ev_ssize_t
 
r
;

2766 
evít_ba£
 *
ba£
 = 
¨g
;

2768 
r
 = 
	`ªad
(
fd
, (*Ë&
msg
, (msg));

2769 i‡(
r
<0 && 
î∫o
 !
EAGAIN
) {

2770 
	`evít_sock_w¨n
(
fd
, "ErrorÑeading fromÉventfd");

2772 
	`EVBASE_ACQUIRE_LOCK
(
ba£
, 
th_ba£_lock
);

2773 
ba£
->
is_nŸify_≥ndög
 = 0;

2774 
	`EVBASE_RELEASE_LOCK
(
ba£
, 
th_ba£_lock
);

2775 
	}
}

2779 
	$evthªad_nŸify_døö_deÁu…
(
evutû_sockë_t
 
fd
, 
wh©
, *
¨g
)

2781 
buf
[1024];

2782 
evít_ba£
 *
ba£
 = 
¨g
;

2783 #ifde‡
WIN32


2784 
	`ªcv
(
fd
, (*)
buf
, (buf), 0) > 0)

2787 
	`ªad
(
fd
, (*)
buf
, (buf)) > 0)

2791 
	`EVBASE_ACQUIRE_LOCK
(
ba£
, 
th_ba£_lock
);

2792 
ba£
->
is_nŸify_≥ndög
 = 0;

2793 
	`EVBASE_RELEASE_LOCK
(
ba£
, 
th_ba£_lock
);

2794 
	}
}

2797 
	$evthªad_make_ba£_nŸifübÀ
(
evít_ba£
 *
ba£
)

2799 (*
cb
)(
evutû_sockë_t
, , *Ë
evthªad_nŸify_døö_deÁu…
;

2800 (*
nŸify
)(
evít_ba£
 *Ë
evthªad_nŸify_ba£_deÁu…
;

2803 i‡(!
ba£
)

2806 i‡(
ba£
->
th_nŸify_fd
[0] >= 0)

2809 #i‡
	`deföed
(
_EVENT_HAVE_EVENTFD
Ë&& deföed(
_EVENT_HAVE_SYS_EVENTFD_H
)

2810 #i‚de‡
EFD_CLOEXEC


2811 
	#EFD_CLOEXEC
 0

	)

2813 
ba£
->
th_nŸify_fd
[0] = 
	`evítfd
(0, 
EFD_CLOEXEC
);

2814 i‡(
ba£
->
th_nŸify_fd
[0] >= 0) {

2815 
	`evutû_make_sockë_˛o£⁄exec
(
ba£
->
th_nŸify_fd
[0]);

2816 
nŸify
 = 
evthªad_nŸify_ba£_evítfd
;

2817 
cb
 = 
evthªad_nŸify_døö_evítfd
;

2820 #i‡
	`deföed
(
_EVENT_HAVE_PIPE
)

2821 i‡(
ba£
->
th_nŸify_fd
[0] < 0) {

2822 i‡((
ba£
->
ev£l
->
„©uªs
 & 
EV_FEATURE_FDS
)) {

2823 i‡(
	`pùe
(
ba£
->
th_nŸify_fd
) < 0) {

2824 
	`evít_w¨n
("%s:Öùe", 
__func__
);

2826 
	`evutû_make_sockë_˛o£⁄exec
(
ba£
->
th_nŸify_fd
[0]);

2827 
	`evutû_make_sockë_˛o£⁄exec
(
ba£
->
th_nŸify_fd
[1]);

2833 #ifde‡
WIN32


2834 
	#LOCAL_SOCKETPAIR_AF
 
AF_INET


	)

2836 
	#LOCAL_SOCKETPAIR_AF
 
AF_UNIX


	)

2838 i‡(
ba£
->
th_nŸify_fd
[0] < 0) {

2839 i‡(
	`evutû_sockë∑ú
(
LOCAL_SOCKETPAIR_AF
, 
SOCK_STREAM
, 0,

2840 
ba£
->
th_nŸify_fd
) == -1) {

2841 
	`evít_sock_w¨n
(-1, "%s: sockë∑ú", 
__func__
);

2844 
	`evutû_make_sockë_˛o£⁄exec
(
ba£
->
th_nŸify_fd
[0]);

2845 
	`evutû_make_sockë_˛o£⁄exec
(
ba£
->
th_nŸify_fd
[1]);

2849 
	`evutû_make_sockë_n⁄blockög
(
ba£
->
th_nŸify_fd
[0]);

2851 
ba£
->
th_nŸify_‚
 = 
nŸify
;

2861 i‡(
ba£
->
th_nŸify_fd
[1] > 0)

2862 
	`evutû_make_sockë_n⁄blockög
(
ba£
->
th_nŸify_fd
[1]);

2865 
	`evít_assign
(&
ba£
->
th_nŸify
, ba£, ba£->
th_nŸify_fd
[0],

2866 
EV_READ
|
EV_PERSIST
, 
cb
, 
ba£
);

2869 
ba£
->
th_nŸify
.
ev_Êags
 |
EVLIST_INTERNAL
;

2870 
	`evít_¥i‹ôy_£t
(&
ba£
->
th_nŸify
, 0);

2872  
	`evít_add
(&
ba£
->
th_nŸify
, 
NULL
);

2873 
	}
}

2876 
	$evít_ba£_dump_evíts
(
evít_ba£
 *
ba£
, 
FILE
 *
ouçut
)

2878 
evít
 *
e
;

2879 
i
;

2880 
	`Ârötf
(
ouçut
, "InsertedÉvents:\n");

2881 
	`TAILQ_FOREACH
(
e
, &
ba£
->
evítqueue
, 
ev_√xt
) {

2882 
	`Ârötf
(
ouçut
, " %∞[fd "
EV_SOCK_FMT
"]%s%s%s%s%s\n",

2883 (*)
e
, 
	`EV_SOCK_ARG
”->
ev_fd
),

2884 (
e
->
ev_evíts
&
EV_READ
)?" Read":"",

2885 (
e
->
ev_evíts
&
EV_WRITE
)?" Write":"",

2886 (
e
->
ev_evíts
&
EV_SIGNAL
)?" Signal":"",

2887 (
e
->
ev_evíts
&
EV_TIMEOUT
)?" Timeout":"",

2888 (
e
->
ev_evíts
&
EV_PERSIST
)?" Persist":"");

2891 
i
 = 0; i < 
ba£
->
«˘ivequeues
; ++i) {

2892 i‡(
	`TAILQ_EMPTY
(&
ba£
->
a˘ivequeues
[
i
]))

2894 
	`Ârötf
(
ouçut
, "A˘ivêevít†[¥i‹ôy %d]:\n", 
i
);

2895 
	`TAILQ_FOREACH
(
e
, &
ba£
->
evítqueue
, 
ev_√xt
) {

2896 
	`Ârötf
(
ouçut
, " %∞[fd "
EV_SOCK_FMT
"]%s%s%s%s\n",

2897 (*)
e
, 
	`EV_SOCK_ARG
”->
ev_fd
),

2898 (
e
->
ev_ªs
&
EV_READ
)?" Readáctive":"",

2899 (
e
->
ev_ªs
&
EV_WRITE
)?" Writeáctive":"",

2900 (
e
->
ev_ªs
&
EV_SIGNAL
)?" Signaláctive":"",

2901 (
e
->
ev_ªs
&
EV_TIMEOUT
)?" Timeoutáctive":"");

2904 
	}
}

2907 
	$evít_ba£_add_vútuÆ
(
evít_ba£
 *
ba£
)

2909 
	`EVBASE_ACQUIRE_LOCK
(
ba£
, 
th_ba£_lock
);

2910 
ba£
->
vútuÆ_evít_cou¡
++;

2911 
	`EVBASE_RELEASE_LOCK
(
ba£
, 
th_ba£_lock
);

2912 
	}
}

2915 
	$evít_ba£_dñ_vútuÆ
(
evít_ba£
 *
ba£
)

2917 
	`EVBASE_ACQUIRE_LOCK
(
ba£
, 
th_ba£_lock
);

2918 
	`EVUTIL_ASSERT
(
ba£
->
vútuÆ_evít_cou¡
 > 0);

2919 
ba£
->
vútuÆ_evít_cou¡
--;

2920 i‡(
ba£
->
vútuÆ_evít_cou¡
 =0 && 
	`EVBASE_NEED_NOTIFY
(base))

2921 
	`evthªad_nŸify_ba£
(
ba£
);

2922 
	`EVBASE_RELEASE_LOCK
(
ba£
, 
th_ba£_lock
);

2923 
	}
}

2925 #i‚de‡
_EVENT_DISABLE_THREAD_SUPPORT


2927 
	$evít_globÆ_£tup_locks_
(c⁄° 
íabÀ_locks
)

2929 #i‚de‡
_EVENT_DISABLE_DEBUG_MODE


2930 
	`EVTHREAD_SETUP_GLOBAL_LOCK
(
_evít_debug_m≠_lock
, 0);

2932 i‡(
	`evsig_globÆ_£tup_locks_
(
íabÀ_locks
) < 0)

2934 i‡(
	`evutû_£cuª_∫g_globÆ_£tup_locks_
(
íabÀ_locks
) < 0)

2937 
	}
}

2941 
	$evít_ba£_as£π_ok
(
evít_ba£
 *
ba£
)

2943 
i
;

2944 
	`EVBASE_ACQUIRE_LOCK
(
ba£
, 
th_ba£_lock
);

2945 
	`evm≠_check_öãgrôy
(
ba£
);

2948 
i
 = 1; i < ()
ba£
->
timehóp
.
n
; ++i) {

2949 
∑ª¡
 = (
i
 - 1) / 2;

2950 
evít
 *
ev
, *
p_ev
;

2951 
ev
 = 
ba£
->
timehóp
.
p
[
i
];

2952 
p_ev
 = 
ba£
->
timehóp
.
p
[
∑ª¡
];

2953 
	`EVUTIL_ASSERT
(
ev
->
ev_Êags
 & 
EV_TIMEOUT
);

2954 
	`EVUTIL_ASSERT
(
	`evutû_timîcmp
(&
p_ev
->
ev_timeout
, &
ev
->ev_timeout, <=));

2955 
	`EVUTIL_ASSERT
(
ev
->
ev_timeout_pos
.
mö_hóp_idx
 =
i
);

2959 
i
 = 0; i < 
ba£
->
n_comm⁄_timeouts
; ++i) {

2960 
comm⁄_timeout_li°
 *
˘l
 = 
ba£
->
comm⁄_timeout_queues
[
i
];

2961 
evít
 *
œ°
=
NULL
, *
ev
;

2962 
	`TAILQ_FOREACH
(
ev
, &
˘l
->
evíts
, 
ev_timeout_pos
.
ev_√xt_wôh_comm⁄_timeout
) {

2963 i‡(
œ°
)

2964 
	`EVUTIL_ASSERT
(
	`evutû_timîcmp
(&
œ°
->
ev_timeout
, &
ev
->ev_timeout, <=));

2965 
	`EVUTIL_ASSERT
(
ev
->
ev_Êags
 & 
EV_TIMEOUT
);

2966 
	`EVUTIL_ASSERT
(
	`is_comm⁄_timeout
(&
ev
->
ev_timeout
,
ba£
));

2967 
	`EVUTIL_ASSERT
(
	`COMMON_TIMEOUT_IDX
(&
ev
->
ev_timeout
Ë=
i
);

2968 
œ°
 = 
ev
;

2972 
	`EVBASE_RELEASE_LOCK
(
ba£
, 
th_ba£_lock
);

2973 
	}
}

	@event.h

27 #i‚de‡
_EVENT_H_


28 
	#_EVENT_H_


	)

40 #ifde‡
__˝lu•lus


44 
	~<evít2/evít-c⁄fig.h
>

45 #ifde‡
_EVENT_HAVE_SYS_TYPES_H


46 
	~<sys/ty≥s.h
>

48 #ifde‡
_EVENT_HAVE_SYS_TIME_H


49 
	~<sys/time.h
>

51 #ifde‡
_EVENT_HAVE_STDINT_H


52 
	~<°döt.h
>

54 
	~<°d¨g.h
>

57 
	~<evutû.h
>

59 #ifde‡
WIN32


60 #i‚de‡
WIN32_LEAN_AND_MEAN


61 
	#WIN32_LEAN_AND_MEAN


	)

63 
	~<wösock2.h
>

64 
	~<wödows.h
>

65 #unde‡
WIN32_LEAN_AND_MEAN


66 
	tu_ch¨
;

67 
	tu_sh‹t
;

70 
	~<evít2/evít_°ru˘.h
>

71 
	~<evít2/evít.h
>

72 
	~<evít2/evít_com∑t.h
>

73 
	~<evít2/buf„r.h
>

74 
	~<evít2/buf„r_com∑t.h
>

75 
	~<evít2/buf„ªvít.h
>

76 
	~<evít2/buf„ªvít_°ru˘.h
>

77 
	~<evít2/buf„ªvít_com∑t.h
>

78 
	~<evít2/èg.h
>

79 
	~<evít2/èg_com∑t.h
>

81 #ifde‡
__˝lu•lus


	@event_iocp.c

27 #i‚de‡
_WIN32_WINNT


29 
	#_WIN32_WINNT
 0x0403

	)

31 
	~<wösock2.h
>

32 
	~<wödows.h
>

33 
	~<¥o˚ss.h
>

34 
	~<°dio.h
>

35 
	~<mswsock.h
>

37 
	~"evít2/utû.h
"

38 
	~"utû-öã∫Æ.h
"

39 
	~"io˝-öã∫Æ.h
"

40 
	~"log-öã∫Æ.h
"

41 
	~"mm-öã∫Æ.h
"

42 
	~"evít-öã∫Æ.h
"

43 
	~"evthªad-öã∫Æ.h
"

45 
	#NOTIFICATION_KEY
 ((
ULONG_PTR
)-1)

	)

48 
	$evít_ovîœµed_öô
(
evít_ovîœµed
 *
o
, 
io˝_ˇŒback
 
cb
)

50 
	`mem£t
(
o
, 0, (
evít_ovîœµed
));

51 
o
->
cb
 = cb;

52 
	}
}

55 
	$h™dÀ_íåy
(
OVERLAPPED
 *
o
, 
ULONG_PTR
 
com∂ëi⁄_key
, 
DWORD
 
nByãs
, 
ok
)

57 
evít_ovîœµed
 *
eo
 =

58 
	`EVUTIL_UPCAST
(
o
, 
evít_ovîœµed
, 
ovîœµed
);

59 
eo
->
	`cb
”o, 
com∂ëi⁄_key
, 
nByãs
, 
ok
);

60 
	}
}

63 
	$lo›
(*
_p‹t
)

65 
evít_io˝_p‹t
 *
p‹t
 = 
_p‹t
;

66 
ms
 = 
p‹t
->ms;

67 
HANDLE
 
p
 = 
p‹t
->port;

69 i‡(
ms
 <= 0)

70 
ms
 = 
INFINITE
;

73 
OVERLAPPED
 *
ovîœµed
=
NULL
;

74 
ULONG_PTR
 
key
=0;

75 
DWORD
 
byãs
=0;

76 
ok
 = 
	`GëQueuedCom∂ëi⁄Sètus
(
p
, &
byãs
, &
key
,

77 &
ovîœµed
, 
ms
);

78 
	`E¡îCrôiˇlSe˘i⁄
(&
p‹t
->
lock
);

79 i‡(
p‹t
->
shutdown
) {

80 i‡(--
p‹t
->
n_live_thªads
 == 0)

81 
	`Rñó£Sem≠h‹e
(
p‹t
->
shutdownSem≠h‹e
, 1,

82 
NULL
);

83 
	`LóveCrôiˇlSe˘i⁄
(&
p‹t
->
lock
);

86 
	`LóveCrôiˇlSe˘i⁄
(&
p‹t
->
lock
);

88 i‡(
key
 !
NOTIFICATION_KEY
 && 
ovîœµed
)

89 
	`h™dÀ_íåy
(
ovîœµed
, 
key
, 
byãs
, 
ok
);

90 i‡(!
ovîœµed
)

93 
	`evít_w¨nx
("GetQueuedCompletionStatusÉxited withÇoÉvent.");

94 
	`E¡îCrôiˇlSe˘i⁄
(&
p‹t
->
lock
);

95 i‡(--
p‹t
->
n_live_thªads
 == 0)

96 
	`Rñó£Sem≠h‹e
(
p‹t
->
shutdownSem≠h‹e
, 1, 
NULL
);

97 
	`LóveCrôiˇlSe˘i⁄
(&
p‹t
->
lock
);

98 
	}
}

101 
	$evít_io˝_p‹t_assocüã
(
evít_io˝_p‹t
 *
p‹t
, 
evutû_sockë_t
 
fd
,

102 
ev_uöçå_t
 
key
)

104 
HANDLE
 
h
;

105 
h
 = 
	`Cª©eIoCom∂ëi⁄P‹t
((
HANDLE
)
fd
, 
p‹t
->p‹t, 
key
,Ö‹t->
n_thªads
);

106 i‡(!
h
)

109 
	}
}

112 
	$gë_exãnsi⁄_fun˘i⁄
(
SOCKET
 
s
, c⁄° 
GUID
 *
which_‚
)

114 *
±r
 = 
NULL
;

115 
DWORD
 
byãs
=0;

116 
	`WSAIo˘l
(
s
, 
SIO_GET_EXTENSION_FUNCTION_POINTER
,

117 (
GUID
*)
which_‚
, (*which_fn),

118 &
±r
, (ptr),

119 &
byãs
, 
NULL
, NULL);

125  
±r
;

126 
	}
}

131 #i‚de‡
WSAID_ACCEPTEX


132 
	#WSAID_ACCEPTEX
 \

133 {0xb5367df1,0xcbac,0x11cf,{0x95,0xˇ,0x00,0x80,0x5f,0x48,0xa1,0x92}}

	)

135 #i‚de‡
WSAID_CONNECTEX


136 
	#WSAID_CONNECTEX
 \

137 {0x25a207b9,0xddf3,0x4660,{0x8e,0xe9,0x76,0xe5,0x8c,0x74,0x06,0x3e}}

	)

139 #i‚de‡
WSAID_GETACCEPTEXSOCKADDRS


140 
	#WSAID_GETACCEPTEXSOCKADDRS
 \

141 {0xb5367df2,0xcbac,0x11cf,{0x95,0xˇ,0x00,0x80,0x5f,0x48,0xa1,0x92}}

	)

145 
	$öô_exãnsi⁄_fun˘i⁄s
(
wö32_exãnsi⁄_‚s
 *
ext
)

147 c⁄° 
GUID
 
ac˚±ex
 = 
WSAID_ACCEPTEX
;

148 c⁄° 
GUID
 
c⁄√˘ex
 = 
WSAID_CONNECTEX
;

149 c⁄° 
GUID
 
gëac˚±exsockaddrs
 = 
WSAID_GETACCEPTEXSOCKADDRS
;

150 
SOCKET
 
s
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

151 i‡(
s
 =
INVALID_SOCKET
)

153 
ext
->
Ac˚±Ex
 = 
	`gë_exãnsi⁄_fun˘i⁄
(
s
, &
ac˚±ex
);

154 
ext
->
C⁄√˘Ex
 = 
	`gë_exãnsi⁄_fun˘i⁄
(
s
, &
c⁄√˘ex
);

155 
ext
->
GëAc˚±ExSockaddrs
 = 
	`gë_exãnsi⁄_fun˘i⁄
(
s
,

156 &
gëac˚±exsockaddrs
);

157 
	`˛o£sockë
(
s
);

158 
	}
}

160 
wö32_exãnsi⁄_‚s
 
	gthe_exãnsi⁄_‚s
;

161 
	gexãnsi⁄_‚s_öôülized
 = 0;

163 c⁄° 
wö32_exãnsi⁄_‚s
 *

164 
	$evít_gë_wö32_exãnsi⁄_‚s
()

166  &
the_exãnsi⁄_‚s
;

167 
	}
}

169 
	#N_CPUS_DEFAULT
 2

	)

171 
evít_io˝_p‹t
 *

172 
	$evít_io˝_p‹t_œunch
(
n_˝us
)

174 
evít_io˝_p‹t
 *
p‹t
;

175 
i
;

177 i‡(!
exãnsi⁄_‚s_öôülized
)

178 
	`öô_exãnsi⁄_fun˘i⁄s
(&
the_exãnsi⁄_‚s
);

180 i‡(!(
p‹t
 = 
	`mm_ˇŒoc
(1, (
evít_io˝_p‹t
))))

181  
NULL
;

183 i‡(
n_˝us
 <= 0)

184 
n_˝us
 = 
N_CPUS_DEFAULT
;

185 
p‹t
->
n_thªads
 = 
n_˝us
 * 2;

186 
p‹t
->
thªads
 = 
	`mm_ˇŒoc
’‹t->
n_thªads
, (
HANDLE
));

187 i‡(!
p‹t
->
thªads
)

188 
îr
;

190 
p‹t
->p‹à
	`Cª©eIoCom∂ëi⁄P‹t
(
INVALID_HANDLE_VALUE
, 
NULL
, 0,

191 
n_˝us
);

192 
p‹t
->
ms
 = -1;

193 i‡(!
p‹t
->port)

194 
îr
;

196 
p‹t
->
shutdownSem≠h‹e
 = 
	`Cª©eSem≠h‹e
(
NULL
, 0, 1, NULL);

197 i‡(!
p‹t
->
shutdownSem≠h‹e
)

198 
îr
;

200 
i
=0; i<
p‹t
->
n_thªads
; ++i) {

201 
ev_uöçå_t
 
th
 = 
	`_begöthªad
(
lo›
, 0, 
p‹t
);

202 i‡(
th
 =(
ev_uöçå_t
)-1)

203 
îr
;

204 
p‹t
->
thªads
[
i
] = (
HANDLE
)
th
;

205 ++
p‹t
->
n_live_thªads
;

208 
	`InôülizeCrôiˇlSe˘i⁄AndSpöCou¡
(&
p‹t
->
lock
, 1000);

210  
p‹t
;

211 
îr
:

212 i‡(
p‹t
->port)

213 
	`Clo£H™dÀ
(
p‹t
->port);

214 i‡(
p‹t
->
thªads
)

215 
	`mm_‰ì
(
p‹t
->
thªads
);

216 i‡(
p‹t
->
shutdownSem≠h‹e
)

217 
	`Clo£H™dÀ
(
p‹t
->
shutdownSem≠h‹e
);

218 
	`mm_‰ì
(
p‹t
);

219  
NULL
;

220 
	}
}

223 
	$_evít_io˝_p‹t_u∆ock_™d_‰ì
(
evít_io˝_p‹t
 *
p‹t
)

225 
	`DñëeCrôiˇlSe˘i⁄
(&
p‹t
->
lock
);

226 
	`Clo£H™dÀ
(
p‹t
->port);

227 
	`Clo£H™dÀ
(
p‹t
->
shutdownSem≠h‹e
);

228 
	`mm_‰ì
(
p‹t
->
thªads
);

229 
	`mm_‰ì
(
p‹t
);

230 
	}
}

233 
	$evít_io˝_nŸify_Æl
(
evít_io˝_p‹t
 *
p‹t
)

235 
i
, 
r
, 
ok
=1;

236 
i
=0; i<
p‹t
->
n_thªads
; ++i) {

237 
r
 = 
	`Po°QueuedCom∂ëi⁄Sètus
(
p‹t
->p‹t, 0, 
NOTIFICATION_KEY
,

238 
NULL
);

239 i‡(!
r
)

240 
ok
 = 0;

242  
ok
 ? 0 : -1;

243 
	}
}

246 
	$evít_io˝_shutdown
(
evít_io˝_p‹t
 *
p‹t
, 
waôM£c
)

248 
DWORD
 
ms
 = 
INFINITE
;

249 
n
;

251 
	`E¡îCrôiˇlSe˘i⁄
(&
p‹t
->
lock
);

252 
p‹t
->
shutdown
 = 1;

253 
	`LóveCrôiˇlSe˘i⁄
(&
p‹t
->
lock
);

254 
	`evít_io˝_nŸify_Æl
(
p‹t
);

256 i‡(
waôM£c
 >= 0)

257 
ms
 = 
waôM£c
;

259 
	`WaôF‹SögÀObje˘
(
p‹t
->
shutdownSem≠h‹e
, 
ms
);

260 
	`E¡îCrôiˇlSe˘i⁄
(&
p‹t
->
lock
);

261 
n
 = 
p‹t
->
n_live_thªads
;

262 
	`LóveCrôiˇlSe˘i⁄
(&
p‹t
->
lock
);

263 i‡(
n
 == 0) {

264 
	`_evít_io˝_p‹t_u∆ock_™d_‰ì
(
p‹t
);

269 
	}
}

272 
	$evít_io˝_a˘iv©e_ovîœµed
(

273 
evít_io˝_p‹t
 *
p‹t
, 
evít_ovîœµed
 *
o
,

274 
ev_uöçå_t
 
key
, 
ev_uöt32_t
 
n
)

276 
BOOL
 
r
;

278 
r
 = 
	`Po°QueuedCom∂ëi⁄Sètus
(
p‹t
->p‹t, 
n
, 
key
, &
o
->
ovîœµed
);

279  (
r
==0) ? -1 : 0;

280 
	}
}

282 
evít_io˝_p‹t
 *

283 
	$evít_ba£_gë_io˝
(
evít_ba£
 *
ba£
)

285 #ifde‡
WIN32


286  
ba£
->
io˝
;

288  
NULL
;

290 
	}
}

	@event_tagging.c

28 
	~"evít2/evít-c⁄fig.h
"

30 #ifde‡
_EVENT_HAVE_SYS_TYPES_H


31 
	~<sys/ty≥s.h
>

33 #ifde‡
_EVENT_HAVE_SYS_PARAM_H


34 
	~<sys/∑øm.h
>

37 #ifde‡
WIN32


38 
	#WIN32_LEAN_AND_MEAN


	)

39 
	~<wösock2.h
>

40 
	~<wödows.h
>

41 #unde‡
WIN32_LEAN_AND_MEAN


43 
	~<sys/io˘l.h
>

46 
	~<sys/queue.h
>

47 #ifde‡
_EVENT_HAVE_SYS_TIME_H


48 
	~<sys/time.h
>

51 
	~<î∫o.h
>

52 
	~<°dio.h
>

53 
	~<°dlib.h
>

54 
	~<°rög.h
>

55 #i‚de‡
WIN32


56 
	~<sy¶og.h
>

58 #ifde‡
_EVENT_HAVE_UNISTD_H


59 
	~<uni°d.h
>

61 
	~<limôs.h
>

63 
	~"evít2/evít.h
"

64 
	~"evít2/èg.h
"

65 
	~"evít2/buf„r.h
"

66 
	~"log-öã∫Æ.h
"

67 
	~"mm-öã∫Æ.h
"

68 
	~"utû-öã∫Æ.h
"

94 
evèg_decode_öt
(
ev_uöt32_t
 *
≤umbî
, 
evbuf„r
 *
evbuf
);

95 
evèg_decode_öt64
(
ev_uöt64_t
 *
≤umbî
, 
evbuf„r
 *
evbuf
);

96 
evèg_ícode_èg
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
èg
);

97 
evèg_decode_èg
(
ev_uöt32_t
 *
±ag
, 
evbuf„r
 *
evbuf
);

100 
	$evèg_öô
()

102 
	}
}

115 
	#ENCODE_INT_INTERNAL
(
d©a
, 
numbî
) do { \

116 
off
 = 1, 
nibbÀs
 = 0; \

118 
	`mem£t
(
d©a
, 0, (
numbî
)+1); \

119 
numbî
) { \

120 i‡(
off
 & 0x1) \

121 
d©a
[
off
/2] = (d©a[off/2] & 0xf0Ë| (
numbî
 & 0x0f); \

123 
d©a
[
off
/2] = (data[off/2] & 0x0f) | \

124 ((
numbî
 & 0x0f) << 4); \

125 
numbî
 >>= 4; \

126 
off
++; \

129 i‡(
off
 > 2) \

130 
nibbÀs
 = 
off
 - 2; \

133 
d©a
[0] = (d©a[0] & 0x0fË| ((
nibbÀs
 & 0x0f) << 4); \

135  ((
off
 + 1) / 2); \

136 } 0)

	)

138 
ölöe
 

139 
	$ícode_öt_öã∫Æ
(
ev_uöt8_t
 *
d©a
, 
ev_uöt32_t
 
numbî
)

141 
	`ENCODE_INT_INTERNAL
(
d©a
, 
numbî
);

142 
	}
}

144 
ölöe
 

145 
	$ícode_öt64_öã∫Æ
(
ev_uöt8_t
 *
d©a
, 
ev_uöt64_t
 
numbî
)

147 
	`ENCODE_INT_INTERNAL
(
d©a
, 
numbî
);

148 
	}
}

151 
	$evèg_ícode_öt
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
numbî
)

153 
ev_uöt8_t
 
d©a
[5];

154 
Àn
 = 
	`ícode_öt_öã∫Æ
(
d©a
, 
numbî
);

155 
	`evbuf„r_add
(
evbuf
, 
d©a
, 
Àn
);

156 
	}
}

159 
	$evèg_ícode_öt64
(
evbuf„r
 *
evbuf
, 
ev_uöt64_t
 
numbî
)

161 
ev_uöt8_t
 
d©a
[9];

162 
Àn
 = 
	`ícode_öt64_öã∫Æ
(
d©a
, 
numbî
);

163 
	`evbuf„r_add
(
evbuf
, 
d©a
, 
Àn
);

164 
	}
}

172 
	$evèg_ícode_èg
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
èg
)

174 
byãs
 = 0;

175 
ev_uöt8_t
 
d©a
[5];

177 
	`mem£t
(
d©a
, 0, (data));

179 
ev_uöt8_t
 
lowî
 = 
èg
 & 0x7f;

180 
èg
 >>= 7;

182 i‡(
èg
)

183 
lowî
 |= 0x80;

185 
d©a
[
byãs
++] = 
lowî
;

186 } 
èg
);

188 i‡(
evbuf
 !
NULL
)

189 
	`evbuf„r_add
(
evbuf
, 
d©a
, 
byãs
);

191  (
byãs
);

192 
	}
}

195 
	$decode_èg_öã∫Æ
(
ev_uöt32_t
 *
±ag
, 
evbuf„r
 *
evbuf
, 
dodøö
)

197 
ev_uöt32_t
 
numbî
 = 0;

198 
size_t
 
Àn
 = 
	`evbuf„r_gë_Àngth
(
evbuf
);

199 
ev_uöt8_t
 *
d©a
;

200 
size_t
 
cou¡
 = 0;

201 
shi·
 = 0, 
d⁄e
 = 0;

207 
d©a
 = 
	`evbuf„r_puŒup
(

208 
evbuf
, 
Àn
 < (
numbî
) + 1 ?Üen : (number) + 1);

210 
cou¡
++ < 
Àn
) {

211 
ev_uöt8_t
 
lowî
 = *
d©a
++;

212 
numbî
 |(
lowî
 & 0x7fË<< 
shi·
;

213 
shi·
 += 7;

215 i‡(!(
lowî
 & 0x80)) {

216 
d⁄e
 = 1;

221 i‡(!
d⁄e
)

224 i‡(
dodøö
)

225 
	`evbuf„r_døö
(
evbuf
, 
cou¡
);

227 i‡(
±ag
 !
NULL
)

228 *
±ag
 = 
numbî
;

230  
cou¡
 > 
INT_MAX
 ? INT_MAX : ()(count);

231 
	}
}

234 
	$evèg_decode_èg
(
ev_uöt32_t
 *
±ag
, 
evbuf„r
 *
evbuf
)

236  (
	`decode_èg_öã∫Æ
(
±ag
, 
evbuf
, 1 ));

237 
	}
}

246 
	$evèg_m¨shÆ
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
èg
,

247 c⁄° *
d©a
, 
ev_uöt32_t
 
Àn
)

249 
	`evèg_ícode_èg
(
evbuf
, 
èg
);

250 
	`evèg_ícode_öt
(
evbuf
, 
Àn
);

251 
	`evbuf„r_add
(
evbuf
, (*)
d©a
, 
Àn
);

252 
	}
}

255 
	$evèg_m¨shÆ_buf„r
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
èg
,

256 
evbuf„r
 *
d©a
)

258 
	`evèg_ícode_èg
(
evbuf
, 
èg
);

260 
	`evèg_ícode_öt
(
evbuf
, (
ev_uöt32_t
)
	`evbuf„r_gë_Àngth
(
d©a
));

261 
	`evbuf„r_add_buf„r
(
evbuf
, 
d©a
);

262 
	}
}

266 
	$evèg_m¨shÆ_öt
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
èg
,Év_uöt32_à
öãgî
)

268 
ev_uöt8_t
 
d©a
[5];

269 
Àn
 = 
	`ícode_öt_öã∫Æ
(
d©a
, 
öãgî
);

271 
	`evèg_ícode_èg
(
evbuf
, 
èg
);

272 
	`evèg_ícode_öt
(
evbuf
, 
Àn
);

273 
	`evbuf„r_add
(
evbuf
, 
d©a
, 
Àn
);

274 
	}
}

277 
	$evèg_m¨shÆ_öt64
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
èg
,

278 
ev_uöt64_t
 
öãgî
)

280 
ev_uöt8_t
 
d©a
[9];

281 
Àn
 = 
	`ícode_öt64_öã∫Æ
(
d©a
, 
öãgî
);

283 
	`evèg_ícode_èg
(
evbuf
, 
èg
);

284 
	`evèg_ícode_öt
(
evbuf
, 
Àn
);

285 
	`evbuf„r_add
(
evbuf
, 
d©a
, 
Àn
);

286 
	}
}

289 
	$evèg_m¨shÆ_°rög
(
evbuf„r
 *
buf
, 
ev_uöt32_t
 
èg
, c⁄° *
°rög
)

292 
	`evèg_m¨shÆ
(
buf
, 
èg
, 
°rög
, (
ev_uöt32_t
)
	`°æí
(string));

293 
	}
}

296 
	$evèg_m¨shÆ_timevÆ
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
èg
, 
timevÆ
 *
tv
)

298 
ev_uöt8_t
 
d©a
[10];

299 
Àn
 = 
	`ícode_öt_öã∫Æ
(
d©a
, 
tv
->
tv_£c
);

300 
Àn
 +
	`ícode_öt_öã∫Æ
(
d©a
 +Üí, 
tv
->
tv_u£c
);

301 
	`evèg_m¨shÆ
(
evbuf
, 
èg
, 
d©a
, 
Àn
);

302 
	}
}

304 
	#DECODE_INT_INTERNAL
(
numbî
, 
maxnibbÀs
, 
≤umbî
, 
evbuf
, 
off£t
) \

306 
ev_uöt8_t
 *
d©a
; \

307 
ev_ssize_t
 
Àn
 = 
	`evbuf„r_gë_Àngth
(
evbuf
Ë- 
off£t
; \

308 
nibbÀs
 = 0; \

310 i‡(
Àn
 <= 0) \

314 
d©a
 = 
	`evbuf„r_puŒup
(
evbuf
, 
off£t
 + 1) + offset; \

316 
nibbÀs
 = ((
d©a
[0] & 0xf0) >> 4) + 1; \

317 i‡(
nibbÀs
 > 
maxnibbÀs
 || (nibbÀ†>> 1Ë+ 1 > 
Àn
) \

319 
Àn
 = (
nibbÀs
 >> 1) + 1; \

321 
d©a
 = 
	`evbuf„r_puŒup
(
evbuf
, 
off£t
 + 
Àn
) + offset; \

323 
nibbÀs
 > 0) { \

324 
numbî
 <<= 4; \

325 i‡(
nibbÀs
 & 0x1) \

326 
numbî
 |
d©a
[
nibbÀs
 >> 1] & 0x0f; \

328 
numbî
 |(
d©a
[
nibbÀs
 >> 1] & 0xf0) >> 4; \

329 
nibbÀs
--; \

332 *
≤umbî
 = 
numbî
; \

334  ()(
Àn
); \

335 } 0)

	)

347 
	$decode_öt_öã∫Æ
(
ev_uöt32_t
 *
≤umbî
, 
evbuf„r
 *
evbuf
, 
off£t
)

349 
ev_uöt32_t
 
numbî
 = 0;

350 
	`DECODE_INT_INTERNAL
(
numbî
, 8, 
≤umbî
, 
evbuf
, 
off£t
);

351 
	}
}

354 
	$decode_öt64_öã∫Æ
(
ev_uöt64_t
 *
≤umbî
, 
evbuf„r
 *
evbuf
, 
off£t
)

356 
ev_uöt64_t
 
numbî
 = 0;

357 
	`DECODE_INT_INTERNAL
(
numbî
, 16, 
≤umbî
, 
evbuf
, 
off£t
);

358 
	}
}

361 
	$evèg_decode_öt
(
ev_uöt32_t
 *
≤umbî
, 
evbuf„r
 *
evbuf
)

363 
ªs
 = 
	`decode_öt_öã∫Æ
(
≤umbî
, 
evbuf
, 0);

364 i‡(
ªs
 != -1)

365 
	`evbuf„r_døö
(
evbuf
, 
ªs
);

367  (
ªs
 == -1 ? -1 : 0);

368 
	}
}

371 
	$evèg_decode_öt64
(
ev_uöt64_t
 *
≤umbî
, 
evbuf„r
 *
evbuf
)

373 
ªs
 = 
	`decode_öt64_öã∫Æ
(
≤umbî
, 
evbuf
, 0);

374 i‡(
ªs
 != -1)

375 
	`evbuf„r_døö
(
evbuf
, 
ªs
);

377  (
ªs
 == -1 ? -1 : 0);

378 
	}
}

381 
	$evèg_≥ek
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 *
±ag
)

383  (
	`decode_èg_öã∫Æ
(
±ag
, 
evbuf
, 0 ));

384 
	}
}

387 
	$evèg_≥ek_Àngth
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 *
∂ígth
)

389 
ªs
, 
Àn
;

391 
Àn
 = 
	`decode_èg_öã∫Æ
(
NULL
, 
evbuf
, 0 );

392 i‡(
Àn
 == -1)

395 
ªs
 = 
	`decode_öt_öã∫Æ
(
∂ígth
, 
evbuf
, 
Àn
);

396 i‡(
ªs
 == -1)

399 *
∂ígth
 +
ªs
 + 
Àn
;

402 
	}
}

405 
	$evèg_∑ylﬂd_Àngth
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 *
∂ígth
)

407 
ªs
, 
Àn
;

409 
Àn
 = 
	`decode_èg_öã∫Æ
(
NULL
, 
evbuf
, 0 );

410 i‡(
Àn
 == -1)

413 
ªs
 = 
	`decode_öt_öã∫Æ
(
∂ígth
, 
evbuf
, 
Àn
);

414 i‡(
ªs
 == -1)

418 
	}
}

423 
	$evèg_unm¨shÆ_hódî
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 *
±ag
)

425 
ev_uöt32_t
 
Àn
;

427 i‡(
	`decode_èg_öã∫Æ
(
±ag
, 
evbuf
, 1 ) == -1)

429 i‡(
	`evèg_decode_öt
(&
Àn
, 
evbuf
) == -1)

432 i‡(
	`evbuf„r_gë_Àngth
(
evbuf
Ë< 
Àn
)

435  (
Àn
);

436 
	}
}

439 
	$evèg_c⁄sume
(
evbuf„r
 *
evbuf
)

441 
Àn
;

442 i‡((
Àn
 = 
	`evèg_unm¨shÆ_hódî
(
evbuf
, 
NULL
)) == -1)

444 
	`evbuf„r_døö
(
evbuf
, 
Àn
);

447 
	}
}

452 
	$evèg_unm¨shÆ
(
evbuf„r
 *
§c
, 
ev_uöt32_t
 *
±ag
, evbuf„∏*
d°
)

454 
Àn
;

456 i‡((
Àn
 = 
	`evèg_unm¨shÆ_hódî
(
§c
, 
±ag
)) == -1)

459 i‡(
	`evbuf„r_add
(
d°
, 
	`evbuf„r_puŒup
(
§c
, 
Àn
),Üen) == -1)

462 
	`evbuf„r_døö
(
§c
, 
Àn
);

464  (
Àn
);

465 
	}
}

470 
	$evèg_unm¨shÆ_öt
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
√ed_èg
,

471 
ev_uöt32_t
 *
pöãgî
)

473 
ev_uöt32_t
 
èg
;

474 
ev_uöt32_t
 
Àn
;

475 
ªsu…
;

477 i‡(
	`decode_èg_öã∫Æ
(&
èg
, 
evbuf
, 1 ) == -1)

479 i‡(
√ed_èg
 !
èg
)

481 i‡(
	`evèg_decode_öt
(&
Àn
, 
evbuf
) == -1)

484 i‡(
	`evbuf„r_gë_Àngth
(
evbuf
Ë< 
Àn
)

487 
ªsu…
 = 
	`decode_öt_öã∫Æ
(
pöãgî
, 
evbuf
, 0);

488 
	`evbuf„r_døö
(
evbuf
, 
Àn
);

489 i‡(
ªsu…
 < 0 || (
size_t
Ïesu… > 
Àn
)

492  
ªsu…
;

493 
	}
}

496 
	$evèg_unm¨shÆ_öt64
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
√ed_èg
,

497 
ev_uöt64_t
 *
pöãgî
)

499 
ev_uöt32_t
 
èg
;

500 
ev_uöt32_t
 
Àn
;

501 
ªsu…
;

503 i‡(
	`decode_èg_öã∫Æ
(&
èg
, 
evbuf
, 1 ) == -1)

505 i‡(
√ed_èg
 !
èg
)

507 i‡(
	`evèg_decode_öt
(&
Àn
, 
evbuf
) == -1)

510 i‡(
	`evbuf„r_gë_Àngth
(
evbuf
Ë< 
Àn
)

513 
ªsu…
 = 
	`decode_öt64_öã∫Æ
(
pöãgî
, 
evbuf
, 0);

514 
	`evbuf„r_døö
(
evbuf
, 
Àn
);

515 i‡(
ªsu…
 < 0 || (
size_t
Ïesu… > 
Àn
)

518  
ªsu…
;

519 
	}
}

524 
	$evèg_unm¨shÆ_fixed
(
evbuf„r
 *
§c
, 
ev_uöt32_t
 
√ed_èg
, *
d©a
,

525 
size_t
 
Àn
)

527 
ev_uöt32_t
 
èg
;

528 
èg_Àn
;

531 i‡((
èg_Àn
 = 
	`evèg_unm¨shÆ_hódî
(
§c
, &
èg
)) < 0 ||

532 
èg
 !
√ed_èg
)

535 i‡((
size_t
)
èg_Àn
 !
Àn
)

538 
	`evbuf„r_ªmove
(
§c
, 
d©a
, 
Àn
);

540 
	}
}

543 
	$evèg_unm¨shÆ_°rög
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
√ed_èg
,

544 **
p°rög
)

546 
ev_uöt32_t
 
èg
;

547 
èg_Àn
;

549 i‡((
èg_Àn
 = 
	`evèg_unm¨shÆ_hódî
(
evbuf
, &
èg
)) == -1 ||

550 
èg
 !
√ed_èg
)

553 *
p°rög
 = 
	`mm_mÆloc
(
èg_Àn
 + 1);

554 i‡(*
p°rög
 =
NULL
) {

555 
	`evít_w¨n
("%s: mÆloc", 
__func__
);

558 
	`evbuf„r_ªmove
(
evbuf
, *
p°rög
, 
èg_Àn
);

559 (*
p°rög
)[
èg_Àn
] = '\0';

562 
	}
}

565 
	$evèg_unm¨shÆ_timevÆ
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
√ed_èg
,

566 
timevÆ
 *
±v
)

568 
ev_uöt32_t
 
èg
;

569 
ev_uöt32_t
 
öãgî
;

570 
Àn
, 
off£t
, 
off£t2
;

571 
ªsu…
 = -1;

573 i‡((
Àn
 = 
	`evèg_unm¨shÆ_hódî
(
evbuf
, &
èg
)) == -1)

575 i‡(
èg
 !
√ed_èg
)

576 
d⁄e
;

577 i‡((
off£t
 = 
	`decode_öt_öã∫Æ
(&
öãgî
, 
evbuf
, 0)) == -1)

578 
d⁄e
;

579 
±v
->
tv_£c
 = 
öãgî
;

580 i‡((
off£t2
 = 
	`decode_öt_öã∫Æ
(&
öãgî
, 
evbuf
, 
off£t
)) == -1)

581 
d⁄e
;

582 
±v
->
tv_u£c
 = 
öãgî
;

583 i‡(
off£t
 + 
off£t2
 > 
Àn
)

584 
d⁄e
;

586 
ªsu…
 = 0;

587 
d⁄e
:

588 
	`evbuf„r_døö
(
evbuf
, 
Àn
);

589  
ªsu…
;

590 
	}
}

	@evhttp.h

27 #i‚de‡
_EVHTTP_H_


28 
	#_EVHTTP_H_


	)

40 
	~<evít.h
>

41 
	~<evít2/hâp.h
>

42 
	~<evít2/hâp_°ru˘.h
>

43 
	~<evít2/hâp_com∑t.h
>

	@evmap-internal.h

26 #i‚de‡
_EVMAP_H_


27 
	#_EVMAP_H_


	)

37 
	gevít_ba£
;

38 
	gevít
;

42 
evm≠_io_öôm≠
(
evít_io_m≠
* 
˘x
);

43 
evm≠_sig«l_öôm≠
(
evít_sig«l_m≠
* 
˘x
);

49 
evm≠_io_˛ór
(
evít_io_m≠
* 
˘x
);

50 
evm≠_sig«l_˛ór
(
evít_sig«l_m≠
* 
˘x
);

62 
evm≠_io_add
(
evít_ba£
 *
ba£
, 
evutû_sockë_t
 
fd
, 
evít
 *
ev
);

71 
evm≠_io_dñ
(
evít_ba£
 *
ba£
, 
evutû_sockë_t
 
fd
, 
evít
 *
ev
);

78 
evm≠_io_a˘ive
(
evít_ba£
 *
ba£
, 
evutû_sockë_t
 
fd
, 
evíts
);

84 
evm≠_sig«l_add
(
evít_ba£
 *
ba£
, 
signum
, 
evít
 *
ev
);

85 
evm≠_sig«l_dñ
(
evít_ba£
 *
ba£
, 
signum
, 
evít
 *
ev
);

86 
evm≠_sig«l_a˘ive
(
evít_ba£
 *
ba£
, 
evutû_sockë_t
 
signum
, 
nˇŒs
);

88 *
evm≠_io_gë_fdöfo
(
evít_io_m≠
 *
˘x
, 
evutû_sockë_t
 
fd
);

90 
evm≠_check_öãgrôy
(
evít_ba£
 *
ba£
);

	@evmap.c

26 
	~"evít2/evít-c⁄fig.h
"

28 #ifde‡
WIN32


29 
	~<wösock2.h
>

30 
	#WIN32_LEAN_AND_MEAN


	)

31 
	~<wödows.h
>

32 #unde‡
WIN32_LEAN_AND_MEAN


34 
	~<sys/ty≥s.h
>

35 #i‡!
deföed
(
WIN32
Ë&& deföed(
_EVENT_HAVE_SYS_TIME_H
)

36 
	~<sys/time.h
>

38 
	~<sys/queue.h
>

39 
	~<°dio.h
>

40 
	~<°dlib.h
>

41 #i‚de‡
WIN32


42 
	~<uni°d.h
>

44 
	~<î∫o.h
>

45 
	~<sig«l.h
>

46 
	~<°rög.h
>

47 
	~<time.h
>

49 
	~"evít-öã∫Æ.h
"

50 
	~"evm≠-öã∫Æ.h
"

51 
	~"mm-öã∫Æ.h
"

52 
	~"ch™gñi°-öã∫Æ.h
"

57 
	sevm≠_io
 {

58 
evít_li°
 
	mevíts
;

59 
ev_uöt16_t
 
	mƒód
;

60 
ev_uöt16_t
 
	mnwrôe
;

65 
	sevm≠_sig«l
 {

66 
evít_li°
 
	mevíts
;

76 #ifde‡
EVMAP_USE_HT


77 
	sevít_m≠_íåy
 {

78 
HT_ENTRY
(
evít_m≠_íåy
Ë
	mm≠_node
;

79 
evutû_sockë_t
 
	mfd
;

82 
evm≠_io
 
	mevm≠_io
;

83 } 
	mít
;

88 
ölöe
 

89 
	$hashsockë
(
evít_m≠_íåy
 *
e
)

94 
h
 = (Ë
e
->
fd
;

95 
h
 += (h >> 2) | (h << 30);

96  
h
;

97 
	}
}

101 
ölöe
 

102 
	$eqsockë
(
evít_m≠_íåy
 *
e1
, evít_m≠_íåy *
e2
)

104  
e1
->
fd
 =
e2
->fd;

105 
	}
}

107 
	$HT_PROTOTYPE
(
evít_io_m≠
, 
evít_m≠_íåy
, 
m≠_node
, 
hashsockë
, 
eqsockë
)

108 
	$HT_GENERATE
(
evít_io_m≠
, 
evít_m≠_íåy
, 
m≠_node
, 
hashsockë
, 
eqsockë
,

109 0.5, 
mm_mÆloc
, 
mm_ªÆloc
, 
mm_‰ì
)

111 
	#GET_IO_SLOT
(
x
, 
m≠
, 
¶Ÿ
, 
ty≥
) \

113 
evít_m≠_íåy
 
_key
, *
_ít
; \

114 
_key
.
fd
 = 
¶Ÿ
; \

115 
_ít
 = 
	`HT_FIND
(
evít_io_m≠
, 
m≠
, &
_key
); \

116 (
x
Ë
_ít
 ? &_ít->
ít
.
ty≥
 : 
NULL
; \

117 
	}
} 0);

	)

119 
	#GET_IO_SLOT_AND_CTOR
(
x
, 
m≠
, 
¶Ÿ
, 
ty≥
, 
˘‹
, 
fdöfo_Àn
) \

121 
evít_m≠_íåy
 
_key
, *
_ít
; \

122 
_key
.
fd
 = 
¶Ÿ
; \

123 
	`_HT_FIND_OR_INSERT
(
evít_io_m≠
, 
m≠_node
, 
hashsockë
, 
m≠
, \

124 
evít_m≠_íåy
, &
_key
, 
±r
, \

126 
_ít
 = *
±r
; \

129 
_ít
 = 
	`mm_ˇŒoc
(1,(
evít_m≠_íåy
)+
fdöfo_Àn
); \

130 i‡(
	`EVUTIL_UNLIKELY
(
_ít
 =
NULL
)) \

132 
_ít
->
fd
 = 
¶Ÿ
; \

133 (
˘‹
)(&
_ít
->
ít
.
ty≥
); \

134 
	`_HT_FOI_INSERT
(
m≠_node
, 
m≠
, &
_key
, 
_ít
, 
±r
) \

136 (
x
Ë&
_ít
->
ít
.
ty≥
; \

137 } 0)

	)

139 
	$evm≠_io_öôm≠
(
evít_io_m≠
 *
˘x
)

141 
	`HT_INIT
(
evít_io_m≠
, 
˘x
);

142 
	}
}

144 
	$evm≠_io_˛ór
(
evít_io_m≠
 *
˘x
)

146 
evít_m≠_íåy
 **
ít
, **
√xt
, *
this
;

147 
ít
 = 
	`HT_START
(
evít_io_m≠
, 
˘x
);É¡;É¡ = 
√xt
) {

148 
this
 = *
ít
;

149 
√xt
 = 
	`HT_NEXT_RMV
(
evít_io_m≠
, 
˘x
, 
ít
);

150 
	`mm_‰ì
(
this
);

152 
	`HT_CLEAR
(
evít_io_m≠
, 
˘x
);

153 
	}
}

159 
	#GET_SIGNAL_SLOT
(
x
, 
m≠
, 
¶Ÿ
, 
ty≥
) \

160 (
x
Ë(
ty≥
 *)((
m≠
)->
íåõs
[
¶Ÿ
])

	)

166 
	#GET_SIGNAL_SLOT_AND_CTOR
(
x
, 
m≠
, 
¶Ÿ
, 
ty≥
, 
˘‹
, 
fdöfo_Àn
) \

168 i‡((
m≠
)->
íåõs
[
¶Ÿ
] =
NULL
) { \

169 (
m≠
)->
íåõs
[
¶Ÿ
] = \

170 
	`mm_ˇŒoc
(1,(
ty≥
)+
fdöfo_Àn
); \

171 i‡(
	`EVUTIL_UNLIKELY
((
m≠
)->
íåõs
[
¶Ÿ
] =
NULL
)) \

173 (
˘‹
)((
ty≥
 *)(
m≠
)->
íåõs
[
¶Ÿ
]); \

175 (
x
Ë(
ty≥
 *)((
m≠
)->
íåõs
[
¶Ÿ
]); \

176 } 0)

	)

180 #i‚de‡
EVMAP_USE_HT


181 
	#GET_IO_SLOT
(
x
,
m≠
,
¶Ÿ
,
ty≥
Ë
	`GET_SIGNAL_SLOT
(x,m≠,¶Ÿ,ty≥)

	)

182 
	#GET_IO_SLOT_AND_CTOR
(
x
,
m≠
,
¶Ÿ
,
ty≥
,
˘‹
,
fdöfo_Àn
) \

183 
	`GET_SIGNAL_SLOT_AND_CTOR
(
x
,
m≠
,
¶Ÿ
,
ty≥
,
˘‹
,
fdöfo_Àn
)

	)

184 
	#FDINFO_OFFSET
 (
evm≠_io
)

	)

186 
	$evm≠_io_öôm≠
(
evít_io_m≠
* 
˘x
)

188 
	`evm≠_sig«l_öôm≠
(
˘x
);

189 
	}
}

191 
	$evm≠_io_˛ór
(
evít_io_m≠
* 
˘x
)

193 
	`evm≠_sig«l_˛ór
(
˘x
);

194 
	}
}

202 
	$evm≠_make_•a˚
(
evít_sig«l_m≠
 *
m≠
, 
¶Ÿ
, 
msize
)

204 i‡(
m≠
->
√¡rõs
 <
¶Ÿ
) {

205 
√¡rõs
 = 
m≠
->nentries ? map->nentries : 32;

206 **
tmp
;

208 
√¡rõs
 <
¶Ÿ
)

209 
√¡rõs
 <<= 1;

211 
tmp
 = (**)
	`mm_ªÆloc
(
m≠
->
íåõs
, 
√¡rõs
 * 
msize
);

212 i‡(
tmp
 =
NULL
)

215 
	`mem£t
(&
tmp
[
m≠
->
√¡rõs
], 0,

216 (
√¡rõs
 - 
m≠
->√¡rõsË* 
msize
);

218 
m≠
->
√¡rõs
 =Çentries;

219 
m≠
->
íåõs
 = 
tmp
;

223 
	}
}

226 
	$evm≠_sig«l_öôm≠
(
evít_sig«l_m≠
 *
˘x
)

228 
˘x
->
√¡rõs
 = 0;

229 
˘x
->
íåõs
 = 
NULL
;

230 
	}
}

233 
	$evm≠_sig«l_˛ór
(
evít_sig«l_m≠
 *
˘x
)

235 i‡(
˘x
->
íåõs
 !
NULL
) {

236 
i
;

237 
i
 = 0; i < 
˘x
->
√¡rõs
; ++i) {

238 i‡(
˘x
->
íåõs
[
i
] !
NULL
)

239 
	`mm_‰ì
(
˘x
->
íåõs
[
i
]);

241 
	`mm_‰ì
(
˘x
->
íåõs
);

242 
˘x
->
íåõs
 = 
NULL
;

244 
˘x
->
√¡rõs
 = 0;

245 
	}
}

252 
	$evm≠_io_öô
(
evm≠_io
 *
íåy
)

254 
	`TAILQ_INIT
(&
íåy
->
evíts
);

255 
íåy
->
ƒód
 = 0;

256 
íåy
->
nwrôe
 = 0;

257 
	}
}

263 
	$evm≠_io_add
(
evít_ba£
 *
ba£
, 
evutû_sockë_t
 
fd
, 
evít
 *
ev
)

266 c⁄° 
evít›
 *
ev£l
 = 
ba£
->evsel;

268 
evít_io_m≠
 *
io
 = &
ba£
->io;

270 
evm≠_io
 *
˘x
 = 
NULL
;

271 
ƒód
, 
nwrôe
, 
ªtvÆ
 = 0;

272 
ªs
 = 0, 
ﬁd
 = 0;

273 
evít
 *
ﬁd_ev
;

275 
	`EVUTIL_ASSERT
(
fd
 =
ev
->
ev_fd
);

277 i‡(
fd
 < 0)

280 #i‚de‡
EVMAP_USE_HT


282 i‡(
fd
 >
io
->
√¡rõs
) {

292 i‡(
	`evm≠_make_•a˚
(
io
, 
fd
, (
evm≠_io
 *)) == -1)

296 
	`GET_IO_SLOT_AND_CTOR
(
˘x
, 
io
, 
fd
, 
evm≠_io
, 
evm≠_io_öô
,

297 
ev£l
->
fdöfo_Àn
);

299 
ƒód
 = 
˘x
->nread;

300 
nwrôe
 = 
˘x
->nwrite;

302 i‡(
ƒód
)

303 
ﬁd
 |
EV_READ
;

304 i‡(
nwrôe
)

305 
ﬁd
 |
EV_WRITE
;

307 i‡(
ev
->
ev_evíts
 & 
EV_READ
) {

308 i‡(++
ƒód
 == 1)

309 
ªs
 |
EV_READ
;

311 i‡(
ev
->
ev_evíts
 & 
EV_WRITE
) {

312 i‡(++
nwrôe
 == 1)

313 
ªs
 |
EV_WRITE
;

315 i‡(
	`EVUTIL_UNLIKELY
(
ƒód
 > 0xfff‡|| 
nwrôe
 > 0xffff)) {

316 
	`evít_w¨nx
("Too manyÉventsÑeading or writing on fd %d",

317 ()
fd
);

320 i‡(
	`EVENT_DEBUG_MODE_IS_ON
() &&

321 (
ﬁd_ev
 = 
	`TAILQ_FIRST
(&
˘x
->
evíts
)) &&

322 (
ﬁd_ev
->
ev_evíts
&
EV_ET
Ë!(
ev
->ev_events&EV_ET)) {

323 
	`evít_w¨nx
("TriedÅo mixÉdge-triggeredándÇon-edge-triggered"

324 "Évít†⁄ fd %d", ()
fd
);

328 i‡(
ªs
) {

329 *
exåa
 = ((*)
˘x
Ë+ (
evm≠_io
);

333 i‡(
ev£l
->
	`add
(
ba£
, 
ev
->
ev_fd
,

334 
ﬁd
, (
ev
->
ev_evíts
 & 
EV_ET
Ë| 
ªs
, 
exåa
) == -1)

336 
ªtvÆ
 = 1;

339 
˘x
->
ƒód
 = (
ev_uöt16_t
)Çread;

340 
˘x
->
nwrôe
 = (
ev_uöt16_t
)Çwrite;

341 
	`TAILQ_INSERT_TAIL
(&
˘x
->
evíts
, 
ev
, 
ev_io_√xt
);

343  (
ªtvÆ
);

344 
	}
}

349 
	$evm≠_io_dñ
(
evít_ba£
 *
ba£
, 
evutû_sockë_t
 
fd
, 
evít
 *
ev
)

351 c⁄° 
evít›
 *
ev£l
 = 
ba£
->evsel;

352 
evít_io_m≠
 *
io
 = &
ba£
->io;

353 
evm≠_io
 *
˘x
;

354 
ƒód
, 
nwrôe
, 
ªtvÆ
 = 0;

355 
ªs
 = 0, 
ﬁd
 = 0;

357 i‡(
fd
 < 0)

360 
	`EVUTIL_ASSERT
(
fd
 =
ev
->
ev_fd
);

362 #i‚de‡
EVMAP_USE_HT


363 i‡(
fd
 >
io
->
√¡rõs
)

367 
	`GET_IO_SLOT
(
˘x
, 
io
, 
fd
, 
evm≠_io
);

369 
ƒód
 = 
˘x
->nread;

370 
nwrôe
 = 
˘x
->nwrite;

372 i‡(
ƒód
)

373 
ﬁd
 |
EV_READ
;

374 i‡(
nwrôe
)

375 
ﬁd
 |
EV_WRITE
;

377 i‡(
ev
->
ev_evíts
 & 
EV_READ
) {

378 i‡(--
ƒód
 == 0)

379 
ªs
 |
EV_READ
;

380 
	`EVUTIL_ASSERT
(
ƒód
 >= 0);

382 i‡(
ev
->
ev_evíts
 & 
EV_WRITE
) {

383 i‡(--
nwrôe
 == 0)

384 
ªs
 |
EV_WRITE
;

385 
	`EVUTIL_ASSERT
(
nwrôe
 >= 0);

388 i‡(
ªs
) {

389 *
exåa
 = ((*)
˘x
Ë+ (
evm≠_io
);

390 i‡(
ev£l
->
	`dñ
(
ba£
, 
ev
->
ev_fd
, 
ﬁd
, 
ªs
, 
exåa
) == -1)

392 
ªtvÆ
 = 1;

395 
˘x
->
ƒód
 =Çread;

396 
˘x
->
nwrôe
 =Çwrite;

397 
	`TAILQ_REMOVE
(&
˘x
->
evíts
, 
ev
, 
ev_io_√xt
);

399  (
ªtvÆ
);

400 
	}
}

403 
	$evm≠_io_a˘ive
(
evít_ba£
 *
ba£
, 
evutû_sockë_t
 
fd
, 
evíts
)

405 
evít_io_m≠
 *
io
 = &
ba£
->io;

406 
evm≠_io
 *
˘x
;

407 
evít
 *
ev
;

409 #i‚de‡
EVMAP_USE_HT


410 
	`EVUTIL_ASSERT
(
fd
 < 
io
->
√¡rõs
);

412 
	`GET_IO_SLOT
(
˘x
, 
io
, 
fd
, 
evm≠_io
);

414 
	`EVUTIL_ASSERT
(
˘x
);

415 
	`TAILQ_FOREACH
(
ev
, &
˘x
->
evíts
, 
ev_io_√xt
) {

416 i‡(
ev
->
ev_evíts
 & 
evíts
)

417 
	`evít_a˘ive_nﬁock
(
ev
,Év->
ev_evíts
 & 
evíts
, 1);

419 
	}
}

424 
	$evm≠_sig«l_öô
(
evm≠_sig«l
 *
íåy
)

426 
	`TAILQ_INIT
(&
íåy
->
evíts
);

427 
	}
}

431 
	$evm≠_sig«l_add
(
evít_ba£
 *
ba£
, 
sig
, 
evít
 *
ev
)

433 c⁄° 
evít›
 *
ev£l
 = 
ba£
->
evsig£l
;

434 
evít_sig«l_m≠
 *
m≠
 = &
ba£
->
sigm≠
;

435 
evm≠_sig«l
 *
˘x
 = 
NULL
;

437 i‡(
sig
 >
m≠
->
√¡rõs
) {

438 i‡(
	`evm≠_make_•a˚
(

439 
m≠
, 
sig
, (
evm≠_sig«l
 *)) == -1)

442 
	`GET_SIGNAL_SLOT_AND_CTOR
(
˘x
, 
m≠
, 
sig
, 
evm≠_sig«l
, 
evm≠_sig«l_öô
,

443 
ba£
->
evsig£l
->
fdöfo_Àn
);

445 i‡(
	`TAILQ_EMPTY
(&
˘x
->
evíts
)) {

446 i‡(
ev£l
->
	`add
(
ba£
, 
ev
->
ev_fd
, 0, 
EV_SIGNAL
, 
NULL
)

451 
	`TAILQ_INSERT_TAIL
(&
˘x
->
evíts
, 
ev
, 
ev_sig«l_√xt
);

454 
	}
}

457 
	$evm≠_sig«l_dñ
(
evít_ba£
 *
ba£
, 
sig
, 
evít
 *
ev
)

459 c⁄° 
evít›
 *
ev£l
 = 
ba£
->
evsig£l
;

460 
evít_sig«l_m≠
 *
m≠
 = &
ba£
->
sigm≠
;

461 
evm≠_sig«l
 *
˘x
;

463 i‡(
sig
 >
m≠
->
√¡rõs
)

466 
	`GET_SIGNAL_SLOT
(
˘x
, 
m≠
, 
sig
, 
evm≠_sig«l
);

468 i‡(
	`TAILQ_FIRST
(&
˘x
->
evíts
Ë=
	`TAILQ_LAST
(&˘x->evíts, 
evít_li°
)) {

469 i‡(
ev£l
->
	`dñ
(
ba£
, 
ev
->
ev_fd
, 0, 
EV_SIGNAL
, 
NULL
) == -1)

473 
	`TAILQ_REMOVE
(&
˘x
->
evíts
, 
ev
, 
ev_sig«l_√xt
);

476 
	}
}

479 
	$evm≠_sig«l_a˘ive
(
evít_ba£
 *
ba£
, 
evutû_sockë_t
 
sig
, 
nˇŒs
)

481 
evít_sig«l_m≠
 *
m≠
 = &
ba£
->
sigm≠
;

482 
evm≠_sig«l
 *
˘x
;

483 
evít
 *
ev
;

485 
	`EVUTIL_ASSERT
(
sig
 < 
m≠
->
√¡rõs
);

486 
	`GET_SIGNAL_SLOT
(
˘x
, 
m≠
, 
sig
, 
evm≠_sig«l
);

488 
	`TAILQ_FOREACH
(
ev
, &
˘x
->
evíts
, 
ev_sig«l_√xt
)

489 
	`evít_a˘ive_nﬁock
(
ev
, 
EV_SIGNAL
, 
nˇŒs
);

490 
	}
}

493 
	$evm≠_io_gë_fdöfo
(
evít_io_m≠
 *
m≠
, 
evutû_sockë_t
 
fd
)

495 
evm≠_io
 *
˘x
;

496 
	`GET_IO_SLOT
(
˘x
, 
m≠
, 
fd
, 
evm≠_io
);

497 i‡(
˘x
)

498  ((*)
˘x
Ë+ (
evm≠_io
);

500  
NULL
;

501 
	}
}

506 
	sevít_ch™gñi°_fdöfo
 {

507 
	midx∂us1
;

512 
	$evít_ch™gñi°_öô
(
evít_ch™gñi°
 *
ch™gñi°
)

514 
ch™gñi°
->
ch™ges
 = 
NULL
;

515 
ch™gñi°
->
ch™ges_size
 = 0;

516 
ch™gñi°
->
n_ch™ges
 = 0;

517 
	}
}

520 
ölöe
 
evít_ch™gñi°_fdöfo
 *

521 
	$evít_ch™ge_gë_fdöfo
(
evít_ba£
 *
ba£
,

522 c⁄° 
evít_ch™ge
 *
ch™ge
)

524 *
±r
;

525 i‡(
ch™ge
->
ªad_ch™ge
 & 
EV_CHANGE_SIGNAL
) {

526 
evm≠_sig«l
 *
˘x
;

527 
	`GET_SIGNAL_SLOT
(
˘x
, &
ba£
->
sigm≠
, 
ch™ge
->
fd
, 
evm≠_sig«l
);

528 
±r
 = ((*)
˘x
Ë+ (
evm≠_sig«l
);

530 
evm≠_io
 *
˘x
;

531 
	`GET_IO_SLOT
(
˘x
, &
ba£
->
io
, 
ch™ge
->
fd
, 
evm≠_io
);

532 
±r
 = ((*)
˘x
Ë+ (
evm≠_io
);

534  (*)
±r
;

535 
	}
}

537 #ifde‡
DEBUG_CHANGELIST


540 
	$evít_ch™gñi°_check
(
evít_ba£
 *
ba£
)

542 
i
;

543 
evít_ch™gñi°
 *
ch™gñi°
 = &
ba£
->changelist;

545 
	`EVUTIL_ASSERT
(
ch™gñi°
->
ch™ges_size
 >ch™gñi°->
n_ch™ges
);

546 
i
 = 0; i < 
ch™gñi°
->
n_ch™ges
; ++i) {

547 
evít_ch™ge
 *
c
 = &
ch™gñi°
->
ch™ges
[
i
];

548 
evít_ch™gñi°_fdöfo
 *
f
;

549 
	`EVUTIL_ASSERT
(
c
->
fd
 >= 0);

550 
f
 = 
	`evít_ch™ge_gë_fdöfo
(
ba£
, 
c
);

551 
	`EVUTIL_ASSERT
(
f
);

552 
	`EVUTIL_ASSERT
(
f
->
idx∂us1
 =
i
 + 1);

555 
i
 = 0; i < 
ba£
->
io
.
√¡rõs
; ++i) {

556 
evm≠_io
 *
io
 = 
ba£
->io.
íåõs
[
i
];

557 
evít_ch™gñi°_fdöfo
 *
f
;

558 i‡(!
io
)

560 
f
 = (*)

561 –((*)
io
Ë+ (
evm≠_io
) );

562 i‡(
f
->
idx∂us1
) {

563 
evít_ch™ge
 *
c
 = &
ch™gñi°
->
ch™ges
[
f
->
idx∂us1
 - 1];

564 
	`EVUTIL_ASSERT
(
c
->
fd
 =
i
);

567 
	}
}

569 
	#evít_ch™gñi°_check
(
ba£
Ë(()0)

	)

573 
	$evít_ch™gñi°_ªmove_Æl
(
evít_ch™gñi°
 *
ch™gñi°
,

574 
evít_ba£
 *
ba£
)

576 
i
;

578 
	`evít_ch™gñi°_check
(
ba£
);

580 
i
 = 0; i < 
ch™gñi°
->
n_ch™ges
; ++i) {

581 
evít_ch™ge
 *
ch
 = &
ch™gñi°
->
ch™ges
[
i
];

582 
evít_ch™gñi°_fdöfo
 *
fdöfo
 =

583 
	`evít_ch™ge_gë_fdöfo
(
ba£
, 
ch
);

584 
	`EVUTIL_ASSERT
(
fdöfo
->
idx∂us1
 =
i
 + 1);

585 
fdöfo
->
idx∂us1
 = 0;

588 
ch™gñi°
->
n_ch™ges
 = 0;

590 
	`evít_ch™gñi°_check
(
ba£
);

591 
	}
}

594 
	$evít_ch™gñi°_‰ìmem
(
evít_ch™gñi°
 *
ch™gñi°
)

596 i‡(
ch™gñi°
->
ch™ges
)

597 
	`mm_‰ì
(
ch™gñi°
->
ch™ges
);

598 
	`evít_ch™gñi°_öô
(
ch™gñi°
);

599 
	}
}

603 
	$evít_ch™gñi°_grow
(
evít_ch™gñi°
 *
ch™gñi°
)

605 
√w_size
;

606 
evít_ch™ge
 *
√w_ch™ges
;

607 i‡(
ch™gñi°
->
ch™ges_size
 < 64)

608 
√w_size
 = 64;

610 
√w_size
 = 
ch™gñi°
->
ch™ges_size
 * 2;

612 
√w_ch™ges
 = 
	`mm_ªÆloc
(
ch™gñi°
->
ch™ges
,

613 
√w_size
 * (
evít_ch™ge
));

615 i‡(
	`EVUTIL_UNLIKELY
(
√w_ch™ges
 =
NULL
))

618 
ch™gñi°
->
ch™ges
 = 
√w_ch™ges
;

619 
ch™gñi°
->
ch™ges_size
 = 
√w_size
;

622 
	}
}

628 
evít_ch™ge
 *

629 
	$evít_ch™gñi°_gë_‹_c⁄°ru˘
(
evít_ch™gñi°
 *
ch™gñi°
,

630 
evutû_sockë_t
 
fd
,

631 
ﬁd_evíts
,

632 
evít_ch™gñi°_fdöfo
 *
fdöfo
)

634 
evít_ch™ge
 *
ch™ge
;

636 i‡(
fdöfo
->
idx∂us1
 == 0) {

637 
idx
;

638 
	`EVUTIL_ASSERT
(
ch™gñi°
->
n_ch™ges
 <ch™gñi°->
ch™ges_size
);

640 i‡(
ch™gñi°
->
n_ch™ges
 =ch™gñi°->
ch™ges_size
) {

641 i‡(
	`evít_ch™gñi°_grow
(
ch™gñi°
) < 0)

642  
NULL
;

645 
idx
 = 
ch™gñi°
->
n_ch™ges
++;

646 
ch™ge
 = &
ch™gñi°
->
ch™ges
[
idx
];

647 
fdöfo
->
idx∂us1
 = 
idx
 + 1;

649 
	`mem£t
(
ch™ge
, 0, (
evít_ch™ge
));

650 
ch™ge
->
fd
 = fd;

651 
ch™ge
->
ﬁd_evíts
 = old_events;

653 
ch™ge
 = &
ch™gñi°
->
ch™ges
[
fdöfo
->
idx∂us1
 - 1];

654 
	`EVUTIL_ASSERT
(
ch™ge
->
fd
 == fd);

656  
ch™ge
;

657 
	}
}

660 
	$evít_ch™gñi°_add
(
evít_ba£
 *
ba£
, 
evutû_sockë_t
 
fd
, 
ﬁd
, 
evíts
,

661 *
p
)

663 
evít_ch™gñi°
 *
ch™gñi°
 = &
ba£
->changelist;

664 
evít_ch™gñi°_fdöfo
 *
fdöfo
 = 
p
;

665 
evít_ch™ge
 *
ch™ge
;

667 
	`evít_ch™gñi°_check
(
ba£
);

669 
ch™ge
 = 
	`evít_ch™gñi°_gë_‹_c⁄°ru˘
(
ch™gñi°
, 
fd
, 
ﬁd
, 
fdöfo
);

670 i‡(!
ch™ge
)

677 i‡(
evíts
 & (
EV_READ
|
EV_SIGNAL
)) {

678 
ch™ge
->
ªad_ch™ge
 = 
EV_CHANGE_ADD
 |

679 (
evíts
 & (
EV_ET
|
EV_PERSIST
|
EV_SIGNAL
));

681 i‡(
evíts
 & 
EV_WRITE
) {

682 
ch™ge
->
wrôe_ch™ge
 = 
EV_CHANGE_ADD
 |

683 (
evíts
 & (
EV_ET
|
EV_PERSIST
|
EV_SIGNAL
));

686 
	`evít_ch™gñi°_check
(
ba£
);

688 
	}
}

691 
	$evít_ch™gñi°_dñ
(
evít_ba£
 *
ba£
, 
evutû_sockë_t
 
fd
, 
ﬁd
, 
evíts
,

692 *
p
)

694 
evít_ch™gñi°
 *
ch™gñi°
 = &
ba£
->changelist;

695 
evít_ch™gñi°_fdöfo
 *
fdöfo
 = 
p
;

696 
evít_ch™ge
 *
ch™ge
;

698 
	`evít_ch™gñi°_check
(
ba£
);

699 
ch™ge
 = 
	`evít_ch™gñi°_gë_‹_c⁄°ru˘
(
ch™gñi°
, 
fd
, 
ﬁd
, 
fdöfo
);

700 
	`evít_ch™gñi°_check
(
ba£
);

701 i‡(!
ch™ge
)

722 i‡(
evíts
 & (
EV_READ
|
EV_SIGNAL
)) {

723 i‡(!(
ch™ge
->
ﬁd_evíts
 & (
EV_READ
 | 
EV_SIGNAL
)) &&

724 (
ch™ge
->
ªad_ch™ge
 & 
EV_CHANGE_ADD
))

725 
ch™ge
->
ªad_ch™ge
 = 0;

727 
ch™ge
->
ªad_ch™ge
 = 
EV_CHANGE_DEL
;

729 i‡(
evíts
 & 
EV_WRITE
) {

730 i‡(!(
ch™ge
->
ﬁd_evíts
 & 
EV_WRITE
) &&

731 (
ch™ge
->
wrôe_ch™ge
 & 
EV_CHANGE_ADD
))

732 
ch™ge
->
wrôe_ch™ge
 = 0;

734 
ch™ge
->
wrôe_ch™ge
 = 
EV_CHANGE_DEL
;

737 
	`evít_ch™gñi°_check
(
ba£
);

739 
	}
}

742 
	$evm≠_check_öãgrôy
(
evít_ba£
 *
ba£
)

744 
	#EVLIST_X_SIGFOUND
 0x1000

	)

745 
	#EVLIST_X_IOFOUND
 0x2000

	)

747 
evutû_sockë_t
 
i
;

748 
evít
 *
ev
;

749 
evít_io_m≠
 *
io
 = &
ba£
->io;

750 
evít_sig«l_m≠
 *
sigm≠
 = &
ba£
->sigmap;

751 #ifde‡
EVMAP_USE_HT


752 
evít_m≠_íåy
 **
m≠ít
;

754 
nsig«ls
, 
¡imîs
, 
nio
;

755 
nsig«ls
 = 
¡imîs
 = 
nio
 = 0;

757 
	`TAILQ_FOREACH
(
ev
, &
ba£
->
evítqueue
, 
ev_√xt
) {

758 
	`EVUTIL_ASSERT
(
ev
->
ev_Êags
 & 
EVLIST_INSERTED
);

759 
	`EVUTIL_ASSERT
(
ev
->
ev_Êags
 & 
EVLIST_INIT
);

760 
ev
->
ev_Êags
 &~(
EVLIST_X_SIGFOUND
|
EVLIST_X_IOFOUND
);

763 #ifde‡
EVMAP_USE_HT


764 
	`HT_FOREACH
(
m≠ít
, 
evít_io_m≠
, 
io
) {

765 
evm≠_io
 *
˘x
 = &(*
m≠ít
)->
ít
.evmap_io;

766 
i
 = (*
m≠ít
)->
fd
;

768 
i
 = 0; i < 
io
->
√¡rõs
; ++i) {

769 
evm≠_io
 *
˘x
 = 
io
->
íåõs
[
i
];

771 i‡(!
˘x
)

775 
	`TAILQ_FOREACH
(
ev
, &
˘x
->
evíts
, 
ev_io_√xt
) {

776 
	`EVUTIL_ASSERT
(!(
ev
->
ev_Êags
 & 
EVLIST_X_IOFOUND
));

777 
	`EVUTIL_ASSERT
(
ev
->
ev_fd
 =
i
);

778 
ev
->
ev_Êags
 |
EVLIST_X_IOFOUND
;

779 
nio
++;

783 
i
 = 0; i < 
sigm≠
->
√¡rõs
; ++i) {

784 
evm≠_sig«l
 *
˘x
 = 
sigm≠
->
íåõs
[
i
];

785 i‡(!
˘x
)

788 
	`TAILQ_FOREACH
(
ev
, &
˘x
->
evíts
, 
ev_sig«l_√xt
) {

789 
	`EVUTIL_ASSERT
(!(
ev
->
ev_Êags
 & 
EVLIST_X_SIGFOUND
));

790 
	`EVUTIL_ASSERT
(
ev
->
ev_fd
 =
i
);

791 
ev
->
ev_Êags
 |
EVLIST_X_SIGFOUND
;

792 
nsig«ls
++;

796 
	`TAILQ_FOREACH
(
ev
, &
ba£
->
evítqueue
, 
ev_√xt
) {

797 i‡(
ev
->
ev_evíts
 & (
EV_READ
|
EV_WRITE
)) {

798 
	`EVUTIL_ASSERT
(
ev
->
ev_Êags
 & 
EVLIST_X_IOFOUND
);

799 --
nio
;

801 i‡(
ev
->
ev_evíts
 & 
EV_SIGNAL
) {

802 
	`EVUTIL_ASSERT
(
ev
->
ev_Êags
 & 
EVLIST_X_SIGFOUND
);

803 --
nsig«ls
;

807 
	`EVUTIL_ASSERT
(
nio
 == 0);

808 
	`EVUTIL_ASSERT
(
nsig«ls
 == 0);

812 
	}
}

	@evport.c

56 
	~"evít2/evít-c⁄fig.h
"

58 
	~<sys/time.h
>

59 
	~<sys/queue.h
>

60 
	~<î∫o.h
>

61 
	~<pﬁl.h
>

62 
	~<p‹t.h
>

63 
	~<sig«l.h
>

64 
	~<°dio.h
>

65 
	~<°dlib.h
>

66 
	~<°rög.h
>

67 
	~<time.h
>

68 
	~<uni°d.h
>

70 
	~"evít2/thªad.h
"

72 
	~"evthªad-öã∫Æ.h
"

73 
	~"evít-öã∫Æ.h
"

74 
	~"log-öã∫Æ.h
"

75 
	~"evsig«l-öã∫Æ.h
"

76 
	~"evm≠-öã∫Æ.h
"

83 
	#DEFAULT_NFDS
 16

	)

91 
	#EVENTS_PER_GETN
 8

	)

98 
	sfd_öfo
 {

99 
	mfdi_wh©
;

102 
	#FDI_HAS_READ
(
fdi
Ë((fdi)->
fdi_wh©
 & 
EV_READ
)

	)

103 
	#FDI_HAS_WRITE
(
fdi
Ë((fdi)->
fdi_wh©
 & 
EV_WRITE
)

	)

104 
	#FDI_HAS_EVENTS
(
fdi
Ë(
	`FDI_HAS_READ
(fdiË|| 
	`FDI_HAS_WRITE
(fdi))

	)

105 
	#FDI_TO_SYSEVENTS
(
fdi
Ë(
	`FDI_HAS_READ
(fdiË? 
POLLIN
 : 0) | \

106 (
	`FDI_HAS_WRITE
(
fdi
Ë? 
POLLOUT
 : 0)

	)

108 
	sevp‹t_d©a
 {

109 
	med_p‹t
;

110 
	med_√víts
;

111 
fd_öfo
 *
	med_fds
;

113 
	med_≥ndög
[
EVENTS_PER_GETN
];

116 * 
evp‹t_öô
(
evít_ba£
 *);

117 
evp‹t_add
(
evít_ba£
 *, 
fd
, 
ﬁd
, 
evíts
, *);

118 
evp‹t_dñ
(
evít_ba£
 *, 
fd
, 
ﬁd
, 
evíts
, *);

119 
evp‹t_di•©ch
(
evít_ba£
 *, 
timevÆ
 *);

120 
evp‹t_dóŒoc
(
evít_ba£
 *);

122 c⁄° 
evít›
 
	gevp‹t›s
 = {

124 
evp‹t_öô
,

125 
evp‹t_add
,

126 
evp‹t_dñ
,

127 
evp‹t_di•©ch
,

128 
evp‹t_dóŒoc
,

139 
	$evp‹t_öô
(
evít_ba£
 *
ba£
)

141 
evp‹t_d©a
 *
evpd
;

142 
i
;

144 i‡(!(
evpd
 = 
	`mm_ˇŒoc
(1, (
evp‹t_d©a
))))

145  (
NULL
);

147 i‡((
evpd
->
ed_p‹t
 = 
	`p‹t_¸óã
()) == -1) {

148 
	`mm_‰ì
(
evpd
);

149  (
NULL
);

155 
evpd
->
ed_fds
 = 
	`mm_ˇŒoc
(
DEFAULT_NFDS
, (
fd_öfo
));

156 i‡(
evpd
->
ed_fds
 =
NULL
) {

157 
	`˛o£
(
evpd
->
ed_p‹t
);

158 
	`mm_‰ì
(
evpd
);

159  (
NULL
);

161 
evpd
->
ed_√víts
 = 
DEFAULT_NFDS
;

162 
i
 = 0; i < 
EVENTS_PER_GETN
; i++)

163 
evpd
->
ed_≥ndög
[
i
] = -1;

165 
	`evsig_öô
(
ba£
);

167  (
evpd
);

168 
	}
}

170 #ifde‡
CHECK_INVARIANTS


178 
	$check_evp‹t›
(
evp‹t_d©a
 *
evpd
)

180 
	`EVUTIL_ASSERT
(
evpd
);

181 
	`EVUTIL_ASSERT
(
evpd
->
ed_√víts
 > 0);

182 
	`EVUTIL_ASSERT
(
evpd
->
ed_p‹t
 > 0);

183 
	`EVUTIL_ASSERT
(
evpd
->
ed_fds
 > 0);

184 
	}
}

190 
	$check_evít
(
p‹t_evít_t
* 
≥vt
)

198 
	`EVUTIL_ASSERT
(
≥vt
->
p‹ãv_sour˚
 =
PORT_SOURCE_FD
);

199 
	`EVUTIL_ASSERT
(
≥vt
->
p‹ãv_u£r
 =
NULL
);

200 
	}
}

203 
	#check_evp‹t›
(
ï›
)

	)

204 
	#check_evít
(
≥vt
)

	)

211 
	$grow
(
evp‹t_d©a
 *
ïdp
, 
Á˘‹
)

213 
fd_öfo
 *
tmp
;

214 
ﬁdsize
 = 
ïdp
->
ed_√víts
;

215 
√wsize
 = 
Á˘‹
 * 
ﬁdsize
;

216 
	`EVUTIL_ASSERT
(
Á˘‹
 > 1);

218 
	`check_evp‹t›
(
ïdp
);

220 
tmp
 = 
	`mm_ªÆloc
(
ïdp
->
ed_fds
, (
fd_öfo
Ë* 
√wsize
);

221 i‡(
NULL
 =
tmp
)

223 
ïdp
->
ed_fds
 = 
tmp
;

224 
	`mem£t
((*Ë(
ïdp
->
ed_fds
 + 
ﬁdsize
), 0,

225 (
√wsize
 - 
ﬁdsize
)*(
fd_öfo
));

226 
ïdp
->
ed_√víts
 = 
√wsize
;

228 
	`check_evp‹t›
(
ïdp
);

231 
	}
}

239 
	$ªassocüã
(
evp‹t_d©a
 *
ïdp
, 
fd_öfo
 *
fdù
, 
fd
)

241 
sy£víts
 = 
	`FDI_TO_SYSEVENTS
(
fdù
);

243 i‡(
sy£víts
 != 0) {

244 i‡(
	`p‹t_assocüã
(
ïdp
->
ed_p‹t
, 
PORT_SOURCE_FD
,

245 
fd
, 
sy£víts
, 
NULL
) == -1) {

246 
	`evít_w¨n
("port_associate");

251 
	`check_evp‹t›
(
ïdp
);

254 
	}
}

262 
	$evp‹t_di•©ch
(
evít_ba£
 *
ba£
, 
timevÆ
 *
tv
)

264 
i
, 
ªs
;

265 
evp‹t_d©a
 *
ïdp
 = 
ba£
->
evba£
;

266 
p‹t_evít_t
 
≥véi°
[
EVENTS_PER_GETN
];

274 
√víts
 = 1;

281 
time•ec
 
ts
;

282 
time•ec
 *
ts_p
 = 
NULL
;

283 i‡(
tv
 !
NULL
) {

284 
ts
.
tv_£c
 = 
tv
->tv_sec;

285 
ts
.
tv_n£c
 = 
tv
->
tv_u£c
 * 1000;

286 
ts_p
 = &
ts
;

294 
i
 = 0; i < 
EVENTS_PER_GETN
; ++i) {

295 
fd_öfo
 *
fdi
 = 
NULL
;

296 i‡(
ïdp
->
ed_≥ndög
[
i
] != -1) {

297 
fdi
 = &(
ïdp
->
ed_fds
[ïdp->
ed_≥ndög
[
i
]]);

300 i‡(
fdi
 !
NULL
 && 
	`FDI_HAS_EVENTS
(fdi)) {

301 
fd
 = 
ïdp
->
ed_≥ndög
[
i
];

302 
	`ªassocüã
(
ïdp
, 
fdi
, 
fd
);

303 
ïdp
->
ed_≥ndög
[
i
] = -1;

307 
	`EVBASE_RELEASE_LOCK
(
ba£
, 
th_ba£_lock
);

309 
ªs
 = 
	`p‹t_gën
(
ïdp
->
ed_p‹t
, 
≥véi°
, 
EVENTS_PER_GETN
,

310 (*Ë&
√víts
, 
ts_p
);

312 
	`EVBASE_ACQUIRE_LOCK
(
ba£
, 
th_ba£_lock
);

314 i‡(
ªs
 == -1) {

315 i‡(
î∫o
 =
EINTR
 ||Éºnÿ=
EAGAIN
) {

317 } i‡(
î∫o
 =
ETIME
) {

318 i‡(
√víts
 == 0)

321 
	`evít_w¨n
("port_getn");

326 
	`evít_debug
(("%s:Ö‹t_gë¿ªp‹t†%dÉvíts", 
__func__
, 
√víts
));

328 
i
 = 0; i < 
√víts
; ++i) {

329 
fd_öfo
 *
fdi
;

330 
p‹t_evít_t
 *
≥vt
 = &
≥véi°
[
i
];

331 
fd
 = (Ë
≥vt
->
p‹ãv_obje˘
;

333 
	`check_evp‹t›
(
ïdp
);

334 
	`check_evít
(
≥vt
);

335 
ïdp
->
ed_≥ndög
[
i
] = 
fd
;

341 
ªs
 = 0;

342 i‡(
≥vt
->
p‹ãv_evíts
 & (
POLLERR
|
POLLHUP
)) {

343 
ªs
 = 
EV_READ
 | 
EV_WRITE
;

345 i‡(
≥vt
->
p‹ãv_evíts
 & 
POLLIN
)

346 
ªs
 |
EV_READ
;

347 i‡(
≥vt
->
p‹ãv_evíts
 & 
POLLOUT
)

348 
ªs
 |
EV_WRITE
;

354 i‡(
≥vt
->
p‹ãv_evíts
 & (
POLLERR
|
POLLHUP
|
POLLNVAL
))

355 
ªs
 |
EV_READ
|
EV_WRITE
;

357 
	`EVUTIL_ASSERT
(
ïdp
->
ed_√víts
 > 
fd
);

358 
fdi
 = &(
ïdp
->
ed_fds
[
fd
]);

360 
	`evm≠_io_a˘ive
(
ba£
, 
fd
, 
ªs
);

363 
	`check_evp‹t›
(
ïdp
);

366 
	}
}

375 
	$evp‹t_add
(
evít_ba£
 *
ba£
, 
fd
, 
ﬁd
, 
evíts
, *
p
)

377 
evp‹t_d©a
 *
evpd
 = 
ba£
->
evba£
;

378 
fd_öfo
 *
fdi
;

379 
Á˘‹
;

380 ()
p
;

382 
	`check_evp‹t›
(
evpd
);

388 
Á˘‹
 = 1;

389 
fd
 >
Á˘‹
 * 
evpd
->
ed_√víts
)

390 
Á˘‹
 *= 2;

392 i‡(
Á˘‹
 > 1) {

393 i‡(-1 =
	`grow
(
evpd
, 
Á˘‹
)) {

398 
fdi
 = &
evpd
->
ed_fds
[
fd
];

399 
fdi
->
fdi_wh©
 |
evíts
;

401  
	`ªassocüã
(
evpd
, 
fdi
, 
fd
);

402 
	}
}

409 
	$evp‹t_dñ
(
evít_ba£
 *
ba£
, 
fd
, 
ﬁd
, 
evíts
, *
p
)

411 
evp‹t_d©a
 *
evpd
 = 
ba£
->
evba£
;

412 
fd_öfo
 *
fdi
;

413 
i
;

414 
assocüãd
 = 1;

415 ()
p
;

417 
	`check_evp‹t›
(
evpd
);

419 i‡(
evpd
->
ed_√víts
 < 
fd
) {

423 
i
 = 0; i < 
EVENTS_PER_GETN
; ++i) {

424 i‡(
evpd
->
ed_≥ndög
[
i
] =
fd
) {

425 
assocüãd
 = 0;

430 
fdi
 = &
evpd
->
ed_fds
[
fd
];

431 i‡(
evíts
 & 
EV_READ
)

432 
fdi
->
fdi_wh©
 &~
EV_READ
;

433 i‡(
evíts
 & 
EV_WRITE
)

434 
fdi
->
fdi_wh©
 &~
EV_WRITE
;

436 i‡(
assocüãd
) {

437 i‡(!
	`FDI_HAS_EVENTS
(
fdi
) &&

438 
	`p‹t_dissocüã
(
evpd
->
ed_p‹t
, 
PORT_SOURCE_FD
, 
fd
) == -1) {

443 i‡(
î∫o
 !
EBADFD
) {

444 
	`evít_w¨n
("port_dissociate");

448 i‡(
	`FDI_HAS_EVENTS
(
fdi
)) {

449  (
	`ªassocüã
(
evpd
, 
fdi
, 
fd
));

453 i‡((
fdi
->
fdi_wh©
 & (
EV_READ
|
EV_WRITE
)) == 0) {

454 
evpd
->
ed_≥ndög
[
i
] = -1;

458 
	}
}

462 
	$evp‹t_dóŒoc
(
evít_ba£
 *
ba£
)

464 
evp‹t_d©a
 *
evpd
 = 
ba£
->
evba£
;

466 
	`evsig_dóŒoc
(
ba£
);

468 
	`˛o£
(
evpd
->
ed_p‹t
);

470 i‡(
evpd
->
ed_fds
)

471 
	`mm_‰ì
(
evpd
->
ed_fds
);

472 
	`mm_‰ì
(
evpd
);

473 
	}
}

	@evrpc-internal.h

27 #i‚de‡
_EVRPC_INTERNAL_H_


28 
	#_EVRPC_INTERNAL_H_


	)

30 
	~"hâp-öã∫Æ.h
"

32 
	gevΩc
;

33 
	gevΩc_ªque°_wøµî
;

35 
	#EVRPC_URI_PREFIX
 "/.Ωc."

	)

37 
	sevΩc_hook
 {

38 
TAILQ_ENTRY
(
evΩc_hook
Ë
	m√xt
;

43 (*
	m¥o˚ss
)(*, 
	mevhâp_ªque°
 *,

44 
	mevbuf„r
 *, *);

45 *
	m¥o˚ss_¨g
;

48 
TAILQ_HEAD
(
evΩc_hook_li°
, 
evΩc_hook
);

56 
	gevΩc_hook_˘x
;

57 
TAILQ_HEAD
(
evΩc_∑u£_li°
, 
evΩc_hook_˘x
);

59 
	s_evΩc_hooks
 {

61 
evΩc_hook_li°
 
	mö_hooks
;

62 
evΩc_hook_li°
 
	mout_hooks
;

64 
evΩc_∑u£_li°
 
	m∑u£_ªque°s
;

67 
	#öput_hooks
 
comm⁄
.
ö_hooks


	)

68 
	#ouçut_hooks
 
comm⁄
.
out_hooks


	)

69 
	#∑u£d_ªque°s
 
comm⁄
.
∑u£_ªque°s


	)

71 
	sevΩc_ba£
 {

72 
_evΩc_hooks
 
	mcomm⁄
;

75 
evhâp
* 
	mhâp_£rvî
;

78 
TAILQ_HEAD
(
evΩc_li°
, 
evΩc
Ë
	mªgi°îed_Ωcs
;

81 
	gevΩc_ªq_gíîic
;

82 
evΩc_ªq°©e_‰ì
(
evΩc_ªq_gíîic
* 
Ωc_°©e
);

85 
	sevΩc_poﬁ
 {

86 
_evΩc_hooks
 
	mcomm⁄
;

88 
evít_ba£
 *
	mba£
;

90 
evc⁄q
 
	mc⁄√˘i⁄s
;

92 
	mtimeout
;

94 
TAILQ_HEAD
(
evΩc_ªque°q
, 
evΩc_ªque°_wøµî
Ë(
	mªque°s
);

97 
	sevΩc_hook_˘x
 {

98 
TAILQ_ENTRY
(
evΩc_hook_˘x
Ë
	m√xt
;

100 *
	m˘x
;

101 (*
	mcb
)(*, 
	mEVRPC_HOOK_RESULT
);

104 
	sevΩc_mëa
 {

105 
TAILQ_ENTRY
(
evΩc_mëa
Ë
	m√xt
;

106 *
	mkey
;

108 *
	md©a
;

109 
size_t
 
	md©a_size
;

112 
TAILQ_HEAD
(
evΩc_mëa_li°
, 
evΩc_mëa
);

114 
	sevΩc_hook_mëa
 {

115 
evΩc_mëa_li°
 
	mmëa_d©a
;

116 
evhâp_c⁄√˘i⁄
 *
	mevc⁄
;

120 
evΩc_hook_assocüã_mëa
(
evΩc_hook_mëa
 **
p˘x
,

121 
evhâp_c⁄√˘i⁄
 *
evc⁄
);

124 
evΩc_hook_mëa
 *
evΩc_hook_mëa_√w
();

127 
evΩc_hook_c⁄ãxt_‰ì
(
evΩc_hook_mëa
 *
˘x
);

132 
	sevΩc_ªq_gíîic
 {

137 
evΩc_hook_mëa
 *
	mhook_mëa
;

140 *
	mªque°
;

143 *
	mª∂y
;

149 
evΩc
 *
	mΩc
;

154 
evhâp_ªque°
* 
	mhâp_ªq
;

159 
evbuf„r
* 
	mΩc_d©a
;

163 
	sevΩc_ªque°_wøµî
 {

168 
evΩc_hook_mëa
 *
	mhook_mëa
;

170 
TAILQ_ENTRY
(
evΩc_ªque°_wøµî
Ë
	m√xt
;

173 
evΩc_poﬁ
 *
	mpoﬁ
;

176 
evhâp_c⁄√˘i⁄
 *
	mevc⁄
;

179 
evhâp_ªque°
 *
	mªq
;

182 
evít
 
	mev_timeout
;

185 *
	m«me
;

188 (*
	mcb
)(
	mevΩc_°©us
*, *
	mªque°
, *
	mª∂y
, *
	m¨g
);

189 *
	mcb_¨g
;

191 *
	mªque°
;

192 *
	mª∂y
;

195 (*
	mªque°_m¨shÆ
)(
	mevbuf„r
 *, *);

198 (*
	mª∂y_˛ór
)(*);

201 (*
	mª∂y_unm¨shÆ
)(*, 
	mevbuf„r
*);

	@evrpc.c

27 
	~"evít2/evít-c⁄fig.h
"

29 #ifde‡
WIN32


30 
	#WIN32_LEAN_AND_MEAN


	)

31 
	~<wösock2.h
>

32 
	~<wödows.h
>

33 #unde‡
WIN32_LEAN_AND_MEAN


36 
	~<sys/ty≥s.h
>

37 #i‚de‡
WIN32


38 
	~<sys/sockë.h
>

40 #ifde‡
_EVENT_HAVE_SYS_TIME_H


41 
	~<sys/time.h
>

43 
	~<sys/queue.h
>

44 
	~<°dio.h
>

45 
	~<°dlib.h
>

46 #i‚de‡
WIN32


47 
	~<uni°d.h
>

49 
	~<î∫o.h
>

50 
	~<sig«l.h
>

51 
	~<°rög.h
>

53 
	~<sys/queue.h
>

55 
	~"evít2/evít.h
"

56 
	~"evít2/evít_°ru˘.h
"

57 
	~"evít2/Ωc.h
"

58 
	~"evít2/Ωc_°ru˘.h
"

59 
	~"evΩc-öã∫Æ.h
"

60 
	~"evít2/hâp.h
"

61 
	~"evít2/buf„r.h
"

62 
	~"evít2/èg.h
"

63 
	~"evít2/hâp_°ru˘.h
"

64 
	~"evít2/hâp_com∑t.h
"

65 
	~"evít2/utû.h
"

66 
	~"utû-öã∫Æ.h
"

67 
	~"log-öã∫Æ.h
"

68 
	~"mm-öã∫Æ.h
"

70 
evΩc_ba£
 *

71 
	$evΩc_öô
(
evhâp
 *
hâp_£rvî
)

73 
evΩc_ba£
* 
ba£
 = 
	`mm_ˇŒoc
(1, (evrpc_base));

74 i‡(
ba£
 =
NULL
)

75  (
NULL
);

78 
	`evèg_öô
();

80 
	`TAILQ_INIT
(&
ba£
->
ªgi°îed_Ωcs
);

81 
	`TAILQ_INIT
(&
ba£
->
öput_hooks
);

82 
	`TAILQ_INIT
(&
ba£
->
ouçut_hooks
);

84 
	`TAILQ_INIT
(&
ba£
->
∑u£d_ªque°s
);

86 
ba£
->
hâp_£rvî
 = http_server;

88  (
ba£
);

89 
	}
}

92 
	$evΩc_‰ì
(
evΩc_ba£
 *
ba£
)

94 
evΩc
 *
Ωc
;

95 
evΩc_hook
 *
hook
;

96 
evΩc_hook_˘x
 *
∑u£
;

97 
r
;

99 (
Ωc
 = 
	`TAILQ_FIRST
(&
ba£
->
ªgi°îed_Ωcs
)Ë!
NULL
) {

100 
r
 = 
	`evΩc_uƒegi°î_Ωc
(
ba£
, 
Ωc
->
uri
);

101 
	`EVUTIL_ASSERT
(
r
 == 0);

103 (
∑u£
 = 
	`TAILQ_FIRST
(&
ba£
->
∑u£d_ªque°s
)Ë!
NULL
) {

104 
	`TAILQ_REMOVE
(&
ba£
->
∑u£d_ªque°s
, 
∑u£
, 
√xt
);

105 
	`mm_‰ì
(
∑u£
);

107 (
hook
 = 
	`TAILQ_FIRST
(&
ba£
->
öput_hooks
)Ë!
NULL
) {

108 
r
 = 
	`evΩc_ªmove_hook
(
ba£
, 
EVRPC_INPUT
, 
hook
);

109 
	`EVUTIL_ASSERT
(
r
);

111 (
hook
 = 
	`TAILQ_FIRST
(&
ba£
->
ouçut_hooks
)Ë!
NULL
) {

112 
r
 = 
	`evΩc_ªmove_hook
(
ba£
, 
EVRPC_OUTPUT
, 
hook
);

113 
	`EVUTIL_ASSERT
(
r
);

115 
	`mm_‰ì
(
ba£
);

116 
	}
}

119 
evΩc_add_hook
(*
vba£
,

120 
EVRPC_HOOK_TYPE
 
hook_ty≥
,

121 (*
cb
)(*, 
evhâp_ªque°
 *, 
evbuf„r
 *, *),

122 *
cb_¨g
)

124 
_evΩc_hooks
 *
ba£
 = 
vba£
;

125 
evΩc_hook_li°
 *
hód
 = 
NULL
;

126 
evΩc_hook
 *
hook
 = 
NULL
;

127 
hook_ty≥
) {

128 
EVRPC_INPUT
:

129 
hód
 = &
ba£
->
ö_hooks
;

131 
EVRPC_OUTPUT
:

132 
hód
 = &
ba£
->
out_hooks
;

135 
	`EVUTIL_ASSERT
(
hook_ty≥
 =
EVRPC_INPUT
 || hook_ty≥ =
EVRPC_OUTPUT
);

138 
hook
 = 
	`mm_ˇŒoc
(1, (
evΩc_hook
));

139 
	`EVUTIL_ASSERT
(
hook
 !
NULL
);

141 
hook
->
¥o˚ss
 = 
cb
;

142 
hook
->
¥o˚ss_¨g
 = 
cb_¨g
;

143 
	`TAILQ_INSERT_TAIL
(
hód
, 
hook
, 
√xt
);

145  (
hook
);

146 
	}
}

149 
	$evΩc_ªmove_hook_öã∫Æ
(
evΩc_hook_li°
 *
hód
, *
h™dÀ
)

151 
evΩc_hook
 *
hook
 = 
NULL
;

152 
	`TAILQ_FOREACH
(
hook
, 
hód
, 
√xt
) {

153 i‡(
hook
 =
h™dÀ
) {

154 
	`TAILQ_REMOVE
(
hód
, 
hook
, 
√xt
);

155 
	`mm_‰ì
(
hook
);

161 
	}
}

168 
	$evΩc_ªmove_hook
(*
vba£
, 
EVRPC_HOOK_TYPE
 
hook_ty≥
, *
h™dÀ
)

170 
_evΩc_hooks
 *
ba£
 = 
vba£
;

171 
evΩc_hook_li°
 *
hód
 = 
NULL
;

172 
hook_ty≥
) {

173 
EVRPC_INPUT
:

174 
hód
 = &
ba£
->
ö_hooks
;

176 
EVRPC_OUTPUT
:

177 
hód
 = &
ba£
->
out_hooks
;

180 
	`EVUTIL_ASSERT
(
hook_ty≥
 =
EVRPC_INPUT
 || hook_ty≥ =
EVRPC_OUTPUT
);

183  (
	`evΩc_ªmove_hook_öã∫Æ
(
hód
, 
h™dÀ
));

184 
	}
}

187 
	$evΩc_¥o˚ss_hooks
(
evΩc_hook_li°
 *
hód
, *
˘x
,

188 
evhâp_ªque°
 *
ªq
, 
evbuf„r
 *
evbuf
)

190 
evΩc_hook
 *
hook
;

191 
	`TAILQ_FOREACH
(
hook
, 
hód
, 
√xt
) {

192 
ªs
 = 
hook
->
	`¥o˚ss
(
˘x
, 
ªq
, 
evbuf
, hook->
¥o˚ss_¨g
);

193 i‡(
ªs
 !
EVRPC_CONTINUE
)

194  (
ªs
);

197  (
EVRPC_CONTINUE
);

198 
	}
}

200 
evΩc_poﬁ_scheduÀ
(
evΩc_poﬁ
 *
poﬁ
);

201 
evΩc_ªque°_cb
(
evhâp_ªque°
 *, *);

210 
	$evΩc_c⁄°ru˘_uri
(c⁄° *
uri
)

212 *
c⁄°ru˘ed_uri
;

213 
size_t
 
c⁄°ru˘ed_uri_Àn
;

215 
c⁄°ru˘ed_uri_Àn
 = 
	`°æí
(
EVRPC_URI_PREFIX
Ë+ såÀn(
uri
) + 1;

216 i‡((
c⁄°ru˘ed_uri
 = 
	`mm_mÆloc
(
c⁄°ru˘ed_uri_Àn
)Ë=
NULL
)

217 
	`evít_îr
(1, "%s: failedÅoÑegisterÑpcát %s",

218 
__func__
, 
uri
);

219 
	`mem˝y
(
c⁄°ru˘ed_uri
, 
EVRPC_URI_PREFIX
, 
	`°æí
(EVRPC_URI_PREFIX));

220 
	`mem˝y
(
c⁄°ru˘ed_uri
 + 
	`°æí
(
EVRPC_URI_PREFIX
), 
uri
, strlen(uri));

221 
c⁄°ru˘ed_uri
[
c⁄°ru˘ed_uri_Àn
 - 1] = '\0';

223  (
c⁄°ru˘ed_uri
);

224 
	}
}

227 
evΩc_ªgi°î_Ωc
(
evΩc_ba£
 *
ba£
, 
evΩc
 *
Ωc
,

228 (*
cb
)(
evΩc_ªq_gíîic
 *, *), *
cb_¨g
)

230 *
c⁄°ru˘ed_uri
 = 
	`evΩc_c⁄°ru˘_uri
(
Ωc
->
uri
);

232 
Ωc
->
ba£
 = base;

233 
Ωc
->
cb
 = cb;

234 
Ωc
->
cb_¨g
 = cb_arg;

236 
	`TAILQ_INSERT_TAIL
(&
ba£
->
ªgi°îed_Ωcs
, 
Ωc
, 
√xt
);

238 
	`evhâp_£t_cb
(
ba£
->
hâp_£rvî
,

239 
c⁄°ru˘ed_uri
,

240 
evΩc_ªque°_cb
,

241 
Ωc
);

243 
	`mm_‰ì
(
c⁄°ru˘ed_uri
);

246 
	}
}

249 
	$evΩc_uƒegi°î_Ωc
(
evΩc_ba£
 *
ba£
, c⁄° *
«me
)

251 *
ªgi°îed_uri
 = 
NULL
;

252 
evΩc
 *
Ωc
;

253 
r
;

256 
	`TAILQ_FOREACH
(
Ωc
, &
ba£
->
ªgi°îed_Ωcs
, 
√xt
) {

257 i‡(
	`°rcmp
(
Ωc
->
uri
, 
«me
) == 0)

260 i‡(
Ωc
 =
NULL
) {

264 
	`TAILQ_REMOVE
(&
ba£
->
ªgi°îed_Ωcs
, 
Ωc
, 
√xt
);

266 
ªgi°îed_uri
 = 
	`evΩc_c⁄°ru˘_uri
(
«me
);

269 
r
 = 
	`evhâp_dñ_cb
(
ba£
->
hâp_£rvî
, 
ªgi°îed_uri
);

270 
	`EVUTIL_ASSERT
(
r
 == 0);

272 
	`mm_‰ì
(
ªgi°îed_uri
);

274 
	`mm_‰ì
((*)
Ωc
->
uri
);

275 
	`mm_‰ì
(
Ωc
);

277 
	}
}

279 
evΩc_∑u£_ªque°
(*
vba£
, *
˘x
,

280 (*
cb
)(*, 
EVRPC_HOOK_RESULT
));

281 
	`evΩc_ªque°_cb_˛osuª
(*, 
EVRPC_HOOK_RESULT
);

284 
	$evΩc_ªque°_cb
(
evhâp_ªque°
 *
ªq
, *
¨g
)

286 
evΩc
 *
Ωc
 = 
¨g
;

287 
evΩc_ªq_gíîic
 *
Ωc_°©e
 = 
NULL
;

290 i‡(
ªq
->
ty≥
 !
EVHTTP_REQ_POST
 ||

291 
	`evbuf„r_gë_Àngth
(
ªq
->
öput_buf„r
) <= 0)

292 
îr‹
;

294 
Ωc_°©e
 = 
	`mm_ˇŒoc
(1, (
evΩc_ªq_gíîic
));

295 i‡(
Ωc_°©e
 =
NULL
)

296 
îr‹
;

297 
Ωc_°©e
->
Ωc
 =Ñpc;

298 
Ωc_°©e
->
hâp_ªq
 = 
ªq
;

299 
Ωc_°©e
->
Ωc_d©a
 = 
NULL
;

301 i‡(
	`TAILQ_FIRST
(&
Ωc
->
ba£
->
öput_hooks
Ë!
NULL
) {

302 
hook_ªs
;

304 
	`evΩc_hook_assocüã_mëa
(&
Ωc_°©e
->
hook_mëa
, 
ªq
->
evc⁄
);

309 
hook_ªs
 = 
	`evΩc_¥o˚ss_hooks
(&
Ωc
->
ba£
->
öput_hooks
,

310 
Ωc_°©e
, 
ªq
,Ñeq->
öput_buf„r
);

311 
hook_ªs
) {

312 
EVRPC_TERMINATE
:

313 
îr‹
;

314 
EVRPC_PAUSE
:

315 
	`evΩc_∑u£_ªque°
(
Ωc
->
ba£
, 
Ωc_°©e
,

316 
evΩc_ªque°_cb_˛osuª
);

318 
EVRPC_CONTINUE
:

321 
	`EVUTIL_ASSERT
(
hook_ªs
 =
EVRPC_TERMINATE
 ||

322 
hook_ªs
 =
EVRPC_CONTINUE
 ||

323 
hook_ªs
 =
EVRPC_PAUSE
);

327 
	`evΩc_ªque°_cb_˛osuª
(
Ωc_°©e
, 
EVRPC_CONTINUE
);

330 
îr‹
:

331 i‡(
Ωc_°©e
 !
NULL
)

332 
	`evΩc_ªq°©e_‰ì
(
Ωc_°©e
);

333 
	`evhâp_£nd_îr‹
(
ªq
, 
HTTP_SERVUNAVAIL
, 
NULL
);

335 
	}
}

338 
	$evΩc_ªque°_cb_˛osuª
(*
¨g
, 
EVRPC_HOOK_RESULT
 
hook_ªs
)

340 
evΩc_ªq_gíîic
 *
Ωc_°©e
 = 
¨g
;

341 
evΩc
 *
Ωc
;

342 
evhâp_ªque°
 *
ªq
;

344 
	`EVUTIL_ASSERT
(
Ωc_°©e
);

345 
Ωc
 = 
Ωc_°©e
->rpc;

346 
ªq
 = 
Ωc_°©e
->
hâp_ªq
;

348 i‡(
hook_ªs
 =
EVRPC_TERMINATE
)

349 
îr‹
;

352 
Ωc_°©e
->
ªque°
 = 
Ωc
->
	`ªque°_√w
‘pc->
ªque°_√w_¨g
);

353 i‡(
Ωc_°©e
->
ªque°
 =
NULL
)

354 
îr‹
;

356 i‡(
Ωc
->
	`ªque°_unm¨shÆ
(

357 
Ωc_°©e
->
ªque°
, 
ªq
->
öput_buf„r
) == -1) {

359 
îr‹
;

364 
Ωc_°©e
->
ª∂y
 = 
Ωc
->
	`ª∂y_√w
‘pc->
ª∂y_√w_¨g
);

365 i‡(
Ωc_°©e
->
ª∂y
 =
NULL
)

366 
îr‹
;

369 
Ωc
->
	`cb
(
Ωc_°©e
,Ñpc->
cb_¨g
);

373 
îr‹
:

374 i‡(
Ωc_°©e
 !
NULL
)

375 
	`evΩc_ªq°©e_‰ì
(
Ωc_°©e
);

376 
	`evhâp_£nd_îr‹
(
ªq
, 
HTTP_SERVUNAVAIL
, 
NULL
);

378 
	}
}

382 
	$evΩc_ªq°©e_‰ì
(
evΩc_ªq_gíîic
* 
Ωc_°©e
)

384 
evΩc
 *
Ωc
;

385 
	`EVUTIL_ASSERT
(
Ωc_°©e
 !
NULL
);

386 
Ωc
 = 
Ωc_°©e
->rpc;

389 i‡(
Ωc_°©e
->
hook_mëa
 !
NULL
)

390 
	`evΩc_hook_c⁄ãxt_‰ì
(
Ωc_°©e
->
hook_mëa
);

391 i‡(
Ωc_°©e
->
ªque°
 !
NULL
)

392 
Ωc
->
	`ªque°_‰ì
(
Ωc_°©e
->
ªque°
);

393 i‡(
Ωc_°©e
->
ª∂y
 !
NULL
)

394 
Ωc
->
	`ª∂y_‰ì
(
Ωc_°©e
->
ª∂y
);

395 i‡(
Ωc_°©e
->
Ωc_d©a
 !
NULL
)

396 
	`evbuf„r_‰ì
(
Ωc_°©e
->
Ωc_d©a
);

397 
	`mm_‰ì
(
Ωc_°©e
);

398 
	}
}

401 
evΩc_ªque°_d⁄e_˛osuª
(*, 
EVRPC_HOOK_RESULT
);

404 
	$evΩc_ªque°_d⁄e
(
evΩc_ªq_gíîic
 *
Ωc_°©e
)

406 
evhâp_ªque°
 *
ªq
;

407 
evΩc
 *
Ωc
;

409 
	`EVUTIL_ASSERT
(
Ωc_°©e
);

411 
ªq
 = 
Ωc_°©e
->
hâp_ªq
;

412 
Ωc
 = 
Ωc_°©e
->rpc;

414 i‡(
Ωc
->
	`ª∂y_com∂ëe
(
Ωc_°©e
->
ª∂y
) == -1) {

416 
îr‹
;

419 i‡((
Ωc_°©e
->
Ωc_d©a
 = 
	`evbuf„r_√w
()Ë=
NULL
) {

421 
îr‹
;

425 
Ωc
->
	`ª∂y_m¨shÆ
(
Ωc_°©e
->
Ωc_d©a
,Ñpc_°©e->
ª∂y
);

427 i‡(
	`TAILQ_FIRST
(&
Ωc
->
ba£
->
ouçut_hooks
Ë!
NULL
) {

428 
hook_ªs
;

430 
	`evΩc_hook_assocüã_mëa
(&
Ωc_°©e
->
hook_mëa
, 
ªq
->
evc⁄
);

433 
hook_ªs
 = 
	`evΩc_¥o˚ss_hooks
(&
Ωc
->
ba£
->
ouçut_hooks
,

434 
Ωc_°©e
, 
ªq
,Ñpc_°©e->
Ωc_d©a
);

435 
hook_ªs
) {

436 
EVRPC_TERMINATE
:

437 
îr‹
;

438 
EVRPC_PAUSE
:

439 i‡(
	`evΩc_∑u£_ªque°
(
Ωc
->
ba£
, 
Ωc_°©e
,

440 
evΩc_ªque°_d⁄e_˛osuª
) == -1)

441 
îr‹
;

443 
EVRPC_CONTINUE
:

446 
	`EVUTIL_ASSERT
(
hook_ªs
 =
EVRPC_TERMINATE
 ||

447 
hook_ªs
 =
EVRPC_CONTINUE
 ||

448 
hook_ªs
 =
EVRPC_PAUSE
);

452 
	`evΩc_ªque°_d⁄e_˛osuª
(
Ωc_°©e
, 
EVRPC_CONTINUE
);

455 
îr‹
:

456 i‡(
Ωc_°©e
 !
NULL
)

457 
	`evΩc_ªq°©e_‰ì
(
Ωc_°©e
);

458 
	`evhâp_£nd_îr‹
(
ªq
, 
HTTP_SERVUNAVAIL
, 
NULL
);

460 
	}
}

463 
	$evΩc_gë_ªque°
(
evΩc_ªq_gíîic
 *
ªq
)

465  
ªq
->
ªque°
;

466 
	}
}

469 
	$evΩc_gë_ª∂y
(
evΩc_ªq_gíîic
 *
ªq
)

471  
ªq
->
ª∂y
;

472 
	}
}

475 
	$evΩc_ªque°_d⁄e_˛osuª
(*
¨g
, 
EVRPC_HOOK_RESULT
 
hook_ªs
)

477 
evΩc_ªq_gíîic
 *
Ωc_°©e
 = 
¨g
;

478 
evhâp_ªque°
 *
ªq
;

479 
	`EVUTIL_ASSERT
(
Ωc_°©e
);

480 
ªq
 = 
Ωc_°©e
->
hâp_ªq
;

482 i‡(
hook_ªs
 =
EVRPC_TERMINATE
)

483 
îr‹
;

486 i‡(
	`evhâp_föd_hódî
(
ªq
->
ouçut_hódîs
, "C⁄ã¡-Ty≥"Ë=
NULL
) {

487 
	`evhâp_add_hódî
(
ªq
->
ouçut_hódîs
,

490 
	`evhâp_£nd_ª∂y
(
ªq
, 
HTTP_OK
, "OK", 
Ωc_°©e
->
Ωc_d©a
);

492 
	`evΩc_ªq°©e_‰ì
(
Ωc_°©e
);

496 
îr‹
:

497 i‡(
Ωc_°©e
 !
NULL
)

498 
	`evΩc_ªq°©e_‰ì
(
Ωc_°©e
);

499 
	`evhâp_£nd_îr‹
(
ªq
, 
HTTP_SERVUNAVAIL
, 
NULL
);

501 
	}
}

506 
evΩc_scheduÀ_ªque°
(
evhâp_c⁄√˘i⁄
 *
c⁄√˘i⁄
,

507 
evΩc_ªque°_wøµî
 *
˘x
);

509 
evΩc_poﬁ
 *

510 
	$evΩc_poﬁ_√w
(
evít_ba£
 *
ba£
)

512 
evΩc_poﬁ
 *
poﬁ
 = 
	`mm_ˇŒoc
(1, (evrpc_pool));

513 i‡(
poﬁ
 =
NULL
)

514  (
NULL
);

516 
	`TAILQ_INIT
(&
poﬁ
->
c⁄√˘i⁄s
);

517 
	`TAILQ_INIT
(&
poﬁ
->
ªque°s
);

519 
	`TAILQ_INIT
(&
poﬁ
->
∑u£d_ªque°s
);

521 
	`TAILQ_INIT
(&
poﬁ
->
öput_hooks
);

522 
	`TAILQ_INIT
(&
poﬁ
->
ouçut_hooks
);

524 
poﬁ
->
ba£
 = base;

525 
poﬁ
->
timeout
 = -1;

527  (
poﬁ
);

528 
	}
}

531 
	$evΩc_ªque°_wøµî_‰ì
(
evΩc_ªque°_wøµî
 *
ªque°
)

533 i‡(
ªque°
->
hook_mëa
 !
NULL
)

534 
	`evΩc_hook_c⁄ãxt_‰ì
(
ªque°
->
hook_mëa
);

535 
	`mm_‰ì
(
ªque°
->
«me
);

536 
	`mm_‰ì
(
ªque°
);

537 
	}
}

540 
	$evΩc_poﬁ_‰ì
(
evΩc_poﬁ
 *
poﬁ
)

542 
evhâp_c⁄√˘i⁄
 *
c⁄√˘i⁄
;

543 
evΩc_ªque°_wøµî
 *
ªque°
;

544 
evΩc_hook_˘x
 *
∑u£
;

545 
evΩc_hook
 *
hook
;

546 
r
;

548 (
ªque°
 = 
	`TAILQ_FIRST
(&
poﬁ
->
ªque°s
)Ë!
NULL
) {

549 
	`TAILQ_REMOVE
(&
poﬁ
->
ªque°s
, 
ªque°
, 
√xt
);

550 
	`evΩc_ªque°_wøµî_‰ì
(
ªque°
);

553 (
∑u£
 = 
	`TAILQ_FIRST
(&
poﬁ
->
∑u£d_ªque°s
)Ë!
NULL
) {

554 
	`TAILQ_REMOVE
(&
poﬁ
->
∑u£d_ªque°s
, 
∑u£
, 
√xt
);

555 
	`mm_‰ì
(
∑u£
);

558 (
c⁄√˘i⁄
 = 
	`TAILQ_FIRST
(&
poﬁ
->
c⁄√˘i⁄s
)Ë!
NULL
) {

559 
	`TAILQ_REMOVE
(&
poﬁ
->
c⁄√˘i⁄s
, 
c⁄√˘i⁄
, 
√xt
);

560 
	`evhâp_c⁄√˘i⁄_‰ì
(
c⁄√˘i⁄
);

563 (
hook
 = 
	`TAILQ_FIRST
(&
poﬁ
->
öput_hooks
)Ë!
NULL
) {

564 
r
 = 
	`evΩc_ªmove_hook
(
poﬁ
, 
EVRPC_INPUT
, 
hook
);

565 
	`EVUTIL_ASSERT
(
r
);

568 (
hook
 = 
	`TAILQ_FIRST
(&
poﬁ
->
ouçut_hooks
)Ë!
NULL
) {

569 
r
 = 
	`evΩc_ªmove_hook
(
poﬁ
, 
EVRPC_OUTPUT
, 
hook
);

570 
	`EVUTIL_ASSERT
(
r
);

573 
	`mm_‰ì
(
poﬁ
);

574 
	}
}

582 
	$evΩc_poﬁ_add_c⁄√˘i⁄
(
evΩc_poﬁ
 *
poﬁ
,

583 
evhâp_c⁄√˘i⁄
 *
c⁄√˘i⁄
)

585 
	`EVUTIL_ASSERT
(
c⁄√˘i⁄
->
hâp_£rvî
 =
NULL
);

586 
	`TAILQ_INSERT_TAIL
(&
poﬁ
->
c⁄√˘i⁄s
, 
c⁄√˘i⁄
, 
√xt
);

591 i‡(
poﬁ
->
ba£
 !
NULL
)

592 
	`evhâp_c⁄√˘i⁄_£t_ba£
(
c⁄√˘i⁄
, 
poﬁ
->
ba£
);

598 i‡(
c⁄√˘i⁄
->
timeout
 == -1)

599 
c⁄√˘i⁄
->
timeout
 = 
poﬁ
->timeout;

606 i‡(
	`TAILQ_FIRST
(&
poﬁ
->
ªque°s
Ë!
NULL
) {

607 
evΩc_ªque°_wøµî
 *
ªque°
 =

608 
	`TAILQ_FIRST
(&
poﬁ
->
ªque°s
);

609 
	`TAILQ_REMOVE
(&
poﬁ
->
ªque°s
, 
ªque°
, 
√xt
);

610 
	`evΩc_scheduÀ_ªque°
(
c⁄√˘i⁄
, 
ªque°
);

612 
	}
}

615 
	$evΩc_poﬁ_ªmove_c⁄√˘i⁄
(
evΩc_poﬁ
 *
poﬁ
,

616 
evhâp_c⁄√˘i⁄
 *
c⁄√˘i⁄
)

618 
	`TAILQ_REMOVE
(&
poﬁ
->
c⁄√˘i⁄s
, 
c⁄√˘i⁄
, 
√xt
);

619 
	}
}

622 
	$evΩc_poﬁ_£t_timeout
(
evΩc_poﬁ
 *
poﬁ
, 
timeout_ö_£cs
)

624 
evhâp_c⁄√˘i⁄
 *
evc⁄
;

625 
	`TAILQ_FOREACH
(
evc⁄
, &
poﬁ
->
c⁄√˘i⁄s
, 
√xt
) {

626 
evc⁄
->
timeout
 = 
timeout_ö_£cs
;

628 
poﬁ
->
timeout
 = 
timeout_ö_£cs
;

629 
	}
}

632 
evΩc_ª∂y_d⁄e
(
evhâp_ªque°
 *, *);

633 
evΩc_ªque°_timeout
(
evutû_sockë_t
, , *);

639 
evhâp_c⁄√˘i⁄
 *

640 
	$evΩc_poﬁ_föd_c⁄√˘i⁄
(
evΩc_poﬁ
 *
poﬁ
)

642 
evhâp_c⁄√˘i⁄
 *
c⁄√˘i⁄
;

643 
	`TAILQ_FOREACH
(
c⁄√˘i⁄
, &
poﬁ
->
c⁄√˘i⁄s
, 
√xt
) {

644 i‡(
	`TAILQ_FIRST
(&
c⁄√˘i⁄
->
ªque°s
Ë=
NULL
)

645  (
c⁄√˘i⁄
);

648  (
NULL
);

649 
	}
}

655 
evΩc_scheduÀ_ªque°_˛osuª
(*
˘x
, 
EVRPC_HOOK_RESULT
);

661 
	$evΩc_scheduÀ_ªque°
(
evhâp_c⁄√˘i⁄
 *
c⁄√˘i⁄
,

662 
evΩc_ªque°_wøµî
 *
˘x
)

664 
evhâp_ªque°
 *
ªq
 = 
NULL
;

665 
evΩc_poﬁ
 *
poﬁ
 = 
˘x
->pool;

666 
evΩc_°©us
 
°©us
;

668 i‡((
ªq
 = 
	`evhâp_ªque°_√w
(
evΩc_ª∂y_d⁄e
, 
˘x
)Ë=
NULL
)

669 
îr‹
;

672 
˘x
->
	`ªque°_m¨shÆ
(
ªq
->
ouçut_buf„r
, ctx->
ªque°
);

675 
˘x
->
evc⁄
 = 
c⁄√˘i⁄
;

678 
˘x
->
ªq
 =Ñeq;

680 i‡(
	`TAILQ_FIRST
(&
poﬁ
->
ouçut_hooks
Ë!
NULL
) {

681 
hook_ªs
;

683 
	`evΩc_hook_assocüã_mëa
(&
˘x
->
hook_mëa
, 
c⁄√˘i⁄
);

686 
hook_ªs
 = 
	`evΩc_¥o˚ss_hooks
(&
poﬁ
->
ouçut_hooks
,

687 
˘x
, 
ªq
,Ñeq->
ouçut_buf„r
);

689 
hook_ªs
) {

690 
EVRPC_TERMINATE
:

691 
îr‹
;

692 
EVRPC_PAUSE
:

694 i‡(
	`evΩc_∑u£_ªque°
(
poﬁ
, 
˘x
,

695 
evΩc_scheduÀ_ªque°_˛osuª
) == -1)

696 
îr‹
;

698 
EVRPC_CONTINUE
:

702 
	`EVUTIL_ASSERT
(
hook_ªs
 =
EVRPC_TERMINATE
 ||

703 
hook_ªs
 =
EVRPC_CONTINUE
 ||

704 
hook_ªs
 =
EVRPC_PAUSE
);

708 
	`evΩc_scheduÀ_ªque°_˛osuª
(
˘x
, 
EVRPC_CONTINUE
);

711 
îr‹
:

712 
	`mem£t
(&
°©us
, 0, (status));

713 
°©us
.
îr‹
 = 
EVRPC_STATUS_ERR_UNSTARTED
;

714 (*
˘x
->
cb
)(&
°©us
, ctx->
ªque°
, ctx->
ª∂y
, ctx->
cb_¨g
);

715 
	`evΩc_ªque°_wøµî_‰ì
(
˘x
);

717 
	}
}

720 
	$evΩc_scheduÀ_ªque°_˛osuª
(*
¨g
, 
EVRPC_HOOK_RESULT
 
hook_ªs
)

722 
evΩc_ªque°_wøµî
 *
˘x
 = 
¨g
;

723 
evhâp_c⁄√˘i⁄
 *
c⁄√˘i⁄
 = 
˘x
->
evc⁄
;

724 
evhâp_ªque°
 *
ªq
 = 
˘x
->req;

725 
evΩc_poﬁ
 *
poﬁ
 = 
˘x
->pool;

726 
evΩc_°©us
 
°©us
;

727 *
uri
 = 
NULL
;

728 
ªs
 = 0;

730 i‡(
hook_ªs
 =
EVRPC_TERMINATE
)

731 
îr‹
;

733 
uri
 = 
	`evΩc_c⁄°ru˘_uri
(
˘x
->
«me
);

734 i‡(
uri
 =
NULL
)

735 
îr‹
;

737 i‡(
poﬁ
->
timeout
 > 0) {

741 
timevÆ
 
tv
;

742 
	`evutû_timî˛ór
(&
tv
);

743 
tv
.
tv_£c
 = 
poﬁ
->
timeout
;

744 
	`evtimî_add
(&
˘x
->
ev_timeout
, &
tv
);

748 
ªs
 = 
	`evhâp_make_ªque°
(
c⁄√˘i⁄
, 
ªq
, 
EVHTTP_REQ_POST
, 
uri
);

749 
	`mm_‰ì
(
uri
);

751 i‡(
ªs
 == -1)

752 
îr‹
;

756 
îr‹
:

757 
	`mem£t
(&
°©us
, 0, (status));

758 
°©us
.
îr‹
 = 
EVRPC_STATUS_ERR_UNSTARTED
;

759 (*
˘x
->
cb
)(&
°©us
, ctx->
ªque°
, ctx->
ª∂y
, ctx->
cb_¨g
);

760 
	`evΩc_ªque°_wøµî_‰ì
(
˘x
);

761 
	}
}

765 
evΩc_∑u£_ªque°
(*
vba£
, *
˘x
,

766 (*
cb
)(*, 
EVRPC_HOOK_RESULT
))

768 
_evΩc_hooks
 *
ba£
 = 
vba£
;

769 
evΩc_hook_˘x
 *
∑u£
 = 
	`mm_mÆloc
((*pause));

770 i‡(
∑u£
 =
NULL
)

773 
∑u£
->
˘x
 = ctx;

774 
∑u£
->
cb
 = cb;

776 
	`TAILQ_INSERT_TAIL
(&
ba£
->
∑u£_ªque°s
, 
∑u£
, 
√xt
);

778 
	}
}

781 
	$evΩc_ªsume_ªque°
(*
vba£
, *
˘x
, 
EVRPC_HOOK_RESULT
 
ªs
)

783 
_evΩc_hooks
 *
ba£
 = 
vba£
;

784 
evΩc_∑u£_li°
 *
hód
 = &
ba£
->
∑u£_ªque°s
;

785 
evΩc_hook_˘x
 *
∑u£
;

787 
	`TAILQ_FOREACH
(
∑u£
, 
hód
, 
√xt
) {

788 i‡(
∑u£
->
˘x
 == ctx)

792 i‡(
∑u£
 =
NULL
)

795 (*
∑u£
->
cb
)’au£->
˘x
, 
ªs
);

796 
	`TAILQ_REMOVE
(
hód
, 
∑u£
, 
√xt
);

797 
	`mm_‰ì
(
∑u£
);

799 
	}
}

802 
	$evΩc_make_ªque°
(
evΩc_ªque°_wøµî
 *
˘x
)

804 
evΩc_poﬁ
 *
poﬁ
 = 
˘x
->pool;

807 
	`evtimî_assign
(&
˘x
->
ev_timeout
, 
poﬁ
->
ba£
, 
evΩc_ªque°_timeout
, ctx);

810 
	`EVUTIL_ASSERT
(
	`TAILQ_FIRST
(&
poﬁ
->
c⁄√˘i⁄s
Ë!
NULL
);

816 
	`TAILQ_INSERT_TAIL
(&
poﬁ
->
ªque°s
, 
˘x
, 
√xt
);

818 
	`evΩc_poﬁ_scheduÀ
(
poﬁ
);

821 
	}
}

824 
evΩc_ªque°_wøµî
 *

825 
evΩc_make_ªque°_˘x
(

826 
evΩc_poﬁ
 *
poﬁ
, *
ªque°
, *
ª∂y
,

827 c⁄° *
Ω˙ame
,

828 (*
ªq_m¨shÆ
)(
evbuf„r
*, *),

829 (*
Ωl_˛ór
)(*),

830 (*
Ωl_unm¨shÆ
)(*, 
evbuf„r
 *),

831 (*
cb
)(
evΩc_°©us
 *, *, *, *),

832 *
cb¨g
)

834 
evΩc_ªque°_wøµî
 *
˘x
 = (evrpc_request_wrapper *)

835 
	`mm_mÆloc
((
evΩc_ªque°_wøµî
));

836 i‡(
˘x
 =
NULL
)

837  (
NULL
);

839 
˘x
->
poﬁ
 =Öool;

840 
˘x
->
hook_mëa
 = 
NULL
;

841 
˘x
->
evc⁄
 = 
NULL
;

842 
˘x
->
«me
 = 
	`mm_°rdup
(
Ω˙ame
);

843 i‡(
˘x
->
«me
 =
NULL
) {

844 
	`mm_‰ì
(
˘x
);

845  (
NULL
);

847 
˘x
->
cb
 = cb;

848 
˘x
->
cb_¨g
 = 
cb¨g
;

849 
˘x
->
ªque°
 =Ñequest;

850 
˘x
->
ª∂y
 =Ñeply;

851 
˘x
->
ªque°_m¨shÆ
 = 
ªq_m¨shÆ
;

852 
˘x
->
ª∂y_˛ór
 = 
Ωl_˛ór
;

853 
˘x
->
ª∂y_unm¨shÆ
 = 
Ωl_unm¨shÆ
;

855  (
˘x
);

856 
	}
}

859 
evΩc_ª∂y_d⁄e_˛osuª
(*, 
EVRPC_HOOK_RESULT
);

862 
	$evΩc_ª∂y_d⁄e
(
evhâp_ªque°
 *
ªq
, *
¨g
)

864 
evΩc_ªque°_wøµî
 *
˘x
 = 
¨g
;

865 
evΩc_poﬁ
 *
poﬁ
 = 
˘x
->pool;

866 
hook_ªs
 = 
EVRPC_CONTINUE
;

869 
	`evít_dñ
(&
˘x
->
ev_timeout
);

871 
˘x
->
ªq
 =Ñeq;

874 i‡(
ªq
 =
NULL
) {

875 
	`evΩc_ª∂y_d⁄e_˛osuª
(
˘x
, 
EVRPC_CONTINUE
);

879 i‡(
	`TAILQ_FIRST
(&
poﬁ
->
öput_hooks
Ë!
NULL
) {

880 
	`evΩc_hook_assocüã_mëa
(&
˘x
->
hook_mëa
, ctx->
evc⁄
);

883 
hook_ªs
 = 
	`evΩc_¥o˚ss_hooks
(&
poﬁ
->
öput_hooks
,

884 
˘x
, 
ªq
,Ñeq->
öput_buf„r
);

886 
hook_ªs
) {

887 
EVRPC_TERMINATE
:

888 
EVRPC_CONTINUE
:

890 
EVRPC_PAUSE
:

897 i‡(
ªq
 !
NULL
)

898 
	`evhâp_ªque°_own
(
ªq
);

900 
	`evΩc_∑u£_ªque°
(
poﬁ
, 
˘x
,

901 
evΩc_ª∂y_d⁄e_˛osuª
);

904 
	`EVUTIL_ASSERT
(
hook_ªs
 =
EVRPC_TERMINATE
 ||

905 
hook_ªs
 =
EVRPC_CONTINUE
 ||

906 
hook_ªs
 =
EVRPC_PAUSE
);

910 
	`evΩc_ª∂y_d⁄e_˛osuª
(
˘x
, 
hook_ªs
);

913 
	}
}

916 
	$evΩc_ª∂y_d⁄e_˛osuª
(*
¨g
, 
EVRPC_HOOK_RESULT
 
hook_ªs
)

918 
evΩc_ªque°_wøµî
 *
˘x
 = 
¨g
;

919 
evhâp_ªque°
 *
ªq
 = 
˘x
->req;

920 
evΩc_poﬁ
 *
poﬁ
 = 
˘x
->pool;

921 
evΩc_°©us
 
°©us
;

922 
ªs
 = -1;

924 
	`mem£t
(&
°©us
, 0, (status));

925 
°©us
.
hâp_ªq
 = 
ªq
;

928 i‡(
ªq
 =
NULL
) {

929 
°©us
.
îr‹
 = 
EVRPC_STATUS_ERR_TIMEOUT
;

930 } i‡(
hook_ªs
 =
EVRPC_TERMINATE
) {

931 
°©us
.
îr‹
 = 
EVRPC_STATUS_ERR_HOOKABORTED
;

933 
ªs
 = 
˘x
->
	`ª∂y_unm¨shÆ
(˘x->
ª∂y
, 
ªq
->
öput_buf„r
);

934 i‡(
ªs
 == -1)

935 
°©us
.
îr‹
 = 
EVRPC_STATUS_ERR_BADPAYLOAD
;

938 i‡(
ªs
 == -1) {

940 
˘x
->
	`ª∂y_˛ór
(˘x->
ª∂y
);

943 (*
˘x
->
cb
)(&
°©us
, ctx->
ªque°
, ctx->
ª∂y
, ctx->
cb_¨g
);

945 
	`evΩc_ªque°_wøµî_‰ì
(
˘x
);

949 i‡(
ªq
 !
NULL
 && 
	`evhâp_ªque°_is_ow√d
(req))

950 
	`evhâp_ªque°_‰ì
(
ªq
);

953 
	`evΩc_poﬁ_scheduÀ
(
poﬁ
);

954 
	}
}

957 
	$evΩc_poﬁ_scheduÀ
(
evΩc_poﬁ
 *
poﬁ
)

959 
evΩc_ªque°_wøµî
 *
˘x
 = 
	`TAILQ_FIRST
(&
poﬁ
->
ªque°s
);

960 
evhâp_c⁄√˘i⁄
 *
evc⁄
;

963 i‡(
˘x
 =
NULL
)

966 i‡((
evc⁄
 = 
	`evΩc_poﬁ_föd_c⁄√˘i⁄
(
poﬁ
)Ë!
NULL
) {

967 
	`TAILQ_REMOVE
(&
poﬁ
->
ªque°s
, 
˘x
, 
√xt
);

968 
	`evΩc_scheduÀ_ªque°
(
evc⁄
, 
˘x
);

970 
	}
}

973 
	$evΩc_ªque°_timeout
(
evutû_sockë_t
 
fd
, 
wh©
, *
¨g
)

975 
evΩc_ªque°_wøµî
 *
˘x
 = 
¨g
;

976 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
˘x
->evcon;

977 
	`EVUTIL_ASSERT
(
evc⁄
 !
NULL
);

979 
	`evhâp_c⁄√˘i⁄_Áû
(
evc⁄
, 
EVCON_HTTP_TIMEOUT
);

980 
	}
}

987 
	$evΩc_mëa_d©a_‰ì
(
evΩc_mëa_li°
 *
mëa_d©a
)

989 
evΩc_mëa
 *
íåy
;

990 
	`EVUTIL_ASSERT
(
mëa_d©a
 !
NULL
);

992 (
íåy
 = 
	`TAILQ_FIRST
(
mëa_d©a
)Ë!
NULL
) {

993 
	`TAILQ_REMOVE
(
mëa_d©a
, 
íåy
, 
√xt
);

994 
	`mm_‰ì
(
íåy
->
key
);

995 
	`mm_‰ì
(
íåy
->
d©a
);

996 
	`mm_‰ì
(
íåy
);

998 
	}
}

1000 
evΩc_hook_mëa
 *

1001 
	$evΩc_hook_mëa_√w
()

1003 
evΩc_hook_mëa
 *
˘x
;

1004 
˘x
 = 
	`mm_mÆloc
((
evΩc_hook_mëa
));

1005 
	`EVUTIL_ASSERT
(
˘x
 !
NULL
);

1007 
	`TAILQ_INIT
(&
˘x
->
mëa_d©a
);

1008 
˘x
->
evc⁄
 = 
NULL
;

1010  (
˘x
);

1011 
	}
}

1014 
	$evΩc_hook_assocüã_mëa
(
evΩc_hook_mëa
 **
p˘x
,

1015 
evhâp_c⁄√˘i⁄
 *
evc⁄
)

1017 
evΩc_hook_mëa
 *
˘x
 = *
p˘x
;

1018 i‡(
˘x
 =
NULL
)

1019 *
p˘x
 = 
˘x
 = 
	`evΩc_hook_mëa_√w
();

1020 
˘x
->
evc⁄
 =Évcon;

1021 
	}
}

1024 
	$evΩc_hook_c⁄ãxt_‰ì
(
evΩc_hook_mëa
 *
˘x
)

1026 
	`evΩc_mëa_d©a_‰ì
(&
˘x
->
mëa_d©a
);

1027 
	`mm_‰ì
(
˘x
);

1028 
	}
}

1032 
	$evΩc_hook_add_mëa
(*
˘x
, c⁄° *
key
,

1033 c⁄° *
d©a
, 
size_t
 
d©a_size
)

1035 
evΩc_ªque°_wøµî
 *
ªq
 = 
˘x
;

1036 
evΩc_hook_mëa
 *
°‹e
 = 
NULL
;

1037 
evΩc_mëa
 *
mëa
 = 
NULL
;

1039 i‡((
°‹e
 = 
ªq
->
hook_mëa
Ë=
NULL
)

1040 
°‹e
 = 
ªq
->
hook_mëa
 = 
	`evΩc_hook_mëa_√w
();

1042 
mëa
 = 
	`mm_mÆloc
((
evΩc_mëa
));

1043 
	`EVUTIL_ASSERT
(
mëa
 !
NULL
);

1044 
mëa
->
key
 = 
	`mm_°rdup
(key);

1045 
	`EVUTIL_ASSERT
(
mëa
->
key
 !
NULL
);

1046 
mëa
->
d©a_size
 = data_size;

1047 
mëa
->
d©a
 = 
	`mm_mÆloc
(
d©a_size
);

1048 
	`EVUTIL_ASSERT
(
mëa
->
d©a
 !
NULL
);

1049 
	`mem˝y
(
mëa
->
d©a
, d©a, 
d©a_size
);

1051 
	`TAILQ_INSERT_TAIL
(&
°‹e
->
mëa_d©a
, 
mëa
, 
√xt
);

1052 
	}
}

1055 
	$evΩc_hook_föd_mëa
(*
˘x
, c⁄° *
key
, **
d©a
, 
size_t
 *
d©a_size
)

1057 
evΩc_ªque°_wøµî
 *
ªq
 = 
˘x
;

1058 
evΩc_mëa
 *
mëa
 = 
NULL
;

1060 i‡(
ªq
->
hook_mëa
 =
NULL
)

1063 
	`TAILQ_FOREACH
(
mëa
, &
ªq
->
hook_mëa
->
mëa_d©a
, 
√xt
) {

1064 i‡(
	`°rcmp
(
mëa
->
key
, key) == 0) {

1065 *
d©a
 = 
mëa
->data;

1066 *
d©a_size
 = 
mëa
->data_size;

1072 
	}
}

1074 
evhâp_c⁄√˘i⁄
 *

1075 
	$evΩc_hook_gë_c⁄√˘i⁄
(*
˘x
)

1077 
evΩc_ªque°_wøµî
 *
ªq
 = 
˘x
;

1078  (
ªq
->
hook_mëa
 !
NULL
 ?Ñeq->hook_mëa->
evc⁄
 : NULL);

1079 
	}
}

1082 
evΩc_£nd_ªque°_gíîic
(
evΩc_poﬁ
 *
poﬁ
,

1083 *
ªque°
, *
ª∂y
,

1084 (*
cb
)(
evΩc_°©us
 *, *, *, *),

1085 *
cb_¨g
,

1086 c⁄° *
Ω˙ame
,

1087 (*
ªq_m¨shÆ
)(
evbuf„r
 *, *),

1088 (*
Ωl_˛ór
)(*),

1089 (*
Ωl_unm¨shÆ
)(*, 
evbuf„r
 *))

1091 
evΩc_°©us
 
°©us
;

1092 
evΩc_ªque°_wøµî
 *
˘x
;

1093 
˘x
 = 
	`evΩc_make_ªque°_˘x
(
poﬁ
, 
ªque°
, 
ª∂y
,

1094 
Ω˙ame
, 
ªq_m¨shÆ
, 
Ωl_˛ór
, 
Ωl_unm¨shÆ
, 
cb
, 
cb_¨g
);

1095 i‡(
˘x
 =
NULL
)

1096 
îr‹
;

1097  (
	`evΩc_make_ªque°
(
˘x
));

1098 
îr‹
:

1099 
	`mem£t
(&
°©us
, 0, (status));

1100 
°©us
.
îr‹
 = 
EVRPC_STATUS_ERR_UNSTARTED
;

1101 (*(
cb
))(&
°©us
, 
ªque°
, 
ª∂y
, 
cb_¨g
);

1103 
	}
}

1106 
evΩc
 *

1107 
evΩc_ªgi°î_obje˘
(c⁄° *
«me
,

1108 *(*
ªq_√w
)(*), *
ªq_√w_¨g
, (*
ªq_‰ì
)(*),

1109 (*
ªq_unm¨shÆ
)(*, 
evbuf„r
 *),

1110 *(*
Ωl_√w
)(*), *
Ωl_√w_¨g
, (*
Ωl_‰ì
)(*),

1111 (*
Ωl_com∂ëe
)(*),

1112 (*
Ωl_m¨shÆ
)(
evbuf„r
 *, *))

1114 
evΩc
* 
Ωc
 = (evΩ¯*)
	`mm_ˇŒoc
(1, (evrpc));

1115 i‡(
Ωc
 =
NULL
)

1116  (
NULL
);

1117 
Ωc
->
uri
 = 
	`mm_°rdup
(
«me
);

1118 i‡(
Ωc
->
uri
 =
NULL
) {

1119 
	`mm_‰ì
(
Ωc
);

1120  (
NULL
);

1122 
Ωc
->
ªque°_√w
 = 
ªq_√w
;

1123 
Ωc
->
ªque°_√w_¨g
 = 
ªq_√w_¨g
;

1124 
Ωc
->
ªque°_‰ì
 = 
ªq_‰ì
;

1125 
Ωc
->
ªque°_unm¨shÆ
 = 
ªq_unm¨shÆ
;

1126 
Ωc
->
ª∂y_√w
 = 
Ωl_√w
;

1127 
Ωc
->
ª∂y_√w_¨g
 = 
Ωl_√w_¨g
;

1128 
Ωc
->
ª∂y_‰ì
 = 
Ωl_‰ì
;

1129 
Ωc
->
ª∂y_com∂ëe
 = 
Ωl_com∂ëe
;

1130 
Ωc
->
ª∂y_m¨shÆ
 = 
Ωl_m¨shÆ
;

1131  (
Ωc
);

1132 
	}
}

1135 
evΩc_ªgi°î_gíîic
(
evΩc_ba£
 *
ba£
, c⁄° *
«me
,

1136 (*
ˇŒback
)(
evΩc_ªq_gíîic
 *, *), *
cb¨g
,

1137 *(*
ªq_√w
)(*), *
ªq_√w_¨g
, (*
ªq_‰ì
)(*),

1138 (*
ªq_unm¨shÆ
)(*, 
evbuf„r
 *),

1139 *(*
Ωl_√w
)(*), *
Ωl_√w_¨g
, (*
Ωl_‰ì
)(*),

1140 (*
Ωl_com∂ëe
)(*),

1141 (*
Ωl_m¨shÆ
)(
evbuf„r
 *, *))

1143 
evΩc
* 
Ωc
 =

1144 
	`evΩc_ªgi°î_obje˘
(
«me
, 
ªq_√w
, 
ªq_√w_¨g
, 
ªq_‰ì
, 
ªq_unm¨shÆ
,

1145 
Ωl_√w
, 
Ωl_√w_¨g
, 
Ωl_‰ì
, 
Ωl_com∂ëe
, 
Ωl_m¨shÆ
);

1146 i‡(
Ωc
 =
NULL
)

1148 
	`evΩc_ªgi°î_Ωc
(
ba£
, 
Ωc
,

1149 ((*)(
evΩc_ªq_gíîic
*, *))
ˇŒback
, 
cb¨g
);

1151 
	}
}

1154 
evΩc_poﬁ
 *

1155 
	$evΩc_ªque°_gë_poﬁ
(
evΩc_ªque°_wøµî
 *
˘x
)

1157  (
˘x
->
poﬁ
);

1158 
	}
}

1161 
	$evΩc_ªque°_£t_poﬁ
(
evΩc_ªque°_wøµî
 *
˘x
,

1162 
evΩc_poﬁ
 *
poﬁ
)

1164 
˘x
->
poﬁ
 =Öool;

1165 
	}
}

1168 
evΩc_ªque°_£t_cb
(
evΩc_ªque°_wøµî
 *
˘x
,

1169 (*
cb
)(
evΩc_°©us
*, *
ªque°
, *
ª∂y
, *
¨g
),

1170 *
cb_¨g
)

1172 
˘x
->
cb
 = cb;

1173 
˘x
->
cb_¨g
 = cb_arg;

1174 
	}
}

	@evrpc.h

27 #i‚de‡
_EVRPC_H_


28 
	#_EVRPC_H_


	)

40 
	~<evít.h
>

41 
	~<evít2/Ωc.h
>

42 
	~<evít2/Ωc_°ru˘.h
>

43 
	~<evít2/Ωc_com∑t.h
>

	@evsignal-internal.h

27 #i‚de‡
_EVSIGNAL_H_


28 
	#_EVSIGNAL_H_


	)

30 #i‚de‡
evutû_sockë_t


31 
	~"evít2/utû.h
"

33 
	~<sig«l.h
>

35 (*
	tev_sigh™dÀr_t
)();

39 
	sevsig_öfo
 {

41 
evít
 
ev_sig«l
;

43 
evutû_sockë_t
 
ev_sig«l_∑ú
[2];

45 
ev_sig«l_added
;

47 
ev_n_sig«ls_added
;

51 #ifde‡
_EVENT_HAVE_SIGACTION


52 
siga˘i⁄
 **
sh_ﬁd
;

54 
ev_sigh™dÀr_t
 **
sh_ﬁd
;

57 
sh_ﬁd_max
;

59 
	`evsig_öô
(
evít_ba£
 *);

60 
	`evsig_dóŒoc
(
evít_ba£
 *);

62 
	`evsig_£t_ba£
(
evít_ba£
 *
ba£
);

	@evthread-internal.h

26 #i‚de‡
_EVTHREAD_INTERNAL_H_


27 
	#_EVTHREAD_INTERNAL_H_


	)

29 #ifde‡
__˝lu•lus


33 
	~"evít2/thªad.h
"

34 
	~"evít2/evít-c⁄fig.h
"

35 
	~"utû-öã∫Æ.h
"

37 
evít_ba£
;

39 #i‚de‡
WIN32


44 
	#EVTHREAD_EXPOSE_STRUCTS


	)

47 #i‡! 
deföed
(
_EVENT_DISABLE_THREAD_SUPPORT
Ë&& deföed(
EVTHREAD_EXPOSE_STRUCTS
)

50 
evthªad_lock_ˇŒbacks
 
_evthªad_lock_‚s
;

51 
evthªad_c⁄dôi⁄_ˇŒbacks
 
_evthªad_c⁄d_‚s
;

52 (*
_evthªad_id_‚
)();

53 
_evthªad_lock_debuggög_íabÀd
;

56 
	#EVTHREAD_GET_ID
() \

57 (
_evthªad_id_‚
 ? 
	`_evthªad_id_‚
(Ë: 1)

	)

61 
	#EVBASE_IN_THREAD
(
ba£
) \

62 (
_evthªad_id_‚
 =
NULL
 || \

63 (
ba£
)->
th_ow√r_id
 =
	`_evthªad_id_‚
())

	)

68 
	#EVBASE_NEED_NOTIFY
(
ba£
) \

69 (
_evthªad_id_‚
 !
NULL
 && \

70 (
ba£
)->
ru¬ög_lo›
 && \

71 (
ba£
)->
th_ow√r_id
 !
	`_evthªad_id_‚
())

	)

75 
	#EVTHREAD_ALLOC_LOCK
(
lockv¨
, 
lockty≥
) \

76 ((
lockv¨
Ë
_evthªad_lock_‚s
.
Æloc
 ? \

77 
_evthªad_lock_‚s
.
	`Æloc
(
lockty≥
Ë: 
NULL
)

	)

80 
	#EVTHREAD_FREE_LOCK
(
lockv¨
, 
lockty≥
) \

82 *
_lock_tmp_
 = (
lockv¨
); \

83 i‡(
_lock_tmp_
 && 
_evthªad_lock_‚s
.
‰ì
) \

84 
_evthªad_lock_‚s
.
	`‰ì
(
_lock_tmp_
, (
lockty≥
)); \

85 } 0)

	)

88 
	#EVLOCK_LOCK
(
lockv¨
,
mode
) \

90 i‡(
lockv¨
) \

91 
_evthªad_lock_‚s
.
	`lock
(
mode
, 
lockv¨
); \

92 } 0)

	)

95 
	#EVLOCK_UNLOCK
(
lockv¨
,
mode
) \

97 i‡(
lockv¨
) \

98 
_evthªad_lock_‚s
.
	`u∆ock
(
mode
, 
lockv¨
); \

99 } 0)

	)

102 
	#_EVLOCK_SORTLOCKS
(
lockv¨1
, 
lockv¨2
) \

104 i‡(
lockv¨1
 && 
lockv¨2
 &&Üockvar1 >Üockvar2) { \

105 *
tmp
 = 
lockv¨1
; \

106 
lockv¨1
 = 
lockv¨2
; \

107 
lockv¨2
 = 
tmp
; \

109 } 0)

	)

113 
	#EVBASE_ACQUIRE_LOCK
(
ba£
, 
lockv¨
) do { \

114 
	`EVLOCK_LOCK
((
ba£
)->
lockv¨
, 0); \

115 } 0)

	)

118 
	#EVBASE_RELEASE_LOCK
(
ba£
, 
lockv¨
) do { \

119 
	`EVLOCK_UNLOCK
((
ba£
)->
lockv¨
, 0); \

120 } 0)

	)

124 
	#EVLOCK_ASSERT_LOCKED
(
lock
) \

126 i‡((
lock
Ë&& 
_evthªad_lock_debuggög_íabÀd
) { \

127 
	`EVUTIL_ASSERT
(
	`_evthªad_is_debug_lock_hñd
(
lock
)); \

129 } 0)

	)

133 
ölöe
 
EVLOCK_TRY_LOCK
(*
lock
);

134 
ölöe
 

135 
EVLOCK_TRY_LOCK
(*
lock
)

137 i‡(
	glock
 && 
	g_evthªad_lock_‚s
.lock) {

138 
	gr
 = 
_evthªad_lock_‚s
.
lock
(
EVTHREAD_TRY
,Üock);

139  !
	gr
;

148 
	#EVTHREAD_ALLOC_COND
(
c⁄dv¨
) \

150 (
c⁄dv¨
Ë
_evthªad_c⁄d_‚s
.
Æloc_c⁄dôi⁄
 ? \

151 
_evthªad_c⁄d_‚s
.
	`Æloc_c⁄dôi⁄
(0Ë: 
NULL
; \

152 } 0)

	)

154 
	#EVTHREAD_FREE_COND
(
c⁄d
) \

156 i‡(
c⁄d
) \

157 
_evthªad_c⁄d_‚s
.
	`‰ì_c⁄dôi⁄
((
c⁄d
)); \

158 } 0)

	)

160 
	#EVTHREAD_COND_SIGNAL
(
c⁄d
) \

161 –(
c⁄d
Ë? 
_evthªad_c⁄d_‚s
.
	`sig«l_c⁄dôi⁄
((c⁄d), 0Ë: 0 )

	)

163 
	#EVTHREAD_COND_BROADCAST
(
c⁄d
) \

164 –(
c⁄d
Ë? 
_evthªad_c⁄d_‚s
.
	`sig«l_c⁄dôi⁄
((c⁄d), 1Ë: 0 )

	)

169 
	#EVTHREAD_COND_WAIT
(
c⁄d
, 
lock
) \

170 –(
c⁄d
Ë? 
_evthªad_c⁄d_‚s
.
	`waô_c⁄dôi⁄
((c⁄d), (
lock
), 
NULL
Ë: 0 )

	)

173 
	#EVTHREAD_COND_WAIT_TIMED
(
c⁄d
, 
lock
, 
tv
) \

174 –(
c⁄d
Ë? 
_evthªad_c⁄d_‚s
.
	`waô_c⁄dôi⁄
((c⁄d), (
lock
), (
tv
)Ë: 0 )

	)

177 
	#EVTHREAD_LOCKING_ENABLED
() \

178 (
_evthªad_lock_‚s
.
lock
 !
NULL
)

	)

180 #ñi‡! 
deföed
(
_EVENT_DISABLE_THREAD_SUPPORT
)

182 
_evthªadim∂_gë_id
();

183 
_evthªadim∂_is_lock_debuggög_íabÀd
();

184 *
_evthªadim∂_lock_Æloc
(
lockty≥
);

185 
_evthªadim∂_lock_‰ì
(*
lock
, 
lockty≥
);

186 
_evthªadim∂_lock_lock
(
mode
, *
lock
);

187 
_evthªadim∂_lock_u∆ock
(
mode
, *
lock
);

188 *
_evthªadim∂_c⁄d_Æloc
(
c⁄dty≥
);

189 
_evthªadim∂_c⁄d_‰ì
(*
c⁄d
);

190 
_evthªadim∂_c⁄d_sig«l
(*
c⁄d
, 
brﬂdˇ°
);

191 
_evthªadim∂_c⁄d_waô
(*
c⁄d
, *
lock
, c⁄° 
timevÆ
 *
tv
);

192 
_evthªadim∂_lockög_íabÀd
();

194 
	#EVTHREAD_GET_ID
(Ë
	`_evthªadim∂_gë_id
()

	)

195 
	#EVBASE_IN_THREAD
(
ba£
) \

196 ((
ba£
)->
th_ow√r_id
 =
	`_evthªadim∂_gë_id
())

	)

197 
	#EVBASE_NEED_NOTIFY
(
ba£
) \

198 ((
ba£
)->
ru¬ög_lo›
 && \

199 ((
ba£
)->
th_ow√r_id
 !
	`_evthªadim∂_gë_id
()))

	)

201 
	#EVTHREAD_ALLOC_LOCK
(
lockv¨
, 
lockty≥
) \

202 ((
lockv¨
Ë
	`_evthªadim∂_lock_Æloc
(
lockty≥
))

	)

204 
	#EVTHREAD_FREE_LOCK
(
lockv¨
, 
lockty≥
) \

206 *
_lock_tmp_
 = (
lockv¨
); \

207 i‡(
_lock_tmp_
) \

208 
	`_evthªadim∂_lock_‰ì
(
_lock_tmp_
, (
lockty≥
)); \

209 } 0)

	)

212 
	#EVLOCK_LOCK
(
lockv¨
,
mode
) \

214 i‡(
lockv¨
) \

215 
	`_evthªadim∂_lock_lock
(
mode
, 
lockv¨
); \

216 } 0)

	)

219 
	#EVLOCK_UNLOCK
(
lockv¨
,
mode
) \

221 i‡(
lockv¨
) \

222 
	`_evthªadim∂_lock_u∆ock
(
mode
, 
lockv¨
); \

223 } 0)

	)

227 
	#EVBASE_ACQUIRE_LOCK
(
ba£
, 
lockv¨
) do { \

228 
	`EVLOCK_LOCK
((
ba£
)->
lockv¨
, 0); \

229 } 0)

	)

232 
	#EVBASE_RELEASE_LOCK
(
ba£
, 
lockv¨
) do { \

233 
	`EVLOCK_UNLOCK
((
ba£
)->
lockv¨
, 0); \

234 } 0)

	)

238 
	#EVLOCK_ASSERT_LOCKED
(
lock
) \

240 i‡((
lock
Ë&& 
	`_evthªadim∂_is_lock_debuggög_íabÀd
()) { \

241 
	`EVUTIL_ASSERT
(
	`_evthªad_is_debug_lock_hñd
(
lock
)); \

243 } 0)

	)

247 
ölöe
 
EVLOCK_TRY_LOCK
(*
lock
);

248 
ölöe
 

249 
EVLOCK_TRY_LOCK
(*
lock
)

251 i‡(
	glock
) {

252 
	gr
 = 
_evthªadim∂_lock_lock
(
EVTHREAD_TRY
, 
lock
);

253  !
	gr
;

262 
	#EVTHREAD_ALLOC_COND
(
c⁄dv¨
) \

264 (
c⁄dv¨
Ë
	`_evthªadim∂_c⁄d_Æloc
(0); \

265 } 0)

	)

267 
	#EVTHREAD_FREE_COND
(
c⁄d
) \

269 i‡(
c⁄d
) \

270 
	`_evthªadim∂_c⁄d_‰ì
((
c⁄d
)); \

271 } 0)

	)

273 
	#EVTHREAD_COND_SIGNAL
(
c⁄d
) \

274 –(
c⁄d
Ë? 
	`_evthªadim∂_c⁄d_sig«l
((c⁄d), 0Ë: 0 )

	)

276 
	#EVTHREAD_COND_BROADCAST
(
c⁄d
) \

277 –(
c⁄d
Ë? 
	`_evthªadim∂_c⁄d_sig«l
((c⁄d), 1Ë: 0 )

	)

282 
	#EVTHREAD_COND_WAIT
(
c⁄d
, 
lock
) \

283 –(
c⁄d
Ë? 
	`_evthªadim∂_c⁄d_waô
((c⁄d), (
lock
), 
NULL
Ë: 0 )

	)

286 
	#EVTHREAD_COND_WAIT_TIMED
(
c⁄d
, 
lock
, 
tv
) \

287 –(
c⁄d
Ë? 
	`_evthªadim∂_c⁄d_waô
((c⁄d), (
lock
), (
tv
)Ë: 0 )

	)

289 
	#EVTHREAD_LOCKING_ENABLED
() \

290 (
	`_evthªadim∂_lockög_íabÀd
())

	)

294 
	#EVTHREAD_GET_ID
(Ë1

	)

295 
	#EVTHREAD_ALLOC_LOCK
(
lockv¨
, 
lockty≥
Ë
_EVUTIL_NIL_STMT


	)

296 
	#EVTHREAD_FREE_LOCK
(
lockv¨
, 
lockty≥
Ë
_EVUTIL_NIL_STMT


	)

298 
	#EVLOCK_LOCK
(
lockv¨
, 
mode
Ë
_EVUTIL_NIL_STMT


	)

299 
	#EVLOCK_UNLOCK
(
lockv¨
, 
mode
Ë
_EVUTIL_NIL_STMT


	)

300 
	#EVLOCK_LOCK2
(
lock1
,
lock2
,
mode1
,
mode2
Ë
_EVUTIL_NIL_STMT


	)

301 
	#EVLOCK_UNLOCK2
(
lock1
,
lock2
,
mode1
,
mode2
Ë
_EVUTIL_NIL_STMT


	)

303 
	#EVBASE_IN_THREAD
(
ba£
Ë1

	)

304 
	#EVBASE_NEED_NOTIFY
(
ba£
Ë0

	)

305 
	#EVBASE_ACQUIRE_LOCK
(
ba£
, 
lock
Ë
_EVUTIL_NIL_STMT


	)

306 
	#EVBASE_RELEASE_LOCK
(
ba£
, 
lock
Ë
_EVUTIL_NIL_STMT


	)

307 
	#EVLOCK_ASSERT_LOCKED
(
lock
Ë
_EVUTIL_NIL_STMT


	)

309 
	#EVLOCK_TRY_LOCK
(
lock
Ë1

	)

311 
	#EVTHREAD_ALLOC_COND
(
c⁄dv¨
Ë
_EVUTIL_NIL_STMT


	)

312 
	#EVTHREAD_FREE_COND
(
c⁄d
Ë
_EVUTIL_NIL_STMT


	)

313 
	#EVTHREAD_COND_SIGNAL
(
c⁄d
Ë
_EVUTIL_NIL_STMT


	)

314 
	#EVTHREAD_COND_BROADCAST
(
c⁄d
Ë
_EVUTIL_NIL_STMT


	)

315 
	#EVTHREAD_COND_WAIT
(
c⁄d
, 
lock
Ë
_EVUTIL_NIL_STMT


	)

316 
	#EVTHREAD_COND_WAIT_TIMED
(
c⁄d
, 
lock
, 
howl⁄g
Ë
_EVUTIL_NIL_STMT


	)

318 
	#EVTHREAD_LOCKING_ENABLED
(Ë0

	)

323 #i‡! 
deföed
(
_EVENT_DISABLE_THREAD_SUPPORT
)

325 
	#_EVLOCK_SORTLOCKS
(
lockv¨1
, 
lockv¨2
) \

327 i‡(
lockv¨1
 && 
lockv¨2
 &&Üockvar1 >Üockvar2) { \

328 *
tmp
 = 
lockv¨1
; \

329 
lockv¨1
 = 
lockv¨2
; \

330 
lockv¨2
 = 
tmp
; \

332 } 0)

	)

336 
	#EVLOCK_LOCK2
(
lock1
,
lock2
,
mode1
,
mode2
) \

338 *
_lock1_tm∂ock
 = (
lock1
); \

339 *
_lock2_tm∂ock
 = (
lock2
); \

340 
	`_EVLOCK_SORTLOCKS
(
_lock1_tm∂ock
,
_lock2_tm∂ock
); \

341 
	`EVLOCK_LOCK
(
_lock1_tm∂ock
,
mode1
); \

342 i‡(
_lock2_tm∂ock
 !
_lock1_tm∂ock
) \

343 
	`EVLOCK_LOCK
(
_lock2_tm∂ock
,
mode2
); \

344 } 0)

	)

346 
	#EVLOCK_UNLOCK2
(
lock1
,
lock2
,
mode1
,
mode2
) \

348 *
_lock1_tm∂ock
 = (
lock1
); \

349 *
_lock2_tm∂ock
 = (
lock2
); \

350 
	`_EVLOCK_SORTLOCKS
(
_lock1_tm∂ock
,
_lock2_tm∂ock
); \

351 i‡(
_lock2_tm∂ock
 !
_lock1_tm∂ock
) \

352 
	`EVLOCK_UNLOCK
(
_lock2_tm∂ock
,
mode2
); \

353 
	`EVLOCK_UNLOCK
(
_lock1_tm∂ock
,
mode1
); \

354 } 0)

	)

356 
_evthªad_is_debug_lock_hñd
(*
lock
);

357 *
_evthªad_debug_gë_ªÆ_lock
(*
lock
);

359 *
evthªad_£tup_globÆ_lock_
(*
lock_
, 
lockty≥
,

360 
íabÀ_locks
);

362 
	#EVTHREAD_SETUP_GLOBAL_LOCK
(
lockv¨
, 
lockty≥
) \

364 
lockv¨
 = 
	`evthªad_£tup_globÆ_lock_
(lockvar, \

365 (
lockty≥
), 
íabÀ_locks
); \

366 i‡(!
lockv¨
) { \

367 
	`evít_w¨n
("Couldn'tállocate %s", #lockvar); \

370 } 0);

	)

372 
evít_globÆ_£tup_locks_
(c⁄° 
íabÀ_locks
);

373 
evsig_globÆ_£tup_locks_
(c⁄° 
íabÀ_locks
);

374 
evutû_£cuª_∫g_globÆ_£tup_locks_
(c⁄° 
íabÀ_locks
);

378 #ifde‡
__˝lu•lus


	@evthread.c

27 
	~"evít2/evít-c⁄fig.h
"

29 #i‚de‡
_EVENT_DISABLE_THREAD_SUPPORT


31 
	~"evít2/thªad.h
"

33 
	~<°dlib.h
>

34 
	~<°rög.h
>

36 
	~"log-öã∫Æ.h
"

37 
	~"mm-öã∫Æ.h
"

38 
	~"utû-öã∫Æ.h
"

39 
	~"evthªad-öã∫Æ.h
"

41 #ifde‡
EVTHREAD_EXPOSE_STRUCTS


42 
	#GLOBAL


	)

44 
	#GLOBAL
 

	)

48 
GLOBAL
 
	g_evthªad_lock_debuggög_íabÀd
 = 0;

49 
GLOBAL
 
evthªad_lock_ˇŒbacks
 
	g_evthªad_lock_‚s
 = {

50 0, 0, 
NULL
, NULL, NULL, NULL

52 
GLOBAL
 (*
_evthªad_id_‚
)(Ë
NULL
;

53 
GLOBAL
 
evthªad_c⁄dôi⁄_ˇŒbacks
 
_evthªad_c⁄d_‚s
 = {

54 0, 
NULL
, NULL, NULL, NULL

55 
	}
};

58 
evthªad_lock_ˇŒbacks
 
	g_‹igöÆ_lock_‚s
 = {

59 0, 0, 
NULL
, NULL, NULL, NULL

61 
evthªad_c⁄dôi⁄_ˇŒbacks
 
	g_‹igöÆ_c⁄d_‚s
 = {

62 0, 
NULL
, NULL, NULL, NULL

66 
evthªad_£t_id_ˇŒback
((*
id_‚
)())

68 
_evthªad_id_‚
 = 
id_‚
;

69 
	}
}

72 
	$evthªad_£t_lock_ˇŒbacks
(c⁄° 
evthªad_lock_ˇŒbacks
 *
cbs
)

74 
evthªad_lock_ˇŒbacks
 *
èrgë
 =

75 
_evthªad_lock_debuggög_íabÀd


76 ? &
_‹igöÆ_lock_‚s
 : &
_evthªad_lock_‚s
;

78 i‡(!
cbs
) {

79 i‡(
èrgë
->
Æloc
)

80 
	`evít_w¨nx
("TryingÅo disableÜock functionsáfter "

82 
	`mem£t
(
èrgë
, 0, (
_evthªad_lock_‚s
));

85 i‡(
èrgë
->
Æloc
) {

87 i‡(
èrgë
->
lock_≠i_vîsi⁄
 =
cbs
->lock_api_version &&

88 
èrgë
->
suµ‹ãd_lockty≥s
 =
cbs
->supported_locktypes &&

89 
èrgë
->
Æloc
 =
cbs
->alloc &&

90 
èrgë
->
‰ì
 =
cbs
->free &&

91 
èrgë
->
lock
 =
cbs
->lock &&

92 
èrgë
->
u∆ock
 =
cbs
->unlock) {

96 
	`evít_w¨nx
("Can't changeÜock callbacks onceÅhey have been "

100 i‡(
cbs
->
Æloc
 && cbs->
‰ì
 && cbs->
lock
 && cbs->
u∆ock
) {

101 
	`mem˝y
(
èrgë
, 
cbs
, (
_evthªad_lock_‚s
));

102  
	`evít_globÆ_£tup_locks_
(1);

106 
	}
}

109 
	$evthªad_£t_c⁄dôi⁄_ˇŒbacks
(c⁄° 
evthªad_c⁄dôi⁄_ˇŒbacks
 *
cbs
)

111 
evthªad_c⁄dôi⁄_ˇŒbacks
 *
èrgë
 =

112 
_evthªad_lock_debuggög_íabÀd


113 ? &
_‹igöÆ_c⁄d_‚s
 : &
_evthªad_c⁄d_‚s
;

115 i‡(!
cbs
) {

116 i‡(
èrgë
->
Æloc_c⁄dôi⁄
)

117 
	`evít_w¨nx
("TryingÅo disable condition functions "

120 
	`mem£t
(
èrgë
, 0, (
_evthªad_c⁄d_‚s
));

123 i‡(
èrgë
->
Æloc_c⁄dôi⁄
) {

125 i‡(
èrgë
->
c⁄dôi⁄_≠i_vîsi⁄
 =
cbs
->condition_api_version &&

126 
èrgë
->
Æloc_c⁄dôi⁄
 =
cbs
->alloc_condition &&

127 
èrgë
->
‰ì_c⁄dôi⁄
 =
cbs
->free_condition &&

128 
èrgë
->
sig«l_c⁄dôi⁄
 =
cbs
->signal_condition &&

129 
èrgë
->
waô_c⁄dôi⁄
 =
cbs
->wait_condition) {

133 
	`evít_w¨nx
("Can't change condition callbacks onceÅhey "

137 i‡(
cbs
->
Æloc_c⁄dôi⁄
 && cbs->
‰ì_c⁄dôi⁄
 &&

138 
cbs
->
sig«l_c⁄dôi⁄
 && cbs->
waô_c⁄dôi⁄
) {

139 
	`mem˝y
(
èrgë
, 
cbs
, (
_evthªad_c⁄d_‚s
));

141 i‡(
_evthªad_lock_debuggög_íabÀd
) {

142 
_evthªad_c⁄d_‚s
.
Æloc_c⁄dôi⁄
 = 
cbs
->alloc_condition;

143 
_evthªad_c⁄d_‚s
.
‰ì_c⁄dôi⁄
 = 
cbs
->free_condition;

144 
_evthªad_c⁄d_‚s
.
sig«l_c⁄dôi⁄
 = 
cbs
->signal_condition;

147 
	}
}

149 
	sdebug_lock
 {

150 
	mlockty≥
;

151 
	mhñd_by
;

154 
	mcou¡
;

155 *
	mlock
;

159 
	$debug_lock_Æloc
(
lockty≥
)

161 
debug_lock
 *
ªsu…
 = 
	`mm_mÆloc
((debug_lock));

162 i‡(!
ªsu…
)

163  
NULL
;

164 i‡(
_‹igöÆ_lock_‚s
.
Æloc
) {

165 i‡(!(
ªsu…
->
lock
 = 
_‹igöÆ_lock_‚s
.
	`Æloc
(

166 
lockty≥
|
EVTHREAD_LOCKTYPE_RECURSIVE
))) {

167 
	`mm_‰ì
(
ªsu…
);

168  
NULL
;

171 
ªsu…
->
lock
 = 
NULL
;

173 
ªsu…
->
lockty≥
 =Üocktype;

174 
ªsu…
->
cou¡
 = 0;

175 
ªsu…
->
hñd_by
 = 0;

176  
ªsu…
;

177 
	}
}

180 
	$debug_lock_‰ì
(*
lock_
, 
lockty≥
)

182 
debug_lock
 *
lock
 = 
lock_
;

183 
	`EVUTIL_ASSERT
(
lock
->
cou¡
 == 0);

184 
	`EVUTIL_ASSERT
(
lockty≥
 =
lock
->locktype);

185 i‡(
_‹igöÆ_lock_‚s
.
‰ì
) {

186 
_‹igöÆ_lock_‚s
.
	`‰ì
(
lock
->lock,

187 
lock
->
lockty≥
|
EVTHREAD_LOCKTYPE_RECURSIVE
);

189 
lock
->lock = 
NULL
;

190 
lock
->
cou¡
 = -100;

191 
	`mm_‰ì
(
lock
);

192 
	}
}

195 
	$evthªad_debug_lock_m¨k_locked
(
mode
, 
debug_lock
 *
lock
)

197 ++
lock
->
cou¡
;

198 i‡(!(
lock
->
lockty≥
 & 
EVTHREAD_LOCKTYPE_RECURSIVE
))

199 
	`EVUTIL_ASSERT
(
lock
->
cou¡
 == 1);

200 i‡(
_evthªad_id_‚
) {

201 
me
;

202 
me
 = 
	`_evthªad_id_‚
();

203 i‡(
lock
->
cou¡
 > 1)

204 
	`EVUTIL_ASSERT
(
lock
->
hñd_by
 =
me
);

205 
lock
->
hñd_by
 = 
me
;

207 
	}
}

210 
	$debug_lock_lock
(
mode
, *
lock_
)

212 
debug_lock
 *
lock
 = 
lock_
;

213 
ªs
 = 0;

214 i‡(
lock
->
lockty≥
 & 
EVTHREAD_LOCKTYPE_READWRITE
)

215 
	`EVUTIL_ASSERT
(
mode
 & (
EVTHREAD_READ
|
EVTHREAD_WRITE
));

217 
	`EVUTIL_ASSERT
((
mode
 & (
EVTHREAD_READ
|
EVTHREAD_WRITE
)) == 0);

218 i‡(
_‹igöÆ_lock_‚s
.
lock
)

219 
ªs
 = 
_‹igöÆ_lock_‚s
.
	`lock
(
mode
, 
lock
->lock);

220 i‡(!
ªs
) {

221 
	`evthªad_debug_lock_m¨k_locked
(
mode
, 
lock
);

223  
ªs
;

224 
	}
}

227 
	$evthªad_debug_lock_m¨k_u∆ocked
(
mode
, 
debug_lock
 *
lock
)

229 i‡(
lock
->
lockty≥
 & 
EVTHREAD_LOCKTYPE_READWRITE
)

230 
	`EVUTIL_ASSERT
(
mode
 & (
EVTHREAD_READ
|
EVTHREAD_WRITE
));

232 
	`EVUTIL_ASSERT
((
mode
 & (
EVTHREAD_READ
|
EVTHREAD_WRITE
)) == 0);

233 i‡(
_evthªad_id_‚
) {

234 
	`EVUTIL_ASSERT
(
lock
->
hñd_by
 =
	`_evthªad_id_‚
());

235 i‡(
lock
->
cou¡
 == 1)

236 
lock
->
hñd_by
 = 0;

238 --
lock
->
cou¡
;

239 
	`EVUTIL_ASSERT
(
lock
->
cou¡
 >= 0);

240 
	}
}

243 
	$debug_lock_u∆ock
(
mode
, *
lock_
)

245 
debug_lock
 *
lock
 = 
lock_
;

246 
ªs
 = 0;

247 
	`evthªad_debug_lock_m¨k_u∆ocked
(
mode
, 
lock
);

248 i‡(
_‹igöÆ_lock_‚s
.
u∆ock
)

249 
ªs
 = 
_‹igöÆ_lock_‚s
.
	`u∆ock
(
mode
, 
lock
->lock);

250  
ªs
;

251 
	}
}

254 
	$debug_c⁄d_waô
(*
_c⁄d
, *
_lock
, c⁄° 
timevÆ
 *
tv
)

256 
r
;

257 
debug_lock
 *
lock
 = 
_lock
;

258 
	`EVUTIL_ASSERT
(
lock
);

259 
	`EVLOCK_ASSERT_LOCKED
(
_lock
);

260 
	`evthªad_debug_lock_m¨k_u∆ocked
(0, 
lock
);

261 
r
 = 
_‹igöÆ_c⁄d_‚s
.
	`waô_c⁄dôi⁄
(
_c⁄d
, 
lock
->lock, 
tv
);

262 
	`evthªad_debug_lock_m¨k_locked
(0, 
lock
);

263  
r
;

264 
	}
}

267 
	$evthªad_íabÀ_lock_debugög
()

269 
evthªad_lock_ˇŒbacks
 
cbs
 = {

270 
EVTHREAD_LOCK_API_VERSION
,

271 
EVTHREAD_LOCKTYPE_RECURSIVE
,

272 
debug_lock_Æloc
,

273 
debug_lock_‰ì
,

274 
debug_lock_lock
,

275 
debug_lock_u∆ock


277 i‡(
_evthªad_lock_debuggög_íabÀd
)

279 
	`mem˝y
(&
_‹igöÆ_lock_‚s
, &
_evthªad_lock_‚s
,

280 (
evthªad_lock_ˇŒbacks
));

281 
	`mem˝y
(&
_evthªad_lock_‚s
, &
cbs
,

282 (
evthªad_lock_ˇŒbacks
));

284 
	`mem˝y
(&
_‹igöÆ_c⁄d_‚s
, &
_evthªad_c⁄d_‚s
,

285 (
evthªad_c⁄dôi⁄_ˇŒbacks
));

286 
_evthªad_c⁄d_‚s
.
waô_c⁄dôi⁄
 = 
debug_c⁄d_waô
;

287 
_evthªad_lock_debuggög_íabÀd
 = 1;

290 
	`evít_globÆ_£tup_locks_
(0);

291 
	}
}

294 
	$_evthªad_is_debug_lock_hñd
(*
lock_
)

296 
debug_lock
 *
lock
 = 
lock_
;

297 i‡(! 
lock
->
cou¡
)

299 i‡(
_evthªad_id_‚
) {

300 
me
 = 
	`_evthªad_id_‚
();

301 i‡(
lock
->
hñd_by
 !
me
)

305 
	}
}

308 
	$_evthªad_debug_gë_ªÆ_lock
(*
lock_
)

310 
debug_lock
 *
lock
 = 
lock_
;

311  
lock
->lock;

312 
	}
}

315 
	$evthªad_£tup_globÆ_lock_
(*
lock_
, 
lockty≥
, 
íabÀ_locks
)

323 i‡(!
íabÀ_locks
 && 
_‹igöÆ_lock_‚s
.
Æloc
 =
NULL
) {

325 
	`EVUTIL_ASSERT
(
lock_
 =
NULL
);

326  
	`debug_lock_Æloc
(
lockty≥
);

327 } i‡(!
íabÀ_locks
 && 
_‹igöÆ_lock_‚s
.
Æloc
 !
NULL
) {

329 
debug_lock
 *
lock
;

330 
	`EVUTIL_ASSERT
(
lock_
 !
NULL
);

332 i‡(!(
lockty≥
 & 
EVTHREAD_LOCKTYPE_RECURSIVE
)) {

334 
_‹igöÆ_lock_‚s
.
	`‰ì
(
lock_
, 
lockty≥
);

335  
	`debug_lock_Æloc
(
lockty≥
);

337 
lock
 = 
	`mm_mÆloc
((
debug_lock
));

338 i‡(!
lock
) {

339 
_‹igöÆ_lock_‚s
.
	`‰ì
(
lock_
, 
lockty≥
);

340  
NULL
;

342 
lock
->lock = 
lock_
;

343 
lock
->
lockty≥
 =Üocktype;

344 
lock
->
cou¡
 = 0;

345 
lock
->
hñd_by
 = 0;

346  
lock
;

347 } i‡(
íabÀ_locks
 && ! 
_evthªad_lock_debuggög_íabÀd
) {

349 
	`EVUTIL_ASSERT
(
lock_
 =
NULL
);

350  
_evthªad_lock_‚s
.
	`Æloc
(
lockty≥
);

353 
debug_lock
 *
lock
 = 
lock_
;

354 
	`EVUTIL_ASSERT
(
íabÀ_locks
 &&

355 
_evthªad_lock_debuggög_íabÀd
);

356 
	`EVUTIL_ASSERT
(
lock
->
lockty≥
 ==Üocktype);

357 
	`EVUTIL_ASSERT
(
lock
->lock =
NULL
);

358 
lock
->lock = 
_‹igöÆ_lock_‚s
.
	`Æloc
(

359 
lockty≥
|
EVTHREAD_LOCKTYPE_RECURSIVE
);

360 i‡(!
lock
->lock) {

361 
lock
->
cou¡
 = -200;

362 
	`mm_‰ì
(
lock
);

363  
NULL
;

365  
lock
;

367 
	}
}

370 #i‚de‡
EVTHREAD_EXPOSE_STRUCTS


372 
	$_evthªadim∂_gë_id
()

374  
_evthªad_id_‚
 ? 
	`_evthªad_id_‚
() : 1;

375 
	}
}

377 
	$_evthªadim∂_lock_Æloc
(
lockty≥
)

379  
_evthªad_lock_‚s
.
Æloc
 ?

380 
_evthªad_lock_‚s
.
	`Æloc
(
lockty≥
Ë: 
NULL
;

381 
	}
}

383 
	$_evthªadim∂_lock_‰ì
(*
lock
, 
lockty≥
)

385 i‡(
_evthªad_lock_‚s
.
‰ì
)

386 
_evthªad_lock_‚s
.
	`‰ì
(
lock
, 
lockty≥
);

387 
	}
}

389 
	$_evthªadim∂_lock_lock
(
mode
, *
lock
)

391 i‡(
_evthªad_lock_‚s
.
lock
)

392  
_evthªad_lock_‚s
.
	`lock
(
mode
, 
lock
);

395 
	}
}

397 
	$_evthªadim∂_lock_u∆ock
(
mode
, *
lock
)

399 i‡(
_evthªad_lock_‚s
.
u∆ock
)

400  
_evthªad_lock_‚s
.
	`u∆ock
(
mode
, 
lock
);

403 
	}
}

405 
	$_evthªadim∂_c⁄d_Æloc
(
c⁄dty≥
)

407  
_evthªad_c⁄d_‚s
.
Æloc_c⁄dôi⁄
 ?

408 
_evthªad_c⁄d_‚s
.
	`Æloc_c⁄dôi⁄
(
c⁄dty≥
Ë: 
NULL
;

409 
	}
}

411 
	$_evthªadim∂_c⁄d_‰ì
(*
c⁄d
)

413 i‡(
_evthªad_c⁄d_‚s
.
‰ì_c⁄dôi⁄
)

414 
_evthªad_c⁄d_‚s
.
	`‰ì_c⁄dôi⁄
(
c⁄d
);

415 
	}
}

417 
	$_evthªadim∂_c⁄d_sig«l
(*
c⁄d
, 
brﬂdˇ°
)

419 i‡(
_evthªad_c⁄d_‚s
.
sig«l_c⁄dôi⁄
)

420  
_evthªad_c⁄d_‚s
.
	`sig«l_c⁄dôi⁄
(
c⁄d
, 
brﬂdˇ°
);

423 
	}
}

425 
	$_evthªadim∂_c⁄d_waô
(*
c⁄d
, *
lock
, c⁄° 
timevÆ
 *
tv
)

427 i‡(
_evthªad_c⁄d_‚s
.
waô_c⁄dôi⁄
)

428  
_evthªad_c⁄d_‚s
.
	`waô_c⁄dôi⁄
(
c⁄d
, 
lock
, 
tv
);

431 
	}
}

433 
	$_evthªadim∂_is_lock_debuggög_íabÀd
()

435  
_evthªad_lock_debuggög_íabÀd
;

436 
	}
}

439 
	$_evthªadim∂_lockög_íabÀd
()

441  
_evthªad_lock_‚s
.
lock
 !
NULL
;

442 
	}
}

	@evthread_pthread.c

26 
	~"evít2/evít-c⁄fig.h
"

29 
	#_GNU_SOURCE


	)

30 
	~<±hªad.h
>

32 
	gevít_ba£
;

33 
	~"evít2/thªad.h
"

35 
	~<°dlib.h
>

36 
	~<°rög.h
>

37 
	~"mm-öã∫Æ.h
"

38 
	~"evthªad-öã∫Æ.h
"

40 
±hªad_muãx©å_t
 
	g©å_ªcursive
;

43 
	$evthªad_posix_lock_Æloc
(
lockty≥
)

45 
±hªad_muãx©å_t
 *
©å
 = 
NULL
;

46 
±hªad_muãx_t
 *
lock
 = 
	`mm_mÆloc
((pthread_mutex_t));

47 i‡(!
lock
)

48  
NULL
;

49 i‡(
lockty≥
 & 
EVTHREAD_LOCKTYPE_RECURSIVE
)

50 
©å
 = &
©å_ªcursive
;

51 i‡(
	`±hªad_muãx_öô
(
lock
, 
©å
)) {

52 
	`mm_‰ì
(
lock
);

53  
NULL
;

55  
lock
;

56 
	}
}

59 
	$evthªad_posix_lock_‰ì
(*
_lock
, 
lockty≥
)

61 
±hªad_muãx_t
 *
lock
 = 
_lock
;

62 
	`±hªad_muãx_de°roy
(
lock
);

63 
	`mm_‰ì
(
lock
);

64 
	}
}

67 
	$evthªad_posix_lock
(
mode
, *
_lock
)

69 
±hªad_muãx_t
 *
lock
 = 
_lock
;

70 i‡(
mode
 & 
EVTHREAD_TRY
)

71  
	`±hªad_muãx_åylock
(
lock
);

73  
	`±hªad_muãx_lock
(
lock
);

74 
	}
}

77 
	$evthªad_posix_u∆ock
(
mode
, *
_lock
)

79 
±hªad_muãx_t
 *
lock
 = 
_lock
;

80  
	`±hªad_muãx_u∆ock
(
lock
);

81 
	}
}

84 
	$evthªad_posix_gë_id
()

87 
±hªad_t
 
thr
;

88 #i‡
_EVENT_SIZEOF_PTHREAD_T
 > 
_EVENT_SIZEOF_LONG


89 
ev_uöt64_t
 
id
;

91 
id
;

93 } 
r
;

94 #i‡
_EVENT_SIZEOF_PTHREAD_T
 < 
_EVENT_SIZEOF_LONG


95 
	`mem£t
(&
r
, 0, (r));

97 
r
.
thr
 = 
	`±hªad_£lf
();

98  ()
r
.
id
;

99 
	}
}

102 
	$evthªad_posix_c⁄d_Æloc
(
c⁄dÊags
)

104 
±hªad_c⁄d_t
 *
c⁄d
 = 
	`mm_mÆloc
((pthread_cond_t));

105 i‡(!
c⁄d
)

106  
NULL
;

107 i‡(
	`±hªad_c⁄d_öô
(
c⁄d
, 
NULL
)) {

108 
	`mm_‰ì
(
c⁄d
);

109  
NULL
;

111  
c⁄d
;

112 
	}
}

115 
	$evthªad_posix_c⁄d_‰ì
(*
_c⁄d
)

117 
±hªad_c⁄d_t
 *
c⁄d
 = 
_c⁄d
;

118 
	`±hªad_c⁄d_de°roy
(
c⁄d
);

119 
	`mm_‰ì
(
c⁄d
);

120 
	}
}

123 
	$evthªad_posix_c⁄d_sig«l
(*
_c⁄d
, 
brﬂdˇ°
)

125 
±hªad_c⁄d_t
 *
c⁄d
 = 
_c⁄d
;

126 
r
;

127 i‡(
brﬂdˇ°
)

128 
r
 = 
	`±hªad_c⁄d_brﬂdˇ°
(
c⁄d
);

130 
r
 = 
	`±hªad_c⁄d_sig«l
(
c⁄d
);

131  
r
 ? -1 : 0;

132 
	}
}

135 
	$evthªad_posix_c⁄d_waô
(*
_c⁄d
, *
_lock
, c⁄° 
timevÆ
 *
tv
)

137 
r
;

138 
±hªad_c⁄d_t
 *
c⁄d
 = 
_c⁄d
;

139 
±hªad_muãx_t
 *
lock
 = 
_lock
;

141 i‡(
tv
) {

142 
timevÆ
 
now
, 
ab°ime
;

143 
time•ec
 
ts
;

144 
	`evutû_gëtimeofday
(&
now
, 
NULL
);

145 
	`evutû_timîadd
(&
now
, 
tv
, &
ab°ime
);

146 
ts
.
tv_£c
 = 
ab°ime
.tv_sec;

147 
ts
.
tv_n£c
 = 
ab°ime
.
tv_u£c
*1000;

148 
r
 = 
	`±hªad_c⁄d_timedwaô
(
c⁄d
, 
lock
, &
ts
);

149 i‡(
r
 =
ETIMEDOUT
)

151 i‡(
r
)

156 
r
 = 
	`±hªad_c⁄d_waô
(
c⁄d
, 
lock
);

157  
r
 ? -1 : 0;

159 
	}
}

162 
	$evthªad_u£_±hªads
()

164 
evthªad_lock_ˇŒbacks
 
cbs
 = {

165 
EVTHREAD_LOCK_API_VERSION
,

166 
EVTHREAD_LOCKTYPE_RECURSIVE
,

167 
evthªad_posix_lock_Æloc
,

168 
evthªad_posix_lock_‰ì
,

169 
evthªad_posix_lock
,

170 
evthªad_posix_u∆ock


172 
evthªad_c⁄dôi⁄_ˇŒbacks
 
c⁄d_cbs
 = {

173 
EVTHREAD_CONDITION_API_VERSION
,

174 
evthªad_posix_c⁄d_Æloc
,

175 
evthªad_posix_c⁄d_‰ì
,

176 
evthªad_posix_c⁄d_sig«l
,

177 
evthªad_posix_c⁄d_waô


180 i‡(
	`±hªad_muãx©å_öô
(&
©å_ªcursive
))

182 i‡(
	`±hªad_muãx©å_£ây≥
(&
©å_ªcursive
, 
PTHREAD_MUTEX_RECURSIVE
))

185 
	`evthªad_£t_lock_ˇŒbacks
(&
cbs
);

186 
	`evthªad_£t_c⁄dôi⁄_ˇŒbacks
(&
c⁄d_cbs
);

187 
	`evthªad_£t_id_ˇŒback
(
evthªad_posix_gë_id
);

189 
	}
}

	@evthread_win32.c

26 
	~"evít2/evít-c⁄fig.h
"

28 #ifde‡
WIN32


29 #i‚de‡
_WIN32_WINNT


31 
	#_WIN32_WINNT
 0x0403

	)

33 
	~<wösock2.h
>

34 
	#WIN32_LEAN_AND_MEAN


	)

35 
	~<wödows.h
>

36 #unde‡
WIN32_LEAN_AND_MEAN


37 
	~<sys/lockög.h
>

40 
	gevít_ba£
;

41 
	~"evít2/thªad.h
"

43 
	~"mm-öã∫Æ.h
"

44 
	~"evthªad-öã∫Æ.h
"

46 
	#SPIN_COUNT
 2000

	)

49 
	$evthªad_wö32_lock_¸óã
(
lockty≥
)

51 
CRITICAL_SECTION
 *
lock
 = 
	`mm_mÆloc
((CRITICAL_SECTION));

52 i‡(!
lock
)

53  
NULL
;

54 i‡(
	`InôülizeCrôiˇlSe˘i⁄AndSpöCou¡
(
lock
, 
SPIN_COUNT
) == 0) {

55 
	`mm_‰ì
(
lock
);

56  
NULL
;

58  
lock
;

59 
	}
}

62 
	$evthªad_wö32_lock_‰ì
(*
_lock
, 
lockty≥
)

64 
CRITICAL_SECTION
 *
lock
 = 
_lock
;

65 
	`DñëeCrôiˇlSe˘i⁄
(
lock
);

66 
	`mm_‰ì
(
lock
);

67 
	}
}

70 
	$evthªad_wö32_lock
(
mode
, *
_lock
)

72 
CRITICAL_SECTION
 *
lock
 = 
_lock
;

73 i‡((
mode
 & 
EVTHREAD_TRY
)) {

74  ! 
	`TryE¡îCrôiˇlSe˘i⁄
(
lock
);

76 
	`E¡îCrôiˇlSe˘i⁄
(
lock
);

79 
	}
}

82 
	$evthªad_wö32_u∆ock
(
mode
, *
_lock
)

84 
CRITICAL_SECTION
 *
lock
 = 
_lock
;

85 
	`LóveCrôiˇlSe˘i⁄
(
lock
);

87 
	}
}

90 
	$evthªad_wö32_gë_id
()

92  (Ë
	`GëCuºítThªadId
();

93 
	}
}

95 #ifde‡
WIN32_HAVE_CONDITION_VARIABLES


96 
	$WINAPI
 (*
InôülizeC⁄dôi⁄V¨übÀ_‚
)(
PCONDITION_VARIABLE
)

97 
NULL
;

98 
BOOL
 
	$WINAPI
 (*
SÀïC⁄dôi⁄V¨übÀCS_‚
)(

99 
PCONDITION_VARIABLE
, 
PCRITICAL_SECTION
, 
DWORD
Ë
NULL
;

100 
	$WINAPI
 (*
WakeAŒC⁄dôi⁄V¨übÀ_‚
)(
PCONDITION_VARIABLE
Ë
NULL
;

101 
	$WINAPI
 (*
WakeC⁄dôi⁄V¨übÀ_‚
)(
PCONDITION_VARIABLE
Ë
NULL
;

104 
	$evthªad_wö32_c⁄dv¨_öô
()

106 
HANDLE
 
lib
;

108 
lib
 = 
	`GëModuÀH™dÀ
(
	`TEXT
("kernel32.dll"));

109 i‡(
lib
 =
NULL
)

112 
	#LOAD
(
«me
) \

113 
«me
##
_‚
 = 
	`GëProcAddªss
(
lib
, #«me)

	)

114 
	`LOAD
(
InôülizeC⁄dôi⁄V¨übÀ
);

115 
	`LOAD
(
SÀïC⁄dôi⁄V¨übÀ
);

116 
	`LOAD
(
WakeAŒC⁄dôi⁄V¨übÀ
);

117 
	`LOAD
(
WakeC⁄dôi⁄V¨übÀ
);

119  
InôülizeC⁄dôi⁄V¨übÀ_‚
 && 
SÀïC⁄dôi⁄V¨übÀCS_‚
 &&

120 
WakeAŒC⁄dôi⁄V¨übÀ_‚
 && 
WakeC⁄dôi⁄V¨übÀ_‚
;

121 
	}
}

126 
	$evthªad_wö32_c⁄dv¨_Æloc
(
c⁄dÊags
)

128 
CONDITION_VARIABLE
 *
c⁄d
 = 
	`mm_mÆloc
((CONDITION_VARIABLE));

129 i‡(!
c⁄d
)

130  
NULL
;

131 
	`InôülizeC⁄dôi⁄V¨übÀ_‚
(
c⁄d
);

132  
c⁄d
;

133 
	}
}

136 
	$evthªad_wö32_c⁄dv¨_‰ì
(*
_c⁄d
)

138 
CONDITION_VARIABLE
 *
c⁄d
 = 
_c⁄d
;

140 
	`mm_‰ì
(
c⁄d
);

141 
	}
}

144 
	$evthªad_wö32_c⁄dv¨_sig«l
(*
_c⁄d
, 
brﬂdˇ°
)

146 
CONDITION_VARIABLE
 *
c⁄d
 = 
_c⁄d
;

147 i‡(
brﬂdˇ°
)

148 
	`WakeAŒC⁄dôi⁄V¨übÀ_‚
(
c⁄d
);

150 
	`WakeC⁄dôi⁄V¨übÀ_‚
(
c⁄d
);

152 
	}
}

155 
	$evthªad_wö32_c⁄dv¨_waô
(*
_c⁄d
, *
_lock
, c⁄° 
timevÆ
 *
tv
)

157 
CONDITION_VARIABLE
 *
c⁄d
 = 
_c⁄d
;

158 
CRITICAL_SECTION
 *
lock
 = 
_lock
;

159 
DWORD
 
ms
, 
îr
;

160 
BOOL
 
ªsu…
;

162 i‡(
tv
)

163 
ms
 = 
	`evutû_tv_to_m£c
(
tv
);

165 
ms
 = 
INFINITE
;

166 
ªsu…
 = 
	`SÀïC⁄dôi⁄V¨übÀCS_‚
(
c⁄d
, 
lock
, 
ms
);

167 i‡(
ªsu…
) {

168 i‡(
	`GëLa°Eº‹
(Ë=
WAIT_TIMEOUT
)

175 
	}
}

178 
	sevthªad_wö32_c⁄d
 {

179 
HANDLE
 
	mevít
;

181 
CRITICAL_SECTION
 
	mlock
;

182 
	mn_waôög
;

183 
	mn_to_wake
;

184 
	mgíî©i⁄
;

188 
	$evthªad_wö32_c⁄d_Æloc
(
Êags
)

190 
evthªad_wö32_c⁄d
 *
c⁄d
;

191 i‡(!(
c⁄d
 = 
	`mm_mÆloc
((
evthªad_wö32_c⁄d
))))

192  
NULL
;

193 i‡(
	`InôülizeCrôiˇlSe˘i⁄AndSpöCou¡
(&
c⁄d
->
lock
, 
SPIN_COUNT
)==0) {

194 
	`mm_‰ì
(
c⁄d
);

195  
NULL
;

197 i‡((
c⁄d
->
evít
 = 
	`Cª©eEvít
(
NULL
,
TRUE
,
FALSE
,NULL)) == NULL) {

198 
	`DñëeCrôiˇlSe˘i⁄
(&
c⁄d
->
lock
);

199 
	`mm_‰ì
(
c⁄d
);

200  
NULL
;

202 
c⁄d
->
n_waôög
 = c⁄d->
n_to_wake
 = c⁄d->
gíî©i⁄
 = 0;

203  
c⁄d
;

204 
	}
}

207 
	$evthªad_wö32_c⁄d_‰ì
(*
_c⁄d
)

209 
evthªad_wö32_c⁄d
 *
c⁄d
 = 
_c⁄d
;

210 
	`DñëeCrôiˇlSe˘i⁄
(&
c⁄d
->
lock
);

211 
	`Clo£H™dÀ
(
c⁄d
->
evít
);

212 
	`mm_‰ì
(
c⁄d
);

213 
	}
}

216 
	$evthªad_wö32_c⁄d_sig«l
(*
_c⁄d
, 
brﬂdˇ°
)

218 
evthªad_wö32_c⁄d
 *
c⁄d
 = 
_c⁄d
;

219 
	`E¡îCrôiˇlSe˘i⁄
(&
c⁄d
->
lock
);

220 i‡(
brﬂdˇ°
)

221 
c⁄d
->
n_to_wake
 = c⁄d->
n_waôög
;

223 ++
c⁄d
->
n_to_wake
;

224 
c⁄d
->
gíî©i⁄
++;

225 
	`SëEvít
(
c⁄d
->
evít
);

226 
	`LóveCrôiˇlSe˘i⁄
(&
c⁄d
->
lock
);

228 
	}
}

231 
	$evthªad_wö32_c⁄d_waô
(*
_c⁄d
, *
_lock
, c⁄° 
timevÆ
 *
tv
)

233 
evthªad_wö32_c⁄d
 *
c⁄d
 = 
_c⁄d
;

234 
CRITICAL_SECTION
 *
lock
 = 
_lock
;

235 
gíî©i⁄_©_°¨t
;

236 
waôög
 = 1;

237 
ªsu…
 = -1;

238 
DWORD
 
ms
 = 
INFINITE
, 
ms_‹ig
 = INFINITE, 
°¨tTime
, 
ídTime
;

239 i‡(
tv
)

240 
ms_‹ig
 = 
ms
 = 
	`evutû_tv_to_m£c
(
tv
);

242 
	`E¡îCrôiˇlSe˘i⁄
(&
c⁄d
->
lock
);

243 ++
c⁄d
->
n_waôög
;

244 
gíî©i⁄_©_°¨t
 = 
c⁄d
->
gíî©i⁄
;

245 
	`LóveCrôiˇlSe˘i⁄
(&
c⁄d
->
lock
);

247 
	`LóveCrôiˇlSe˘i⁄
(
lock
);

249 
°¨tTime
 = 
	`GëTickCou¡
();

251 
DWORD
 
ªs
;

252 
ªs
 = 
	`WaôF‹SögÀObje˘
(
c⁄d
->
evít
, 
ms
);

253 
	`E¡îCrôiˇlSe˘i⁄
(&
c⁄d
->
lock
);

254 i‡(
c⁄d
->
n_to_wake
 &&

255 
c⁄d
->
gíî©i⁄
 !
gíî©i⁄_©_°¨t
) {

256 --
c⁄d
->
n_to_wake
;

257 --
c⁄d
->
n_waôög
;

258 
ªsu…
 = 0;

259 
waôög
 = 0;

260 
out
;

261 } i‡(
ªs
 !
WAIT_OBJECT_0
) {

262 
ªsu…
 = (
ªs
==
WAIT_TIMEOUT
) ? 1 : -1;

263 --
c⁄d
->
n_waôög
;

264 
waôög
 = 0;

265 
out
;

266 } i‡(
ms
 !
INFINITE
) {

267 
ídTime
 = 
	`GëTickCou¡
();

268 i‡(
°¨tTime
 + 
ms_‹ig
 <
ídTime
) {

269 
ªsu…
 = 1;

270 --
c⁄d
->
n_waôög
;

271 
waôög
 = 0;

272 
out
;

274 
ms
 = 
°¨tTime
 + 
ms_‹ig
 - 
ídTime
;

278 i‡(
c⁄d
->
n_to_wake
 == 0) {

281 
	`Re£tEvít
(
c⁄d
->
evít
);

283 
out
:

284 
	`LóveCrôiˇlSe˘i⁄
(&
c⁄d
->
lock
);

285 } 
waôög
);

287 
	`E¡îCrôiˇlSe˘i⁄
(
lock
);

289 
	`E¡îCrôiˇlSe˘i⁄
(&
c⁄d
->
lock
);

290 i‡(!
c⁄d
->
n_waôög
)

291 
	`Re£tEvít
(
c⁄d
->
evít
);

292 
	`LóveCrôiˇlSe˘i⁄
(&
c⁄d
->
lock
);

294  
ªsu…
;

295 
	}
}

298 
	$evthªad_u£_wödows_thªads
()

300 
evthªad_lock_ˇŒbacks
 
cbs
 = {

301 
EVTHREAD_LOCK_API_VERSION
,

302 
EVTHREAD_LOCKTYPE_RECURSIVE
,

303 
evthªad_wö32_lock_¸óã
,

304 
evthªad_wö32_lock_‰ì
,

305 
evthªad_wö32_lock
,

306 
evthªad_wö32_u∆ock


310 
evthªad_c⁄dôi⁄_ˇŒbacks
 
c⁄d_cbs
 = {

311 
EVTHREAD_CONDITION_API_VERSION
,

312 
evthªad_wö32_c⁄d_Æloc
,

313 
evthªad_wö32_c⁄d_‰ì
,

314 
evthªad_wö32_c⁄d_sig«l
,

315 
evthªad_wö32_c⁄d_waô


317 #ifde‡
WIN32_HAVE_CONDITION_VARIABLES


318 
evthªad_c⁄dôi⁄_ˇŒbacks
 
c⁄dv¨_cbs
 = {

319 
EVTHREAD_CONDITION_API_VERSION
,

320 
evthªad_wö32_c⁄dv¨_Æloc
,

321 
evthªad_wö32_c⁄dv¨_‰ì
,

322 
evthªad_wö32_c⁄dv¨_sig«l
,

323 
evthªad_wö32_c⁄dv¨_waô


327 
	`evthªad_£t_lock_ˇŒbacks
(&
cbs
);

328 
	`evthªad_£t_id_ˇŒback
(
evthªad_wö32_gë_id
);

329 #ifde‡
WIN32_HAVE_CONDITION_VARIABLES


330 i‡(
	`evthªad_wö32_c⁄dv¨_öô
()) {

331 
	`evthªad_£t_c⁄dôi⁄_ˇŒbacks
(&
c⁄dv¨_cbs
);

335 
	`evthªad_£t_c⁄dôi⁄_ˇŒbacks
(&
c⁄d_cbs
);

338 
	}
}

	@evutil.c

27 
	~"evít2/evít-c⁄fig.h
"

29 
	#_GNU_SOURCE


	)

31 #ifde‡
WIN32


32 
	~<wösock2.h
>

33 
	~<ws2t˝ù.h
>

34 
	#WIN32_LEAN_AND_MEAN


	)

35 
	~<wödows.h
>

36 #unde‡
WIN32_LEAN_AND_MEAN


37 
	~<io.h
>

38 
	~<tch¨.h
>

41 
	~<sys/ty≥s.h
>

42 #ifde‡
_EVENT_HAVE_SYS_SOCKET_H


43 
	~<sys/sockë.h
>

45 #ifde‡
_EVENT_HAVE_UNISTD_H


46 
	~<uni°d.h
>

48 #ifde‡
_EVENT_HAVE_FCNTL_H


49 
	~<f˙é.h
>

51 #ifde‡
_EVENT_HAVE_STDLIB_H


52 
	~<°dlib.h
>

54 
	~<î∫o.h
>

55 
	~<limôs.h
>

56 
	~<°dio.h
>

57 
	~<°rög.h
>

58 #ifde‡
_EVENT_HAVE_NETINET_IN_H


59 
	~<√töë/ö.h
>

61 #ifde‡
_EVENT_HAVE_NETINET_IN6_H


62 
	~<√töë/ö6.h
>

64 #ifde‡
_EVENT_HAVE_ARPA_INET_H


65 
	~<¨∑/öë.h
>

68 #i‚de‡
_EVENT_HAVE_GETTIMEOFDAY


69 
	~<sys/timeb.h
>

70 
	~<time.h
>

72 
	~<sys/°©.h
>

74 
	~"evít2/utû.h
"

75 
	~"utû-öã∫Æ.h
"

76 
	~"log-öã∫Æ.h
"

77 
	~"mm-öã∫Æ.h
"

79 
	~"°æ˝y-öã∫Æ.h
"

80 
	~"ùv6-öã∫Æ.h
"

82 #ifde‡
WIN32


83 
	#›í
 
_›í


	)

84 
	#ªad
 
_ªad


	)

85 
	#˛o£
 
_˛o£


	)

86 
	#f°©
 
_f°©i64


	)

87 
	#°©
 
_°©i64


	)

88 
	#mode_t
 

	)

92 
	$evutû_›í_˛o£⁄exec
(c⁄° *
∑th«me
, 
Êags
, 
mode
)

94 
fd
;

96 #ifde‡
O_CLOEXEC


97 
Êags
 |
O_CLOEXEC
;

100 i‡(
Êags
 & 
O_CREAT
)

101 
fd
 = 
	`›í
(
∑th«me
, 
Êags
, (
mode_t
)
mode
);

103 
fd
 = 
	`›í
(
∑th«me
, 
Êags
);

104 i‡(
fd
 < 0)

107 #i‡!
	`deföed
(
O_CLOEXEC
Ë&& deföed(
FD_CLOEXEC
)

108 i‡(
	`f˙é
(
fd
, 
F_SETFD
, 
FD_CLOEXEC
) < 0)

112  
fd
;

113 
	}
}

126 
	$evutû_ªad_fûe
(c⁄° *
fûíame
, **
c⁄ã¡_out
, 
size_t
 *
Àn_out
,

127 
is_bö¨y
)

129 
fd
, 
r
;

130 
°©
 
°
;

131 *
mem
;

132 
size_t
 
ªad_so_Ár
=0;

133 
mode
 = 
O_RDONLY
;

135 
	`EVUTIL_ASSERT
(
c⁄ã¡_out
);

136 
	`EVUTIL_ASSERT
(
Àn_out
);

137 *
c⁄ã¡_out
 = 
NULL
;

138 *
Àn_out
 = 0;

140 #ifde‡
O_BINARY


141 i‡(
is_bö¨y
)

142 
mode
 |
O_BINARY
;

145 
fd
 = 
	`evutû_›í_˛o£⁄exec
(
fûíame
, 
mode
, 0);

146 i‡(
fd
 < 0)

148 i‡(
	`f°©
(
fd
, &
°
Ë|| st.
°_size
 < 0 ||

149 
°
.
°_size
 > 
EV_SSIZE_MAX
-1 ) {

150 
	`˛o£
(
fd
);

153 
mem
 = 
	`mm_mÆloc
((
size_t
)
°
.
°_size
 + 1);

154 i‡(!
mem
) {

155 
	`˛o£
(
fd
);

158 
ªad_so_Ár
 = 0;

159 #ifde‡
WIN32


160 
	#N_TO_READ
(
x
Ë((xË> 
INT_MAX
Ë? INT_MAX : (()(x))

	)

162 
	#N_TO_READ
(
x
Ë(x)

	)

164 (
r
 = 
	`ªad
(
fd
, 
mem
+
ªad_so_Ár
, 
	`N_TO_READ
(
°
.
°_size
 -Ñead_so_far))) > 0) {

165 
ªad_so_Ár
 +
r
;

166 i‡(
ªad_so_Ár
 >(
size_t
)
°
.
°_size
)

168 
	`EVUTIL_ASSERT
(
ªad_so_Ár
 < (
size_t
)
°
.
°_size
);

170 
	`˛o£
(
fd
);

171 i‡(
r
 < 0) {

172 
	`mm_‰ì
(
mem
);

175 
mem
[
ªad_so_Ár
] = 0;

177 *
Àn_out
 = 
ªad_so_Ár
;

178 *
c⁄ã¡_out
 = 
mem
;

180 
	}
}

183 
	$evutû_sockë∑ú
(
Ámûy
, 
ty≥
, 
¥Ÿocﬁ
, 
evutû_sockë_t
 
fd
[2])

185 #i‚de‡
WIN32


186  
	`sockë∑ú
(
Ámûy
, 
ty≥
, 
¥Ÿocﬁ
, 
fd
);

188  
	`evutû_îßtz_sockë∑ú
(
Ámûy
, 
ty≥
, 
¥Ÿocﬁ
, 
fd
);

190 
	}
}

193 
	$evutû_îßtz_sockë∑ú
(
Ámûy
, 
ty≥
, 
¥Ÿocﬁ
,

194 
evutû_sockë_t
 
fd
[2])

203 #ifde‡
WIN32


204 
	#ERR
(
e
Ë
WSA
##
	)
e

206 
	#ERR
(
e
Ë
	)
e

208 
evutû_sockë_t
 
li°íî
 = -1;

209 
evutû_sockë_t
 
c⁄√˘‹
 = -1;

210 
evutû_sockë_t
 
ac˚±‹
 = -1;

211 
sockaddr_ö
 
li°í_addr
;

212 
sockaddr_ö
 
c⁄√˘_addr
;

213 
ev_sockÀn_t
 
size
;

214 
ßved_î∫o
 = -1;

216 i‡(
¥Ÿocﬁ


217 || (
Ámûy
 !
AF_INET


218 #ifde‡
AF_UNIX


219 && 
Ámûy
 !
AF_UNIX


222 
	`EVUTIL_SET_SOCKET_ERROR
(
	`ERR
(
EAFNOSUPPORT
));

225 i‡(!
fd
) {

226 
	`EVUTIL_SET_SOCKET_ERROR
(
	`ERR
(
EINVAL
));

230 
li°íî
 = 
	`sockë
(
AF_INET
, 
ty≥
, 0);

231 i‡(
li°íî
 < 0)

233 
	`mem£t
(&
li°í_addr
, 0, (listen_addr));

234 
li°í_addr
.
sö_Ámûy
 = 
AF_INET
;

235 
li°í_addr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(
INADDR_LOOPBACK
);

236 
li°í_addr
.
sö_p‹t
 = 0;

237 i‡(
	`böd
(
li°íî
, (
sockaddr
 *Ë&
li°í_addr
,  (listen_addr))

239 
tidy_up_™d_Áû
;

240 i‡(
	`li°í
(
li°íî
, 1) == -1)

241 
tidy_up_™d_Áû
;

243 
c⁄√˘‹
 = 
	`sockë
(
AF_INET
, 
ty≥
, 0);

244 i‡(
c⁄√˘‹
 < 0)

245 
tidy_up_™d_Áû
;

247 
size
 = (
c⁄√˘_addr
);

248 i‡(
	`gësock«me
(
li°íî
, (
sockaddr
 *Ë&
c⁄√˘_addr
, &
size
) == -1)

249 
tidy_up_™d_Áû
;

250 i‡(
size
 ! (
c⁄√˘_addr
))

251 
ab‹t_tidy_up_™d_Áû
;

252 i‡(
	`c⁄√˘
(
c⁄√˘‹
, (
sockaddr
 *Ë&
c⁄√˘_addr
,

253 (
c⁄√˘_addr
)) == -1)

254 
tidy_up_™d_Áû
;

256 
size
 = (
li°í_addr
);

257 
ac˚±‹
 = 
	`ac˚±
(
li°íî
, (
sockaddr
 *Ë&
li°í_addr
, &
size
);

258 i‡(
ac˚±‹
 < 0)

259 
tidy_up_™d_Áû
;

260 i‡(
size
 !(
li°í_addr
))

261 
ab‹t_tidy_up_™d_Áû
;

262 
	`evutû_˛o£sockë
(
li°íî
);

265 i‡(
	`gësock«me
(
c⁄√˘‹
, (
sockaddr
 *Ë&
c⁄√˘_addr
, &
size
) == -1)

266 
tidy_up_™d_Áû
;

267 i‡(
size
 ! (
c⁄√˘_addr
)

268 || 
li°í_addr
.
sö_Ámûy
 !
c⁄√˘_addr
.sin_family

269 || 
li°í_addr
.
sö_addr
.
s_addr
 !
c⁄√˘_addr
.sin_addr.s_addr

270 || 
li°í_addr
.
sö_p‹t
 !
c⁄√˘_addr
.sin_port)

271 
ab‹t_tidy_up_™d_Áû
;

272 
fd
[0] = 
c⁄√˘‹
;

273 
fd
[1] = 
ac˚±‹
;

277 
ab‹t_tidy_up_™d_Áû
:

278 
ßved_î∫o
 = 
	`ERR
(
ECONNABORTED
);

279 
tidy_up_™d_Áû
:

280 i‡(
ßved_î∫o
 < 0)

281 
ßved_î∫o
 = 
	`EVUTIL_SOCKET_ERROR
();

282 i‡(
li°íî
 != -1)

283 
	`evutû_˛o£sockë
(
li°íî
);

284 i‡(
c⁄√˘‹
 != -1)

285 
	`evutû_˛o£sockë
(
c⁄√˘‹
);

286 i‡(
ac˚±‹
 != -1)

287 
	`evutû_˛o£sockë
(
ac˚±‹
);

289 
	`EVUTIL_SET_SOCKET_ERROR
(
ßved_î∫o
);

291 #unde‡
ERR


292 
	}
}

295 
	$evutû_make_sockë_n⁄blockög
(
evutû_sockë_t
 
fd
)

297 #ifde‡
WIN32


299 
u_l⁄g
 
n⁄blockög
 = 1;

300 i‡(
	`io˘lsockë
(
fd
, 
FIONBIO
, &
n⁄blockög
Ë=
SOCKET_ERROR
) {

301 
	`evít_sock_w¨n
(
fd
, "fcntl(%d, F_GETFL)", ()fd);

307 
Êags
;

308 i‡((
Êags
 = 
	`f˙é
(
fd
, 
F_GETFL
, 
NULL
)) < 0) {

309 
	`evít_w¨n
("f˙é(%d, F_GETFL)", 
fd
);

312 i‡(
	`f˙é
(
fd
, 
F_SETFL
, 
Êags
 | 
O_NONBLOCK
) == -1) {

313 
	`evít_w¨n
("f˙é(%d, F_SETFL)", 
fd
);

319 
	}
}

322 
	$evutû_make_li°í_sockë_ªu£abÀ
(
evutû_sockë_t
 
sock
)

324 #i‚de‡
WIN32


325 
⁄e
 = 1;

329  
	`£tsock›t
(
sock
, 
SOL_SOCKET
, 
SO_REUSEADDR
, (*Ë&
⁄e
,

330 (
ev_sockÀn_t
)(
⁄e
));

334 
	}
}

337 
	$evutû_make_sockë_˛o£⁄exec
(
evutû_sockë_t
 
fd
)

339 #i‡!
	`deföed
(
WIN32
Ë&& deföed(
_EVENT_HAVE_SETFD
)

340 
Êags
;

341 i‡((
Êags
 = 
	`f˙é
(
fd
, 
F_GETFD
, 
NULL
)) < 0) {

342 
	`evít_w¨n
("f˙é(%d, F_GETFD)", 
fd
);

345 i‡(
	`f˙é
(
fd
, 
F_SETFD
, 
Êags
 | 
FD_CLOEXEC
) == -1) {

346 
	`evít_w¨n
("f˙é(%d, F_SETFD)", 
fd
);

351 
	}
}

354 
	$evutû_˛o£sockë
(
evutû_sockë_t
 
sock
)

356 #i‚de‡
WIN32


357  
	`˛o£
(
sock
);

359  
	`˛o£sockë
(
sock
);

361 
	}
}

363 
ev_öt64_t


364 
	$evutû_°πﬁl
(c⁄° *
s
, **
íd±r
, 
ba£
)

366 #ifde‡
_EVENT_HAVE_STRTOLL


367  (
ev_öt64_t
)
	`°πﬁl
(
s
, 
íd±r
, 
ba£
);

368 #ñi‡
_EVENT_SIZEOF_LONG
 == 8

369  (
ev_öt64_t
)
	`°πﬁ
(
s
, 
íd±r
, 
ba£
);

370 #ñi‡
	`deföed
(
WIN32
Ë&& deföed(
_MSC_VER
) && _MSC_VER < 1300

373 
ev_öt64_t
 
r
;

374 i‡(
ba£
 != 10)

376 
r
 = (
ev_öt64_t
Ë
	`_©oi64
(
s
);

377 
	`is•a˚
(*
s
))

378 ++
s
;

379 i‡(*
s
 == '-')

380 ++
s
;

381 
	`isdigô
(*
s
))

382 ++
s
;

383 i‡(
íd±r
)

384 *
íd±r
 = (*Ë
s
;

385  
r
;

386 #ñi‡
	`deföed
(
WIN32
)

387  (
ev_öt64_t
Ë
	`_°πoi64
(
s
, 
íd±r
, 
ba£
);

388 #ñi‡
	`deföed
(
_EVENT_SIZEOF_LONG_LONG
) && _EVENT_SIZEOF_LONG_LONG == 8

389 
r
;

390 
n
;

391 i‡(
ba£
 != 10 && base != 16)

393 i‡(
ba£
 == 10) {

394 
n
 = 
	`ssˇnf
(
s
, "%Œd", &
r
);

396 
ru
=0;

397 
n
 = 
	`ssˇnf
(
s
, "%Œx", &
ru
);

398 i‡(
ru
 > 
EV_INT64_MAX
)

400 
r
 = (Ë
ru
;

402 i‡(
n
 != 1)

404 
	`EVUTIL_ISSPACE
(*
s
))

405 ++
s
;

406 i‡(*
s
 == '-')

407 ++
s
;

408 i‡(
ba£
 == 10) {

409 
	`EVUTIL_ISDIGIT
(*
s
))

410 ++
s
;

412 
	`EVUTIL_ISXDIGIT
(*
s
))

413 ++
s
;

415 i‡(
íd±r
)

416 *
íd±r
 = (*Ë
s
;

417  
r
;

421 
	}
}

423 #i‚de‡
_EVENT_HAVE_GETTIMEOFDAY


426 
	$evutû_gëtimeofday
(
timevÆ
 *
tv
, 
timez⁄e
 *
tz
)

428 
_timeb
 
tb
;

430 i‡(
tv
 =
NULL
)

441 
	`_·ime
(&
tb
);

442 
tv
->
tv_£c
 = (Ë
tb
.
time
;

443 
tv
->
tv_u£c
 = ((Ë
tb
.
mûlôm
) * 1000;

445 
	}
}

448 #ifde‡
WIN32


450 
	$evutû_sockë_gëîr‹
(
evutû_sockë_t
 
sock
)

452 
›tvÆ
, 
›tvÆÀn
=(optval);

453 
îr
 = 
	`WSAGëLa°Eº‹
();

454 i‡(
îr
 =
WSAEWOULDBLOCK
 && 
sock
 >= 0) {

455 i‡(
	`gësock›t
(
sock
, 
SOL_SOCKET
, 
SO_ERROR
, (*)&
›tvÆ
,

456 &
›tvÆÀn
))

457  
îr
;

458 i‡(
›tvÆ
)

459  
›tvÆ
;

461  
îr
;

462 
	}
}

468 
	$evutû_sockë_c⁄√˘
(
evutû_sockë_t
 *
fd_±r
, 
sockaddr
 *
ß
, 
sockÀn
)

470 
made_fd
 = 0;

472 i‡(*
fd_±r
 < 0) {

473 i‡((*
fd_±r
 = 
	`sockë
(
ß
->
ß_Ámûy
, 
SOCK_STREAM
, 0)) < 0)

474 
îr
;

475 
made_fd
 = 1;

476 i‡(
	`evutû_make_sockë_n⁄blockög
(*
fd_±r
) < 0) {

477 
îr
;

481 i‡(
	`c⁄√˘
(*
fd_±r
, 
ß
, 
sockÀn
) < 0) {

482 
e
 = 
	`evutû_sockë_gëîr‹
(*
fd_±r
);

483 i‡(
	`EVUTIL_ERR_CONNECT_RETRIABLE
(
e
))

485 i‡(
	`EVUTIL_ERR_CONNECT_REFUSED
(
e
))

487 
îr
;

492 
îr
:

493 i‡(
made_fd
) {

494 
	`evutû_˛o£sockë
(*
fd_±r
);

495 *
fd_±r
 = -1;

498 
	}
}

505 
	$evutû_sockë_föished_c⁄√˘ög
(
evutû_sockë_t
 
fd
)

507 
e
;

508 
ev_sockÀn_t
 
ñí
 = (
e
);

510 i‡(
	`gësock›t
(
fd
, 
SOL_SOCKET
, 
SO_ERROR
, (*)&
e
, &
ñí
) < 0)

513 i‡(
e
) {

514 i‡(
	`EVUTIL_ERR_CONNECT_RETRIABLE
(
e
))

516 
	`EVUTIL_SET_SOCKET_ERROR
(
e
);

521 
	}
}

523 #i‡(
EVUTIL_AI_PASSIVE
|
EVUTIL_AI_CANONNAME
|
EVUTIL_AI_NUMERICHOST
| \

524 
	gEVUTIL_AI_NUMERICSERV
|
	gEVUTIL_AI_V4MAPPED
|
	gEVUTIL_AI_ALL
| \

525 
	gEVUTIL_AI_ADDRCONFIG
) != \

526 (
EVUTIL_AI_PASSIVE
^
EVUTIL_AI_CANONNAME
^
EVUTIL_AI_NUMERICHOST
^ \

527 
EVUTIL_AI_NUMERICSERV
^
EVUTIL_AI_V4MAPPED
^
EVUTIL_AI_ALL
^ \

528 
EVUTIL_AI_ADDRCONFIG
)

537 
have_checked_öãrÁ˚s
, 
	ghad_ùv4_addªss
, 
	ghad_ùv6_addªss
;

541 
	#EVUTIL_V4ADDR_IS_LOCALHOST
(
addr
Ë((◊ddr)>>24Ë=127)

	)

546 
	#EVUTIL_V4ADDR_IS_CLASSD
(
addr
Ë(((◊ddr)>>24Ë& 0xf0Ë=0xe0)

	)

551 
	$evutû_check_öãrÁ˚s
(
f‹˚_ªcheck
)

553 c⁄° 
ZEROES
[] = "\x00\x00\x00\x00\x00\x00\x00\x00"

555 
evutû_sockë_t
 
fd
 = -1;

556 
sockaddr_ö
 
sö
, 
sö_out
;

557 
sockaddr_ö6
 
sö6
, 
sö6_out
;

558 
ev_sockÀn_t
 
sö_out_Àn
 = (
sö_out
);

559 
ev_sockÀn_t
 
sö6_out_Àn
 = (
sö6_out
);

560 
r
;

561 
buf
[128];

562 i‡(
have_checked_öãrÁ˚s
 && !
f‹˚_ªcheck
)

570 
	`mem£t
(&
sö
, 0, (sin));

571 
sö
.
sö_Ámûy
 = 
AF_INET
;

572 
sö
.
sö_p‹t
 = 
	`ht⁄s
(53);

573 
r
 = 
	`evutû_öë_±⁄
(
AF_INET
, "18.244.0.188", &
sö
.
sö_addr
);

574 
	`EVUTIL_ASSERT
(
r
);

576 
	`mem£t
(&
sö6
, 0, (sin6));

577 
sö6
.
sö6_Ámûy
 = 
AF_INET6
;

578 
sö6
.
sö6_p‹t
 = 
	`ht⁄s
(53);

579 
r
 = 
	`evutû_öë_±⁄
(
AF_INET6
, "2001:4860:b002::68", &
sö6
.
sö6_addr
);

580 
	`EVUTIL_ASSERT
(
r
);

582 
	`mem£t
(&
sö_out
, 0, (sin_out));

583 
	`mem£t
(&
sö6_out
, 0, (sin6_out));

586 i‡((
fd
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
, 
IPPROTO_UDP
)) >= 0 &&

587 
	`c⁄√˘
(
fd
, (
sockaddr
*)&
sö
, (sin)) == 0 &&

588 
	`gësock«me
(
fd
, (
sockaddr
*)&
sö_out
, &
sö_out_Àn
) == 0) {

590 
ev_uöt32_t
 
addr
 = 
	`¡ohl
(
sö_out
.
sö_addr
.
s_addr
);

591 i‡(
addr
 == 0 ||

592 
	`EVUTIL_V4ADDR_IS_LOCALHOST
(
addr
) ||

593 
	`EVUTIL_V4ADDR_IS_CLASSD
(
addr
)) {

594 
	`evutû_öë_¡›
(
AF_INET
, &
sö_out
.
sö_addr
,

595 
buf
, (buf));

600 
	`evít_w¨nx
("GŸá så™gêloˇ»ùv4áddªs†%s",
buf
);

602 
	`evít_debug
(("Detectedán IPv4 interface"));

603 
had_ùv4_addªss
 = 1;

606 i‡(
fd
 >= 0)

607 
	`evutû_˛o£sockë
(
fd
);

609 i‡((
fd
 = 
	`sockë
(
AF_INET6
, 
SOCK_DGRAM
, 
IPPROTO_UDP
)) >= 0 &&

610 
	`c⁄√˘
(
fd
, (
sockaddr
*)&
sö6
, (sin6)) == 0 &&

611 
	`gësock«me
(
fd
, (
sockaddr
*)&
sö6_out
, &
sö6_out_Àn
) == 0) {

613 c⁄° *
addr
 =

614 (*)
sö6_out
.
sö6_addr
.
s6_addr
;

615 i‡(!
	`memcmp
(
addr
, 
ZEROES
, 8) ||

616 (
addr
[0] == 0xfe && (addr[1] & 0xc0) == 0x80)) {

621 
	`evutû_öë_¡›
(
AF_INET6
, &
sö6_out
.
sö6_addr
,

622 
buf
, (buf));

623 
	`evít_w¨nx
("GŸá så™gêloˇ»ùv6áddªs†%s",
buf
);

625 
	`evít_debug
(("Detectedán IPv4 interface"));

626 
had_ùv6_addªss
 = 1;

630 i‡(
fd
 >= 0)

631 
	`evutû_˛o£sockë
(
fd
);

634 
	}
}

640 
	#EVUTIL_AI_LIBEVENT_ALLOCATED
 0x80000000

	)

647 
evutû_addröfo
 *

648 
	$evutû_√w_addröfo
(
sockaddr
 *
ß
, 
ev_sockÀn_t
 
sockÀn
,

649 c⁄° 
evutû_addröfo
 *
höts
)

651 
evutû_addröfo
 *
ªs
;

652 
	`EVUTIL_ASSERT
(
höts
);

654 i‡(
höts
->
ai_sockty≥
 =0 && höts->
ai_¥Ÿocﬁ
 == 0) {

656 
evutû_addröfo
 *
r1
, *
r2
;

657 
evutû_addröfo
 
tmp
;

658 
	`mem˝y
(&
tmp
, 
höts
, (tmp));

659 
tmp
.
ai_sockty≥
 = 
SOCK_STREAM
;Åmp.
ai_¥Ÿocﬁ
 = 
IPPROTO_TCP
;

660 
r1
 = 
	`evutû_√w_addröfo
(
ß
, 
sockÀn
, &
tmp
);

661 i‡(!
r1
)

662  
NULL
;

663 
tmp
.
ai_sockty≥
 = 
SOCK_DGRAM
;Åmp.
ai_¥Ÿocﬁ
 = 
IPPROTO_UDP
;

664 
r2
 = 
	`evutû_√w_addröfo
(
ß
, 
sockÀn
, &
tmp
);

665 i‡(!
r2
) {

666 
	`evutû_‰ìaddröfo
(
r1
);

667  
NULL
;

669 
r1
->
ai_√xt
 = 
r2
;

670  
r1
;

674 
ªs
 = 
	`mm_ˇŒoc
(1,(
evutû_addröfo
)+
sockÀn
);

675 i‡(!
ªs
)

676  
NULL
;

677 
ªs
->
ai_addr
 = (
sockaddr
*)

678 (((*)
ªs
Ë+ (
evutû_addröfo
));

679 
	`mem˝y
(
ªs
->
ai_addr
, 
ß
, 
sockÀn
);

680 
ªs
->
ai_addæí
 = 
sockÀn
;

681 
ªs
->
ai_Ámûy
 = 
ß
->
ß_Ámûy
;

682 
ªs
->
ai_Êags
 = 
EVUTIL_AI_LIBEVENT_ALLOCATED
;

683 
ªs
->
ai_sockty≥
 = 
höts
->ai_socktype;

684 
ªs
->
ai_¥Ÿocﬁ
 = 
höts
->ai_protocol;

686  
ªs
;

687 
	}
}

692 
evutû_addröfo
 *

693 
	$evutû_addröfo_≠≥nd
(
evutû_addröfo
 *
fú°
,

694 
evutû_addröfo
 *
≠≥nd
)

696 
evutû_addröfo
 *
ai
 = 
fú°
;

697 i‡(!
ai
)

698  
≠≥nd
;

699 
ai
->
ai_√xt
)

700 
ai
 =ái->
ai_√xt
;

701 
ai
->
ai_√xt
 = 
≠≥nd
;

703  
fú°
;

704 
	}
}

707 
	$∑r£_numîic_£rv«me
(c⁄° *
£rv«me
)

709 
n
;

710 *
íd±r
=
NULL
;

711 
n
 = (Ë
	`°πﬁ
(
£rv«me
, &
íd±r
, 10);

712 i‡(
n
>=0 &&Ç <65535 && 
£rv«me
[0] && 
íd±r
 && !endptr[0])

713  
n
;

716 
	}
}

722 
	$evutû_∑r£_£rv«me
(c⁄° *
£rv«me
, c⁄° *
¥Ÿocﬁ
,

723 c⁄° 
evutû_addröfo
 *
höts
)

725 
n
 = 
	`∑r£_numîic_£rv«me
(
£rv«me
);

726 i‡(
n
>=0)

727  
n
;

728 #i‡
	`deföed
(
_EVENT_HAVE_GETSERVBYNAME
Ë|| deföed(
WIN32
)

729 i‡(!(
höts
->
ai_Êags
 & 
EVUTIL_AI_NUMERICSERV
)) {

730 
£rvít
 *
ít
 = 
	`gë£rvby«me
(
£rv«me
, 
¥Ÿocﬁ
);

731 i‡(
ít
) {

732  
	`¡ohs
(
ít
->
s_p‹t
);

737 
	}
}

742 
	$evutû_u≈¨£_¥Ÿ⁄ame
(
¥Ÿo
)

744 
¥Ÿo
) {

746  
NULL
;

747 
IPPROTO_TCP
:

749 
IPPROTO_UDP
:

751 #ifde‡
IPPROTO_SCTP


752 
IPPROTO_SCTP
:

756 #ifde‡
_EVENT_HAVE_GETPROTOBYNUMBER


758 
¥Ÿ€¡
 *
ít
 = 
	`gë¥Ÿobynumbî
(
¥Ÿo
);

759 i‡(
ít
)

760  
ít
->
p_«me
;

763  
NULL
;

765 
	}
}

768 
	$evutû_gëaddröfo_ö„r_¥Ÿocﬁs
(
evutû_addröfo
 *
höts
)

771 i‡(!
höts
->
ai_¥Ÿocﬁ
 && höts->
ai_sockty≥
) {

772 i‡(
höts
->
ai_sockty≥
 =
SOCK_DGRAM
)

773 
höts
->
ai_¥Ÿocﬁ
 = 
IPPROTO_UDP
;

774 i‡(
höts
->
ai_sockty≥
 =
SOCK_STREAM
)

775 
höts
->
ai_¥Ÿocﬁ
 = 
IPPROTO_TCP
;

779 i‡(!
höts
->
ai_sockty≥
 && höts->
ai_¥Ÿocﬁ
) {

780 i‡(
höts
->
ai_¥Ÿocﬁ
 =
IPPROTO_UDP
)

781 
höts
->
ai_sockty≥
 = 
SOCK_DGRAM
;

782 i‡(
höts
->
ai_¥Ÿocﬁ
 =
IPPROTO_TCP
)

783 
höts
->
ai_sockty≥
 = 
SOCK_STREAM
;

784 #ifde‡
IPPROTO_SCTP


785 i‡(
höts
->
ai_¥Ÿocﬁ
 =
IPPROTO_SCTP
)

786 
höts
->
ai_sockty≥
 = 
SOCK_STREAM
;

789 
	}
}

791 #i‡
AF_UNSPEC
 !
PF_UNSPEC


809 
	$evutû_gëaddröfo_comm⁄
(c⁄° *
nodíame
, c⁄° *
£rv«me
,

810 
evutû_addröfo
 *
höts
, evutû_addröfÿ**
ªs
, *
p‹äum
)

812 
p‹t
 = 0;

813 c⁄° *
≤ame
;

815 i‡(
nodíame
 =
NULL
 && 
£rv«me
 == NULL)

816  
EVUTIL_EAI_NONAME
;

819 i‡(
höts
->
ai_Ámûy
 !
PF_UNSPEC
 && höts->ai_Ámûy !
PF_INET
 &&

820 
höts
->
ai_Ámûy
 !
PF_INET6
)

821  
EVUTIL_EAI_FAMILY
;

823 
	`evutû_gëaddröfo_ö„r_¥Ÿocﬁs
(
höts
);

826 
≤ame
 = 
	`evutû_u≈¨£_¥Ÿ⁄ame
(
höts
->
ai_¥Ÿocﬁ
);

827 i‡(
£rv«me
) {

830 
p‹t
 = 
	`evutû_∑r£_£rv«me
(
£rv«me
, 
≤ame
, 
höts
);

831 i‡(
p‹t
 < 0) {

832  
EVUTIL_EAI_NONAME
;

838 i‡(
nodíame
 =
NULL
) {

839 
evutû_addröfo
 *
ªs4
=
NULL
, *
ªs6
=NULL;

840 i‡(
höts
->
ai_Ámûy
 !
PF_INET
) {

841 
sockaddr_ö6
 
sö6
;

842 
	`mem£t
(&
sö6
, 0, (sin6));

843 
sö6
.
sö6_Ámûy
 = 
AF_INET6
;

844 
sö6
.
sö6_p‹t
 = 
	`ht⁄s
(
p‹t
);

845 i‡(
höts
->
ai_Êags
 & 
EVUTIL_AI_PASSIVE
) {

849 
sö6
.
sö6_addr
.
s6_addr
[15] = 1;

851 
ªs6
 = 
	`evutû_√w_addröfo
((
sockaddr
*)&
sö6
,

852 (
sö6
), 
höts
);

853 i‡(!
ªs6
)

854  
EVUTIL_EAI_MEMORY
;

857 i‡(
höts
->
ai_Ámûy
 !
PF_INET6
) {

858 
sockaddr_ö
 
sö
;

859 
	`mem£t
(&
sö
, 0, (sin));

860 
sö
.
sö_Ámûy
 = 
AF_INET
;

861 
sö
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

862 i‡(
höts
->
ai_Êags
 & 
EVUTIL_AI_PASSIVE
) {

866 
sö
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(0x7f000001);

868 
ªs4
 = 
	`evutû_√w_addröfo
((
sockaddr
*)&
sö
,

869 (
sö
), 
höts
);

870 i‡(!
ªs4
) {

871 i‡(
ªs6
)

872 
	`evutû_‰ìaddröfo
(
ªs6
);

873  
EVUTIL_EAI_MEMORY
;

876 *
ªs
 = 
	`evutû_addröfo_≠≥nd
(
ªs4
, 
ªs6
);

883 i‡(
höts
->
ai_Ámûy
 =
PF_INET6
 || höts->ai_Ámûy =
PF_UNSPEC
) {

884 
sockaddr_ö6
 
sö6
;

885 
	`mem£t
(&
sö6
, 0, (sin6));

886 i‡(1==
	`evutû_öë_±⁄
(
AF_INET6
, 
nodíame
, &
sö6
.
sö6_addr
)) {

888 
sö6
.
sö6_Ámûy
 = 
AF_INET6
;

889 
sö6
.
sö6_p‹t
 = 
	`ht⁄s
(
p‹t
);

890 *
ªs
 = 
	`evutû_√w_addröfo
((
sockaddr
*)&
sö6
,

891 (
sö6
), 
höts
);

892 i‡(!*
ªs
)

893  
EVUTIL_EAI_MEMORY
;

899 i‡(
höts
->
ai_Ámûy
 =
PF_INET
 || höts->ai_Ámûy =
PF_UNSPEC
) {

900 
sockaddr_ö
 
sö
;

901 
	`mem£t
(&
sö
, 0, (sin));

902 i‡(1==
	`evutû_öë_±⁄
(
AF_INET
, 
nodíame
, &
sö
.
sö_addr
)) {

904 
sö
.
sö_Ámûy
 = 
AF_INET
;

905 
sö
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

906 *
ªs
 = 
	`evutû_√w_addröfo
((
sockaddr
*)&
sö
,

907 (
sö
), 
höts
);

908 i‡(!*
ªs
)

909  
EVUTIL_EAI_MEMORY
;

917 i‡((
höts
->
ai_Êags
 & 
EVUTIL_AI_NUMERICHOST
)) {

919  
EVUTIL_EAI_NONAME
;

921 *
p‹äum
 = 
p‹t
;

922  
EVUTIL_EAI_NEED_RESOLVE
;

923 
	}
}

925 #ifde‡
_EVENT_HAVE_GETADDRINFO


926 
	#USE_NATIVE_GETADDRINFO


	)

929 #ifde‡
USE_NATIVE_GETADDRINFO


932 c⁄° 
	gALL_NONNATIVE_AI_FLAGS
 =

933 #i‚de‡
AI_PASSIVE


934 
EVUTIL_AI_PASSIVE
 |

936 #i‚de‡
AI_CANONNAME


937 
EVUTIL_AI_CANONNAME
 |

939 #i‚de‡
AI_NUMERICHOST


940 
EVUTIL_AI_NUMERICHOST
 |

942 #i‚de‡
AI_NUMERICSERV


943 
EVUTIL_AI_NUMERICSERV
 |

945 #i‚de‡
AI_ADDRCONFIG


946 
EVUTIL_AI_ADDRCONFIG
 |

948 #i‚de‡
AI_ALL


949 
EVUTIL_AI_ALL
 |

951 #i‚de‡
AI_V4MAPPED


952 
EVUTIL_AI_V4MAPPED
 |

954 
EVUTIL_AI_LIBEVENT_ALLOCATED
;

956 c⁄° 
	gALL_NATIVE_AI_FLAGS
 =

957 #ifde‡
AI_PASSIVE


958 
AI_PASSIVE
 |

960 #ifde‡
AI_CANONNAME


961 
AI_CANONNAME
 |

963 #ifde‡
AI_NUMERICHOST


964 
AI_NUMERICHOST
 |

966 #ifde‡
AI_NUMERICSERV


967 
AI_NUMERICSERV
 |

969 #ifde‡
AI_ADDRCONFIG


970 
AI_ADDRCONFIG
 |

972 #ifde‡
AI_ALL


973 
AI_ALL
 |

975 #ifde‡
AI_V4MAPPED


976 
AI_V4MAPPED
 |

981 #i‚de‡
USE_NATIVE_GETADDRINFO


985 
evutû_addröfo
 *

986 
	$addröfo_‰om_ho°ít
(c⁄° 
ho°ít
 *
ít
,

987 
p‹t
, c⁄° 
evutû_addröfo
 *
höts
)

989 
i
;

990 
sockaddr_ö
 
sö
;

991 
sockaddr_ö6
 
sö6
;

992 
sockaddr
 *
ß
;

993 
sockÀn
;

994 
evutû_addröfo
 *
ªs
=
NULL
, *
ai
;

995 *
addΩ
;

997 i‡(
ít
->
h_addπy≥
 =
PF_INET
) {

998 
	`mem£t
(&
sö
, 0, (sin));

999 
sö
.
sö_Ámûy
 = 
AF_INET
;

1000 
sö
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

1001 
ß
 = (
sockaddr
 *)&
sö
;

1002 
sockÀn
 = (
sockaddr_ö
);

1003 
addΩ
 = &
sö
.
sö_addr
;

1004 i‡(
ít
->
h_Àngth
 !(
sö
.
sö_addr
)) {

1005 
	`evít_w¨nx
("Weird h_length from gethostbyname");

1006  
NULL
;

1008 } i‡(
ít
->
h_addπy≥
 =
PF_INET6
) {

1009 
	`mem£t
(&
sö6
, 0, (sin6));

1010 
sö6
.
sö6_Ámûy
 = 
AF_INET6
;

1011 
sö6
.
sö6_p‹t
 = 
	`ht⁄s
(
p‹t
);

1012 
ß
 = (
sockaddr
 *)&
sö6
;

1013 
sockÀn
 = (
sockaddr_ö
);

1014 
addΩ
 = &
sö6
.
sö6_addr
;

1015 i‡(
ít
->
h_Àngth
 !(
sö6
.
sö6_addr
)) {

1016 
	`evít_w¨nx
("Weird h_length from gethostbyname");

1017  
NULL
;

1020  
NULL
;

1022 
i
 = 0; 
ít
->
h_addr_li°
[i]; ++i) {

1023 
	`mem˝y
(
addΩ
, 
ít
->
h_addr_li°
[
i
],É¡->
h_Àngth
);

1024 
ai
 = 
	`evutû_√w_addröfo
(
ß
, 
sockÀn
, 
höts
);

1025 i‡(!
ai
) {

1026 
	`evutû_‰ìaddröfo
(
ªs
);

1027  
NULL
;

1029 
ªs
 = 
	`evutû_addröfo_≠≥nd
‘es, 
ai
);

1032 i‡(
ªs
 && ((
höts
->
ai_Êags
 & 
EVUTIL_AI_CANONNAME
Ë&& 
ít
->
h_«me
)) {

1033 
ªs
->
ai_ˇn⁄«me
 = 
	`mm_°rdup
(
ít
->
h_«me
);

1034 i‡(
ªs
->
ai_ˇn⁄«me
 =
NULL
) {

1035 
	`evutû_‰ìaddröfo
(
ªs
);

1036  
NULL
;

1040  
ªs
;

1041 
	}
}

1049 
	$evutû_adju°_höts_f‹_addrc⁄fig
(
evutû_addröfo
 *
höts
)

1051 i‡(!(
höts
->
ai_Êags
 & 
EVUTIL_AI_ADDRCONFIG
))

1053 i‡(
höts
->
ai_Ámûy
 !
PF_UNSPEC
)

1055 i‡(!
have_checked_öãrÁ˚s
)

1056 
	`evutû_check_öãrÁ˚s
(0);

1057 i‡(
had_ùv4_addªss
 && !
had_ùv6_addªss
) {

1058 
höts
->
ai_Ámûy
 = 
PF_INET
;

1059 } i‡(!
had_ùv4_addªss
 && 
had_ùv6_addªss
) {

1060 
höts
->
ai_Ámûy
 = 
PF_INET6
;

1062 
	}
}

1064 #ifde‡
USE_NATIVE_GETADDRINFO


1065 
	g√ed_numîic_p‹t_hack_
=0;

1066 
	g√ed_sockty≥_¥Ÿocﬁ_hack_
=0;

1067 
	gã°ed_f‹_gëaddröfo_hacks
=0;

1089 
	$ã°_f‹_gëaddröfo_hacks
()

1091 
r
, 
r2
;

1092 
evutû_addröfo
 *
ai
=
NULL
, *
ai2
=NULL;

1093 
evutû_addröfo
 
höts
;

1095 
	`mem£t
(&
höts
,0,(hints));

1096 
höts
.
ai_Ámûy
 = 
PF_UNSPEC
;

1097 
höts
.
ai_Êags
 =

1098 #ifde‡
AI_NUMERICHOST


1099 
AI_NUMERICHOST
 |

1101 #ifde‡
AI_NUMERICSERV


1102 
AI_NUMERICSERV
 |

1105 
r
 = 
	`gëaddröfo
("1.2.3.4", "80", &
höts
, &
ai
);

1106 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

1107 
r2
 = 
	`gëaddröfo
("1.2.3.4", "80", &
höts
, &
ai2
);

1108 i‡(
r2
 =0 && 
r
 != 0) {

1109 
√ed_numîic_p‹t_hack_
=1;

1111 i‡(
ai2
 &&ái2->
ai_¥Ÿocﬁ
 == 0) {

1112 
√ed_sockty≥_¥Ÿocﬁ_hack_
=1;

1115 i‡(
ai
)

1116 
	`‰ìaddröfo
(
ai
);

1117 i‡(
ai2
)

1118 
	`‰ìaddröfo
(
ai2
);

1119 
ã°ed_f‹_gëaddröfo_hacks
=1;

1120 
	}
}

1122 
ölöe
 

1123 
	$√ed_numîic_p‹t_hack
()

1125 i‡(!
ã°ed_f‹_gëaddröfo_hacks
)

1126 
	`ã°_f‹_gëaddröfo_hacks
();

1127  
√ed_numîic_p‹t_hack_
;

1128 
	}
}

1130 
ölöe
 

1131 
	$√ed_sockty≥_¥Ÿocﬁ_hack
()

1133 i‡(!
ã°ed_f‹_gëaddröfo_hacks
)

1134 
	`ã°_f‹_gëaddröfo_hacks
();

1135  
√ed_sockty≥_¥Ÿocﬁ_hack_
;

1136 
	}
}

1139 
	$≠∂y_numîic_p‹t_hack
(
p‹t
, 
evutû_addröfo
 **
ai
)

1143  ; *
ai
;áò&(*ai)->
ai_√xt
) {

1144 
sockaddr
 *
ß
 = (*
ai
)->
ai_addr
;

1145 i‡(
ß
 && sa->
ß_Ámûy
 =
AF_INET
) {

1146 
sockaddr_ö
 *
sö
 = (sockaddr_ö*)
ß
;

1147 
sö
->
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

1148 } i‡(
ß
 && sa->
ß_Ámûy
 =
AF_INET6
) {

1149 
sockaddr_ö6
 *
sö6
 = (sockaddr_ö6*)
ß
;

1150 
sö6
->
sö6_p‹t
 = 
	`ht⁄s
(
p‹t
);

1154 
evutû_addröfo
 *
vi˘im
 = *
ai
;

1155 *
ai
 = 
vi˘im
->
ai_√xt
;

1156 
vi˘im
->
ai_√xt
 = 
NULL
;

1157 
	`‰ìaddröfo
(
vi˘im
);

1160 
	}
}

1163 
	$≠∂y_sockty≥_¥Ÿocﬁ_hack
(
evutû_addröfo
 *
ai
)

1165 
evutû_addröfo
 *
ai_√w
;

1166 ; 
ai
;áòai->
ai_√xt
) {

1167 
	`evutû_gëaddröfo_ö„r_¥Ÿocﬁs
(
ai
);

1168 i‡(
ai
->
ai_sockty≥
 ||ái->
ai_¥Ÿocﬁ
)

1170 
ai_√w
 = 
	`mm_mÆloc
((*ai_new));

1171 i‡(!
ai_√w
)

1173 
	`mem˝y
(
ai_√w
, 
ai
, (*ai_new));

1174 
ai
->
ai_sockty≥
 = 
SOCK_STREAM
;

1175 
ai
->
ai_¥Ÿocﬁ
 = 
IPPROTO_TCP
;

1176 
ai_√w
->
ai_sockty≥
 = 
SOCK_DGRAM
;

1177 
ai_√w
->
ai_¥Ÿocﬁ
 = 
IPPROTO_UDP
;

1179 
ai_√w
->
ai_√xt
 = 
ai
->ai_next;

1180 
ai
->
ai_√xt
 = 
ai_√w
;

1183 
	}
}

1187 
	$evutû_gëaddröfo
(c⁄° *
nodíame
, c⁄° *
£rv«me
,

1188 c⁄° 
evutû_addröfo
 *
höts_ö
, evutû_addröfÿ**
ªs
)

1190 #ifde‡
USE_NATIVE_GETADDRINFO


1191 
evutû_addröfo
 
höts
;

1192 
p‹äum
=-1, 
√ed_≈_hack
, 
îr
;

1194 i‡(
höts_ö
) {

1195 
	`mem˝y
(&
höts
, 
höts_ö
, (hints));

1197 
	`mem£t
(&
höts
, 0, (hints));

1198 
höts
.
ai_Ámûy
 = 
PF_UNSPEC
;

1201 #i‚de‡
AI_ADDRCONFIG


1203 i‡(
höts
.
ai_Ámûy
 =
PF_UNSPEC
 &&

1204 (
höts
.
ai_Êags
 & 
EVUTIL_AI_ADDRCONFIG
)) {

1205 
	`evutû_adju°_höts_f‹_addrc⁄fig
(&
höts
);

1209 #i‚de‡
AI_NUMERICSERV


1211 i‡(
höts
.
ai_Êags
 & 
EVUTIL_AI_NUMERICSERV
) {

1212 i‡(
£rv«me
 && 
	`∑r£_numîic_£rv«me
(servname)<0)

1213  
EVUTIL_EAI_NONAME
;

1228 #ifde‡
WIN32


1230 
tmp_p‹t
;

1231 
îr
 = 
	`evutû_gëaddröfo_comm⁄
(
nodíame
,
£rv«me
,&
höts
,

1232 
ªs
, &
tmp_p‹t
);

1233 i‡(
îr
 == 0 ||

1234 
îr
 =
EVUTIL_EAI_MEMORY
 ||

1235 
îr
 =
EVUTIL_EAI_NONAME
)

1236  
îr
;

1243 
√ed_≈_hack
 = 
	`√ed_numîic_p‹t_hack
(Ë&& 
£rv«me
 && !
höts
.
ai_sockty≥


1244 && ((
p‹äum
=
	`∑r£_numîic_£rv«me
(
£rv«me
)) >= 0);

1245 i‡(
√ed_≈_hack
) {

1246 i‡(!
nodíame
)

1247  
	`evutû_gëaddröfo_comm⁄
(

1248 
NULL
,
£rv«me
,&
höts
, 
ªs
, &
p‹äum
);

1249 
£rv«me
 = 
NULL
;

1252 i‡(
	`√ed_sockty≥_¥Ÿocﬁ_hack
()) {

1253 
	`evutû_gëaddröfo_ö„r_¥Ÿocﬁs
(&
höts
);

1263 
	`EVUTIL_ASSERT
((
ALL_NONNATIVE_AI_FLAGS
 & 
ALL_NATIVE_AI_FLAGS
) == 0);

1266 
höts
.
ai_Êags
 &~
ALL_NONNATIVE_AI_FLAGS
;

1268 
îr
 = 
	`gëaddröfo
(
nodíame
, 
£rv«me
, &
höts
, 
ªs
);

1269 i‡(
√ed_≈_hack
)

1270 
	`≠∂y_numîic_p‹t_hack
(
p‹äum
, 
ªs
);

1272 i‡(
	`√ed_sockty≥_¥Ÿocﬁ_hack
()) {

1273 i‡(
	`≠∂y_sockty≥_¥Ÿocﬁ_hack
(*
ªs
) < 0) {

1274 
	`evutû_‰ìaddröfo
(*
ªs
);

1275 *
ªs
 = 
NULL
;

1276  
EVUTIL_EAI_MEMORY
;

1279  
îr
;

1281 
p‹t
=0, 
îr
;

1282 
ho°ít
 *
ít
 = 
NULL
;

1283 
evutû_addröfo
 
höts
;

1285 i‡(
höts_ö
) {

1286 
	`mem˝y
(&
höts
, 
höts_ö
, (hints));

1288 
	`mem£t
(&
höts
, 0, (hints));

1289 
höts
.
ai_Ámûy
 = 
PF_UNSPEC
;

1292 
	`evutû_adju°_höts_f‹_addrc⁄fig
(&
höts
);

1294 
îr
 = 
	`evutû_gëaddröfo_comm⁄
(
nodíame
, 
£rv«me
, &
höts
, 
ªs
, &
p‹t
);

1295 i‡(
îr
 !
EVUTIL_EAI_NEED_RESOLVE
) {

1297  
îr
;

1300 
îr
 = 0;

1303 #ifde‡
_EVENT_HAVE_GETHOSTBYNAME_R_6_ARG


1305 
buf
[2048];

1306 
ho°ít
 hostent;

1307 
r
;

1308 
r
 = 
	`gëho°by«me_r
(
nodíame
, &
ho°ít
, 
buf
, (buf), &
ít
,

1309 &
îr
);

1310 #ñi‡
	`deföed
(
_EVENT_HAVE_GETHOSTBYNAME_R_5_ARG
)

1311 
buf
[2048];

1312 
ho°ít
 hostent;

1313 
ít
 = 
	`gëho°by«me_r
(
nodíame
, &
ho°ít
, 
buf
, (buf),

1314 &
îr
);

1315 #ñi‡
	`deföed
(
_EVENT_HAVE_GETHOSTBYNAME_R_3_ARG
)

1316 
ho°ít_d©a
 
d©a
;

1317 
ho°ít
 hostent;

1318 
	`mem£t
(&
d©a
, 0, (data));

1319 
îr
 = 
	`gëho°by«me_r
(
nodíame
, &
ho°ít
, &
d©a
);

1320 
ít
 = 
îr
 ? 
NULL
 : &
ho°ít
;

1324 
ít
 = 
	`gëho°by«me
(
nodíame
);

1325 #ifde‡
WIN32


1326 
îr
 = 
	`WSAGëLa°Eº‹
();

1328 
îr
 = 
h_î∫o
;

1333 i‡(!
ít
) {

1335 
îr
) {

1336 
TRY_AGAIN
:

1337  
EVUTIL_EAI_AGAIN
;

1338 
NO_RECOVERY
:

1340  
EVUTIL_EAI_FAIL
;

1341 
HOST_NOT_FOUND
:

1342  
EVUTIL_EAI_NONAME
;

1343 
NO_ADDRESS
:

1344 #i‡
NO_DATA
 !
NO_ADDRESS


1345 
NO_DATA
:

1347  
EVUTIL_EAI_NODATA
;

1351 i‡(
ít
->
h_addπy≥
 !
höts
.
ai_Ámûy
 &&

1352 
höts
.
ai_Ámûy
 !
PF_UNSPEC
) {

1356  
EVUTIL_EAI_NONAME
;

1360 i‡(
ít
->
h_Àngth
 == 0)

1361  
EVUTIL_EAI_NODATA
;

1365 i‡(
ít
->
h_addπy≥
 !
PF_INET
 &&É¡->h_addπy≥ !
PF_INET6
)

1366  
EVUTIL_EAI_FAMILY
;

1368 *
ªs
 = 
	`addröfo_‰om_ho°ít
(
ít
, 
p‹t
, &
höts
);

1369 i‡(! *
ªs
)

1370  
EVUTIL_EAI_MEMORY
;

1375 
	}
}

1378 
	$evutû_‰ìaddröfo
(
evutû_addröfo
 *
ai
)

1380 #ifde‡
_EVENT_HAVE_GETADDRINFO


1381 i‡(!(
ai
->
ai_Êags
 & 
EVUTIL_AI_LIBEVENT_ALLOCATED
)) {

1382 
	`‰ìaddröfo
(
ai
);

1386 
ai
) {

1387 
evutû_addröfo
 *
√xt
 = 
ai
->
ai_√xt
;

1388 i‡(
ai
->
ai_ˇn⁄«me
)

1389 
	`mm_‰ì
(
ai
->
ai_ˇn⁄«me
);

1390 
	`mm_‰ì
(
ai
);

1391 
ai
 = 
√xt
;

1393 
	}
}

1395 
evdns_gëaddröfo_‚
 
	gevdns_gëaddröfo_im∂
 = 
NULL
;

1398 
	$evutû_£t_evdns_gëaddröfo_‚
(
evdns_gëaddröfo_‚
 
‚
)

1400 i‡(!
evdns_gëaddröfo_im∂
)

1401 
evdns_gëaddröfo_im∂
 = 
‚
;

1402 
	}
}

1409 
evutû_gëaddröfo_async
(
evdns_ba£
 *
dns_ba£
,

1410 c⁄° *
nodíame
, c⁄° *
£rv«me
,

1411 c⁄° 
evutû_addröfo
 *
höts_ö
,

1412 (*
cb
)(, 
evutû_addröfo
 *, *), *
¨g
)

1414 i‡(
dns_ba£
 && 
evdns_gëaddröfo_im∂
) {

1415 
	`evdns_gëaddröfo_im∂
(

1416 
dns_ba£
, 
nodíame
, 
£rv«me
, 
höts_ö
, 
cb
, 
¨g
);

1418 
evutû_addröfo
 *
ai
=
NULL
;

1419 
îr
;

1420 
îr
 = 
	`evutû_gëaddröfo
(
nodíame
, 
£rv«me
, 
höts_ö
, &
ai
);

1421 
	`cb
(
îr
, 
ai
, 
¨g
);

1424 
	}
}

1427 
	$evutû_gai_°ªº‹
(
îr
)

1432 
îr
) {

1433 
EVUTIL_EAI_CANCEL
:

1438 
EVUTIL_EAI_ADDRFAMILY
:

1440 
EVUTIL_EAI_AGAIN
:

1442 
EVUTIL_EAI_BADFLAGS
:

1444 
EVUTIL_EAI_FAIL
:

1446 
EVUTIL_EAI_FAMILY
:

1448 
EVUTIL_EAI_MEMORY
:

1450 
EVUTIL_EAI_NODATA
:

1452 
EVUTIL_EAI_NONAME
:

1454 
EVUTIL_EAI_SERVICE
:

1456 
EVUTIL_EAI_SOCKTYPE
:

1458 
EVUTIL_EAI_SYSTEM
:

1461 #i‡
	`deföed
(
USE_NATIVE_GETADDRINFO
Ë&& deföed(
WIN32
)

1462  
	`gai_°ªº‹A
(
îr
);

1463 #ñi‡
	`deföed
(
USE_NATIVE_GETADDRINFO
)

1464  
	`gai_°ªº‹
(
îr
);

1469 
	}
}

1471 #ifde‡
WIN32


1472 
	#E
(
code
, 
s
Ë{ code, (†" [" #codê" ]"Ë}

	)

1473 °ru˘ { 
	mcode
; c⁄° *
	mmsg
; } 
	gwödows_sockë_îr‹s
[] = {

1474 
E
(
WSAEINTR
, "Interrupted function call"),

1475 
E
(
WSAEACCES
, "Permission denied"),

1476 
E
(
WSAEFAULT
, "Badáddress"),

1477 
E
(
WSAEINVAL
, "Invalidárgument"),

1478 
E
(
WSAEMFILE
, "Too many open files"),

1479 
E
(
WSAEWOULDBLOCK
, "ResourceÅemporarily unavailable"),

1480 
E
(
WSAEINPROGRESS
, "OperationÇow inÖrogress"),

1481 
E
(
WSAEALREADY
, "Operationálready inÖrogress"),

1482 
E
(
WSAENOTSOCK
, "Socket operation onÇonsocket"),

1483 
E
(
WSAEDESTADDRREQ
, "DestinationáddressÑequired"),

1484 
E
(
WSAEMSGSIZE
, "MessageÅooÜong"),

1485 
E
(
WSAEPROTOTYPE
, "Protocol wrong for socket"),

1486 
E
(
WSAENOPROTOOPT
, "BadÖrotocol option"),

1487 
E
(
WSAEPROTONOSUPPORT
, "ProtocolÇot supported"),

1488 
E
(
WSAESOCKTNOSUPPORT
, "SocketÅypeÇot supported"),

1490 
E
(
WSAEOPNOTSUPP
, "OperationÇot supported"),

1491 
E
(
WSAEPFNOSUPPORT
, "Protocol familyÇot supported"),

1492 
E
(
WSAEAFNOSUPPORT
, "Address familyÇot supported byÖrotocol family"),

1493 
E
(
WSAEADDRINUSE
, "Addressálready in use"),

1494 
E
(
WSAEADDRNOTAVAIL
, "CannotássignÑequestedáddress"),

1495 
E
(
WSAENETDOWN
, "Network is down"),

1496 
E
(
WSAENETUNREACH
, "Network is unreachable"),

1497 
E
(
WSAENETRESET
, "Network dropped connection onÑeset"),

1498 
E
(
WSAECONNABORTED
, "Software caused connectionábort"),

1499 
E
(
WSAECONNRESET
, "ConnectionÑeset byÖeer"),

1500 
E
(
WSAENOBUFS
, "No buffer spaceávailable"),

1501 
E
(
WSAEISCONN
, "Socket isálready connected"),

1502 
E
(
WSAENOTCONN
, "Socket isÇot connected"),

1503 
E
(
WSAESHUTDOWN
, "Cannot sendáfter socket shutdown"),

1504 
E
(
WSAETIMEDOUT
, "ConnectionÅimed out"),

1505 
E
(
WSAECONNREFUSED
, "ConnectionÑefused"),

1506 
E
(
WSAEHOSTDOWN
, "Host is down"),

1507 
E
(
WSAEHOSTUNREACH
, "NoÑouteÅo host"),

1508 
E
(
WSAEPROCLIM
, "Too manyÖrocesses"),

1511 
E
(
WSASYSNOTREADY
, "Network subsystem is unavailable"),

1512 
E
(
WSAVERNOTSUPPORTED
, "Winsock.dll out ofÑange"),

1513 
E
(
WSANOTINITIALISED
, "Successful WSAStartupÇot yetÖerformed"),

1514 
E
(
WSAEDISCON
, "Graceful shutdownÇow inÖrogress"),

1515 #ifde‡
WSATYPE_NOT_FOUND


1516 
E
(
WSATYPE_NOT_FOUND
, "ClassÅypeÇot found"),

1518 
E
(
WSAHOST_NOT_FOUND
, "HostÇot found"),

1519 
E
(
WSATRY_AGAIN
, "Nonauthoritative hostÇot found"),

1520 
E
(
WSANO_RECOVERY
, "This isáÇonrecoverableÉrror"),

1521 
E
(
WSANO_DATA
, "ValidÇame,Ço dataÑecord ofÑequestedÅype)"),

1531 { -1, 
NULL
 },

1533 #unde‡
E


1536 
	$evutû_sockë_îr‹_to_°rög
(
îrcode
)

1539 
i
;

1540 
i
=0; 
wödows_sockë_îr‹s
[i].
code
 >= 0; ++i) {

1541 i‡(
îrcode
 =
wödows_sockë_îr‹s
[
i
].
code
)

1542  
wödows_sockë_îr‹s
[
i
].
msg
;

1544  
	`°ªº‹
(
îrcode
);

1545 
	}
}

1549 
	$evutû_¢¥ötf
(*
buf
, 
size_t
 
buÊí
, c⁄° *
f‹m©
, ...)

1551 
r
;

1552 
va_li°
 
≠
;

1553 
	`va_°¨t
(
≠
, 
f‹m©
);

1554 
r
 = 
	`evutû_v¢¥ötf
(
buf
, 
buÊí
, 
f‹m©
, 
≠
);

1555 
	`va_íd
(
≠
);

1556  
r
;

1557 
	}
}

1560 
	$evutû_v¢¥ötf
(*
buf
, 
size_t
 
buÊí
, c⁄° *
f‹m©
, 
va_li°
 
≠
)

1562 
r
;

1563 i‡(!
buÊí
)

1565 #ifde‡
_MSC_VER


1566 
r
 = 
	`_v¢¥ötf
(
buf
, 
buÊí
, 
f‹m©
, 
≠
);

1567 i‡(
r
 < 0)

1568 
r
 = 
	`_vs˝rötf
(
f‹m©
, 
≠
);

1569 #ñi‡
	`deföed
(
sgi
)

1571 
	`_xpg5_v¢¥ötf
(* 
__ª°ri˘
,

1572 
__SGI_LIBC_NAMESPACE_QUALIFIER
 
size_t
,

1573 c⁄° * 
__ª°ri˘
, *);

1575 
r
 = 
	`_xpg5_v¢¥ötf
(
buf
, 
buÊí
, 
f‹m©
, 
≠
);

1577 
r
 = 
	`v¢¥ötf
(
buf
, 
buÊí
, 
f‹m©
, 
≠
);

1579 
buf
[
buÊí
-1] = '\0';

1580  
r
;

1581 
	}
}

1583 
	#USE_INTERNAL_NTOP


	)

1584 
	#USE_INTERNAL_PTON


	)

1587 
	$evutû_öë_¡›
(
af
, c⁄° *
§c
, *
d°
, 
size_t
 
Àn
)

1589 #i‡
	`deföed
(
_EVENT_HAVE_INET_NTOP
Ë&& !deföed(
USE_INTERNAL_NTOP
)

1590  
	`öë_¡›
(
af
, 
§c
, 
d°
, 
Àn
);

1592 i‡(
af
 =
AF_INET
) {

1593 c⁄° 
ö_addr
 *
ö
 = 
§c
;

1594 c⁄° 
ev_uöt32_t
 
a
 = 
	`¡ohl
(
ö
->
s_addr
);

1595 
r
;

1596 
r
 = 
	`evutû_¢¥ötf
(
d°
, 
Àn
, "%d.%d.%d.%d",

1597 ()(
ev_uöt8_t
)((
a
>>24)&0xff),

1598 ()(
ev_uöt8_t
)((
a
>>16)&0xff),

1599 ()(
ev_uöt8_t
)((
a
>>8 )&0xff),

1600 ()(
ev_uöt8_t
)((
a
 )&0xff));

1601 i‡(
r
<0||(
size_t
Ï>=
Àn
)

1602  
NULL
;

1604  
d°
;

1605 #ifde‡
AF_INET6


1606 } i‡(
af
 =
AF_INET6
) {

1607 c⁄° 
ö6_addr
 *
addr
 = 
§c
;

1608 
buf
[64], *
˝
;

1609 
l⁄ge°G≠Lí
 = 0, 
l⁄ge°G≠Pos
 = -1, 
i
,

1610 
curG≠Pos
 = -1, 
curG≠Lí
 = 0;

1611 
ev_uöt16_t
 
w‹ds
[8];

1612 
i
 = 0; i < 8; ++i) {

1613 
w‹ds
[
i
] =

1614 (((
ev_uöt16_t
)
addr
->
s6_addr
[2*
i
])<<8) +áddr->s6_addr[2*i+1];

1616 i‡(
w‹ds
[0] == 0 && words[1] == 0 && words[2] == 0 && words[3] == 0 &&

1617 
w‹ds
[4] == 0 && ((words[5] == 0 && words[6] && words[7]) ||

1618 (
w‹ds
[5] == 0xffff))) {

1620 i‡(
w‹ds
[5] == 0) {

1621 
	`evutû_¢¥ötf
(
buf
, (buf), "::%d.%d.%d.%d",

1622 
addr
->
s6_addr
[12],áddr->s6_addr[13],

1623 
addr
->
s6_addr
[14],áddr->s6_addr[15]);

1625 
	`evutû_¢¥ötf
(
buf
, (buf), "::%x:%d.%d.%d.%d", 
w‹ds
[5],

1626 
addr
->
s6_addr
[12],áddr->s6_addr[13],

1627 
addr
->
s6_addr
[14],áddr->s6_addr[15]);

1629 i‡(
	`°æí
(
buf
Ë> 
Àn
)

1630  
NULL
;

1631 
	`°æ˝y
(
d°
, 
buf
, 
Àn
);

1632  
d°
;

1634 
i
 = 0;

1635 
i
 < 8) {

1636 i‡(
w‹ds
[
i
] == 0) {

1637 
curG≠Pos
 = 
i
++;

1638 
curG≠Lí
 = 1;

1639 
i
<8 && 
w‹ds
[i] == 0) {

1640 ++
i
; ++
curG≠Lí
;

1642 i‡(
curG≠Lí
 > 
l⁄ge°G≠Lí
) {

1643 
l⁄ge°G≠Pos
 = 
curG≠Pos
;

1644 
l⁄ge°G≠Lí
 = 
curG≠Lí
;

1647 ++
i
;

1650 i‡(
l⁄ge°G≠Lí
<=1)

1651 
l⁄ge°G≠Pos
 = -1;

1653 
˝
 = 
buf
;

1654 
i
 = 0; i < 8; ++i) {

1655 i‡(
w‹ds
[
i
] =0 && 
l⁄ge°G≠Pos
 == i) {

1656 i‡(
i
 == 0)

1657 *
˝
++ = ':';

1658 *
˝
++ = ':';

1659 
i
 < 8 && 
w‹ds
[i] == 0)

1660 ++
i
;

1661 --
i
;

1663 
	`evutû_¢¥ötf
(
˝
,

1664 (
buf
)-(
˝
-buf), "%x", ()
w‹ds
[
i
]);

1665 
˝
 +
	`°æí
(cp);

1666 i‡(
i
 != 7)

1667 *
˝
++ = ':';

1670 *
˝
 = '\0';

1671 i‡(
	`°æí
(
buf
Ë> 
Àn
)

1672  
NULL
;

1673 
	`°æ˝y
(
d°
, 
buf
, 
Àn
);

1674  
d°
;

1677  
NULL
;

1680 
	}
}

1683 
	$evutû_öë_±⁄
(
af
, c⁄° *
§c
, *
d°
)

1685 #i‡
	`deföed
(
_EVENT_HAVE_INET_PTON
Ë&& !deföed(
USE_INTERNAL_PTON
)

1686  
	`öë_±⁄
(
af
, 
§c
, 
d°
);

1688 i‡(
af
 =
AF_INET
) {

1689 
a
,
b
,
c
,
d
;

1690 
m‹e
;

1691 
ö_addr
 *
addr
 = 
d°
;

1692 i‡(
	`ssˇnf
(
§c
, "%d.%d.%d.%d%c", &
a
,&
b
,&
c
,&
d
,&
m‹e
) != 4)

1694 i‡(
a
 < 0 ||á > 255)  0;

1695 i‡(
b
 < 0 || b > 255)  0;

1696 i‡(
c
 < 0 || c > 255)  0;

1697 i‡(
d
 < 0 || d > 255)  0;

1698 
addr
->
s_addr
 = 
	`ht⁄l
((
a
<<24Ë| (
b
<<16Ë| (
c
<<8Ë| 
d
);

1700 #ifde‡
AF_INET6


1701 } i‡(
af
 =
AF_INET6
) {

1702 
ö6_addr
 *
out
 = 
d°
;

1703 
ev_uöt16_t
 
w‹ds
[8];

1704 
g≠Pos
 = -1, 
i
, 
£tW‹ds
=0;

1705 c⁄° *
dŸ
 = 
	`°rchr
(
§c
, '.');

1706 c⁄° *
eow
;

1707 i‡(
dŸ
 =
§c
)

1709 i‡(!
dŸ
)

1710 
eow
 = 
§c
+
	`°æí
(src);

1712 
byã1
,
byã2
,
byã3
,
byã4
;

1713 
m‹e
;

1714 
eow
 = 
dŸ
-1;Éow >
§c
 && 
	`EVUTIL_ISDIGIT
(*eow); --eow)

1716 ++
eow
;

1720 i‡(
	`ssˇnf
(
eow
, "%d.%d.%d.%d%c",

1721 &
byã1
,&
byã2
,&
byã3
,&
byã4
,&
m‹e
) != 4)

1724 i‡(
byã1
 > 255 || byte1 < 0 ||

1725 
byã2
 > 255 || byte2 < 0 ||

1726 
byã3
 > 255 || byte3 < 0 ||

1727 
byã4
 > 255 || byte4 < 0)

1730 
w‹ds
[6] = (
byã1
<<8Ë| 
byã2
;

1731 
w‹ds
[7] = (
byã3
<<8Ë| 
byã4
;

1732 
£tW‹ds
 += 2;

1735 
i
 = 0;

1736 
§c
 < 
eow
) {

1737 i‡(
i
 > 7)

1739 i‡(
	`EVUTIL_ISXDIGIT
(*
§c
)) {

1740 *
√xt
;

1741 
r
 = 
	`°πﬁ
(
§c
, &
√xt
, 16);

1742 i‡(
√xt
 > 4+
§c
)

1744 i‡(
√xt
 =
§c
)

1746 i‡(
r
<0 ||Ñ>65536)

1749 
w‹ds
[
i
++] = (
ev_uöt16_t
)
r
;

1750 
£tW‹ds
++;

1751 
§c
 = 
√xt
;

1752 i‡(*
§c
 !':' && sr¯!
eow
)

1754 ++
§c
;

1755 } i‡(*
§c
 =':' && 
i
 > 0 && 
g≠Pos
==-1) {

1756 
g≠Pos
 = 
i
;

1757 ++
§c
;

1758 } i‡(*
§c
 =':' && 
i
 =0 && src[1] =':' && 
g≠Pos
==-1) {

1759 
g≠Pos
 = 
i
;

1760 
§c
 += 2;

1766 i‡(
£tW‹ds
 > 8 ||

1767 (
£tW‹ds
 =8 && 
g≠Pos
 != -1) ||

1768 (
£tW‹ds
 < 8 && 
g≠Pos
 == -1))

1771 i‡(
g≠Pos
 >= 0) {

1772 
nToMove
 = 
£tW‹ds
 - (
dŸ
 ? 2 : 0Ë- 
g≠Pos
;

1773 
g≠Lí
 = 8 - 
£tW‹ds
;

1775 i‡(
nToMove
 < 0)

1777 
	`memmove
(&
w‹ds
[
g≠Pos
+
g≠Lí
], &words[gapPos],

1778 (
ev_uöt16_t
)*
nToMove
);

1779 
	`mem£t
(&
w‹ds
[
g≠Pos
], 0, (
ev_uöt16_t
)*
g≠Lí
);

1781 
i
 = 0; i < 8; ++i) {

1782 
out
->
s6_addr
[2*
i
 ] = 
w‹ds
[i] >> 8;

1783 
out
->
s6_addr
[2*
i
+1] = 
w‹ds
[i] & 0xff;

1792 
	}
}

1795 
	$evutû_∑r£_sockaddr_p‹t
(c⁄° *
ù_as_°rög
, 
sockaddr
 *
out
, *
ouéí
)

1797 
p‹t
;

1798 
buf
[128];

1799 c⁄° *
˝
, *
addr_∑π
, *
p‹t_∑π
;

1800 
is_ùv6
;

1809 
˝
 = 
	`°rchr
(
ù_as_°rög
, ':');

1810 i‡(*
ù_as_°rög
 == '[') {

1811 
Àn
;

1812 i‡(!(
˝
 = 
	`°rchr
(
ù_as_°rög
, ']'))) {

1815 
Àn
 = (Ë–
˝
-(
ù_as_°rög
 + 1) );

1816 i‡(
Àn
 > ()(
buf
)-1) {

1819 
	`mem˝y
(
buf
, 
ù_as_°rög
+1, 
Àn
);

1820 
buf
[
Àn
] = '\0';

1821 
addr_∑π
 = 
buf
;

1822 i‡(
˝
[1] == ':')

1823 
p‹t_∑π
 = 
˝
+2;

1825 
p‹t_∑π
 = 
NULL
;

1826 
is_ùv6
 = 1;

1827 } i‡(
˝
 && 
	`°rchr
(cp+1, ':')) {

1828 
is_ùv6
 = 1;

1829 
addr_∑π
 = 
ù_as_°rög
;

1830 
p‹t_∑π
 = 
NULL
;

1831 } i‡(
˝
) {

1832 
is_ùv6
 = 0;

1833 i‡(
˝
 - 
ù_as_°rög
 > ()(
buf
)-1) {

1836 
	`mem˝y
(
buf
, 
ù_as_°rög
, 
˝
-ip_as_string);

1837 
buf
[
˝
-
ù_as_°rög
] = '\0';

1838 
addr_∑π
 = 
buf
;

1839 
p‹t_∑π
 = 
˝
+1;

1841 
addr_∑π
 = 
ù_as_°rög
;

1842 
p‹t_∑π
 = 
NULL
;

1843 
is_ùv6
 = 0;

1846 i‡(
p‹t_∑π
 =
NULL
) {

1847 
p‹t
 = 0;

1849 
p‹t
 = 
	`©oi
(
p‹t_∑π
);

1850 i‡(
p‹t
 <= 0 ||Öort > 65535) {

1855 i‡(!
addr_∑π
)

1857 #ifde‡
AF_INET6


1858 i‡(
is_ùv6
)

1860 
sockaddr_ö6
 
sö6
;

1861 
	`mem£t
(&
sö6
, 0, (sin6));

1862 #ifde‡
_EVENT_HAVE_STRUCT_SOCKADDR_IN6_SIN6_LEN


1863 
sö6
.
sö6_Àn
 = (sin6);

1865 
sö6
.
sö6_Ámûy
 = 
AF_INET6
;

1866 
sö6
.
sö6_p‹t
 = 
	`ht⁄s
(
p‹t
);

1867 i‡(1 !
	`evutû_öë_±⁄
(
AF_INET6
, 
addr_∑π
, &
sö6
.
sö6_addr
))

1869 i‡(()(
sö6
Ë> *
ouéí
)

1871 
	`mem£t
(
out
, 0, *
ouéí
);

1872 
	`mem˝y
(
out
, &
sö6
, (sin6));

1873 *
ouéí
 = (
sö6
);

1879 
sockaddr_ö
 
sö
;

1880 
	`mem£t
(&
sö
, 0, (sin));

1881 #ifde‡
_EVENT_HAVE_STRUCT_SOCKADDR_IN_SIN_LEN


1882 
sö
.
sö_Àn
 = (sin);

1884 
sö
.
sö_Ámûy
 = 
AF_INET
;

1885 
sö
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

1886 i‡(1 !
	`evutû_öë_±⁄
(
AF_INET
, 
addr_∑π
, &
sö
.
sö_addr
))

1888 i‡(()(
sö
Ë> *
ouéí
)

1890 
	`mem£t
(
out
, 0, *
ouéí
);

1891 
	`mem˝y
(
out
, &
sö
, (sin));

1892 *
ouéí
 = (
sö
);

1895 
	}
}

1898 
	$evutû_f‹m©_sockaddr_p‹t
(c⁄° 
sockaddr
 *
ß
, *
out
, 
size_t
 
ouéí
)

1900 
b
[128];

1901 c⁄° *
ªs
=
NULL
;

1902 
p‹t
;

1903 i‡(
ß
->
ß_Ámûy
 =
AF_INET
) {

1904 c⁄° 
sockaddr_ö
 *
sö
 = (c⁄° sockaddr_ö*)
ß
;

1905 
ªs
 = 
	`evutû_öë_¡›
(
AF_INET
, &
sö
->
sö_addr
,
b
,(b));

1906 
p‹t
 = 
	`¡ohs
(
sö
->
sö_p‹t
);

1907 i‡(
ªs
) {

1908 
	`evutû_¢¥ötf
(
out
, 
ouéí
, "%s:%d", 
b
, 
p‹t
);

1909  
out
;

1911 } i‡(
ß
->
ß_Ámûy
 =
AF_INET6
) {

1912 c⁄° 
sockaddr_ö6
 *
sö6
 = (c⁄° sockaddr_ö6*)
ß
;

1913 
ªs
 = 
	`evutû_öë_¡›
(
AF_INET6
, &
sö6
->
sö6_addr
,
b
,(b));

1914 
p‹t
 = 
	`¡ohs
(
sö6
->
sö6_p‹t
);

1915 i‡(
ªs
) {

1916 
	`evutû_¢¥ötf
(
out
, 
ouéí
, "[%s]:%d", 
b
, 
p‹t
);

1917  
out
;

1921 
	`evutû_¢¥ötf
(
out
, 
ouéí
, "<addr with socktype %d>",

1922 ()
ß
->
ß_Ámûy
);

1923  
out
;

1924 
	}
}

1927 
	$evutû_sockaddr_cmp
(c⁄° 
sockaddr
 *
ß1
, c⁄° sockadd∏*
ß2
,

1928 
ö˛ude_p‹t
)

1930 
r
;

1931 i‡(0 !(
r
 = (
ß1
->
ß_Ámûy
 - 
ß2
->sa_family)))

1932  
r
;

1934 i‡(
ß1
->
ß_Ámûy
 =
AF_INET
) {

1935 c⁄° 
sockaddr_ö
 *
sö1
, *
sö2
;

1936 
sö1
 = (c⁄° 
sockaddr_ö
 *)
ß1
;

1937 
sö2
 = (c⁄° 
sockaddr_ö
 *)
ß2
;

1938 i‡(
sö1
->
sö_addr
.
s_addr
 < 
sö2
->sin_addr.s_addr)

1940 i‡(
sö1
->
sö_addr
.
s_addr
 > 
sö2
->sin_addr.s_addr)

1942 i‡(
ö˛ude_p‹t
 &&

1943 (
r
 = (()
sö1
->
sö_p‹t
 - ()
sö2
->sin_port)))

1944  
r
;

1948 #ifde‡
AF_INET6


1949 i‡(
ß1
->
ß_Ámûy
 =
AF_INET6
) {

1950 c⁄° 
sockaddr_ö6
 *
sö1
, *
sö2
;

1951 
sö1
 = (c⁄° 
sockaddr_ö6
 *)
ß1
;

1952 
sö2
 = (c⁄° 
sockaddr_ö6
 *)
ß2
;

1953 i‡((
r
 = 
	`memcmp
(
sö1
->
sö6_addr
.
s6_addr
, 
sö2
->sin6_addr.s6_addr, 16)))

1954  
r
;

1955 i‡(
ö˛ude_p‹t
 &&

1956 (
r
 = (()
sö1
->
sö6_p‹t
 - ()
sö2
->sin6_port)))

1957  
r
;

1963 
	}
}

1970 c⁄° 
ev_uöt32_t
 
	gEVUTIL_ISALPHA_TABLE
[8] =

1972 c⁄° 
ev_uöt32_t
 
	gEVUTIL_ISALNUM_TABLE
[8] =

1974 c⁄° 
ev_uöt32_t
 
	gEVUTIL_ISSPACE_TABLE
[8] = { 0x3e00, 0x1, 0, 0, 0, 0, 0, 0 };

1975 c⁄° 
ev_uöt32_t
 
	gEVUTIL_ISXDIGIT_TABLE
[8] =

1977 c⁄° 
ev_uöt32_t
 
	gEVUTIL_ISDIGIT_TABLE
[8] = { 0, 0x3ff0000, 0, 0, 0, 0, 0, 0 };

1978 c⁄° 
ev_uöt32_t
 
	gEVUTIL_ISPRINT_TABLE
[8] =

1980 c⁄° 
ev_uöt32_t
 
	gEVUTIL_ISUPPER_TABLE
[8] = { 0, 0, 0x7fffffe, 0, 0, 0, 0, 0 };

1981 c⁄° 
ev_uöt32_t
 
	gEVUTIL_ISLOWER_TABLE
[8] = { 0, 0, 0, 0x7fffffe, 0, 0, 0, 0 };

1984 c⁄° 
	gEVUTIL_TOUPPER_TABLE
[256] = {

2002 c⁄° 
	gEVUTIL_TOLOWER_TABLE
[256] = {

2021 
	#IMPL_CTYPE_FN
(
«me
) \

2022 
EVUTIL_
##
	`«me
(
c
) { \

2023 
ev_uöt8_t
 
u
 = 
c
; \

2024  !!(
EVUTIL_
##
«me
##
_TABLE
[(
u
 >> 5) & 7] & (1 << (u & 31))); \

2025 }

	)

2026 
	$IMPL_CTYPE_FN
(
ISALPHA
)

2027 
	$IMPL_CTYPE_FN
(
ISALNUM
)

2028 
	$IMPL_CTYPE_FN
(
ISSPACE
)

2029 
	$IMPL_CTYPE_FN
(
ISDIGIT
)

2030 
	$IMPL_CTYPE_FN
(
ISXDIGIT
)

2031 
	$IMPL_CTYPE_FN
(
ISPRINT
)

2032 
	$IMPL_CTYPE_FN
(
ISLOWER
)

2033 
	$IMPL_CTYPE_FN
(
ISUPPER
)

2035 
	$EVUTIL_TOLOWER
(
c
)

2037  (()
EVUTIL_TOLOWER_TABLE
[(
ev_uöt8_t
)
c
]);

2038 
	}
}

2039 
	$EVUTIL_TOUPPER
(
c
)

2041  (()
EVUTIL_TOUPPER_TABLE
[(
ev_uöt8_t
)
c
]);

2042 
	}
}

2044 
	$evutû_ascii_°rˇ£cmp
(c⁄° *
s1
, c⁄° *
s2
)

2046 
c1
, 
c2
;

2048 
c1
 = 
	`EVUTIL_TOLOWER
(*
s1
++);

2049 
c2
 = 
	`EVUTIL_TOLOWER
(*
s2
++);

2050 i‡(
c1
 < 
c2
)

2052 i‡(
c1
 > 
c2
)

2054 i‡(
c1
 == 0)

2057 
	}
}

2058 
	$evutû_ascii_°∫ˇ£cmp
(c⁄° *
s1
, c⁄° *
s2
, 
size_t
 
n
)

2060 
c1
, 
c2
;

2061 
n
--) {

2062 
c1
 = 
	`EVUTIL_TOLOWER
(*
s1
++);

2063 
c2
 = 
	`EVUTIL_TOLOWER
(*
s2
++);

2064 i‡(
c1
 < 
c2
)

2066 i‡(
c1
 > 
c2
)

2068 i‡(
c1
 == 0)

2072 
	}
}

2075 
	$evutû_is£tugid
()

2077 #ifde‡
_EVENT_HAVE_ISSETUGID


2078  
	`is£tugid
();

2081 #ifde‡
_EVENT_HAVE_GETEUID


2082 i‡(
	`gëuid
(Ë!
	`gëeuid
())

2085 #ifde‡
_EVENT_HAVE_GETEGID


2086 i‡(
	`gëgid
(Ë!
	`gëegid
())

2091 
	}
}

2094 
	$evutû_gëív
(c⁄° *
v¨«me
)

2096 i‡(
	`evutû_is£tugid
())

2097  
NULL
;

2099  
	`gëív
(
v¨«me
);

2100 
	}
}

2103 
	$_evutû_wókønd
()

2105 #ifde‡
WIN32


2106  
	`ønd
();

2108  
	`øndom
();

2110 
	}
}

2113 
	$evutû_sockaddr_is_lo›back
(c⁄° 
sockaddr
 *
addr
)

2115 c⁄° 
LOOPBACK_S6
[16] =

2117 i‡(
addr
->
ß_Ámûy
 =
AF_INET
) {

2118 
sockaddr_ö
 *
sö
 = (sockaddr_ö *)
addr
;

2119  (
	`¡ohl
(
sö
->
sö_addr
.
s_addr
) & 0xff000000) == 0x7f000000;

2120 } i‡(
addr
->
ß_Ámûy
 =
AF_INET6
) {

2121 
sockaddr_ö6
 *
sö6
 = (sockaddr_ö6 *)
addr
;

2122  !
	`memcmp
(
sö6
->
sö6_addr
.
s6_addr
, 
LOOPBACK_S6
, 16);

2125 
	}
}

2127 
	#MAX_SECONDS_IN_MSEC_LONG
 \

2128 (((
LONG_MAX
Ë- 999Ë/ 1000)

	)

2131 
	$evutû_tv_to_m£c
(c⁄° 
timevÆ
 *
tv
)

2133 i‡(
tv
->
tv_u£c
 > 1000000 ||Åv->
tv_£c
 > 
MAX_SECONDS_IN_MSEC_LONG
)

2136  (
tv
->
tv_£c
 * 1000Ë+ (—v->
tv_u£c
 + 999) / 1000);

2137 
	}
}

2140 
	$evutû_hex_ch¨_to_öt
(
c
)

2142 
c
)

2162 
	}
}

2164 #ifde‡
WIN32


2165 
HANDLE


2166 
	$evutû_lﬂd_wödows_sy°em_libøry
(c⁄° 
TCHAR
 *
libøry_«me
)

2168 
TCHAR
 
∑th
[
MAX_PATH
];

2169 
n
;

2170 
n
 = 
	`GëSy°emDúe˘‹y
(
∑th
, 
MAX_PATH
);

2171 i‡(
n
 =0 ||Ç + 
	`_tc¶í
(
libøry_«me
Ë+ 2 >
MAX_PATH
)

2173 
	`_tcsˇt
(
∑th
, 
	`TEXT
("\\"));

2174 
	`_tcsˇt
(
∑th
, 
libøry_«me
);

2175  
	`LﬂdLibøry
(
∑th
);

2176 
	}
}

	@evutil.h

26 #i‚de‡
_EVUTIL_H_


27 
	#_EVUTIL_H_


	)

37 
	~<evít2/utû.h
>

	@evutil_rand.c

35 
	~"evít2/evít-c⁄fig.h
"

37 
	~<limôs.h
>

39 
	~"utû-öã∫Æ.h
"

40 
	~"evthªad-öã∫Æ.h
"

42 #ifde‡
_EVENT_HAVE_ARC4RANDOM


43 
	~<°dlib.h
>

44 
	~<°rög.h
>

46 
	$evutû_£cuª_∫g_öô
()

49 (Ë
	`¨c4øndom
();

51 
	}
}

53 
	$evutû_£cuª_∫g_globÆ_£tup_locks_
(c⁄° 
íabÀ_locks
)

56 
	}
}

59 
	$ev_¨c4øndom_buf
(*
buf
, 
size_t
 
n
)

61 #i‡
	`deföed
(
_EVENT_HAVE_ARC4RANDOM_BUF
Ë&& !deföed(
__APPLE__
)

62  
	`¨c4øndom_buf
(
buf
, 
n
);

64 *
b
 = 
buf
;

66 #i‡
	`deföed
(
_EVENT_HAVE_ARC4RANDOM_BUF
)

73 i‡(
¨c4øndom_buf
 !
NULL
) {

74  
	`¨c4øndom_buf
(
buf
, 
n
);

79 i‡(
n
 >4 && ((
ev_uöçå_t
)
b
) & 3) {

80 
ev_uöt32_t
 
u
 = 
	`¨c4øndom
();

81 
n_byãs
 = 4 - (((
ev_uöçå_t
)
b
) & 3);

82 
	`mem˝y
(
b
, &
u
, 
n_byãs
);

83 
b
 +
n_byãs
;

84 
n
 -
n_byãs
;

86 
n
 >= 4) {

87 *(
ev_uöt32_t
*)
b
 = 
	`¨c4øndom
();

88 
b
 += 4;

89 
n
 -= 4;

91 i‡(
n
) {

92 
ev_uöt32_t
 
u
 = 
	`¨c4øndom
();

93 
	`mem˝y
(
b
, &
u
, 
n
);

96 
	}
}

100 #ifde‡
_EVENT_ssize_t


101 
	#ssize_t
 
_EVENT_SSIZE_t


	)

103 
	#ARC4RANDOM_EXPORT
 

	)

104 
	#_ARC4_LOCK
(Ë
	`EVLOCK_LOCK
(
¨c4ønd_lock
, 0)

	)

105 
	#_ARC4_UNLOCK
(Ë
	`EVLOCK_UNLOCK
(
¨c4ønd_lock
, 0)

	)

106 #i‚de‡
_EVENT_DISABLE_THREAD_SUPPORT


107 *
	g¨c4ønd_lock
;

110 
	#ARC4RANDOM_UINT32
 
ev_uöt32_t


	)

111 
	#ARC4RANDOM_NOSTIR


	)

112 
	#ARC4RANDOM_NORANDOM


	)

113 
	#ARC4RANDOM_NOUNIFORM


	)

115 
	~"¨c4øndom.c
"

117 #i‚de‡
_EVENT_DISABLE_THREAD_SUPPORT


119 
	$evutû_£cuª_∫g_globÆ_£tup_locks_
(c⁄° 
íabÀ_locks
)

121 
	`EVTHREAD_SETUP_GLOBAL_LOCK
(
¨c4ønd_lock
, 0);

123 
	}
}

127 
	$evutû_£cuª_∫g_öô
()

129 
vÆ
;

131 
	`_ARC4_LOCK
();

132 i‡(!
¨c4_£eded_ok
)

133 
	`¨c4_°ú
();

134 
vÆ
 = 
¨c4_£eded_ok
 ? 0 : -1;

135 
	`_ARC4_UNLOCK
();

136  
vÆ
;

137 
	}
}

140 
	$ev_¨c4øndom_buf
(*
buf
, 
size_t
 
n
)

142 
	`¨c4øndom_buf
(
buf
, 
n
);

143 
	}
}

148 
	$evutû_£cuª_∫g_gë_byãs
(*
buf
, 
size_t
 
n
)

150 
	`ev_¨c4øndom_buf
(
buf
, 
n
);

151 
	}
}

154 
	$evutû_£cuª_∫g_add_byãs
(c⁄° *
buf
, 
size_t
 
n
)

156 
	`¨c4øndom_addøndom
((*)
buf
,

157 
n
>(
size_t
)
INT_MAX
 ? INT_MAX : ()n);

158 
	}
}

	@ht-internal.h

8 #i‚de‡
_EVENT_HT_H


9 
	#_EVENT_HT_H


	)

11 
	#HT_HEAD
(
«me
, 
ty≥
) \

12 
	s«me
 { \

14 
ty≥
 **
hth_èbÀ
; \

16 
hth_èbÀ_Àngth
; \

18 
hth_n_íåõs
; \

20 
hth_lﬂd_limô
; \

22 
hth_¥ime_idx
; \

23 }

	)

25 
	#HT_INITIALIZER
() \

26 { 
NULL
, 0, 0, 0, -1 }

	)

28 #ifde‡
HT_CACHE_HASH_VALUES


29 
	#HT_ENTRY
(
ty≥
) \

31 
ty≥
 *
hã_√xt
; \

32 
hã_hash
; \

33 }

	)

35 
	#HT_ENTRY
(
ty≥
) \

37 
ty≥
 *
hã_√xt
; \

38 }

	)

41 
	#HT_EMPTY
(
hód
) \

42 ((
hód
)->
hth_n_íåõs
 =0)

	)

45 
	#HT_SIZE
(
hód
) \

46 ((
hód
)->
hth_n_íåõs
)

	)

48 
	#HT_FIND
(
«me
, 
hód
, 
ñm
Ë«me##
	`_HT_FIND
((hód), (ñm))

	)

49 
	#HT_INSERT
(
«me
, 
hód
, 
ñm
Ë«me##
	`_HT_INSERT
((hód), (ñm))

	)

50 
	#HT_REPLACE
(
«me
, 
hód
, 
ñm
Ë«me##
	`_HT_REPLACE
((hód), (ñm))

	)

51 
	#HT_REMOVE
(
«me
, 
hód
, 
ñm
Ë«me##
	`_HT_REMOVE
((hód), (ñm))

	)

52 
	#HT_START
(
«me
, 
hód
Ë«me##
	`_HT_START
(hód)

	)

53 
	#HT_NEXT
(
«me
, 
hód
, 
ñm
Ë«me##
	`_HT_NEXT
((hód), (ñm))

	)

54 
	#HT_NEXT_RMV
(
«me
, 
hód
, 
ñm
Ë«me##
	`_HT_NEXT_RMV
((hód), (ñm))

	)

55 
	#HT_CLEAR
(
«me
, 
hód
Ë«me##
	`_HT_CLEAR
(hód)

	)

56 
	#HT_INIT
(
«me
, 
hód
Ë«me##
	`_HT_INIT
(hód)

	)

58 
ölöe
 

59 
	$ht_im¥ove_hash
(
h
)

63 
h
 += ~(h << 9);

64 
h
 ^= ((h >> 14) | (h << 18));

65 
h
 += (h << 4);

66 
h
 ^= ((h >> 10) | (h << 22));

67  
h
;

68 
	}
}

72 
ölöe
 

73 
	$ht_°rög_hash
(c⁄° *
s
)

75 
h
 = 0;

76 
m
 = 1;

77 *
s
) {

78 
h
 +((sig√d )*
s
++)*
m
;

79 
m
 = (m<<5)-1;

81  
h
;

82 
	}
}

86 
ölöe
 

87 
	$ht_°rög_hash
(c⁄° *
s
)

89 
h
;

90 c⁄° *
˝
 = (c⁄° *)
s
;

91 
h
 = *
˝
 << 7;

92 *
˝
) {

93 
h
 = (1000003*hË^ *
˝
++;

96 
h
 ^()(
˝
-(c⁄° *)
s
);

97  
h
;

98 
	}
}

100 #ifde‡
HT_CACHE_HASH_VALUES


101 
	#_HT_SET_HASH
(
ñm
, 
fõld
, 
hash‚
) \

102 dÿ{ (
ñm
)->
fõld
.
hã_hash
 = 
	`hash‚
”lm); } 0)

	)

103 
	#_HT_SET_HASHVAL
(
ñm
, 
fõld
, 
vÆ
) \

104 dÿ{ (
ñm
)->
fõld
.
hã_hash
 = (
vÆ
); } 0)

	)

105 
	#_HT_ELT_HASH
(
ñm
, 
fõld
, 
hash‚
) \

106 ((
ñm
)->
fõld
.
hã_hash
)

	)

108 
	#_HT_SET_HASH
(
ñm
, 
fõld
, 
hash‚
) \

109 (()0)

	)

110 
	#_HT_ELT_HASH
(
ñm
, 
fõld
, 
hash‚
) \

111 (
	`hash‚
(
ñm
))

	)

112 
	#_HT_SET_HASHVAL
(
ñm
, 
fõld
, 
vÆ
) \

113 (()0)

	)

117 
	#_HT_BUCKET
(
hód
, 
fõld
, 
ñm
, 
hash‚
) \

118 ((
hód
)->
hth_èbÀ
[
	`_HT_ELT_HASH
(
ñm
,
fõld
,
hash‚
Ë% hód->
hth_èbÀ_Àngth
])

	)

120 
	#HT_FOREACH
(
x
, 
«me
, 
hód
) \

121 (
x
Ë
	`HT_START
(
«me
, 
hód
); \

122 (
x
Ë!
NULL
; \

123 (
x
Ë
	`HT_NEXT
(
«me
, 
hód
, x))

	)

125 
	#HT_PROTOTYPE
(
«me
, 
ty≥
, 
fõld
, 
hash‚
, 
eq‚
) \

126 
«me
##
	`_HT_GROW
(«mê*
ht
, 
mö_ˇ∑côy
); \

127 
«me
##
	`_HT_CLEAR
(«mê*
ht
); \

128 
_
##
«me
##
	`_HT_REP_IS_BAD
(c⁄° «mê*
ht
); \

129 
ölöe
 \

130 
«me
##
	`_HT_INIT
(«mê*
hód
) { \

131 
hód
->
hth_èbÀ_Àngth
 = 0; \

132 
hód
->
hth_èbÀ
 = 
NULL
; \

133 
hód
->
hth_n_íåõs
 = 0; \

134 
hód
->
hth_lﬂd_limô
 = 0; \

135 
hód
->
hth_¥ime_idx
 = -1; \

139 
ölöe
 
ty≥
 ** \

140 
_
##
«me
##
	`_HT_FIND_P
(«mê*
hód
, 
ty≥
 *
ñm
) \

142 
ty≥
 **
p
; \

143 i‡(!
hód
->
hth_èbÀ
) \

144  
NULL
; \

145 
p
 = &
	`_HT_BUCKET
(
hód
, 
fõld
, 
ñm
, 
hash‚
); \

146 *
p
) { \

147 i‡(
	`eq‚
(*
p
, 
ñm
)) \

148  
p
; \

149 
p
 = &(*p)->
fõld
.
hã_√xt
; \

151  
p
; \

155 
ölöe
 
ty≥
 * \

156 
«me
##
	`_HT_FIND
(c⁄° «mê*
hód
, 
ty≥
 *
ñm
) \

158 
ty≥
 **
p
; \

159 
«me
 *
h
 = («mê*Ë
hód
; \

160 
	`_HT_SET_HASH
(
ñm
, 
fõld
, 
hash‚
); \

161 
p
 = 
_
##
«me
##
	`_HT_FIND_P
(
h
, 
ñm
); \

162  
p
 ? *∞: 
NULL
; \

166 
ölöe
 \

167 
«me
##
	`_HT_INSERT
(«mê*
hód
, 
ty≥
 *
ñm
) \

169 
ty≥
 **
p
; \

170 i‡(!
hód
->
hth_èbÀ
 || hód->
hth_n_íåõs
 >hód->
hth_lﬂd_limô
) \

171 
«me
##
	`_HT_GROW
(
hód
, hód->
hth_n_íåõs
+1); \

172 ++
hód
->
hth_n_íåõs
; \

173 
	`_HT_SET_HASH
(
ñm
, 
fõld
, 
hash‚
); \

174 
p
 = &
	`_HT_BUCKET
(
hód
, 
fõld
, 
ñm
, 
hash‚
); \

175 
ñm
->
fõld
.
hã_√xt
 = *
p
; \

176 *
p
 = 
ñm
; \

181 
ölöe
 
ty≥
 * \

182 
«me
##
	`_HT_REPLACE
(«mê*
hód
, 
ty≥
 *
ñm
) \

184 
ty≥
 **
p
, *
r
; \

185 i‡(!
hód
->
hth_èbÀ
 || hód->
hth_n_íåõs
 >hód->
hth_lﬂd_limô
) \

186 
«me
##
	`_HT_GROW
(
hód
, hód->
hth_n_íåõs
+1); \

187 
	`_HT_SET_HASH
(
ñm
, 
fõld
, 
hash‚
); \

188 
p
 = 
_
##
«me
##
	`_HT_FIND_P
(
hód
, 
ñm
); \

189 
r
 = *
p
; \

190 *
p
 = 
ñm
; \

191 i‡(
r
 && (r!=
ñm
)) { \

192 
ñm
->
fõld
.
hã_√xt
 = 
r
->field.hte_next; \

193 
r
->
fõld
.
hã_√xt
 = 
NULL
; \

194  
r
; \

196 ++
hód
->
hth_n_íåõs
; \

197  
NULL
; \

202 
ölöe
 
ty≥
 * \

203 
«me
##
	`_HT_REMOVE
(«mê*
hód
, 
ty≥
 *
ñm
) \

205 
ty≥
 **
p
, *
r
; \

206 
	`_HT_SET_HASH
(
ñm
, 
fõld
, 
hash‚
); \

207 
p
 = 
_
##
«me
##
	`_HT_FIND_P
(
hód
,
ñm
); \

208 i‡(!
p
 || !*p) \

209  
NULL
; \

210 
r
 = *
p
; \

211 *
p
 = 
r
->
fõld
.
hã_√xt
; \

212 
r
->
fõld
.
hã_√xt
 = 
NULL
; \

213 --
hód
->
hth_n_íåõs
; \

214  
r
; \

220 
ölöe
 \

221 
«me
##
	`_HT_FOREACH_FN
(«mê*
hód
, \

222 (*
‚
)(
ty≥
 *, *), \

223 *
d©a
) \

225 
idx
; \

226 
ty≥
 **
p
, **
√xç
, *
√xt
; \

227 i‡(!
hód
->
hth_èbÀ
) \

229 
idx
=0; idx < 
hód
->
hth_èbÀ_Àngth
; ++idx) { \

230 
p
 = &
hód
->
hth_èbÀ
[
idx
]; \

231 *
p
) { \

232 
√xç
 = &(*
p
)->
fõld
.
hã_√xt
; \

233 
√xt
 = *
√xç
; \

234 i‡(
	`‚
(*
p
, 
d©a
)) { \

235 --
hód
->
hth_n_íåõs
; \

236 *
p
 = 
√xt
; \

238 
p
 = 
√xç
; \

246 
ölöe
 
ty≥
 ** \

247 
«me
##
	`_HT_START
(«mê*
hód
) \

249 
b
 = 0; \

250 
b
 < 
hód
->
hth_èbÀ_Àngth
) { \

251 i‡(
hód
->
hth_èbÀ
[
b
]) \

252  &
hód
->
hth_èbÀ
[
b
]; \

253 ++
b
; \

255  
NULL
; \

262 
ölöe
 
ty≥
 ** \

263 
«me
##
	`_HT_NEXT
(«mê*
hód
, 
ty≥
 **
ñm
) \

265 i‡((*
ñm
)->
fõld
.
hã_√xt
) { \

266  &(*
ñm
)->
fõld
.
hã_√xt
; \

268 
b
 = (
	`_HT_ELT_HASH
(*
ñm
, 
fõld
, 
hash‚
Ë% 
hód
->
hth_èbÀ_Àngth
)+1; \

269 
b
 < 
hód
->
hth_èbÀ_Àngth
) { \

270 i‡(
hód
->
hth_èbÀ
[
b
]) \

271  &
hód
->
hth_èbÀ
[
b
]; \

272 ++
b
; \

274  
NULL
; \

277 
ölöe
 
ty≥
 ** \

278 
«me
##
	`_HT_NEXT_RMV
(«mê*
hód
, 
ty≥
 **
ñm
) \

280 
h
 = 
	`_HT_ELT_HASH
(*
ñm
, 
fõld
, 
hash‚
); \

281 *
ñm
 = (*ñm)->
fõld
.
hã_√xt
; \

282 --
hód
->
hth_n_íåõs
; \

283 i‡(*
ñm
) { \

284  
ñm
; \

286 
b
 = (
h
 % 
hód
->
hth_èbÀ_Àngth
)+1; \

287 
b
 < 
hód
->
hth_èbÀ_Àngth
) { \

288 i‡(
hód
->
hth_èbÀ
[
b
]) \

289  &
hód
->
hth_èbÀ
[
b
]; \

290 ++
b
; \

292  
NULL
; \

294 }

	)

296 
	#HT_GENERATE
(
«me
, 
ty≥
, 
fõld
, 
hash‚
, 
eq‚
, 
lﬂd
, 
mÆloc‚
, \

297 
ªÆloc‚
, 
‰ì‚
) \

298 
«me
##
_PRIMES
[] = { \

307 
«me
##
_N_PRIMES
 = \

308 ()((
«me
##
_PRIMES
)/(name##_PRIMES[0])); \

313 
«me
##
	`_HT_GROW
(«mê*
hód
, 
size
) \

315 
√w_Àn
, 
√w_lﬂd_limô
; \

316 
¥ime_idx
; \

317 
ty≥
 **
√w_èbÀ
; \

318 i‡(
hód
->
hth_¥ime_idx
 =()
«me
##
_N_PRIMES
 - 1) \

320 i‡(
hód
->
hth_lﬂd_limô
 > 
size
) \

322 
¥ime_idx
 = 
hód
->
hth_¥ime_idx
; \

324 
√w_Àn
 = 
«me
##
_PRIMES
[++
¥ime_idx
]; \

325 
√w_lﬂd_limô
 = ()(
lﬂd
*
√w_Àn
); \

326 } 
√w_lﬂd_limô
 <
size
 && \

327 
¥ime_idx
 < ()
«me
##
_N_PRIMES
); \

328 i‡((
√w_èbÀ
 = 
	`mÆloc‚
(
√w_Àn
*(
ty≥
*)))) { \

329 
b
; \

330 
	`mem£t
(
√w_èbÀ
, 0, 
√w_Àn
*(
ty≥
*)); \

331 
b
 = 0; b < 
hód
->
hth_èbÀ_Àngth
; ++b) { \

332 
ty≥
 *
ñm
, *
√xt
; \

333 
b2
; \

334 
ñm
 = 
hód
->
hth_èbÀ
[
b
]; \

335 
ñm
) { \

336 
√xt
 = 
ñm
->
fõld
.
hã_√xt
; \

337 
b2
 = 
	`_HT_ELT_HASH
(
ñm
, 
fõld
, 
hash‚
Ë% 
√w_Àn
; \

338 
ñm
->
fõld
.
hã_√xt
 = 
√w_èbÀ
[
b2
]; \

339 
√w_èbÀ
[
b2
] = 
ñm
; \

340 
ñm
 = 
√xt
; \

343 i‡(
hód
->
hth_èbÀ
) \

344 
	`‰ì‚
(
hód
->
hth_èbÀ
); \

345 
hód
->
hth_èbÀ
 = 
√w_èbÀ
; \

347 
b
, 
b2
; \

348 
√w_èbÀ
 = 
	`ªÆloc‚
(
hód
->
hth_èbÀ
, 
√w_Àn
*(
ty≥
*)); \

349 i‡(!
√w_èbÀ
)  -1; \

350 
	`mem£t
(
√w_èbÀ
 + 
hód
->
hth_èbÀ_Àngth
, 0, \

351 (
√w_Àn
 - 
hód
->
hth_èbÀ_Àngth
)*(
ty≥
*)); \

352 
b
=0; b < 
hód
->
hth_èbÀ_Àngth
; ++b) { \

353 
ty≥
 *
e
, **
pE
; \

354 
pE
 = &
√w_èbÀ
[
b
], 
e
 = *pE;É !
NULL
;É = *pE) { \

355 
b2
 = 
	`_HT_ELT_HASH
(
e
, 
fõld
, 
hash‚
Ë% 
√w_Àn
; \

356 i‡(
b2
 =
b
) { \

357 
pE
 = &
e
->
fõld
.
hã_√xt
; \

359 *
pE
 = 
e
->
fõld
.
hã_√xt
; \

360 
e
->
fõld
.
hã_√xt
 = 
√w_èbÀ
[
b2
]; \

361 
√w_èbÀ
[
b2
] = 
e
; \

365 
hód
->
hth_èbÀ
 = 
√w_èbÀ
; \

367 
hód
->
hth_èbÀ_Àngth
 = 
√w_Àn
; \

368 
hód
->
hth_¥ime_idx
 = 
¥ime_idx
; \

369 
hód
->
hth_lﬂd_limô
 = 
√w_lﬂd_limô
; \

375 
«me
##
	`_HT_CLEAR
(«mê*
hód
) \

377 i‡(
hód
->
hth_èbÀ
) \

378 
	`‰ì‚
(
hód
->
hth_èbÀ
); \

379 
hód
->
hth_èbÀ_Àngth
 = 0; \

380 
«me
##
	`_HT_INIT
(
hód
); \

385 
_
##
«me
##
	`_HT_REP_IS_BAD
(c⁄° «mê*
hód
) \

387 
n
, 
i
; \

388 
ty≥
 *
ñm
; \

389 i‡(!
hód
->
hth_èbÀ_Àngth
) { \

390 i‡(!
hód
->
hth_èbÀ
 && !hód->
hth_n_íåõs
 && \

391 !
hód
->
hth_lﬂd_limô
 && hód->
hth_¥ime_idx
 == -1) \

396 i‡(!
hód
->
hth_èbÀ
 || hód->
hth_¥ime_idx
 < 0 || \

397 !
hód
->
hth_lﬂd_limô
) \

399 i‡(
hód
->
hth_n_íåõs
 > hód->
hth_lﬂd_limô
) \

401 i‡(
hód
->
hth_èbÀ_Àngth
 !
«me
##
_PRIMES
[hód->
hth_¥ime_idx
]) \

403 i‡(
hód
->
hth_lﬂd_limô
 !()(
lﬂd
*hód->
hth_èbÀ_Àngth
)) \

405 
n
 = 
i
 = 0; i < 
hód
->
hth_èbÀ_Àngth
; ++i) { \

406 
ñm
 = 
hód
->
hth_èbÀ
[
i
];Élm;Élm =Élm->
fõld
.
hã_√xt
) { \

407 i‡(
	`_HT_ELT_HASH
(
ñm
, 
fõld
, 
hash‚
Ë!
	`hash‚
(elm)) \

408  1000 + 
i
; \

409 i‡((
	`_HT_ELT_HASH
(
ñm
, 
fõld
, 
hash‚
Ë% 
hód
->
hth_èbÀ_Àngth
Ë!
i
) \

410  10000 + 
i
; \

411 ++
n
; \

414 i‡(
n
 !
hód
->
hth_n_íåõs
) \

417 }

	)

422 
	#_HT_FIND_OR_INSERT
(
«me
, 
fõld
, 
hash‚
, 
hód
, 
ñty≥
, 
ñm
, 
v¨
, 
y
, 
n
) \

424 
«me
 *
_
##
v¨
##
_hód
 = 
hód
; \

425 
ñty≥
 **
v¨
; \

426 i‡(!
_
##
v¨
##
_hód
->
hth_èbÀ
 || \

427 
_
##
v¨
##
_hód
->
hth_n_íåõs
 >_##v¨##_hód->
hth_lﬂd_limô
) \

428 
«me
##
	`_HT_GROW
(
_
##
v¨
##
_hód
, _##v¨##_hód->
hth_n_íåõs
+1); \

429 
	`_HT_SET_HASH
((
ñm
), 
fõld
, 
hash‚
); \

430 
v¨
 = 
_
##
«me
##
	`_HT_FIND_P
(_##v¨##
_hód
, (
ñm
)); \

431 i‡(*
v¨
) { \

432 
y
; \

434 
n
; \

436 }

	)

437 
	#_HT_FOI_INSERT
(
fõld
, 
hód
, 
ñm
, 
√wít
, 
v¨
) \

439 
	`_HT_SET_HASHVAL
(
√wít
, 
fõld
, (
ñm
)->fõld.
hã_hash
); \

440 
√wít
->
fõld
.
hã_√xt
 = 
NULL
; \

441 *
v¨
 = 
√wít
; \

442 ++((
hód
)->
hth_n_íåõs
); \

443 }

	)

	@http-internal.h

10 #i‚de‡
_HTTP_INTERNAL_H_


11 
	#_HTTP_INTERNAL_H_


	)

13 
	~"evít2/evít_°ru˘.h
"

14 
	~"utû-öã∫Æ.h
"

15 
	~"de„r-öã∫Æ.h
"

17 
	#HTTP_CONNECT_TIMEOUT
 45

	)

18 
	#HTTP_WRITE_TIMEOUT
 50

	)

19 
	#HTTP_READ_TIMEOUT
 50

	)

21 
	#HTTP_PREFIX
 "hâp://"

	)

22 
	#HTTP_DEFAULTPORT
 80

	)

24 
	emesßge_ªad_°©us
 {

25 
	mALL_DATA_READ
 = 1,

26 
	mMORE_DATA_EXPECTED
 = 0,

27 
	mDATA_CORRUPTED
 = -1,

28 
	mREQUEST_CANCELED
 = -2,

29 
	mDATA_TOO_LONG
 = -3

32 
	eevhâp_c⁄√˘i⁄_îr‹
 {

33 
	mEVCON_HTTP_TIMEOUT
,

34 
	mEVCON_HTTP_EOF
,

35 
	mEVCON_HTTP_INVALID_HEADER
,

36 
	mEVCON_HTTP_BUFFER_ERROR
,

37 
	mEVCON_HTTP_REQUEST_CANCEL


40 
	gevbuf„r
;

41 
	gaddröfo
;

42 
	gevhâp_ªque°
;

45 
	#_EVHTTP_REQ_UNKNOWN
 (1<<15)

	)

47 
	eevhâp_c⁄√˘i⁄_°©e
 {

48 
	mEVCON_DISCONNECTED
,

49 
	mEVCON_CONNECTING
,

50 
	mEVCON_IDLE
,

51 
	mEVCON_READING_FIRSTLINE
,

53 
	mEVCON_READING_HEADERS
,

54 
	mEVCON_READING_BODY
,

55 
	mEVCON_READING_TRAILER
,

56 
	mEVCON_WRITING


59 
	gevít_ba£
;

62 
	sevhâp_c⁄√˘i⁄
 {

65 
TAILQ_ENTRY
(
evhâp_c⁄√˘i⁄
Ë
	m√xt
;

67 
evutû_sockë_t
 
	mfd
;

68 
buf„ªvít
 *
	mbu„v
;

70 
evít
 
	mªåy_ev
;

72 *
	mböd_addªss
;

73 
u_sh‹t
 
	mböd_p‹t
;

75 *
	maddªss
;

76 
u_sh‹t
 
	mp‹t
;

78 
size_t
 
	mmax_hódîs_size
;

79 
ev_uöt64_t
 
	mmax_body_size
;

81 
	mÊags
;

82 
	#EVHTTP_CON_INCOMING
 0x0001

	)

83 
	#EVHTTP_CON_OUTGOING
 0x0002

	)

84 
	#EVHTTP_CON_CLOSEDETECT
 0x0004

	)

86 
	mtimeout
;

87 
	mªåy_˙t
;

88 
	mªåy_max
;

90 
evhâp_c⁄√˘i⁄_°©e
 
	m°©e
;

93 
evhâp
 *
	mhâp_£rvî
;

95 
TAILQ_HEAD
(
evc⁄_ªque°q
, 
evhâp_ªque°
Ë
	mªque°s
;

97 (*
	mcb
)(
	mevhâp_c⁄√˘i⁄
 *, *);

98 *
	mcb_¨g
;

100 (*
	m˛o£cb
)(
	mevhâp_c⁄√˘i⁄
 *, *);

101 *
	m˛o£cb_¨g
;

103 
de„ºed_cb
 
	mªad_m‹e_de„ºed_cb
;

105 
evít_ba£
 *
	mba£
;

106 
evdns_ba£
 *
	mdns_ba£
;

110 
	sevhâp_cb
 {

111 
TAILQ_ENTRY
(
evhâp_cb
Ë
	m√xt
;

113 *
	mwh©
;

115 (*
	mcb
)(
evhâp_ªque°
 *
	mªq
, *);

116 *
	mcb¨g
;

120 
TAILQ_HEAD
(
evc⁄q
, 
evhâp_c⁄√˘i⁄
);

123 
	sevhâp_bound_sockë
 {

124 
TAILQ_ENTRY
(
evhâp_bound_sockë
Ë
	m√xt
;

126 
evc⁄∆i°íî
 *
	mli°íî
;

130 
	sevhâp_£rvî_Æüs
 {

131 
TAILQ_ENTRY
(
evhâp_£rvî_Æüs
Ë
	m√xt
;

133 *
	mÆüs
;

136 
	sevhâp
 {

138 
TAILQ_ENTRY
(
evhâp
Ë
	m√xt_vho°
;

141 
TAILQ_HEAD
(
boundq
, 
evhâp_bound_sockë
Ë
	msockës
;

143 
TAILQ_HEAD
(
hâpcbq
, 
evhâp_cb
Ë
	mˇŒbacks
;

146 
evc⁄q
 
	mc⁄√˘i⁄s
;

148 
TAILQ_HEAD
(
vho°sq
, 
evhâp
Ë
	mvútuÆho°s
;

150 
TAILQ_HEAD
(
Æüsq
, 
evhâp_£rvî_Æüs
Ë
	mÆü£s
;

153 *
	mvho°_∑âîn
;

155 
	mtimeout
;

157 
size_t
 
	mdeÁu…_max_hódîs_size
;

158 
ev_uöt64_t
 
	mdeÁu…_max_body_size
;

162 
ev_uöt16_t
 
	mÆlowed_mëhods
;

166 (*
	mgícb
)(
evhâp_ªque°
 *
	mªq
, *);

167 *
	mgícb¨g
;

169 
evít_ba£
 *
	mba£
;

175 
evhâp_c⁄√˘i⁄_ª£t
(
evhâp_c⁄√˘i⁄
 *);

178 
evhâp_c⁄√˘i⁄_c⁄√˘
(
evhâp_c⁄√˘i⁄
 *);

181 
evhâp_c⁄√˘i⁄_Áû
(
evhâp_c⁄√˘i⁄
 *,

182 
evhâp_c⁄√˘i⁄_îr‹
 
îr‹
);

184 
	gmesßge_ªad_°©us
;

186 
mesßge_ªad_°©us
 
evhâp_∑r£_fú°löe
(
evhâp_ªque°
 *, 
evbuf„r
*);

187 
mesßge_ªad_°©us
 
evhâp_∑r£_hódîs
(
evhâp_ªque°
 *, 
evbuf„r
*);

189 
evhâp_°¨t_ªad
(
evhâp_c⁄√˘i⁄
 *);

192 
evhâp_ª•⁄£_code
(
evhâp_ªque°
 *, , const *);

193 
evhâp_£nd_∑ge
(
evhâp_ªque°
 *, 
evbuf„r
 *);

	@http.c

28 
	~"evít2/evít-c⁄fig.h
"

30 #ifde‡
_EVENT_HAVE_SYS_PARAM_H


31 
	~<sys/∑øm.h
>

33 #ifde‡
_EVENT_HAVE_SYS_TYPES_H


34 
	~<sys/ty≥s.h
>

37 #ifde‡
_EVENT_HAVE_SYS_TIME_H


38 
	~<sys/time.h
>

40 #ifde‡
HAVE_SYS_IOCCOM_H


41 
	~<sys/ioccom.h
>

44 #i‚de‡
WIN32


45 
	~<sys/ªsour˚.h
>

46 
	~<sys/sockë.h
>

47 
	~<sys/°©.h
>

48 
	~<sys/waô.h
>

50 
	~<wösock2.h
>

51 
	~<ws2t˝ù.h
>

54 
	~<sys/queue.h
>

56 #ifde‡
_EVENT_HAVE_NETINET_IN_H


57 
	~<√töë/ö.h
>

59 #ifde‡
_EVENT_HAVE_ARPA_INET_H


60 
	~<¨∑/öë.h
>

62 #ifde‡
_EVENT_HAVE_NETDB_H


63 
	~<√tdb.h
>

66 #ifde‡
WIN32


67 
	~<wösock2.h
>

70 
	~<î∫o.h
>

71 
	~<°dio.h
>

72 
	~<°dlib.h
>

73 
	~<°rög.h
>

74 #i‚de‡
WIN32


75 
	~<sy¶og.h
>

77 
	~<sig«l.h
>

78 
	~<time.h
>

79 #ifde‡
_EVENT_HAVE_UNISTD_H


80 
	~<uni°d.h
>

82 #ifde‡
_EVENT_HAVE_FCNTL_H


83 
	~<f˙é.h
>

86 #unde‡
timeout_≥ndög


87 #unde‡
timeout_öôülized


89 
	~"°æ˝y-öã∫Æ.h
"

90 
	~"evít2/hâp.h
"

91 
	~"evít2/evít.h
"

92 
	~"evít2/buf„r.h
"

93 
	~"evít2/buf„ªvít.h
"

94 
	~"evít2/buf„ªvít_com∑t.h
"

95 
	~"evít2/hâp_°ru˘.h
"

96 
	~"evít2/hâp_com∑t.h
"

97 
	~"evít2/utû.h
"

98 
	~"evít2/li°íî.h
"

99 
	~"log-öã∫Æ.h
"

100 
	~"utû-öã∫Æ.h
"

101 
	~"hâp-öã∫Æ.h
"

102 
	~"mm-öã∫Æ.h
"

103 
	~"buf„ªvít-öã∫Æ.h
"

105 #i‚de‡
_EVENT_HAVE_GETNAMEINFO


106 
	#NI_MAXSERV
 32

	)

107 
	#NI_MAXHOST
 1025

	)

109 #i‚de‡
NI_NUMERICHOST


110 
	#NI_NUMERICHOST
 1

	)

113 #i‚de‡
NI_NUMERICSERV


114 
	#NI_NUMERICSERV
 2

	)

118 
	$Áke_gë«meöfo
(c⁄° 
sockaddr
 *
ß
, 
size_t
 
ßÀn
, *
ho°
,

119 
size_t
 
ho°Àn
, *
£rv
, size_à
£rvÀn
, 
Êags
)

121 
sockaddr_ö
 *
sö
 = (sockaddr_ö *)
ß
;

123 i‡(
£rv
 !
NULL
) {

124 
tmp£rv
[16];

125 
	`evutû_¢¥ötf
(
tmp£rv
, (tmpserv),

126 "%d", 
	`¡ohs
(
sö
->
sö_p‹t
));

127 i‡(
	`°æ˝y
(
£rv
, 
tmp£rv
, 
£rvÀn
) >= servlen)

131 i‡(
ho°
 !
NULL
) {

132 i‡(
Êags
 & 
NI_NUMERICHOST
) {

133 i‡(
	`°æ˝y
(
ho°
, 
	`öë_¡ﬂ
(
sö
->
sö_addr
),

134 
ho°Àn
) >= hostlen)

139 
ho°ít
 *
hp
;

140 
hp
 = 
	`gëho°byaddr
((*)&
sö
->
sö_addr
,

141 (
ö_addr
), 
AF_INET
);

142 i‡(
hp
 =
NULL
)

145 i‡(
	`°æ˝y
(
ho°
, 
hp
->
h_«me
, 
ho°Àn
) >= hostlen)

152 
	}
}

156 
	#REQ_VERSION_BEFORE
(
ªq
, 
maj‹_v
, 
mö‹_v
) \

157 ((
ªq
)->
maj‹
 < (
maj‹_v
) || \

158 ((
ªq
)->
maj‹
 =(
maj‹_v
Ë&& (ªq)->
mö‹
 < (
mö‹_v
)))

	)

160 
	#REQ_VERSION_ATLEAST
(
ªq
, 
maj‹_v
, 
mö‹_v
) \

161 ((
ªq
)->
maj‹
 > (
maj‹_v
) || \

162 ((
ªq
)->
maj‹
 =(
maj‹_v
Ë&& (ªq)->
mö‹
 >(
mö‹_v
)))

	)

164 #i‚de‡
MIN


165 
	#MIN
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

168 
debug
;

170 
evutû_sockë_t
 
böd_sockë_ai
(
evutû_addröfo
 *, 
ªu£
);

171 
evutû_sockë_t
 
böd_sockë
(c⁄° *, 
ev_uöt16_t
, 
ªu£
);

172 
«me_‰om_addr
(
sockaddr
 *, 
ev_sockÀn_t
, **, **);

173 
evhâp_assocüã_√w_ªque°_wôh_c⁄√˘i⁄
(

174 
evhâp_c⁄√˘i⁄
 *
evc⁄
);

175 
evhâp_c⁄√˘i⁄_°¨t_dëe˘˛o£
(

176 
evhâp_c⁄√˘i⁄
 *
evc⁄
);

177 
evhâp_c⁄√˘i⁄_°›_dëe˘˛o£
(

178 
evhâp_c⁄√˘i⁄
 *
evc⁄
);

179 
evhâp_ªque°_di•©ch
(
evhâp_c⁄√˘i⁄
* 
evc⁄
);

180 
evhâp_ªad_fú°löe
(
evhâp_c⁄√˘i⁄
 *
evc⁄
,

181 
evhâp_ªque°
 *
ªq
);

182 
evhâp_ªad_hódî
(
evhâp_c⁄√˘i⁄
 *
evc⁄
,

183 
evhâp_ªque°
 *
ªq
);

184 
evhâp_add_hódî_öã∫Æ
(
evkeyvÆq
 *
hódîs
,

185 c⁄° *
key
, c⁄° *
vÆue
);

186 c⁄° *
evhâp_ª•⁄£_phø£_öã∫Æ
(
code
);

187 
evhâp_gë_ªque°
(
evhâp
 *, 
evutû_sockë_t
, 
sockaddr
 *, 
ev_sockÀn_t
);

188 
evhâp_wrôe_buf„r
(
evhâp_c⁄√˘i⁄
 *,

189 (*)(
evhâp_c⁄√˘i⁄
 *, *), *);

190 
	`evhâp_make_hódî
(
evhâp_c⁄√˘i⁄
 *, 
evhâp_ªque°
 *);

193 
	`evhâp_ªad_cb
(
buf„ªvít
 *, *);

194 
	`evhâp_wrôe_cb
(
buf„ªvít
 *, *);

195 
	`evhâp_îr‹_cb
(
buf„ªvít
 *
bu„v
, 
wh©
, *
¨g
);

196 
	`evhâp_decode_uri_öã∫Æ
(c⁄° *
uri
, 
size_t
 
Àngth
,

197 *
ªt
, 
decode_∂us
);

198 
	`evhâp_föd_vho°
(
evhâp
 *
hâp
, evhâ∞**
outhâp
,

199 c⁄° *
ho°«me
);

201 #i‚de‡
_EVENT_HAVE_STRSEP


205 
	$°r£p
(**
s
, c⁄° *
dñ
)

207 *
d
, *
tok
;

208 
	`EVUTIL_ASSERT
(
	`°æí
(
dñ
) == 1);

209 i‡(!
s
 || !*s)

210  
NULL
;

211 
tok
 = *
s
;

212 
d
 = 
	`°r°r
(
tok
, 
dñ
);

213 i‡(
d
) {

214 *
d
 = '\0';

215 *
s
 = 
d
 + 1;

217 *
s
 = 
NULL
;

218  
tok
;

219 
	}
}

222 
size_t


223 
	$html_ª∂a˚
(c⁄° 
ch
, c⁄° **
esˇ≥d
)

225 
ch
) {

227 *
esˇ≥d
 = "&lt;";

230 *
esˇ≥d
 = "&gt;";

233 *
esˇ≥d
 = "&quot;";

236 *
esˇ≥d
 = "&#039;";

239 *
esˇ≥d
 = "&amp;";

246 
	}
}

256 
	$evhâp_htmÀsˇ≥
(c⁄° *
html
)

258 
size_t
 
i
;

259 
size_t
 
√w_size
 = 0, 
ﬁd_size
 = 0;

260 *
esˇ≥d_html
, *
p
;

262 i‡(
html
 =
NULL
)

263  (
NULL
);

265 
ﬁd_size
 = 
	`°æí
(
html
);

266 
i
 = 0; i < 
ﬁd_size
; ++i) {

267 c⁄° *
ª∂a˚d
 = 
NULL
;

268 c⁄° 
size_t
 
ª∂a˚_size
 = 
	`html_ª∂a˚
(
html
[
i
], &
ª∂a˚d
);

269 i‡(
ª∂a˚_size
 > 
EV_SIZE_MAX
 - 
√w_size
) {

270 
	`evít_w¨n
("%s: html_ª∂a˚ ovîÊow", 
__func__
);

271  (
NULL
);

273 
√w_size
 +
ª∂a˚_size
;

276 i‡(
√w_size
 =
EV_SIZE_MAX
)

277  (
NULL
);

278 
p
 = 
esˇ≥d_html
 = 
	`mm_mÆloc
(
√w_size
 + 1);

279 i‡(
esˇ≥d_html
 =
NULL
) {

280 
	`evít_w¨n
("%s: mÆloc(%lu)", 
__func__
,

281 ()(
√w_size
 + 1));

282  (
NULL
);

284 
i
 = 0; i < 
ﬁd_size
; ++i) {

285 c⁄° *
ª∂a˚d
 = &
html
[
i
];

286 c⁄° 
size_t
 
Àn
 = 
	`html_ª∂a˚
(
html
[
i
], &
ª∂a˚d
);

287 
	`mem˝y
(
p
, 
ª∂a˚d
, 
Àn
);

288 
p
 +
Àn
;

291 *
p
 = '\0';

293  (
esˇ≥d_html
);

294 
	}
}

300 
	$evhâp_mëhod
(
evhâp_cmd_ty≥
 
ty≥
)

302 c⁄° *
mëhod
;

304 
ty≥
) {

305 
EVHTTP_REQ_GET
:

306 
mëhod
 = "GET";

308 
EVHTTP_REQ_POST
:

309 
mëhod
 = "POST";

311 
EVHTTP_REQ_HEAD
:

312 
mëhod
 = "HEAD";

314 
EVHTTP_REQ_PUT
:

315 
mëhod
 = "PUT";

317 
EVHTTP_REQ_DELETE
:

318 
mëhod
 = "DELETE";

320 
EVHTTP_REQ_OPTIONS
:

321 
mëhod
 = "OPTIONS";

323 
EVHTTP_REQ_TRACE
:

324 
mëhod
 = "TRACE";

326 
EVHTTP_REQ_CONNECT
:

327 
mëhod
 = "CONNECT";

329 
EVHTTP_REQ_PATCH
:

330 
mëhod
 = "PATCH";

333 
mëhod
 = 
NULL
;

337  (
mëhod
);

338 
	}
}

347 
	$evhâp_ª•⁄£_√eds_body
(
evhâp_ªque°
 *
ªq
)

349  (
ªq
->
ª•⁄£_code
 !
HTTP_NOCONTENT
 &&

350 
ªq
->
ª•⁄£_code
 !
HTTP_NOTMODIFIED
 &&

351 (
ªq
->
ª•⁄£_code
 < 100 ||Ñeq->response_code >= 200) &&

352 
ªq
->
ty≥
 !
EVHTTP_REQ_HEAD
);

353 
	}
}

359 
	$evhâp_add_evít
(
evít
 *
ev
, 
timeout
, 
deÁu…_timeout
)

361 i‡(
timeout
 != 0) {

362 
timevÆ
 
tv
;

364 
	`evutû_timî˛ór
(&
tv
);

365 
tv
.
tv_£c
 = 
timeout
 !-1 ?Åimeouà: 
deÁu…_timeout
;

366  
	`evít_add
(
ev
, &
tv
);

368  
	`evít_add
(
ev
, 
NULL
);

370 
	}
}

377 
evhâp_wrôe_buf„r
(
evhâp_c⁄√˘i⁄
 *
evc⁄
,

378 (*
cb
)(
evhâp_c⁄√˘i⁄
 *, *), *
¨g
)

380 
	`evít_debug
(("%s:Öª∑rögÅÿwrôêbuf„r\n", 
__func__
));

383 
evc⁄
->
cb
 = cb;

384 
evc⁄
->
cb_¨g
 = 
¨g
;

386 
	`buf„ªvít_íabÀ
(
evc⁄
->
bu„v
, 
EV_WRITE
);

391 
	`buf„ªvít_£tcb
(
evc⁄
->
bu„v
,

392 
NULL
,

393 
evhâp_wrôe_cb
,

394 
evhâp_îr‹_cb
,

395 
evc⁄
);

396 
	}
}

399 
	$evhâp_£nd_c⁄töue_d⁄e
(
evhâp_c⁄√˘i⁄
 *
evc⁄
, *
¨g
)

401 
	`buf„ªvít_dißbÀ
(
evc⁄
->
bu„v
, 
EV_WRITE
);

402 
	}
}

405 
	$evhâp_£nd_c⁄töue
(
evhâp_c⁄√˘i⁄
 *
evc⁄
,

406 
evhâp_ªque°
 *
ªq
)

408 
	`buf„ªvít_íabÀ
(
evc⁄
->
bu„v
, 
EV_WRITE
);

409 
	`evbuf„r_add_¥ötf
(
	`buf„ªvít_gë_ouçut
(
evc⁄
->
bu„v
),

411 
ªq
->
maj‹
,Ñeq->
mö‹
);

412 
evc⁄
->
cb
 = 
evhâp_£nd_c⁄töue_d⁄e
;

413 
evc⁄
->
cb_¨g
 = 
NULL
;

414 
	`buf„ªvít_£tcb
(
evc⁄
->
bu„v
,

415 
evhâp_ªad_cb
,

416 
evhâp_wrôe_cb
,

417 
evhâp_îr‹_cb
,

418 
evc⁄
);

419 
	}
}

423 
	$evhâp_c⁄√˘ed
(
evhâp_c⁄√˘i⁄
 *
evc⁄
)

425 
evc⁄
->
°©e
) {

426 
EVCON_DISCONNECTED
:

427 
EVCON_CONNECTING
:

429 
EVCON_IDLE
:

430 
EVCON_READING_FIRSTLINE
:

431 
EVCON_READING_HEADERS
:

432 
EVCON_READING_BODY
:

433 
EVCON_READING_TRAILER
:

434 
EVCON_WRITING
:

438 
	}
}

445 
	$evhâp_make_hódî_ªque°
(
evhâp_c⁄√˘i⁄
 *
evc⁄
,

446 
evhâp_ªque°
 *
ªq
)

448 c⁄° *
mëhod
;

450 
	`evhâp_ªmove_hódî
(
ªq
->
ouçut_hódîs
, "Proxy-Connection");

453 
mëhod
 = 
	`evhâp_mëhod
(
ªq
->
ty≥
);

454 
	`evbuf„r_add_¥ötf
(
	`buf„ªvít_gë_ouçut
(
evc⁄
->
bu„v
),

456 
mëhod
, 
ªq
->
uri
,Ñeq->
maj‹
,Ñeq->
mö‹
);

459 i‡((
ªq
->
ty≥
 =
EVHTTP_REQ_POST
 ||Ñeq->ty≥ =
EVHTTP_REQ_PUT
) &&

460 
	`evhâp_föd_hódî
(
ªq
->
ouçut_hódîs
, "C⁄ã¡-Lígth"Ë=
NULL
){

461 
size
[22];

462 
	`evutû_¢¥ötf
(
size
, (size), 
EV_SIZE_FMT
,

463 
	`EV_SIZE_ARG
(
	`evbuf„r_gë_Àngth
(
ªq
->
ouçut_buf„r
)));

464 
	`evhâp_add_hódî
(
ªq
->
ouçut_hódîs
, "C⁄ã¡-Lígth", 
size
);

466 
	}
}

472 
	$evhâp_is_c⁄√˘i⁄_˛o£
(
Êags
, 
evkeyvÆq
* 
hódîs
)

474 i‡(
Êags
 & 
EVHTTP_PROXY_REQUEST
) {

476 c⁄° *
c⁄√˘i⁄
 = 
	`evhâp_föd_hódî
(
hódîs
, "Proxy-Connection");

477  (
c⁄√˘i⁄
 =
NULL
 || 
	`evutû_ascii_°rˇ£cmp
(connection, "keep-alive") != 0);

479 c⁄° *
c⁄√˘i⁄
 = 
	`evhâp_föd_hódî
(
hódîs
, "Connection");

480  (
c⁄√˘i⁄
 !
NULL
 && 
	`evutû_ascii_°rˇ£cmp
(connection, "close") == 0);

482 
	}
}

486 
	$evhâp_is_c⁄√˘i⁄_kì∑live
(
evkeyvÆq
* 
hódîs
)

488 c⁄° *
c⁄√˘i⁄
 = 
	`evhâp_föd_hódî
(
hódîs
, "Connection");

489  (
c⁄√˘i⁄
 !
NULL


490 && 
	`evutû_ascii_°∫ˇ£cmp
(
c⁄√˘i⁄
, "keep-alive", 10) == 0);

491 
	}
}

495 
	$evhâp_maybe_add_d©e_hódî
(
evkeyvÆq
 *
hódîs
)

497 i‡(
	`evhâp_föd_hódî
(
hódîs
, "D©e"Ë=
NULL
) {

498 
d©e
[50];

499 #i‚de‡
WIN32


500 
tm
 
cur
;

502 
tm
 *
cur_p
;

503 
time_t
 
t
 = 
	`time
(
NULL
);

504 #ifde‡
WIN32


505 
cur_p
 = 
	`gmtime
(&
t
);

507 
	`gmtime_r
(&
t
, &
cur
);

508 
cur_p
 = &
cur
;

510 i‡(
	`°r·ime
(
d©e
, (date),

511 "%a, %d %b %Y %H:%M:%S GMT", 
cur_p
) != 0) {

512 
	`evhâp_add_hódî
(
hódîs
, "D©e", 
d©e
);

515 
	}
}

520 
	$evhâp_maybe_add_c⁄ã¡_Àngth_hódî
(
evkeyvÆq
 *
hódîs
,

521 
size_t
 
c⁄ã¡_Àngth
)

523 i‡(
	`evhâp_föd_hódî
(
hódîs
, "Tøns„r-Encodög"Ë=
NULL
 &&

524 
	`evhâp_föd_hódî
(
hódîs
, "C⁄ã¡-Lígth"Ë=
NULL
) {

525 
Àn
[22];

526 
	`evutû_¢¥ötf
(
Àn
, ÷í), 
EV_SIZE_FMT
,

527 
	`EV_SIZE_ARG
(
c⁄ã¡_Àngth
));

528 
	`evhâp_add_hódî
(
hódîs
, "C⁄ã¡-Lígth", 
Àn
);

530 
	}
}

537 
	$evhâp_make_hódî_ª•⁄£
(
evhâp_c⁄√˘i⁄
 *
evc⁄
,

538 
evhâp_ªque°
 *
ªq
)

540 
is_kì∑live
 = 
	`evhâp_is_c⁄√˘i⁄_kì∑live
(
ªq
->
öput_hódîs
);

541 
	`evbuf„r_add_¥ötf
(
	`buf„ªvít_gë_ouçut
(
evc⁄
->
bu„v
),

543 
ªq
->
maj‹
,Ñeq->
mö‹
,Ñeq->
ª•⁄£_code
,

544 
ªq
->
ª•⁄£_code_löe
);

546 i‡(
ªq
->
maj‹
 == 1) {

547 i‡(
ªq
->
mö‹
 >= 1)

548 
	`evhâp_maybe_add_d©e_hódî
(
ªq
->
ouçut_hódîs
);

554 i‡(
ªq
->
mö‹
 =0 && 
is_kì∑live
)

555 
	`evhâp_add_hódî
(
ªq
->
ouçut_hódîs
,

558 i‡((
ªq
->
mö‹
 >1 || 
is_kì∑live
) &&

559 
	`evhâp_ª•⁄£_√eds_body
(
ªq
)) {

565 
	`evhâp_maybe_add_c⁄ã¡_Àngth_hódî
(

566 
ªq
->
ouçut_hódîs
,

567 
	`evbuf„r_gë_Àngth
(
ªq
->
ouçut_buf„r
));

572 i‡(
	`evhâp_ª•⁄£_√eds_body
(
ªq
)) {

573 i‡(
	`evhâp_föd_hódî
(
ªq
->
ouçut_hódîs
,

574 "C⁄ã¡-Ty≥"Ë=
NULL
) {

575 
	`evhâp_add_hódî
(
ªq
->
ouçut_hódîs
,

581 i‡(
	`evhâp_is_c⁄√˘i⁄_˛o£
(
ªq
->
Êags
,Ñeq->
öput_hódîs
)) {

582 
	`evhâp_ªmove_hódî
(
ªq
->
ouçut_hódîs
, "Connection");

583 i‡(!(
ªq
->
Êags
 & 
EVHTTP_PROXY_REQUEST
))

584 
	`evhâp_add_hódî
(
ªq
->
ouçut_hódîs
, "Connection", "close");

585 
	`evhâp_ªmove_hódî
(
ªq
->
ouçut_hódîs
, "Proxy-Connection");

587 
	}
}

593 
	$evhâp_make_hódî
(
evhâp_c⁄√˘i⁄
 *
evc⁄
, 
evhâp_ªque°
 *
ªq
)

595 
evkeyvÆ
 *
hódî
;

596 
evbuf„r
 *
ouçut
 = 
	`buf„ªvít_gë_ouçut
(
evc⁄
->
bu„v
);

602 i‡(
ªq
->
köd
 =
EVHTTP_REQUEST
) {

603 
	`evhâp_make_hódî_ªque°
(
evc⁄
, 
ªq
);

605 
	`evhâp_make_hódî_ª•⁄£
(
evc⁄
, 
ªq
);

608 
	`TAILQ_FOREACH
(
hódî
, 
ªq
->
ouçut_hódîs
, 
√xt
) {

609 
	`evbuf„r_add_¥ötf
(
ouçut
, "%s: %s\r\n",

610 
hódî
->
key
, hódî->
vÆue
);

612 
	`evbuf„r_add
(
ouçut
, "\r\n", 2);

614 i‡(
	`evbuf„r_gë_Àngth
(
ªq
->
ouçut_buf„r
) > 0) {

622 
	`evbuf„r_add_buf„r
(
ouçut
, 
ªq
->
ouçut_buf„r
);

624 
	}
}

627 
	$evhâp_c⁄√˘i⁄_£t_max_hódîs_size
(
evhâp_c⁄√˘i⁄
 *
evc⁄
,

628 
ev_ssize_t
 
√w_max_hódîs_size
)

630 i‡(
√w_max_hódîs_size
<0)

631 
evc⁄
->
max_hódîs_size
 = 
EV_SIZE_MAX
;

633 
evc⁄
->
max_hódîs_size
 = 
√w_max_hódîs_size
;

634 
	}
}

636 
	$evhâp_c⁄√˘i⁄_£t_max_body_size
(
evhâp_c⁄√˘i⁄
* 
evc⁄
,

637 
ev_ssize_t
 
√w_max_body_size
)

639 i‡(
√w_max_body_size
<0)

640 
evc⁄
->
max_body_size
 = 
EV_UINT64_MAX
;

642 
evc⁄
->
max_body_size
 = 
√w_max_body_size
;

643 
	}
}

646 
	$evhâp_c⁄√˘i⁄_öcomög_Áû
(
evhâp_ªque°
 *
ªq
,

647 
evhâp_c⁄√˘i⁄_îr‹
 
îr‹
)

649 
îr‹
) {

650 
EVCON_HTTP_TIMEOUT
:

651 
EVCON_HTTP_EOF
:

660 i‡(!
ªq
->
u£rd⁄e
) {

662 
	`TAILQ_REMOVE
(&
ªq
->
evc⁄
->
ªque°s
,Ñeq, 
√xt
);

666 
ªq
->
evc⁄
 = 
NULL
;

669 
EVCON_HTTP_INVALID_HEADER
:

670 
EVCON_HTTP_BUFFER_ERROR
:

671 
EVCON_HTTP_REQUEST_CANCEL
:

674 i‡(
ªq
->
uri
) {

675 
	`mm_‰ì
(
ªq
->
uri
);

676 
ªq
->
uri
 = 
NULL
;

678 i‡(
ªq
->
uri_ñems
) {

679 
	`evhâp_uri_‰ì
(
ªq
->
uri_ñems
);

680 
ªq
->
uri_ñems
 = 
NULL
;

687 (*
ªq
->
cb
)‘eq,Ñeq->
cb_¨g
);

691 
	}
}

698 
	$evhâp_c⁄√˘i⁄_Áû
(
evhâp_c⁄√˘i⁄
 *
evc⁄
,

699 
evhâp_c⁄√˘i⁄_îr‹
 
îr‹
)

701 
evhâp_ªque°
* 
ªq
 = 
	`TAILQ_FIRST
(&
evc⁄
->
ªque°s
);

702 (*
cb
)(
evhâp_ªque°
 *, *);

703 *
cb_¨g
;

704 
	`EVUTIL_ASSERT
(
ªq
 !
NULL
);

706 
	`buf„ªvít_dißbÀ
(
evc⁄
->
bu„v
, 
EV_READ
|
EV_WRITE
);

708 i‡(
evc⁄
->
Êags
 & 
EVHTTP_CON_INCOMING
) {

717 i‡(
	`evhâp_c⁄√˘i⁄_öcomög_Áû
(
ªq
, 
îr‹
) == -1)

718 
	`evhâp_c⁄√˘i⁄_‰ì
(
evc⁄
);

723 i‡(
îr‹
 !
EVCON_HTTP_REQUEST_CANCEL
) {

725 
cb
 = 
ªq
->cb;

726 
cb_¨g
 = 
ªq
->cb_arg;

728 
cb
 = 
NULL
;

729 
cb_¨g
 = 
NULL
;

736 
	`TAILQ_REMOVE
(&
evc⁄
->
ªque°s
, 
ªq
, 
√xt
);

737 
	`evhâp_ªque°_‰ì
(
ªq
);

740 
	`evhâp_c⁄√˘i⁄_ª£t
(
evc⁄
);

743 i‡(
	`TAILQ_FIRST
(&
evc⁄
->
ªque°s
Ë!
NULL
)

744 
	`evhâp_c⁄√˘i⁄_c⁄√˘
(
evc⁄
);

747 i‡(
cb
 !
NULL
)

748 (*
cb
)(
NULL
, 
cb_¨g
);

749 
	}
}

754 
	$evhâp_wrôe_cb
(
buf„ªvít
 *
bu„v
, *
¨g
)

756 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
¨g
;

759 i‡(
evc⁄
->
cb
 !
NULL
)

760 (*
evc⁄
->
cb
)”vc⁄,Évc⁄->
cb_¨g
);

761 
	}
}

771 
	$evhâp_c⁄√˘i⁄_d⁄e
(
evhâp_c⁄√˘i⁄
 *
evc⁄
)

773 
evhâp_ªque°
 *
ªq
 = 
	`TAILQ_FIRST
(&
evc⁄
->
ªque°s
);

774 
c⁄_outgoög
 = 
evc⁄
->
Êags
 & 
EVHTTP_CON_OUTGOING
;

776 i‡(
c⁄_outgoög
) {

778 
√ed_˛o£
;

779 
	`TAILQ_REMOVE
(&
evc⁄
->
ªque°s
, 
ªq
, 
√xt
);

780 
ªq
->
evc⁄
 = 
NULL
;

782 
evc⁄
->
°©e
 = 
EVCON_IDLE
;

784 
√ed_˛o£
 =

785 
	`evhâp_is_c⁄√˘i⁄_˛o£
(
ªq
->
Êags
,Ñeq->
öput_hódîs
)||

786 
	`evhâp_is_c⁄√˘i⁄_˛o£
(
ªq
->
Êags
,Ñeq->
ouçut_hódîs
);

789 i‡(
√ed_˛o£
)

790 
	`evhâp_c⁄√˘i⁄_ª£t
(
evc⁄
);

792 i‡(
	`TAILQ_FIRST
(&
evc⁄
->
ªque°s
Ë!
NULL
) {

797 i‡(!
	`evhâp_c⁄√˘ed
(
evc⁄
))

798 
	`evhâp_c⁄√˘i⁄_c⁄√˘
(
evc⁄
);

800 
	`evhâp_ªque°_di•©ch
(
evc⁄
);

801 } i‡(!
√ed_˛o£
) {

806 
	`evhâp_c⁄√˘i⁄_°¨t_dëe˘˛o£
(
evc⁄
);

813 
evc⁄
->
°©e
 = 
EVCON_WRITING
;

817 (*
ªq
->
cb
)‘eq,Ñeq->
cb_¨g
);

822 i‡(
c⁄_outgoög
 && ((
ªq
->
Êags
 & 
EVHTTP_USER_OWNED
) == 0)) {

823 
	`evhâp_ªque°_‰ì
(
ªq
);

825 
	}
}

841 
mesßge_ªad_°©us


842 
	$evhâp_h™dÀ_chunked_ªad
(
evhâp_ªque°
 *
ªq
, 
evbuf„r
 *
buf
)

844 i‡(
ªq
 =
NULL
 || 
buf
 == NULL) {

845  
DATA_CORRUPTED
;

849 
size_t
 
buÊí
;

851 i‡((
buÊí
 = 
	`evbuf„r_gë_Àngth
(
buf
)) == 0) {

857 i‡(
buÊí
 > 
EV_SSIZE_MAX
) {

858  
DATA_CORRUPTED
;

861 i‡(
ªq
->
¡‹ód
 < 0) {

863 
ev_öt64_t
 
¡‹ód
;

864 *
p
 = 
	`evbuf„r_ªad 
(
buf
, 
NULL
, 
EVBUFFER_EOL_CRLF
);

865 *
ídp
;

866 
îr‹
;

867 i‡(
p
 =
NULL
)

870 i‡(
	`°æí
(
p
) == 0) {

871 
	`mm_‰ì
(
p
);

874 
¡‹ód
 = 
	`evutû_°πﬁl
(
p
, &
ídp
, 16);

875 
îr‹
 = (*
p
 == '\0' ||

876 (*
ídp
 != '\0' && *endp != ' ') ||

877 
¡‹ód
 < 0);

878 
	`mm_‰ì
(
p
);

879 i‡(
îr‹
) {

881  (
DATA_CORRUPTED
);

885 i‡((
ev_uöt64_t
)
¡‹ód
 > 
EV_SIZE_MAX
 - 
ªq
->
body_size
) {

886  
DATA_CORRUPTED
;

889 i‡(
ªq
->
body_size
 + (
size_t
)
¡‹ód
 >Ñeq->
evc⁄
->
max_body_size
) {

891 
	`evít_debug
(("Request body isÅooÜong"));

892  (
DATA_TOO_LONG
);

895 
ªq
->
body_size
 +(
size_t
)
¡‹ód
;

896 
ªq
->
¡‹ód
 =Çtoread;

897 i‡(
ªq
->
¡‹ód
 == 0) {

899  (
ALL_DATA_READ
);

906 i‡(
ªq
->
¡‹ód
 > 
EV_SSIZE_MAX
) {

907  
DATA_CORRUPTED
;

911 i‡(
ªq
->
¡‹ód
 > 0 && 
buÊí
 < (
ev_uöt64_t
)req->ntoread)

912  (
MORE_DATA_EXPECTED
);

915 
	`evbuf„r_ªmove_buf„r
(
buf
, 
ªq
->
öput_buf„r
, (
size_t
Ïeq->
¡‹ód
);

916 
ªq
->
¡‹ód
 = -1;

917 i‡(
ªq
->
chunk_cb
 !
NULL
) {

918 
ªq
->
Êags
 |
EVHTTP_REQ_DEFER_FREE
;

919 (*
ªq
->
chunk_cb
)‘eq,Ñeq->
cb_¨g
);

920 
	`evbuf„r_døö
(
ªq
->
öput_buf„r
,

921 
	`evbuf„r_gë_Àngth
(
ªq
->
öput_buf„r
));

922 
ªq
->
Êags
 &~
EVHTTP_REQ_DEFER_FREE
;

923 i‡((
ªq
->
Êags
 & 
EVHTTP_REQ_NEEDS_FREE
) != 0) {

924  (
REQUEST_CANCELED
);

929  (
MORE_DATA_EXPECTED
);

930 
	}
}

933 
	$evhâp_ªad_åaûî
(
evhâp_c⁄√˘i⁄
 *
evc⁄
, 
evhâp_ªque°
 *
ªq
)

935 
evbuf„r
 *
buf
 = 
	`buf„ªvít_gë_öput
(
evc⁄
->
bu„v
);

937 
	`evhâp_∑r£_hódîs
(
ªq
, 
buf
)) {

938 
DATA_CORRUPTED
:

939 
DATA_TOO_LONG
:

940 
	`evhâp_c⁄√˘i⁄_Áû
(
evc⁄
, 
EVCON_HTTP_INVALID_HEADER
);

942 
ALL_DATA_READ
:

943 
	`buf„ªvít_dißbÀ
(
evc⁄
->
bu„v
, 
EV_READ
);

944 
	`evhâp_c⁄√˘i⁄_d⁄e
(
evc⁄
);

946 
MORE_DATA_EXPECTED
:

947 
REQUEST_CANCELED
:

949 
	`buf„ªvít_íabÀ
(
evc⁄
->
bu„v
, 
EV_READ
);

952 
	}
}

955 
	$evhâp_ªad_body
(
evhâp_c⁄√˘i⁄
 *
evc⁄
, 
evhâp_ªque°
 *
ªq
)

957 
evbuf„r
 *
buf
 = 
	`buf„ªvít_gë_öput
(
evc⁄
->
bu„v
);

959 i‡(
ªq
->
chunked
) {

960 
	`evhâp_h™dÀ_chunked_ªad
(
ªq
, 
buf
)) {

961 
ALL_DATA_READ
:

963 
evc⁄
->
°©e
 = 
EVCON_READING_TRAILER
;

964 
	`evhâp_ªad_åaûî
(
evc⁄
, 
ªq
);

966 
DATA_CORRUPTED
:

967 
DATA_TOO_LONG
:

969 
	`evhâp_c⁄√˘i⁄_Áû
(
evc⁄
,

970 
EVCON_HTTP_INVALID_HEADER
);

972 
REQUEST_CANCELED
:

974 
	`evhâp_ªque°_‰ì
(
ªq
);

976 
MORE_DATA_EXPECTED
:

980 } i‡(
ªq
->
¡‹ód
 < 0) {

982 i‡((
size_t
)(
ªq
->
body_size
 + 
	`evbuf„r_gë_Àngth
(
buf
)) <Ñeq->body_size) {

983 
	`evhâp_c⁄√˘i⁄_Áû
(
evc⁄
, 
EVCON_HTTP_INVALID_HEADER
);

987 
ªq
->
body_size
 +
	`evbuf„r_gë_Àngth
(
buf
);

988 
	`evbuf„r_add_buf„r
(
ªq
->
öput_buf„r
, 
buf
);

989 } i‡(
ªq
->
chunk_cb
 !
NULL
 || 
	`evbuf„r_gë_Àngth
(
buf
Ë>(
size_t
Ïeq->
¡‹ód
) {

993 
size_t
 
n
 = 
	`evbuf„r_gë_Àngth
(
buf
);

995 i‡(
n
 > (
size_t
Ë
ªq
->
¡‹ód
)

996 
n
 = (
size_t
Ë
ªq
->
¡‹ód
;

997 
ªq
->
¡‹ód
 -
n
;

998 
ªq
->
body_size
 +
n
;

999 
	`evbuf„r_ªmove_buf„r
(
buf
, 
ªq
->
öput_buf„r
, 
n
);

1002 i‡(
ªq
->
body_size
 >Ñeq->
evc⁄
->
max_body_size
 ||

1003 (!
ªq
->
chunked
 &&Ñeq->
¡‹ód
 >= 0 &&

1004 (
size_t
)
ªq
->
¡‹ód
 >Ñeq->
evc⁄
->
max_body_size
)) {

1007 
	`evít_debug
(("Request body isÅooÜong"));

1008 
	`evhâp_c⁄√˘i⁄_Áû
(
evc⁄
,

1009 
EVCON_HTTP_INVALID_HEADER
);

1013 i‡(
	`evbuf„r_gë_Àngth
(
ªq
->
öput_buf„r
Ë> 0 &&Ñeq->
chunk_cb
 !
NULL
) {

1014 
ªq
->
Êags
 |
EVHTTP_REQ_DEFER_FREE
;

1015 (*
ªq
->
chunk_cb
)‘eq,Ñeq->
cb_¨g
);

1016 
ªq
->
Êags
 &~
EVHTTP_REQ_DEFER_FREE
;

1017 
	`evbuf„r_døö
(
ªq
->
öput_buf„r
,

1018 
	`evbuf„r_gë_Àngth
(
ªq
->
öput_buf„r
));

1019 i‡((
ªq
->
Êags
 & 
EVHTTP_REQ_NEEDS_FREE
) != 0) {

1020 
	`evhâp_ªque°_‰ì
(
ªq
);

1025 i‡(
ªq
->
¡‹ód
 == 0) {

1026 
	`buf„ªvít_dißbÀ
(
evc⁄
->
bu„v
, 
EV_READ
);

1028 
	`evhâp_c⁄√˘i⁄_d⁄e
(
evc⁄
);

1033 
	`buf„ªvít_íabÀ
(
evc⁄
->
bu„v
, 
EV_READ
);

1034 
	}
}

1036 
	#gë_de„ºed_queue
(
evc⁄
) \

1037 (
	`evít_ba£_gë_de„ºed_cb_queue
((
evc⁄
)->
ba£
))

	)

1044 
	$evhâp_ªad_cb
(
buf„ªvít
 *
bu„v
, *
¨g
)

1046 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
¨g
;

1047 
evhâp_ªque°
 *
ªq
 = 
	`TAILQ_FIRST
(&
evc⁄
->
ªque°s
);

1050 
	`evít_de„ºed_cb_ˇn˚l
(
	`gë_de„ºed_queue
(
evc⁄
),

1051 &
evc⁄
->
ªad_m‹e_de„ºed_cb
);

1053 
evc⁄
->
°©e
) {

1054 
EVCON_READING_FIRSTLINE
:

1055 
	`evhâp_ªad_fú°löe
(
evc⁄
, 
ªq
);

1059 
EVCON_READING_HEADERS
:

1060 
	`evhâp_ªad_hódî
(
evc⁄
, 
ªq
);

1064 
EVCON_READING_BODY
:

1065 
	`evhâp_ªad_body
(
evc⁄
, 
ªq
);

1069 
EVCON_READING_TRAILER
:

1070 
	`evhâp_ªad_åaûî
(
evc⁄
, 
ªq
);

1072 
EVCON_IDLE
:

1074 #ifde‡
USE_DEBUG


1075 
evbuf„r
 *
öput
;

1076 
size_t
 
tŸÆ_Àn
;

1078 
öput
 = 
	`buf„ªvít_gë_öput
(
evc⁄
->
bu„v
);

1079 
tŸÆ_Àn
 = 
	`evbuf„r_gë_Àngth
(
öput
);

1080 
	`evít_debug
(("%s:Ñód "
EV_SIZE_FMT


1083 
__func__
, 
	`EV_SIZE_ARG
(
tŸÆ_Àn
)));

1086 
	`evhâp_c⁄√˘i⁄_ª£t
(
evc⁄
);

1089 
EVCON_DISCONNECTED
:

1090 
EVCON_CONNECTING
:

1091 
EVCON_WRITING
:

1093 
	`evít_îrx
(1, "%s: illegal connection state %d",

1094 
__func__
, 
evc⁄
->
°©e
);

1096 
	}
}

1099 
	$evhâp_de„ºed_ªad_cb
(
de„ºed_cb
 *
cb
, *
d©a
)

1101 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
d©a
;

1102 
	`evhâp_ªad_cb
(
evc⁄
->
bu„v
,Évcon);

1103 
	}
}

1106 
	$evhâp_wrôe_c⁄√˘i⁄cb
(
evhâp_c⁄√˘i⁄
 *
evc⁄
, *
¨g
)

1109 
evhâp_ªque°
 *
ªq
 = 
	`TAILQ_FIRST
(&
evc⁄
->
ªque°s
);

1110 
	`EVUTIL_ASSERT
(
ªq
 !
NULL
);

1112 
	`EVUTIL_ASSERT
(
evc⁄
->
°©e
 =
EVCON_WRITING
);

1115 
ªq
->
köd
 = 
EVHTTP_RESPONSE
;

1117 
	`evhâp_°¨t_ªad
(
evc⁄
);

1118 
	}
}

1125 
	$evhâp_c⁄√˘i⁄_‰ì
(
evhâp_c⁄√˘i⁄
 *
evc⁄
)

1127 
evhâp_ªque°
 *
ªq
;

1130 i‡(
evc⁄
->
fd
 != -1) {

1131 i‡(
	`evhâp_c⁄√˘ed
(
evc⁄
Ë&&Évc⁄->
˛o£cb
 !
NULL
)

1132 (*
evc⁄
->
˛o£cb
)”vc⁄,Évc⁄->
˛o£cb_¨g
);

1140 (
ªq
 = 
	`TAILQ_FIRST
(&
evc⁄
->
ªque°s
)Ë!
NULL
) {

1141 
	`TAILQ_REMOVE
(&
evc⁄
->
ªque°s
, 
ªq
, 
√xt
);

1142 
	`evhâp_ªque°_‰ì
(
ªq
);

1145 i‡(
evc⁄
->
hâp_£rvî
 !
NULL
) {

1146 
evhâp
 *
hâp
 = 
evc⁄
->
hâp_£rvî
;

1147 
	`TAILQ_REMOVE
(&
hâp
->
c⁄√˘i⁄s
, 
evc⁄
, 
√xt
);

1150 i‡(
	`evít_öôülized
(&
evc⁄
->
ªåy_ev
)) {

1151 
	`evít_dñ
(&
evc⁄
->
ªåy_ev
);

1152 
	`evít_debug_u«ssign
(&
evc⁄
->
ªåy_ev
);

1155 i‡(
evc⁄
->
bu„v
 !
NULL
)

1156 
	`buf„ªvít_‰ì
(
evc⁄
->
bu„v
);

1158 
	`evít_de„ºed_cb_ˇn˚l
(
	`gë_de„ºed_queue
(
evc⁄
),

1159 &
evc⁄
->
ªad_m‹e_de„ºed_cb
);

1161 i‡(
evc⁄
->
fd
 != -1) {

1162 
	`shutdown
(
evc⁄
->
fd
, 
EVUTIL_SHUT_WR
);

1163 
	`evutû_˛o£sockë
(
evc⁄
->
fd
);

1166 i‡(
evc⁄
->
böd_addªss
 !
NULL
)

1167 
	`mm_‰ì
(
evc⁄
->
böd_addªss
);

1169 i‡(
evc⁄
->
addªss
 !
NULL
)

1170 
	`mm_‰ì
(
evc⁄
->
addªss
);

1172 
	`mm_‰ì
(
evc⁄
);

1173 
	}
}

1176 
	$evhâp_c⁄√˘i⁄_£t_loˇl_addªss
(
evhâp_c⁄√˘i⁄
 *
evc⁄
,

1177 c⁄° *
addªss
)

1179 
	`EVUTIL_ASSERT
(
evc⁄
->
°©e
 =
EVCON_DISCONNECTED
);

1180 i‡(
evc⁄
->
böd_addªss
)

1181 
	`mm_‰ì
(
evc⁄
->
böd_addªss
);

1182 i‡((
evc⁄
->
böd_addªss
 = 
	`mm_°rdup
(
addªss
)Ë=
NULL
)

1183 
	`evít_w¨n
("%s: sådup", 
__func__
);

1184 
	}
}

1187 
	$evhâp_c⁄√˘i⁄_£t_loˇl_p‹t
(
evhâp_c⁄√˘i⁄
 *
evc⁄
,

1188 
ev_uöt16_t
 
p‹t
)

1190 
	`EVUTIL_ASSERT
(
evc⁄
->
°©e
 =
EVCON_DISCONNECTED
);

1191 
evc⁄
->
böd_p‹t
 = 
p‹t
;

1192 
	}
}

1195 
	$evhâp_ªque°_di•©ch
(
evhâp_c⁄√˘i⁄
* 
evc⁄
)

1197 
evhâp_ªque°
 *
ªq
 = 
	`TAILQ_FIRST
(&
evc⁄
->
ªque°s
);

1200 i‡(
ªq
 =
NULL
)

1204 
	`evhâp_c⁄√˘i⁄_°›_dëe˘˛o£
(
evc⁄
);

1207 
	`EVUTIL_ASSERT
(
evc⁄
->
°©e
 =
EVCON_IDLE
);

1209 
evc⁄
->
°©e
 = 
EVCON_WRITING
;

1212 
	`evhâp_make_hódî
(
evc⁄
, 
ªq
);

1214 
	`evhâp_wrôe_buf„r
(
evc⁄
, 
evhâp_wrôe_c⁄√˘i⁄cb
, 
NULL
);

1215 
	}
}

1220 
	$evhâp_c⁄√˘i⁄_ª£t
(
evhâp_c⁄√˘i⁄
 *
evc⁄
)

1222 
evbuf„r
 *
tmp
;

1235 
	`buf„ªvít_dißbÀ_h¨d
(
evc⁄
->
bu„v
, 
EV_READ
|
EV_WRITE
);

1237 i‡(
evc⁄
->
fd
 != -1) {

1239 i‡(
	`evhâp_c⁄√˘ed
(
evc⁄
Ë&&Évc⁄->
˛o£cb
 !
NULL
)

1240 (*
evc⁄
->
˛o£cb
)”vc⁄,Évc⁄->
˛o£cb_¨g
);

1242 
	`shutdown
(
evc⁄
->
fd
, 
EVUTIL_SHUT_WR
);

1243 
	`evutû_˛o£sockë
(
evc⁄
->
fd
);

1244 
evc⁄
->
fd
 = -1;

1248 
tmp
 = 
	`buf„ªvít_gë_ouçut
(
evc⁄
->
bu„v
);

1249 
	`evbuf„r_døö
(
tmp
, 
	`evbuf„r_gë_Àngth
(tmp));

1250 
tmp
 = 
	`buf„ªvít_gë_öput
(
evc⁄
->
bu„v
);

1251 
	`evbuf„r_døö
(
tmp
, 
	`evbuf„r_gë_Àngth
(tmp));

1253 
evc⁄
->
°©e
 = 
EVCON_DISCONNECTED
;

1254 
	}
}

1257 
	$evhâp_c⁄√˘i⁄_°¨t_dëe˘˛o£
(
evhâp_c⁄√˘i⁄
 *
evc⁄
)

1259 
evc⁄
->
Êags
 |
EVHTTP_CON_CLOSEDETECT
;

1261 
	`buf„ªvít_íabÀ
(
evc⁄
->
bu„v
, 
EV_READ
);

1262 
	}
}

1265 
	$evhâp_c⁄√˘i⁄_°›_dëe˘˛o£
(
evhâp_c⁄√˘i⁄
 *
evc⁄
)

1267 
evc⁄
->
Êags
 &~
EVHTTP_CON_CLOSEDETECT
;

1269 
	`buf„ªvít_dißbÀ
(
evc⁄
->
bu„v
, 
EV_READ
);

1270 
	}
}

1273 
	$evhâp_c⁄√˘i⁄_ªåy
(
evutû_sockë_t
 
fd
, 
wh©
, *
¨g
)

1275 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
¨g
;

1277 
evc⁄
->
°©e
 = 
EVCON_DISCONNECTED
;

1278 
	`evhâp_c⁄√˘i⁄_c⁄√˘
(
evc⁄
);

1279 
	}
}

1282 
	$evhâp_c⁄√˘i⁄_cb_˛ónup
(
evhâp_c⁄√˘i⁄
 *
evc⁄
)

1284 
evc⁄_ªque°q
 
ªque°s
;

1286 i‡(
evc⁄
->
ªåy_max
 < 0 ||Évc⁄->
ªåy_˙t
 <Évcon->retry_max) {

1287 
	`evtimî_assign
(&
evc⁄
->
ªåy_ev
,Évc⁄->
ba£
, 
evhâp_c⁄√˘i⁄_ªåy
,Évcon);

1289 
	`evhâp_add_evít
(&
evc⁄
->
ªåy_ev
,

1290 
	`MIN
(3600, 2 << 
evc⁄
->
ªåy_˙t
),

1291 
HTTP_CONNECT_TIMEOUT
);

1292 
evc⁄
->
ªåy_˙t
++;

1295 
	`evhâp_c⁄√˘i⁄_ª£t
(
evc⁄
);

1303 
	`TAILQ_INIT
(&
ªque°s
);

1304 
	`TAILQ_FIRST
(&
evc⁄
->
ªque°s
Ë!
NULL
) {

1305 
evhâp_ªque°
 *
ªque°
 = 
	`TAILQ_FIRST
(&
evc⁄
->
ªque°s
);

1306 
	`TAILQ_REMOVE
(&
evc⁄
->
ªque°s
, 
ªque°
, 
√xt
);

1307 
	`TAILQ_INSERT_TAIL
(&
ªque°s
, 
ªque°
, 
√xt
);

1311 
	`TAILQ_FIRST
(&
ªque°s
Ë!
NULL
) {

1312 
evhâp_ªque°
 *
ªque°
 = 
	`TAILQ_FIRST
(&
ªque°s
);

1313 
	`TAILQ_REMOVE
(&
ªque°s
, 
ªque°
, 
√xt
);

1314 
ªque°
->
evc⁄
 = 
NULL
;

1317 
ªque°
->
	`cb
‘eque°,Ñeque°->
cb_¨g
);

1318 
	`evhâp_ªque°_‰ì
(
ªque°
);

1320 
	}
}

1323 
	$evhâp_îr‹_cb
(
buf„ªvít
 *
bu„v
, 
wh©
, *
¨g
)

1325 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
¨g
;

1326 
evhâp_ªque°
 *
ªq
 = 
	`TAILQ_FIRST
(&
evc⁄
->
ªque°s
);

1328 
evc⁄
->
°©e
) {

1329 
EVCON_CONNECTING
:

1330 i‡(
wh©
 & 
BEV_EVENT_TIMEOUT
) {

1331 
	`evít_debug
(("%s: connectionÅimeout for \"%s:%d\" on "

1332 
EV_SOCK_FMT
,

1333 
__func__
, 
evc⁄
->
addªss
,Évc⁄->
p‹t
,

1334 
	`EV_SOCK_ARG
(
evc⁄
->
fd
)));

1335 
	`evhâp_c⁄√˘i⁄_cb_˛ónup
(
evc⁄
);

1340 
EVCON_READING_BODY
:

1341 i‡(!
ªq
->
chunked
 &&Ñeq->
¡‹ód
 < 0

1342 && 
wh©
 =(
BEV_EVENT_READING
|
BEV_EVENT_EOF
)) {

1344 
	`evhâp_c⁄√˘i⁄_d⁄e
(
evc⁄
);

1349 
EVCON_DISCONNECTED
:

1350 
EVCON_IDLE
:

1351 
EVCON_READING_FIRSTLINE
:

1352 
EVCON_READING_HEADERS
:

1353 
EVCON_READING_TRAILER
:

1354 
EVCON_WRITING
:

1362 i‡(
evc⁄
->
Êags
 & 
EVHTTP_CON_CLOSEDETECT
) {

1363 
evc⁄
->
Êags
 &~
EVHTTP_CON_CLOSEDETECT
;

1364 
	`EVUTIL_ASSERT
(
evc⁄
->
hâp_£rvî
 =
NULL
);

1369 
	`EVUTIL_ASSERT
(
evc⁄
->
°©e
 =
EVCON_IDLE
);

1370 
	`evhâp_c⁄√˘i⁄_ª£t
(
evc⁄
);

1374 i‡(
wh©
 & 
BEV_EVENT_TIMEOUT
) {

1375 
	`evhâp_c⁄√˘i⁄_Áû
(
evc⁄
, 
EVCON_HTTP_TIMEOUT
);

1376 } i‡(
wh©
 & (
BEV_EVENT_EOF
|
BEV_EVENT_ERROR
)) {

1377 
	`evhâp_c⁄√˘i⁄_Áû
(
evc⁄
, 
EVCON_HTTP_EOF
);

1379 
	`evhâp_c⁄√˘i⁄_Áû
(
evc⁄
, 
EVCON_HTTP_BUFFER_ERROR
);

1381 
	}
}

1387 
	$evhâp_c⁄√˘i⁄_cb
(
buf„ªvít
 *
bu„v
, 
wh©
, *
¨g
)

1389 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
¨g
;

1390 
îr‹
;

1391 
ev_sockÀn_t
 
îrsz
 = (
îr‹
);

1393 i‡(!(
wh©
 & 
BEV_EVENT_CONNECTED
)) {

1398 #i‚de‡
WIN32


1399 i‡(
î∫o
 =
ECONNREFUSED
)

1400 
˛ónup
;

1402 
	`evhâp_îr‹_cb
(
bu„v
, 
wh©
, 
¨g
);

1407 i‡(
	`gësock›t
(
evc⁄
->
fd
, 
SOL_SOCKET
, 
SO_ERROR
, (*)&
îr‹
,

1408 &
îrsz
) == -1) {

1409 
	`evít_debug
(("%s: gësock›àf‹ \"%s:%d\" o¿"
EV_SOCK_FMT
,

1410 
__func__
, 
evc⁄
->
addªss
,Évc⁄->
p‹t
,

1411 
	`EV_SOCK_ARG
(
evc⁄
->
fd
)));

1412 
˛ónup
;

1415 i‡(
îr‹
) {

1416 
	`evít_debug
(("%s: connect failed for \"%s:%d\" on "

1417 
EV_SOCK_FMT
": %s",

1418 
__func__
, 
evc⁄
->
addªss
,Évc⁄->
p‹t
,

1419 
	`EV_SOCK_ARG
(
evc⁄
->
fd
),

1420 
	`evutû_sockë_îr‹_to_°rög
(
îr‹
)));

1421 
˛ónup
;

1425 
	`evít_debug
(("%s: c⁄√˘edÅÿ\"%s:%d\" o¿"
EV_SOCK_FMT
"\n",

1426 
__func__
, 
evc⁄
->
addªss
,Évc⁄->
p‹t
,

1427 
	`EV_SOCK_ARG
(
evc⁄
->
fd
)));

1430 
evc⁄
->
ªåy_˙t
 = 0;

1431 
evc⁄
->
°©e
 = 
EVCON_IDLE
;

1434 
	`buf„ªvít_£tcb
(
evc⁄
->
bu„v
,

1435 
evhâp_ªad_cb
,

1436 
evhâp_wrôe_cb
,

1437 
evhâp_îr‹_cb
,

1438 
evc⁄
);

1440 i‡(
evc⁄
->
timeout
 == -1)

1441 
	`buf„ªvít_£âimeout
(
evc⁄
->
bu„v
,

1442 
HTTP_READ_TIMEOUT
, 
HTTP_WRITE_TIMEOUT
);

1444 
timevÆ
 
tv
;

1445 
tv
.
tv_£c
 = 
evc⁄
->
timeout
;

1446 
tv
.
tv_u£c
 = 0;

1447 
	`buf„ªvít_£t_timeouts
(
evc⁄
->
bu„v
, &
tv
, &tv);

1451 
	`evhâp_ªque°_di•©ch
(
evc⁄
);

1454 
˛ónup
:

1455 
	`evhâp_c⁄√˘i⁄_cb_˛ónup
(
evc⁄
);

1456 
	}
}

1463 
	$evhâp_vÆid_ª•⁄£_code
(
code
)

1465 i‡(
code
 == 0)

1469 
	}
}

1472 
	$evhâp_∑r£_hâp_vîsi⁄
(c⁄° *
vîsi⁄
, 
evhâp_ªque°
 *
ªq
)

1474 
maj‹
, 
mö‹
;

1475 
ch
;

1476 
n
 = 
	`ssˇnf
(
vîsi⁄
, "HTTP/%d.%d%c", &
maj‹
, &
mö‹
, &
ch
);

1477 i‡(
n
 !2 || 
maj‹
 > 1) {

1478 
	`evít_debug
(("%s: bad version %s on message %p from %s",

1479 
__func__
, 
vîsi⁄
, 
ªq
,Ñeq->
ªmŸe_ho°
));

1482 
ªq
->
maj‹
 = major;

1483 
ªq
->
mö‹
 = minor;

1485 
	}
}

1490 
	$evhâp_∑r£_ª•⁄£_löe
(
evhâp_ªque°
 *
ªq
, *
löe
)

1492 *
¥Ÿocﬁ
;

1493 *
numbî
;

1494 c⁄° *
ªadabÀ
 = "";

1496 
¥Ÿocﬁ
 = 
	`°r£p
(&
löe
, " ");

1497 i‡(
löe
 =
NULL
)

1499 
numbî
 = 
	`°r£p
(&
löe
, " ");

1500 i‡(
löe
 !
NULL
)

1501 
ªadabÀ
 = 
löe
;

1503 i‡(
	`evhâp_∑r£_hâp_vîsi⁄
(
¥Ÿocﬁ
, 
ªq
) < 0)

1506 
ªq
->
ª•⁄£_code
 = 
	`©oi
(
numbî
);

1507 i‡(!
	`evhâp_vÆid_ª•⁄£_code
(
ªq
->
ª•⁄£_code
)) {

1508 
	`evít_debug
(("%s: badÑesponse code \"%s\"",

1509 
__func__
, 
numbî
));

1513 i‡((
ªq
->
ª•⁄£_code_löe
 = 
	`mm_°rdup
(
ªadabÀ
)Ë=
NULL
) {

1514 
	`evít_w¨n
("%s: sådup", 
__func__
);

1519 
	}
}

1524 
	$evhâp_∑r£_ªque°_löe
(
evhâp_ªque°
 *
ªq
, *
löe
)

1526 *
mëhod
;

1527 *
uri
;

1528 *
vîsi⁄
;

1529 c⁄° *
ho°«me
;

1530 c⁄° *
scheme
;

1533 
mëhod
 = 
	`°r£p
(&
löe
, " ");

1534 i‡(
löe
 =
NULL
)

1536 
uri
 = 
	`°r£p
(&
löe
, " ");

1537 i‡(
löe
 =
NULL
)

1539 
vîsi⁄
 = 
	`°r£p
(&
löe
, " ");

1540 i‡(
löe
 !
NULL
)

1544 i‡(
	`°rcmp
(
mëhod
, "GET") == 0) {

1545 
ªq
->
ty≥
 = 
EVHTTP_REQ_GET
;

1546 } i‡(
	`°rcmp
(
mëhod
, "POST") == 0) {

1547 
ªq
->
ty≥
 = 
EVHTTP_REQ_POST
;

1548 } i‡(
	`°rcmp
(
mëhod
, "HEAD") == 0) {

1549 
ªq
->
ty≥
 = 
EVHTTP_REQ_HEAD
;

1550 } i‡(
	`°rcmp
(
mëhod
, "PUT") == 0) {

1551 
ªq
->
ty≥
 = 
EVHTTP_REQ_PUT
;

1552 } i‡(
	`°rcmp
(
mëhod
, "DELETE") == 0) {

1553 
ªq
->
ty≥
 = 
EVHTTP_REQ_DELETE
;

1554 } i‡(
	`°rcmp
(
mëhod
, "OPTIONS") == 0) {

1555 
ªq
->
ty≥
 = 
EVHTTP_REQ_OPTIONS
;

1556 } i‡(
	`°rcmp
(
mëhod
, "TRACE") == 0) {

1557 
ªq
->
ty≥
 = 
EVHTTP_REQ_TRACE
;

1558 } i‡(
	`°rcmp
(
mëhod
, "PATCH") == 0) {

1559 
ªq
->
ty≥
 = 
EVHTTP_REQ_PATCH
;

1561 
ªq
->
ty≥
 = 
_EVHTTP_REQ_UNKNOWN
;

1562 
	`evít_debug
(("%s: bad method %s onÑequest %p from %s",

1563 
__func__
, 
mëhod
, 
ªq
,Ñeq->
ªmŸe_ho°
));

1568 i‡(
	`evhâp_∑r£_hâp_vîsi⁄
(
vîsi⁄
, 
ªq
) < 0)

1571 i‡((
ªq
->
uri
 = 
	`mm_°rdup
(uri)Ë=
NULL
) {

1572 
	`evít_debug
(("%s: mm_°rdup", 
__func__
));

1576 i‡((
ªq
->
uri_ñems
 = 
	`evhâp_uri_∑r£_wôh_Êags
‘eq->
uri
,

1577 
EVHTTP_URI_NONCONFORMANT
)Ë=
NULL
) {

1584 
scheme
 = 
	`evhâp_uri_gë_scheme
(
ªq
->
uri_ñems
);

1585 
ho°«me
 = 
	`evhâp_uri_gë_ho°
(
ªq
->
uri_ñems
);

1586 i‡(
scheme
 && (!
	`evutû_ascii_°rˇ£cmp
(scheme, "http") ||

1587 !
	`evutû_ascii_°rˇ£cmp
(
scheme
, "https")) &&

1588 
ho°«me
 &&

1589 !
	`evhâp_föd_vho°
(
ªq
->
evc⁄
->
hâp_£rvî
, 
NULL
, 
ho°«me
))

1590 
ªq
->
Êags
 |
EVHTTP_PROXY_REQUEST
;

1593 
	}
}

1596 
	$evhâp_föd_hódî
(c⁄° 
evkeyvÆq
 *
hódîs
, c⁄° *
key
)

1598 
evkeyvÆ
 *
hódî
;

1600 
	`TAILQ_FOREACH
(
hódî
, 
hódîs
, 
√xt
) {

1601 i‡(
	`evutû_ascii_°rˇ£cmp
(
hódî
->
key
, key) == 0)

1602  (
hódî
->
vÆue
);

1605  (
NULL
);

1606 
	}
}

1609 
	$evhâp_˛ór_hódîs
(
evkeyvÆq
 *
hódîs
)

1611 
evkeyvÆ
 *
hódî
;

1613 
hódî
 = 
	`TAILQ_FIRST
(
hódîs
);

1614 
hódî
 !
NULL
;

1615 
hódî
 = 
	`TAILQ_FIRST
(
hódîs
)) {

1616 
	`TAILQ_REMOVE
(
hódîs
, 
hódî
, 
√xt
);

1617 
	`mm_‰ì
(
hódî
->
key
);

1618 
	`mm_‰ì
(
hódî
->
vÆue
);

1619 
	`mm_‰ì
(
hódî
);

1621 
	}
}

1629 
	$evhâp_ªmove_hódî
(
evkeyvÆq
 *
hódîs
, c⁄° *
key
)

1631 
evkeyvÆ
 *
hódî
;

1633 
	`TAILQ_FOREACH
(
hódî
, 
hódîs
, 
√xt
) {

1634 i‡(
	`evutû_ascii_°rˇ£cmp
(
hódî
->
key
, key) == 0)

1638 i‡(
hódî
 =
NULL
)

1642 
	`TAILQ_REMOVE
(
hódîs
, 
hódî
, 
√xt
);

1643 
	`mm_‰ì
(
hódî
->
key
);

1644 
	`mm_‰ì
(
hódî
->
vÆue
);

1645 
	`mm_‰ì
(
hódî
);

1648 
	}
}

1651 
	$evhâp_hódî_is_vÆid_vÆue
(c⁄° *
vÆue
)

1653 c⁄° *
p
 = 
vÆue
;

1655 (
p
 = 
	`°Ωbrk
’, "\r\n")Ë!
NULL
) {

1657 
p
 +
	`°r•n
(p, "\r\n");

1659 i‡(*
p
 != ' ' && *p != '\t')

1663 
	}
}

1666 
	$evhâp_add_hódî
(
evkeyvÆq
 *
hódîs
,

1667 c⁄° *
key
, c⁄° *
vÆue
)

1669 
	`evít_debug
(("%s: key: %†vÆ: %s\n", 
__func__
, 
key
, 
vÆue
));

1671 i‡(
	`°rchr
(
key
, '\r'Ë!
NULL
 || strchr(key, '\n') != NULL) {

1673 
	`evít_debug
(("%s: dr›pög iŒegÆ hódî key\n", 
__func__
));

1677 i‡(!
	`evhâp_hódî_is_vÆid_vÆue
(
vÆue
)) {

1678 
	`evít_debug
(("%s: dr›pög iŒegÆ hódî vÆue\n", 
__func__
));

1682  (
	`evhâp_add_hódî_öã∫Æ
(
hódîs
, 
key
, 
vÆue
));

1683 
	}
}

1686 
	$evhâp_add_hódî_öã∫Æ
(
evkeyvÆq
 *
hódîs
,

1687 c⁄° *
key
, c⁄° *
vÆue
)

1689 
evkeyvÆ
 *
hódî
 = 
	`mm_ˇŒoc
(1, (evkeyval));

1690 i‡(
hódî
 =
NULL
) {

1691 
	`evít_w¨n
("%s: cÆloc", 
__func__
);

1694 i‡((
hódî
->
key
 = 
	`mm_°rdup
(key)Ë=
NULL
) {

1695 
	`mm_‰ì
(
hódî
);

1696 
	`evít_w¨n
("%s: sådup", 
__func__
);

1699 i‡((
hódî
->
vÆue
 = 
	`mm_°rdup
(vÆue)Ë=
NULL
) {

1700 
	`mm_‰ì
(
hódî
->
key
);

1701 
	`mm_‰ì
(
hódî
);

1702 
	`evít_w¨n
("%s: sådup", 
__func__
);

1706 
	`TAILQ_INSERT_TAIL
(
hódîs
, 
hódî
, 
√xt
);

1709 
	}
}

1721 
mesßge_ªad_°©us


1722 
	$evhâp_∑r£_fú°löe
(
evhâp_ªque°
 *
ªq
, 
evbuf„r
 *
buf„r
)

1724 *
löe
;

1725 
mesßge_ªad_°©us
 
°©us
 = 
ALL_DATA_READ
;

1727 
size_t
 
löe_Àngth
;

1729 
löe
 = 
	`evbuf„r_ªad 
(
buf„r
, &
löe_Àngth
, 
EVBUFFER_EOL_CRLF
);

1730 i‡(
löe
 =
NULL
) {

1731 i‡(
ªq
->
evc⁄
 !
NULL
 &&

1732 
	`evbuf„r_gë_Àngth
(
buf„r
Ë> 
ªq
->
evc⁄
->
max_hódîs_size
)

1733  (
DATA_TOO_LONG
);

1735  (
MORE_DATA_EXPECTED
);

1738 i‡(
ªq
->
evc⁄
 !
NULL
 &&

1739 
löe_Àngth
 > 
ªq
->
evc⁄
->
max_hódîs_size
) {

1740 
	`mm_‰ì
(
löe
);

1741  (
DATA_TOO_LONG
);

1744 
ªq
->
hódîs_size
 = 
löe_Àngth
;

1746 
ªq
->
köd
) {

1747 
EVHTTP_REQUEST
:

1748 i‡(
	`evhâp_∑r£_ªque°_löe
(
ªq
, 
löe
) == -1)

1749 
°©us
 = 
DATA_CORRUPTED
;

1751 
EVHTTP_RESPONSE
:

1752 i‡(
	`evhâp_∑r£_ª•⁄£_löe
(
ªq
, 
löe
) == -1)

1753 
°©us
 = 
DATA_CORRUPTED
;

1756 
°©us
 = 
DATA_CORRUPTED
;

1759 
	`mm_‰ì
(
löe
);

1760  (
°©us
);

1761 
	}
}

1764 
	$evhâp_≠≥nd_to_œ°_hódî
(
evkeyvÆq
 *
hódîs
, c⁄° *
löe
)

1766 
evkeyvÆ
 *
hódî
 = 
	`TAILQ_LAST
(
hódîs
, 
evkeyvÆq
);

1767 *
√wvÆ
;

1768 
size_t
 
ﬁd_Àn
, 
löe_Àn
;

1770 i‡(
hódî
 =
NULL
)

1773 
ﬁd_Àn
 = 
	`°æí
(
hódî
->
vÆue
);

1774 
löe_Àn
 = 
	`°æí
(
löe
);

1776 
√wvÆ
 = 
	`mm_ªÆloc
(
hódî
->
vÆue
, 
ﬁd_Àn
 + 
löe_Àn
 + 1);

1777 i‡(
√wvÆ
 =
NULL
)

1780 
	`mem˝y
(
√wvÆ
 + 
ﬁd_Àn
, 
löe
, 
löe_Àn
 + 1);

1781 
hódî
->
vÆue
 = 
√wvÆ
;

1784 
	}
}

1786 
mesßge_ªad_°©us


1787 
	$evhâp_∑r£_hódîs
(
evhâp_ªque°
 *
ªq
, 
evbuf„r
* 
buf„r
)

1789 
mesßge_ªad_°©us
 
îrcode
 = 
DATA_CORRUPTED
;

1790 *
löe
;

1791 
mesßge_ªad_°©us
 
°©us
 = 
MORE_DATA_EXPECTED
;

1793 
evkeyvÆq
* 
hódîs
 = 
ªq
->
öput_hódîs
;

1794 
size_t
 
löe_Àngth
;

1795 (
löe
 = 
	`evbuf„r_ªad 
(
buf„r
, &
löe_Àngth
, 
EVBUFFER_EOL_CRLF
))

1796 !
NULL
) {

1797 *
skey
, *
svÆue
;

1799 
ªq
->
hódîs_size
 +
löe_Àngth
;

1801 i‡(
ªq
->
evc⁄
 !
NULL
 &&

1802 
ªq
->
hódîs_size
 >Ñeq->
evc⁄
->
max_hódîs_size
) {

1803 
îrcode
 = 
DATA_TOO_LONG
;

1804 
îr‹
;

1807 i‡(*
löe
 == '\0') {

1808 
°©us
 = 
ALL_DATA_READ
;

1809 
	`mm_‰ì
(
löe
);

1814 i‡(*
löe
 == ' ' || *line == '\t') {

1815 i‡(
	`evhâp_≠≥nd_to_œ°_hódî
(
hódîs
, 
löe
) == -1)

1816 
îr‹
;

1817 
	`mm_‰ì
(
löe
);

1822 
svÆue
 = 
löe
;

1823 
skey
 = 
	`°r£p
(&
svÆue
, ":");

1824 i‡(
svÆue
 =
NULL
)

1825 
îr‹
;

1827 
svÆue
 +
	`°r•n
(svalue, " ");

1829 i‡(
	`evhâp_add_hódî
(
hódîs
, 
skey
, 
svÆue
) == -1)

1830 
îr‹
;

1832 
	`mm_‰ì
(
löe
);

1835 i‡(
°©us
 =
MORE_DATA_EXPECTED
) {

1836 i‡(
ªq
->
evc⁄
 !
NULL
 &&

1837 
ªq
->
hódîs_size
 + 
	`evbuf„r_gë_Àngth
(
buf„r
Ë>Ñeq->
evc⁄
->
max_hódîs_size
)

1838  (
DATA_TOO_LONG
);

1841  (
°©us
);

1843 
îr‹
:

1844 
	`mm_‰ì
(
löe
);

1845  (
îrcode
);

1846 
	}
}

1849 
	$evhâp_gë_body_Àngth
(
evhâp_ªque°
 *
ªq
)

1851 
evkeyvÆq
 *
hódîs
 = 
ªq
->
öput_hódîs
;

1852 c⁄° *
c⁄ã¡_Àngth
;

1853 c⁄° *
c⁄√˘i⁄
;

1855 
c⁄ã¡_Àngth
 = 
	`evhâp_föd_hódî
(
hódîs
, "Content-Length");

1856 
c⁄√˘i⁄
 = 
	`evhâp_föd_hódî
(
hódîs
, "Connection");

1858 i‡(
c⁄ã¡_Àngth
 =
NULL
 && 
c⁄√˘i⁄
 == NULL)

1859 
ªq
->
¡‹ód
 = -1;

1860 i‡(
c⁄ã¡_Àngth
 =
NULL
 &&

1861 
	`evutû_ascii_°rˇ£cmp
(
c⁄√˘i⁄
, "Close") != 0) {

1863 
	`evít_w¨nx
("%s: we gotÇo contentÜength, butÅhe "

1865 
__func__
, 
c⁄√˘i⁄
);

1867 } i‡(
c⁄ã¡_Àngth
 =
NULL
) {

1868 
ªq
->
¡‹ód
 = -1;

1870 *
ídp
;

1871 
ev_öt64_t
 
¡‹ód
 = 
	`evutû_°πﬁl
(
c⁄ã¡_Àngth
, &
ídp
, 10);

1872 i‡(*
c⁄ã¡_Àngth
 ='\0' || *
ídp
 !'\0' || 
¡‹ód
 < 0) {

1873 
	`evít_debug
(("%s: illegal contentÜength: %s",

1874 
__func__
, 
c⁄ã¡_Àngth
));

1877 
ªq
->
¡‹ód
 =Çtoread;

1880 
	`evít_debug
(("%s: byã†tÿªad: "
EV_I64_FMT
" (ö buf„∏"
EV_SIZE_FMT
")\n",

1881 
__func__
, 
	`EV_I64_ARG
(
ªq
->
¡‹ód
),

1882 
	`EV_SIZE_ARG
(
	`evbuf„r_gë_Àngth
(
	`buf„ªvít_gë_öput
(
ªq
->
evc⁄
->
bu„v
)))));

1885 
	}
}

1888 
	$evhâp_mëhod_may_have_body
(
evhâp_cmd_ty≥
 
ty≥
)

1890 
ty≥
) {

1891 
EVHTTP_REQ_POST
:

1892 
EVHTTP_REQ_PUT
:

1893 
EVHTTP_REQ_PATCH
:

1895 
EVHTTP_REQ_TRACE
:

1898 
EVHTTP_REQ_GET
:

1899 
EVHTTP_REQ_HEAD
:

1900 
EVHTTP_REQ_DELETE
:

1901 
EVHTTP_REQ_OPTIONS
:

1902 
EVHTTP_REQ_CONNECT
:

1907 
	}
}

1910 
	$evhâp_gë_body
(
evhâp_c⁄√˘i⁄
 *
evc⁄
, 
evhâp_ªque°
 *
ªq
)

1912 c⁄° *
x„r_íc
;

1915 i‡(
ªq
->
köd
 =
EVHTTP_REQUEST
 &&

1916 !
	`evhâp_mëhod_may_have_body
(
ªq
->
ty≥
)) {

1917 
	`evhâp_c⁄√˘i⁄_d⁄e
(
evc⁄
);

1920 
evc⁄
->
°©e
 = 
EVCON_READING_BODY
;

1921 
x„r_íc
 = 
	`evhâp_föd_hódî
(
ªq
->
öput_hódîs
, "Transfer-Encoding");

1922 i‡(
x„r_íc
 !
NULL
 && 
	`evutû_ascii_°rˇ£cmp
(xfer_enc, "chunked") == 0) {

1923 
ªq
->
chunked
 = 1;

1924 
ªq
->
¡‹ód
 = -1;

1926 i‡(
	`evhâp_gë_body_Àngth
(
ªq
) == -1) {

1927 
	`evhâp_c⁄√˘i⁄_Áû
(
evc⁄
,

1928 
EVCON_HTTP_INVALID_HEADER
);

1931 i‡(
ªq
->
köd
 =
EVHTTP_REQUEST
 &&Ñeq->
¡‹ód
 < 1) {

1934 
	`evhâp_c⁄√˘i⁄_d⁄e
(
evc⁄
);

1940 i‡(
ªq
->
köd
 =
EVHTTP_REQUEST
 && 
	`REQ_VERSION_ATLEAST
(req, 1, 1)) {

1941 c⁄° *
ex≥˘
;

1943 
ex≥˘
 = 
	`evhâp_föd_hódî
(
ªq
->
öput_hódîs
, "Expect");

1944 i‡(
ex≥˘
) {

1945 i‡(!
	`evutû_ascii_°rˇ£cmp
(
ex≥˘
, "100-continue")) {

1952 i‡(
ªq
->
¡‹ód
 > 0) {

1954 i‡((
ªq
->
evc⁄
->
max_body_size
 <
EV_INT64_MAX
Ë&& (
ev_uöt64_t
Ïeq->
¡‹ód
 >Ñeq->evcon->max_body_size) {

1955 
	`evhâp_£nd_îr‹
(
ªq
, 
HTTP_ENTITYTOOLARGE
, 
NULL
);

1959 i‡(!
	`evbuf„r_gë_Àngth
(
	`buf„ªvít_gë_öput
(
evc⁄
->
bu„v
)))

1960 
	`evhâp_£nd_c⁄töue
(
evc⁄
, 
ªq
);

1962 
	`evhâp_£nd_îr‹
(
ªq
, 
HTTP_EXPECTATIONFAILED
,

1963 
NULL
);

1969 
	`evhâp_ªad_body
(
evc⁄
, 
ªq
);

1971 
	}
}

1974 
	$evhâp_ªad_fú°löe
(
evhâp_c⁄√˘i⁄
 *
evc⁄
,

1975 
evhâp_ªque°
 *
ªq
)

1977 
mesßge_ªad_°©us
 
ªs
;

1979 
ªs
 = 
	`evhâp_∑r£_fú°löe
(
ªq
, 
	`buf„ªvít_gë_öput
(
evc⁄
->
bu„v
));

1980 i‡(
ªs
 =
DATA_CORRUPTED
 ||Ñe†=
DATA_TOO_LONG
) {

1982 
	`evít_debug
(("%s: bad hódîÜöe†⁄ "
EV_SOCK_FMT
"\n",

1983 
__func__
, 
	`EV_SOCK_ARG
(
evc⁄
->
fd
)));

1984 
	`evhâp_c⁄√˘i⁄_Áû
(
evc⁄
, 
EVCON_HTTP_INVALID_HEADER
);

1986 } i‡(
ªs
 =
MORE_DATA_EXPECTED
) {

1991 
evc⁄
->
°©e
 = 
EVCON_READING_HEADERS
;

1992 
	`evhâp_ªad_hódî
(
evc⁄
, 
ªq
);

1993 
	}
}

1996 
	$evhâp_ªad_hódî
(
evhâp_c⁄√˘i⁄
 *
evc⁄
,

1997 
evhâp_ªque°
 *
ªq
)

1999 
mesßge_ªad_°©us
 
ªs
;

2000 
evutû_sockë_t
 
fd
 = 
evc⁄
->fd;

2002 
ªs
 = 
	`evhâp_∑r£_hódîs
(
ªq
, 
	`buf„ªvít_gë_öput
(
evc⁄
->
bu„v
));

2003 i‡(
ªs
 =
DATA_CORRUPTED
 ||Ñe†=
DATA_TOO_LONG
) {

2005 
	`evít_debug
(("%s: bad hódîÜöe†⁄ "
EV_SOCK_FMT
"\n",

2006 
__func__
, 
	`EV_SOCK_ARG
(
fd
)));

2007 
	`evhâp_c⁄√˘i⁄_Áû
(
evc⁄
, 
EVCON_HTTP_INVALID_HEADER
);

2009 } i‡(
ªs
 =
MORE_DATA_EXPECTED
) {

2015 
	`buf„ªvít_dißbÀ
(
evc⁄
->
bu„v
, 
EV_READ
);

2018 
ªq
->
köd
) {

2019 
EVHTTP_REQUEST
:

2020 
	`evít_debug
(("%s: checkög f‹Öo° d©®⁄ "
EV_SOCK_FMT
"\n",

2021 
__func__
, 
	`EV_SOCK_ARG
(
fd
)));

2022 
	`evhâp_gë_body
(
evc⁄
, 
ªq
);

2026 
EVHTTP_RESPONSE
:

2028 i‡(
ªq
->
ª•⁄£_code
 == 100) {

2029 
	`evhâp_°¨t_ªad
(
evc⁄
);

2032 i‡(!
	`evhâp_ª•⁄£_√eds_body
(
ªq
)) {

2033 
	`evít_debug
(("%s: skipping body for code %d\n",

2034 
__func__
, 
ªq
->
ª•⁄£_code
));

2035 
	`evhâp_c⁄√˘i⁄_d⁄e
(
evc⁄
);

2037 
	`evít_debug
(("%s: start ofÑead body for %s on "

2038 
EV_SOCK_FMT
"\n",

2039 
__func__
, 
ªq
->
ªmŸe_ho°
, 
	`EV_SOCK_ARG
(
fd
)));

2040 
	`evhâp_gë_body
(
evc⁄
, 
ªq
);

2047 
	`evít_w¨nx
("%s: bad hódî o¿"
EV_SOCK_FMT
, 
__func__
,

2048 
	`EV_SOCK_ARG
(
fd
));

2049 
	`evhâp_c⁄√˘i⁄_Áû
(
evc⁄
, 
EVCON_HTTP_INVALID_HEADER
);

2053 
	}
}

2065 
evhâp_c⁄√˘i⁄
 *

2066 
	$evhâp_c⁄√˘i⁄_√w
(c⁄° *
addªss
, 
p‹t
)

2068  (
	`evhâp_c⁄√˘i⁄_ba£_√w
(
NULL
, NULL, 
addªss
, 
p‹t
));

2069 
	}
}

2071 
evhâp_c⁄√˘i⁄
 *

2072 
	$evhâp_c⁄√˘i⁄_ba£_√w
(
evít_ba£
 *
ba£
, 
evdns_ba£
 *
dnsba£
,

2073 c⁄° *
addªss
, 
p‹t
)

2075 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
NULL
;

2077 
	`evít_debug
(("Aâem±ög c⁄√˘i⁄Åÿ%s:%d\n", 
addªss
, 
p‹t
));

2079 i‡((
evc⁄
 = 
	`mm_ˇŒoc
(1, (
evhâp_c⁄√˘i⁄
))Ë=
NULL
) {

2080 
	`evít_w¨n
("%s: cÆlo¯Áûed", 
__func__
);

2081 
îr‹
;

2084 
evc⁄
->
fd
 = -1;

2085 
evc⁄
->
p‹t
 =Öort;

2087 
evc⁄
->
max_hódîs_size
 = 
EV_SIZE_MAX
;

2088 
evc⁄
->
max_body_size
 = 
EV_SIZE_MAX
;

2090 
evc⁄
->
timeout
 = -1;

2091 
evc⁄
->
ªåy_˙t
 =Évc⁄->
ªåy_max
 = 0;

2093 i‡((
evc⁄
->
addªss
 = 
	`mm_°rdup
◊ddªss)Ë=
NULL
) {

2094 
	`evít_w¨n
("%s: sådu∞Áûed", 
__func__
);

2095 
îr‹
;

2098 i‡((
evc⁄
->
bu„v
 = 
	`buf„ªvít_√w
(-1,

2099 
evhâp_ªad_cb
,

2100 
evhâp_wrôe_cb
,

2101 
evhâp_îr‹_cb
, 
evc⁄
)Ë=
NULL
) {

2102 
	`evít_w¨n
("%s: buf„ªvít_√w faûed", 
__func__
);

2103 
îr‹
;

2106 
evc⁄
->
°©e
 = 
EVCON_DISCONNECTED
;

2107 
	`TAILQ_INIT
(&
evc⁄
->
ªque°s
);

2109 i‡(
ba£
 !
NULL
) {

2110 
evc⁄
->
ba£
 = base;

2111 
	`buf„ªvít_ba£_£t
(
ba£
, 
evc⁄
->
bu„v
);

2115 
	`evít_de„ºed_cb_öô
(&
evc⁄
->
ªad_m‹e_de„ºed_cb
,

2116 
evhâp_de„ºed_ªad_cb
, 
evc⁄
);

2118 
evc⁄
->
dns_ba£
 = 
dnsba£
;

2120  (
evc⁄
);

2122 
îr‹
:

2123 i‡(
evc⁄
 !
NULL
)

2124 
	`evhâp_c⁄√˘i⁄_‰ì
(
evc⁄
);

2125  (
NULL
);

2126 
	}
}

2128 
buf„ªvít
 *

2129 
	$evhâp_c⁄√˘i⁄_gë_buf„ªvít
(
evhâp_c⁄√˘i⁄
 *
evc⁄
)

2131  
evc⁄
->
bu„v
;

2132 
	}
}

2135 
	$evhâp_c⁄√˘i⁄_£t_ba£
(
evhâp_c⁄√˘i⁄
 *
evc⁄
,

2136 
evít_ba£
 *
ba£
)

2138 
	`EVUTIL_ASSERT
(
evc⁄
->
ba£
 =
NULL
);

2139 
	`EVUTIL_ASSERT
(
evc⁄
->
°©e
 =
EVCON_DISCONNECTED
);

2140 
evc⁄
->
ba£
 = base;

2141 
	`buf„ªvít_ba£_£t
(
ba£
, 
evc⁄
->
bu„v
);

2142 
	}
}

2145 
	$evhâp_c⁄√˘i⁄_£t_timeout
(
evhâp_c⁄√˘i⁄
 *
evc⁄
,

2146 
timeout_ö_£cs
)

2148 
evc⁄
->
timeout
 = 
timeout_ö_£cs
;

2150 i‡(
evc⁄
->
timeout
 == -1)

2151 
	`buf„ªvít_£âimeout
(
evc⁄
->
bu„v
,

2152 
HTTP_READ_TIMEOUT
, 
HTTP_WRITE_TIMEOUT
);

2154 
	`buf„ªvít_£âimeout
(
evc⁄
->
bu„v
,

2155 
evc⁄
->
timeout
,Évcon->timeout);

2156 
	}
}

2159 
	$evhâp_c⁄√˘i⁄_£t_ªåõs
(
evhâp_c⁄√˘i⁄
 *
evc⁄
,

2160 
ªåy_max
)

2162 
evc⁄
->
ªåy_max
 =Ñetry_max;

2163 
	}
}

2166 
evhâp_c⁄√˘i⁄_£t_˛o£cb
(
evhâp_c⁄√˘i⁄
 *
evc⁄
,

2167 (*
cb
)(
evhâp_c⁄√˘i⁄
 *, *), *
cb¨g
)

2169 
evc⁄
->
˛o£cb
 = 
cb
;

2170 
evc⁄
->
˛o£cb_¨g
 = 
cb¨g
;

2171 
	}
}

2174 
	$evhâp_c⁄√˘i⁄_gë_≥î
(
evhâp_c⁄√˘i⁄
 *
evc⁄
,

2175 **
addªss
, 
ev_uöt16_t
 *
p‹t
)

2177 *
addªss
 = 
evc⁄
->address;

2178 *
p‹t
 = 
evc⁄
->port;

2179 
	}
}

2182 
	$evhâp_c⁄√˘i⁄_c⁄√˘
(
evhâp_c⁄√˘i⁄
 *
evc⁄
)

2184 i‡(
evc⁄
->
°©e
 =
EVCON_CONNECTING
)

2187 
	`evhâp_c⁄√˘i⁄_ª£t
(
evc⁄
);

2189 
	`EVUTIL_ASSERT
(!(
evc⁄
->
Êags
 & 
EVHTTP_CON_INCOMING
));

2190 
evc⁄
->
Êags
 |
EVHTTP_CON_OUTGOING
;

2192 
evc⁄
->
fd
 = 
	`böd_sockë
(

2193 
evc⁄
->
böd_addªss
,Évc⁄->
böd_p‹t
, 0 );

2194 i‡(
evc⁄
->
fd
 == -1) {

2195 
	`evít_debug
(("%s: failedÅo bindÅo \"%s\"",

2196 
__func__
, 
evc⁄
->
böd_addªss
));

2201 
	`buf„ªvít_£tfd
(
evc⁄
->
bu„v
,Évc⁄->
fd
);

2202 
	`buf„ªvít_£tcb
(
evc⁄
->
bu„v
,

2203 
NULL
 ,

2204 
NULL
 ,

2205 
evhâp_c⁄√˘i⁄_cb
,

2206 
evc⁄
);

2207 
	`buf„ªvít_£âimeout
(
evc⁄
->
bu„v
, 0,

2208 
evc⁄
->
timeout
 !-1 ?Évc⁄->timeouà: 
HTTP_CONNECT_TIMEOUT
);

2210 
	`buf„ªvít_íabÀ
(
evc⁄
->
bu„v
, 
EV_WRITE
);

2212 i‡(
	`buf„ªvít_sockë_c⁄√˘_ho°«me
(
evc⁄
->
bu„v
,Évc⁄->
dns_ba£
,

2213 
AF_UNSPEC
, 
evc⁄
->
addªss
,Évc⁄->
p‹t
) < 0) {

2214 
	`evít_sock_w¨n
(
evc⁄
->
fd
, "%s: connectionÅo \"%s\" failed",

2215 
__func__
, 
evc⁄
->
addªss
);

2220 
	`evhâp_c⁄√˘i⁄_cb_˛ónup
(
evc⁄
);

2224 
evc⁄
->
°©e
 = 
EVCON_CONNECTING
;

2227 
	}
}

2236 
	$evhâp_make_ªque°
(
evhâp_c⁄√˘i⁄
 *
evc⁄
,

2237 
evhâp_ªque°
 *
ªq
,

2238 
evhâp_cmd_ty≥
 
ty≥
, c⁄° *
uri
)

2241 
ªq
->
köd
 = 
EVHTTP_REQUEST
;

2242 
ªq
->
ty≥
 =Åype;

2243 i‡(
ªq
->
uri
 !
NULL
)

2244 
	`mm_‰ì
(
ªq
->
uri
);

2245 i‡((
ªq
->
uri
 = 
	`mm_°rdup
(uri)Ë=
NULL
) {

2246 
	`evít_w¨n
("%s: sådup", 
__func__
);

2247 
	`evhâp_ªque°_‰ì
(
ªq
);

2252 i‡(!
ªq
->
maj‹
 && !ªq->
mö‹
) {

2253 
ªq
->
maj‹
 = 1;

2254 
ªq
->
mö‹
 = 1;

2257 
	`EVUTIL_ASSERT
(
ªq
->
evc⁄
 =
NULL
);

2258 
ªq
->
evc⁄
 =Évcon;

2259 
	`EVUTIL_ASSERT
(!(
ªq
->
Êags
 & 
EVHTTP_REQ_OWN_CONNECTION
));

2261 
	`TAILQ_INSERT_TAIL
(&
evc⁄
->
ªque°s
, 
ªq
, 
√xt
);

2264 i‡(!
	`evhâp_c⁄√˘ed
(
evc⁄
)) {

2265 
ªs
 = 
	`evhâp_c⁄√˘i⁄_c⁄√˘
(
evc⁄
);

2270 i‡(
ªs
 != 0)

2271 
	`TAILQ_REMOVE
(&
evc⁄
->
ªque°s
, 
ªq
, 
√xt
);

2273  
ªs
;

2281 i‡(
	`TAILQ_FIRST
(&
evc⁄
->
ªque°s
Ë=
ªq
)

2282 
	`evhâp_ªque°_di•©ch
(
evc⁄
);

2285 
	}
}

2288 
	$evhâp_ˇn˚l_ªque°
(
evhâp_ªque°
 *
ªq
)

2290 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
ªq
->evcon;

2291 i‡(
evc⁄
 !
NULL
) {

2293 i‡(
	`TAILQ_FIRST
(&
evc⁄
->
ªque°s
Ë=
ªq
) {

2297 
	`evhâp_c⁄√˘i⁄_Áû
(
evc⁄
,

2298 
EVCON_HTTP_REQUEST_CANCEL
);

2306 
	`TAILQ_REMOVE
(&
evc⁄
->
ªque°s
, 
ªq
, 
√xt
);

2310 
	`evhâp_ªque°_‰ì
(
ªq
);

2311 
	}
}

2319 
	$evhâp_°¨t_ªad
(
evhâp_c⁄√˘i⁄
 *
evc⁄
)

2322 
	`buf„ªvít_dißbÀ
(
evc⁄
->
bu„v
, 
EV_WRITE
);

2323 
	`buf„ªvít_íabÀ
(
evc⁄
->
bu„v
, 
EV_READ
);

2324 
evc⁄
->
°©e
 = 
EVCON_READING_FIRSTLINE
;

2326 
	`buf„ªvít_£tcb
(
evc⁄
->
bu„v
,

2327 
evhâp_ªad_cb
,

2328 
evhâp_wrôe_cb
,

2329 
evhâp_îr‹_cb
,

2330 
evc⁄
);

2334 i‡(
	`evbuf„r_gë_Àngth
(
	`buf„ªvít_gë_öput
(
evc⁄
->
bu„v
))) {

2335 
	`evít_de„ºed_cb_scheduÀ
(
	`gë_de„ºed_queue
(
evc⁄
),

2336 &
evc⁄
->
ªad_m‹e_de„ºed_cb
);

2338 
	}
}

2341 
	$evhâp_£nd_d⁄e
(
evhâp_c⁄√˘i⁄
 *
evc⁄
, *
¨g
)

2343 
√ed_˛o£
;

2344 
evhâp_ªque°
 *
ªq
 = 
	`TAILQ_FIRST
(&
evc⁄
->
ªque°s
);

2345 
	`TAILQ_REMOVE
(&
evc⁄
->
ªque°s
, 
ªq
, 
√xt
);

2347 
√ed_˛o£
 =

2348 (
	`REQ_VERSION_BEFORE
(
ªq
, 1, 1) &&

2349 !
	`evhâp_is_c⁄√˘i⁄_kì∑live
(
ªq
->
öput_hódîs
))||

2350 
	`evhâp_is_c⁄√˘i⁄_˛o£
(
ªq
->
Êags
,Ñeq->
öput_hódîs
) ||

2351 
	`evhâp_is_c⁄√˘i⁄_˛o£
(
ªq
->
Êags
,Ñeq->
ouçut_hódîs
);

2353 
	`EVUTIL_ASSERT
(
ªq
->
Êags
 & 
EVHTTP_REQ_OWN_CONNECTION
);

2354 
	`evhâp_ªque°_‰ì
(
ªq
);

2356 i‡(
√ed_˛o£
) {

2357 
	`evhâp_c⁄√˘i⁄_‰ì
(
evc⁄
);

2362 i‡(
	`evhâp_assocüã_√w_ªque°_wôh_c⁄√˘i⁄
(
evc⁄
) == -1) {

2363 
	`evhâp_c⁄√˘i⁄_‰ì
(
evc⁄
);

2365 
	}
}

2372 
	$evhâp_£nd_îr‹
(
evhâp_ªque°
 *
ªq
, 
îr‹
, c⁄° *
ªas⁄
)

2375 
	#ERR_FORMAT
 "<HTML><HEAD>\n" \

2379 "</BODY></HTML>\n"

	)

2381 
evbuf„r
 *
buf
 = 
	`evbuf„r_√w
();

2382 i‡(
buf
 =
NULL
) {

2384 
	`evhâp_c⁄√˘i⁄_‰ì
(
ªq
->
evc⁄
);

2387 i‡(
ªas⁄
 =
NULL
) {

2388 
ªas⁄
 = 
	`evhâp_ª•⁄£_phø£_öã∫Æ
(
îr‹
);

2391 
	`evhâp_ª•⁄£_code
(
ªq
, 
îr‹
, 
ªas⁄
);

2393 
	`evbuf„r_add_¥ötf
(
buf
, 
ERR_FORMAT
, 
îr‹
, 
ªas⁄
,Ñeason);

2395 
	`evhâp_£nd_∑ge
(
ªq
, 
buf
);

2397 
	`evbuf„r_‰ì
(
buf
);

2398 #unde‡
ERR_FORMAT


2399 
	}
}

2403 
ölöe
 

2404 
	$evhâp_£nd
(
evhâp_ªque°
 *
ªq
, 
evbuf„r
 *
d©abuf
)

2406 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
ªq
->evcon;

2408 i‡(
evc⁄
 =
NULL
) {

2409 
	`evhâp_ªque°_‰ì
(
ªq
);

2413 
	`EVUTIL_ASSERT
(
	`TAILQ_FIRST
(&
evc⁄
->
ªque°s
Ë=
ªq
);

2416 
ªq
->
u£rd⁄e
 = 1;

2419 i‡(
d©abuf
 !
NULL
)

2420 
	`evbuf„r_add_buf„r
(
ªq
->
ouçut_buf„r
, 
d©abuf
);

2423 
	`evhâp_make_hódî
(
evc⁄
, 
ªq
);

2425 
	`evhâp_wrôe_buf„r
(
evc⁄
, 
evhâp_£nd_d⁄e
, 
NULL
);

2426 
	}
}

2429 
	$evhâp_£nd_ª∂y
(
evhâp_ªque°
 *
ªq
, 
code
, c⁄° *
ªas⁄
,

2430 
evbuf„r
 *
d©abuf
)

2432 
	`evhâp_ª•⁄£_code
(
ªq
, 
code
, 
ªas⁄
);

2434 
	`evhâp_£nd
(
ªq
, 
d©abuf
);

2435 
	}
}

2438 
	$evhâp_£nd_ª∂y_°¨t
(
evhâp_ªque°
 *
ªq
, 
code
,

2439 c⁄° *
ªas⁄
)

2441 
	`evhâp_ª•⁄£_code
(
ªq
, 
code
, 
ªas⁄
);

2442 i‡(
	`evhâp_föd_hódî
(
ªq
->
ouçut_hódîs
, "C⁄ã¡-Lígth"Ë=
NULL
 &&

2443 
	`REQ_VERSION_ATLEAST
(
ªq
, 1, 1) &&

2444 
	`evhâp_ª•⁄£_√eds_body
(
ªq
)) {

2450 
	`evhâp_add_hódî
(
ªq
->
ouçut_hódîs
, "Transfer-Encoding",

2452 
ªq
->
chunked
 = 1;

2454 
ªq
->
chunked
 = 0;

2456 
	`evhâp_make_hódî
(
ªq
->
evc⁄
,Ñeq);

2457 
	`evhâp_wrôe_buf„r
(
ªq
->
evc⁄
, 
NULL
, NULL);

2458 
	}
}

2461 
	$evhâp_£nd_ª∂y_chunk
(
evhâp_ªque°
 *
ªq
, 
evbuf„r
 *
d©abuf
)

2463 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
ªq
->evcon;

2464 
evbuf„r
 *
ouçut
;

2466 i‡(
evc⁄
 =
NULL
)

2469 
ouçut
 = 
	`buf„ªvít_gë_ouçut
(
evc⁄
->
bu„v
);

2471 i‡(
	`evbuf„r_gë_Àngth
(
d©abuf
) == 0)

2473 i‡(!
	`evhâp_ª•⁄£_√eds_body
(
ªq
))

2475 i‡(
ªq
->
chunked
) {

2476 
	`evbuf„r_add_¥ötf
(
ouçut
, "%x\r\n",

2477 ()
	`evbuf„r_gë_Àngth
(
d©abuf
));

2479 
	`evbuf„r_add_buf„r
(
ouçut
, 
d©abuf
);

2480 i‡(
ªq
->
chunked
) {

2481 
	`evbuf„r_add
(
ouçut
, "\r\n", 2);

2483 
	`evhâp_wrôe_buf„r
(
evc⁄
, 
NULL
, NULL);

2484 
	}
}

2487 
	$evhâp_£nd_ª∂y_íd
(
evhâp_ªque°
 *
ªq
)

2489 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
ªq
->evcon;

2490 
evbuf„r
 *
ouçut
;

2492 i‡(
evc⁄
 =
NULL
) {

2493 
	`evhâp_ªque°_‰ì
(
ªq
);

2497 
ouçut
 = 
	`buf„ªvít_gë_ouçut
(
evc⁄
->
bu„v
);

2500 
ªq
->
u£rd⁄e
 = 1;

2502 i‡(
ªq
->
chunked
) {

2503 
	`evbuf„r_add
(
ouçut
, "0\r\n\r\n", 5);

2504 
	`evhâp_wrôe_buf„r
(
ªq
->
evc⁄
, 
evhâp_£nd_d⁄e
, 
NULL
);

2505 
ªq
->
chunked
 = 0;

2506 } i‡(
	`evbuf„r_gë_Àngth
(
ouçut
) == 0) {

2508 
	`evhâp_£nd_d⁄e
(
evc⁄
, 
NULL
);

2511 
evc⁄
->
cb
 = 
evhâp_£nd_d⁄e
;

2512 
evc⁄
->
cb_¨g
 = 
NULL
;

2514 
	}
}

2516 c⁄° *
	göf‹m©i⁄Æ_phø£s
[] = {

2521 c⁄° *
	gsuc˚ss_phø£s
[] = {

2531 c⁄° *
	gªdúe˘i⁄_phø£s
[] = {

2541 c⁄° *
	g˛õ¡_îr‹_phø£s
[] = {

2562 c⁄° *
	g£rvî_îr‹_phø£s
[] = {

2571 
	sª•⁄£_˛ass
 {

2572 c⁄° *
	m«me
;

2573 
size_t
 
	mnum_ª•⁄£s
;

2574 c⁄° **
	mª•⁄£s
;

2577 #i‚de‡
MEMBERSOF


2578 
	#MEMBERSOF
(
x
Ë((x)/(x[0]))

	)

2581 c⁄° 
ª•⁄£_˛ass
 
	gª•⁄£_˛as£s
[] = {

2582  { "Inf‹m©i⁄Æ", 
MEMBERSOF
(
öf‹m©i⁄Æ_phø£s
), informational_phrases },

2583  { "Suc˚ss", 
MEMBERSOF
(
suc˚ss_phø£s
), success_phrases },

2584  { "Redúe˘i⁄", 
MEMBERSOF
(
ªdúe˘i⁄_phø£s
),Ñedirection_phrases },

2585  { "Clõ¡ Eº‹", 
MEMBERSOF
(
˛õ¡_îr‹_phø£s
), client_error_phrases },

2586  { "Sîvî Eº‹", 
MEMBERSOF
(
£rvî_îr‹_phø£s
), server_error_phrases }

2590 
	$evhâp_ª•⁄£_phø£_öã∫Æ
(
code
)

2592 
kœss
 = 
code
 / 100 - 1;

2593 
subcode
 = 
code
 % 100;

2596 i‡(
kœss
 < 0 || kœs†>(Ë
	`MEMBERSOF
(
ª•⁄£_˛as£s
))

2600 i‡(
subcode
 >(Ë
ª•⁄£_˛as£s
[
kœss
].
num_ª•⁄£s
)

2601  
ª•⁄£_˛as£s
[
kœss
].
«me
;

2603  
ª•⁄£_˛as£s
[
kœss
].
ª•⁄£s
[
subcode
];

2604 
	}
}

2607 
	$evhâp_ª•⁄£_code
(
evhâp_ªque°
 *
ªq
, 
code
, c⁄° *
ªas⁄
)

2609 
ªq
->
köd
 = 
EVHTTP_RESPONSE
;

2610 
ªq
->
ª•⁄£_code
 = 
code
;

2611 i‡(
ªq
->
ª•⁄£_code_löe
 !
NULL
)

2612 
	`mm_‰ì
(
ªq
->
ª•⁄£_code_löe
);

2613 i‡(
ªas⁄
 =
NULL
)

2614 
ªas⁄
 = 
	`evhâp_ª•⁄£_phø£_öã∫Æ
(
code
);

2615 
ªq
->
ª•⁄£_code_löe
 = 
	`mm_°rdup
(
ªas⁄
);

2616 i‡(
ªq
->
ª•⁄£_code_löe
 =
NULL
) {

2617 
	`evít_w¨n
("%s: sådup", 
__func__
);

2620 
	}
}

2623 
	$evhâp_£nd_∑ge
(
evhâp_ªque°
 *
ªq
, 
evbuf„r
 *
d©abuf
)

2625 i‡(!
ªq
->
maj‹
 || !ªq->
mö‹
) {

2626 
ªq
->
maj‹
 = 1;

2627 
ªq
->
mö‹
 = 1;

2630 i‡(
ªq
->
köd
 !
EVHTTP_RESPONSE
)

2631 
	`evhâp_ª•⁄£_code
(
ªq
, 200, "OK");

2633 
	`evhâp_˛ór_hódîs
(
ªq
->
ouçut_hódîs
);

2634 
	`evhâp_add_hódî
(
ªq
->
ouçut_hódîs
, "Content-Type", "text/html");

2635 
	`evhâp_add_hódî
(
ªq
->
ouçut_hódîs
, "Connection", "close");

2637 
	`evhâp_£nd
(
ªq
, 
d©abuf
);

2638 
	}
}

2640 c⁄° 
	guri_ch¨s
[256] = {

2663 
	#CHAR_IS_UNRESERVED
(
c
) \

2664 (
uri_ch¨s
[()(
c
)])

	)

2671 
	$evhâp_urõncode
(c⁄° *
uri
, 
ev_ssize_t
 
Àn
, 
•a˚_as_∂us
)

2673 
evbuf„r
 *
buf
 = 
	`evbuf„r_√w
();

2674 c⁄° *
p
, *
íd
;

2675 *
ªsu…
;

2677 i‡(
buf
 =
NULL
)

2678  (
NULL
);

2680 i‡(
Àn
 >= 0)

2681 
íd
 = 
uri
+
Àn
;

2683 
íd
 = 
uri
+
	`°æí
(uri);

2685 
p
 = 
uri
;Ö < 
íd
;Ö++) {

2686 i‡(
	`CHAR_IS_UNRESERVED
(*
p
)) {

2687 
	`evbuf„r_add
(
buf
, 
p
, 1);

2688 } i‡(*
p
 =' ' && 
•a˚_as_∂us
) {

2689 
	`evbuf„r_add
(
buf
, "+", 1);

2691 
	`evbuf„r_add_¥ötf
(
buf
, "%%%02X", ()(*
p
));

2694 
	`evbuf„r_add
(
buf
, "", 1);

2695 
ªsu…
 = 
	`mm_mÆloc
(
	`evbuf„r_gë_Àngth
(
buf
));

2696 i‡(
ªsu…
)

2697 
	`evbuf„r_ªmove
(
buf
, 
ªsu…
, 
	`evbuf„r_gë_Àngth
(buf));

2698 
	`evbuf„r_‰ì
(
buf
);

2700  (
ªsu…
);

2701 
	}
}

2704 
	$evhâp_ícode_uri
(c⁄° *
°r
)

2706  
	`evhâp_urõncode
(
°r
, -1, 0);

2707 
	}
}

2716 
	$evhâp_decode_uri_öã∫Æ
(

2717 c⁄° *
uri
, 
size_t
 
Àngth
, *
ªt
, 
decode_∂us_˘l
)

2719 
c
;

2720 
j
;

2721 
decode_∂us
 = (
decode_∂us_˘l
 == 1) ? 1: 0;

2722 
i
;

2724 
i
 = 
j
 = 0; i < 
Àngth
; i++) {

2725 
c
 = 
uri
[
i
];

2726 i‡(
c
 == '?') {

2727 i‡(
decode_∂us_˘l
 < 0)

2728 
decode_∂us
 = 1;

2729 } i‡(
c
 ='+' && 
decode_∂us
) {

2730 
c
 = ' ';

2731 } i‡(
c
 ='%' && 
	`EVUTIL_ISXDIGIT
(
uri
[
i
+1]) &&

2732 
	`EVUTIL_ISXDIGIT
(
uri
[
i
+2])) {

2733 
tmp
[3];

2734 
tmp
[0] = 
uri
[
i
+1];

2735 
tmp
[1] = 
uri
[
i
+2];

2736 
tmp
[2] = '\0';

2737 
c
 = ()
	`°πﬁ
(
tmp
, 
NULL
, 16);

2738 
i
 += 2;

2740 
ªt
[
j
++] = 
c
;

2742 
ªt
[
j
] = '\0';

2744  (
j
);

2745 
	}
}

2749 
	$evhâp_decode_uri
(c⁄° *
uri
)

2751 *
ªt
;

2753 i‡((
ªt
 = 
	`mm_mÆloc
(
	`°æí
(
uri
Ë+ 1)Ë=
NULL
) {

2754 
	`evít_w¨n
("%s: mÆloc(%lu)", 
__func__
,

2755 ()(
	`°æí
(
uri
) + 1));

2756  (
NULL
);

2759 
	`evhâp_decode_uri_öã∫Æ
(
uri
, 
	`°æí
(uri),

2760 
ªt
, -1 );

2762  (
ªt
);

2763 
	}
}

2766 
	$evhâp_uridecode
(c⁄° *
uri
, 
decode_∂us
, 
size_t
 *
size_out
)

2768 *
ªt
;

2769 
n
;

2771 i‡((
ªt
 = 
	`mm_mÆloc
(
	`°æí
(
uri
Ë+ 1)Ë=
NULL
) {

2772 
	`evít_w¨n
("%s: mÆloc(%lu)", 
__func__
,

2773 ()(
	`°æí
(
uri
) + 1));

2774  (
NULL
);

2777 
n
 = 
	`evhâp_decode_uri_öã∫Æ
(
uri
, 
	`°æí
(uri),

2778 
ªt
, !!
decode_∂us
 );

2780 i‡(
size_out
) {

2781 
	`EVUTIL_ASSERT
(
n
 >= 0);

2782 *
size_out
 = (
size_t
)
n
;

2785  (
ªt
);

2786 
	}
}

2794 
	$evhâp_∑r£_quîy_im∂
(c⁄° *
°r
, 
evkeyvÆq
 *
hódîs
,

2795 
is_whﬁe_uri
)

2797 *
löe
=
NULL
;

2798 *
¨gumít
;

2799 *
p
;

2800 c⁄° *
quîy_∑π
;

2801 
ªsu…
 = -1;

2802 
evhâp_uri
 *
uri
=
NULL
;

2804 
	`TAILQ_INIT
(
hódîs
);

2806 i‡(
is_whﬁe_uri
) {

2807 
uri
 = 
	`evhâp_uri_∑r£
(
°r
);

2808 i‡(!
uri
)

2809 
îr‹
;

2810 
quîy_∑π
 = 
	`evhâp_uri_gë_quîy
(
uri
);

2812 
quîy_∑π
 = 
°r
;

2816 i‡(!
quîy_∑π
 || !
	`°æí
(query_part)) {

2817 
ªsu…
 = 0;

2818 
d⁄e
;

2821 i‡((
löe
 = 
	`mm_°rdup
(
quîy_∑π
)Ë=
NULL
) {

2822 
	`evít_w¨n
("%s: sådup", 
__func__
);

2823 
îr‹
;

2826 
p
 = 
¨gumít
 = 
löe
;

2827 
p
 !
NULL
 && *p != '\0') {

2828 *
key
, *
vÆue
, *
decoded_vÆue
;

2829 
¨gumít
 = 
	`°r£p
(&
p
, "&");

2831 
vÆue
 = 
¨gumít
;

2832 
key
 = 
	`°r£p
(&
vÆue
, "=");

2833 i‡(
vÆue
 =
NULL
 || *
key
 == '\0') {

2834 
îr‹
;

2837 i‡((
decoded_vÆue
 = 
	`mm_mÆloc
(
	`°æí
(
vÆue
Ë+ 1)Ë=
NULL
) {

2838 
	`evít_w¨n
("%s: mm_mÆloc", 
__func__
);

2839 
îr‹
;

2841 
	`evhâp_decode_uri_öã∫Æ
(
vÆue
, 
	`°æí
(value),

2842 
decoded_vÆue
, 1 );

2843 
	`evít_debug
(("Quîy P¨am: %†-> %s\n", 
key
, 
decoded_vÆue
));

2844 
	`evhâp_add_hódî_öã∫Æ
(
hódîs
, 
key
, 
decoded_vÆue
);

2845 
	`mm_‰ì
(
decoded_vÆue
);

2848 
ªsu…
 = 0;

2849 
d⁄e
;

2850 
îr‹
:

2851 
	`evhâp_˛ór_hódîs
(
hódîs
);

2852 
d⁄e
:

2853 i‡(
löe
)

2854 
	`mm_‰ì
(
löe
);

2855 i‡(
uri
)

2856 
	`evhâp_uri_‰ì
(
uri
);

2857  
ªsu…
;

2858 
	}
}

2861 
	$evhâp_∑r£_quîy
(c⁄° *
uri
, 
evkeyvÆq
 *
hódîs
)

2863  
	`evhâp_∑r£_quîy_im∂
(
uri
, 
hódîs
, 1);

2864 
	}
}

2866 
	$evhâp_∑r£_quîy_°r
(c⁄° *
uri
, 
evkeyvÆq
 *
hódîs
)

2868  
	`evhâp_∑r£_quîy_im∂
(
uri
, 
hódîs
, 0);

2869 
	}
}

2871 
evhâp_cb
 *

2872 
	$evhâp_di•©ch_ˇŒback
(
hâpcbq
 *
ˇŒbacks
, 
evhâp_ªque°
 *
ªq
)

2874 
evhâp_cb
 *
cb
;

2875 
size_t
 
off£t
 = 0;

2876 *
å™¶©ed
;

2877 c⁄° *
∑th
;

2880 
∑th
 = 
	`evhâp_uri_gë_∑th
(
ªq
->
uri_ñems
);

2881 
off£t
 = 
	`°æí
(
∑th
);

2882 i‡((
å™¶©ed
 = 
	`mm_mÆloc
(
off£t
 + 1)Ë=
NULL
)

2883  (
NULL
);

2884 
	`evhâp_decode_uri_öã∫Æ
(
∑th
, 
off£t
, 
å™¶©ed
,

2887 
	`TAILQ_FOREACH
(
cb
, 
ˇŒbacks
, 
√xt
) {

2888 i‡(!
	`°rcmp
(
cb
->
wh©
, 
å™¶©ed
)) {

2889 
	`mm_‰ì
(
å™¶©ed
);

2890  (
cb
);

2894 
	`mm_‰ì
(
å™¶©ed
);

2895  (
NULL
);

2896 
	}
}

2900 
	$¥efix_suffix_m©ch
(c⁄° *
∑âîn
, c⁄° *
«me
, 
ign‹eˇ£
)

2902 
c
;

2905 
c
 = *
∑âîn
++) {

2907  *
«me
 == '\0';

2910 *
«me
 != '\0') {

2911 i‡(
	`¥efix_suffix_m©ch
(
∑âîn
, 
«me
,

2912 
ign‹eˇ£
))

2914 ++
«me
;

2918 i‡(
c
 !*
«me
) {

2919 i‡(!
ign‹eˇ£
 ||

2920 
	`EVUTIL_TOLOWER
(
c
Ë!EVUTIL_TOLOWER(*
«me
))

2923 ++
«me
;

2927 
	}
}

2936 
	$evhâp_föd_Æüs
(
evhâp
 *
hâp
, evhâ∞**
outhâp
,

2937 c⁄° *
ho°«me
)

2939 
evhâp_£rvî_Æüs
 *
Æüs
;

2940 
evhâp
 *
vho°
;

2942 
	`TAILQ_FOREACH
(
Æüs
, &
hâp
->
Æü£s
, 
√xt
) {

2944 i‡(!
	`evutû_ascii_°rˇ£cmp
(
Æüs
->Æüs, 
ho°«me
)) {

2945 i‡(
outhâp
)

2946 *
outhâp
 = 
hâp
;

2953 
	`TAILQ_FOREACH
(
vho°
, &
hâp
->
vútuÆho°s
, 
√xt_vho°
) {

2954 i‡(
	`evhâp_föd_Æüs
(
vho°
, 
outhâp
, 
ho°«me
))

2959 
	}
}

2973 
	$evhâp_föd_vho°
(
evhâp
 *
hâp
, evhâ∞**
outhâp
,

2974 c⁄° *
ho°«me
)

2976 
evhâp
 *
vho°
;

2977 
evhâp
 *
ﬁdhâp
;

2978 
m©ch_found
 = 0;

2980 i‡(
	`evhâp_föd_Æüs
(
hâp
, 
outhâp
, 
ho°«me
))

2984 
ﬁdhâp
 = 
hâp
;

2985 
	`TAILQ_FOREACH
(
vho°
, &
hâp
->
vútuÆho°s
, 
√xt_vho°
) {

2986 i‡(
	`¥efix_suffix_m©ch
(
vho°
->
vho°_∑âîn
,

2987 
ho°«me
, 1 )) {

2988 
hâp
 = 
vho°
;

2989 
m©ch_found
 = 1;

2993 } 
ﬁdhâp
 !
hâp
);

2995 i‡(
outhâp
)

2996 *
outhâp
 = 
hâp
;

2998  
m©ch_found
;

2999 
	}
}

3002 
	$evhâp_h™dÀ_ªque°
(
evhâp_ªque°
 *
ªq
, *
¨g
)

3004 
evhâp
 *
hâp
 = 
¨g
;

3005 
evhâp_cb
 *
cb
 = 
NULL
;

3006 c⁄° *
ho°«me
;

3009 
ªq
->
u£rd⁄e
 = 0;

3011 i‡(
ªq
->
ty≥
 =0 ||Ñeq->
uri
 =
NULL
) {

3012 
	`evhâp_£nd_îr‹
(
ªq
, 
HTTP_BADREQUEST
, 
NULL
);

3016 i‡((
hâp
->
Ælowed_mëhods
 & 
ªq
->
ty≥
) == 0) {

3017 
	`evít_debug
(("Rejecting disallowed method %x (allowed: %x)\n",

3018 ()
ªq
->
ty≥
, ()
hâp
->
Ælowed_mëhods
));

3019 
	`evhâp_£nd_îr‹
(
ªq
, 
HTTP_NOTIMPLEMENTED
, 
NULL
);

3024 
ho°«me
 = 
	`evhâp_ªque°_gë_ho°
(
ªq
);

3025 i‡(
ho°«me
 !
NULL
) {

3026 
	`evhâp_föd_vho°
(
hâp
, &hâp, 
ho°«me
);

3029 i‡((
cb
 = 
	`evhâp_di•©ch_ˇŒback
(&
hâp
->
ˇŒbacks
, 
ªq
)Ë!
NULL
) {

3030 (*
cb
->cb)(
ªq
, cb->
cb¨g
);

3035 i‡(
hâp
->
gícb
) {

3036 (*
hâp
->
gícb
)(
ªq
, hâp->
gícb¨g
);

3040 
	#ERR_FORMAT
 "<html><head>" \

3045 "</body></html>\n"

	)

3047 *
esˇ≥d_html
;

3048 
evbuf„r
 *
buf
;

3050 i‡((
esˇ≥d_html
 = 
	`evhâp_htmÀsˇ≥
(
ªq
->
uri
)Ë=
NULL
) {

3051 
	`evhâp_c⁄√˘i⁄_‰ì
(
ªq
->
evc⁄
);

3055 i‡((
buf
 = 
	`evbuf„r_√w
()Ë=
NULL
) {

3056 
	`mm_‰ì
(
esˇ≥d_html
);

3057 
	`evhâp_c⁄√˘i⁄_‰ì
(
ªq
->
evc⁄
);

3061 
	`evhâp_ª•⁄£_code
(
ªq
, 
HTTP_NOTFOUND
, "Not Found");

3063 
	`evbuf„r_add_¥ötf
(
buf
, 
ERR_FORMAT
, 
esˇ≥d_html
);

3065 
	`mm_‰ì
(
esˇ≥d_html
);

3067 
	`evhâp_£nd_∑ge
(
ªq
, 
buf
);

3069 
	`evbuf„r_‰ì
(
buf
);

3070 #unde‡
ERR_FORMAT


3072 
	}
}

3076 
	$ac˚±_sockë_cb
(
evc⁄∆i°íî
 *
li°íî
, 
evutû_sockë_t
 
nfd
, 
sockaddr
 *
≥î_ß
, 
≥î_sockÀn
, *
¨g
)

3078 
evhâp
 *
hâp
 = 
¨g
;

3080 
	`evhâp_gë_ªque°
(
hâp
, 
nfd
, 
≥î_ß
, 
≥î_sockÀn
);

3081 
	}
}

3084 
	$evhâp_böd_sockë
(
evhâp
 *
hâp
, c⁄° *
addªss
, 
ev_uöt16_t
 
p‹t
)

3086 
evhâp_bound_sockë
 *
bound
 =

3087 
	`evhâp_böd_sockë_wôh_h™dÀ
(
hâp
, 
addªss
, 
p‹t
);

3088 i‡(
bound
 =
NULL
)

3091 
	}
}

3093 
evhâp_bound_sockë
 *

3094 
	$evhâp_böd_sockë_wôh_h™dÀ
(
evhâp
 *
hâp
, c⁄° *
addªss
, 
ev_uöt16_t
 
p‹t
)

3096 
evutû_sockë_t
 
fd
;

3097 
evhâp_bound_sockë
 *
bound
;

3099 i‡((
fd
 = 
	`böd_sockë
(
addªss
, 
p‹t
, 1 )) == -1)

3100  (
NULL
);

3102 i‡(
	`li°í
(
fd
, 128) == -1) {

3103 
	`evít_sock_w¨n
(
fd
, "%s:Üi°í", 
__func__
);

3104 
	`evutû_˛o£sockë
(
fd
);

3105  (
NULL
);

3108 
bound
 = 
	`evhâp_ac˚±_sockë_wôh_h™dÀ
(
hâp
, 
fd
);

3110 i‡(
bound
 !
NULL
) {

3111 
	`evít_debug
(("BoundÅoÖort %d - Awaiting connections ... ",

3112 
p‹t
));

3113  (
bound
);

3116  (
NULL
);

3117 
	}
}

3120 
	$evhâp_ac˚±_sockë
(
evhâp
 *
hâp
, 
evutû_sockë_t
 
fd
)

3122 
evhâp_bound_sockë
 *
bound
 =

3123 
	`evhâp_ac˚±_sockë_wôh_h™dÀ
(
hâp
, 
fd
);

3124 i‡(
bound
 =
NULL
)

3127 
	}
}

3130 
evhâp_bound_sockë
 *

3131 
	$evhâp_ac˚±_sockë_wôh_h™dÀ
(
evhâp
 *
hâp
, 
evutû_sockë_t
 
fd
)

3133 
evhâp_bound_sockë
 *
bound
;

3134 
evc⁄∆i°íî
 *
li°íî
;

3135 c⁄° 
Êags
 =

3136 
LEV_OPT_REUSEABLE
|
LEV_OPT_CLOSE_ON_EXEC
|
LEV_OPT_CLOSE_ON_FREE
;

3138 
li°íî
 = 
	`evc⁄∆i°íî_√w
(
hâp
->
ba£
, 
NULL
, NULL,

3139 
Êags
,

3141 
fd
);

3142 i‡(!
li°íî
)

3143  (
NULL
);

3145 
bound
 = 
	`evhâp_böd_li°íî
(
hâp
, 
li°íî
);

3146 i‡(!
bound
) {

3147 
	`evc⁄∆i°íî_‰ì
(
li°íî
);

3148  (
NULL
);

3150  (
bound
);

3151 
	}
}

3153 
evhâp_bound_sockë
 *

3154 
	$evhâp_böd_li°íî
(
evhâp
 *
hâp
, 
evc⁄∆i°íî
 *
li°íî
)

3156 
evhâp_bound_sockë
 *
bound
;

3158 
bound
 = 
	`mm_mÆloc
((
evhâp_bound_sockë
));

3159 i‡(
bound
 =
NULL
)

3160  (
NULL
);

3162 
bound
->
li°íî
 =Üistener;

3163 
	`TAILQ_INSERT_TAIL
(&
hâp
->
sockës
, 
bound
, 
√xt
);

3165 
	`evc⁄∆i°íî_£t_cb
(
li°íî
, 
ac˚±_sockë_cb
, 
hâp
);

3166  
bound
;

3167 
	}
}

3169 
evutû_sockë_t


3170 
	$evhâp_bound_sockë_gë_fd
(
evhâp_bound_sockë
 *
bound
)

3172  
	`evc⁄∆i°íî_gë_fd
(
bound
->
li°íî
);

3173 
	}
}

3175 
evc⁄∆i°íî
 *

3176 
	$evhâp_bound_sockë_gë_li°íî
(
evhâp_bound_sockë
 *
bound
)

3178  
bound
->
li°íî
;

3179 
	}
}

3182 
	$evhâp_dñ_ac˚±_sockë
(
evhâp
 *
hâp
, 
evhâp_bound_sockë
 *
bound
)

3184 
	`TAILQ_REMOVE
(&
hâp
->
sockës
, 
bound
, 
√xt
);

3185 
	`evc⁄∆i°íî_‰ì
(
bound
->
li°íî
);

3186 
	`mm_‰ì
(
bound
);

3187 
	}
}

3189 
evhâp
*

3190 
	$evhâp_√w_obje˘
()

3192 
evhâp
 *
hâp
 = 
NULL
;

3194 i‡((
hâp
 = 
	`mm_ˇŒoc
(1, (
evhâp
))Ë=
NULL
) {

3195 
	`evít_w¨n
("%s: cÆloc", 
__func__
);

3196  (
NULL
);

3199 
hâp
->
timeout
 = -1;

3200 
	`evhâp_£t_max_hódîs_size
(
hâp
, 
EV_SIZE_MAX
);

3201 
	`evhâp_£t_max_body_size
(
hâp
, 
EV_SIZE_MAX
);

3202 
	`evhâp_£t_Ælowed_mëhods
(
hâp
,

3203 
EVHTTP_REQ_GET
 |

3204 
EVHTTP_REQ_POST
 |

3205 
EVHTTP_REQ_HEAD
 |

3206 
EVHTTP_REQ_PUT
 |

3207 
EVHTTP_REQ_DELETE
);

3209 
	`TAILQ_INIT
(&
hâp
->
sockës
);

3210 
	`TAILQ_INIT
(&
hâp
->
ˇŒbacks
);

3211 
	`TAILQ_INIT
(&
hâp
->
c⁄√˘i⁄s
);

3212 
	`TAILQ_INIT
(&
hâp
->
vútuÆho°s
);

3213 
	`TAILQ_INIT
(&
hâp
->
Æü£s
);

3215  (
hâp
);

3216 
	}
}

3218 
evhâp
 *

3219 
	$evhâp_√w
(
evít_ba£
 *
ba£
)

3221 
evhâp
 *
hâp
 = 
NULL
;

3223 
hâp
 = 
	`evhâp_√w_obje˘
();

3224 i‡(
hâp
 =
NULL
)

3225  (
NULL
);

3226 
hâp
->
ba£
 = base;

3228  (
hâp
);

3229 
	}
}

3235 
evhâp
 *

3236 
	$evhâp_°¨t
(c⁄° *
addªss
, 
p‹t
)

3238 
evhâp
 *
hâp
 = 
NULL
;

3240 
hâp
 = 
	`evhâp_√w_obje˘
();

3241 i‡(
hâp
 =
NULL
)

3242  (
NULL
);

3243 i‡(
	`evhâp_böd_sockë
(
hâp
, 
addªss
, 
p‹t
) == -1) {

3244 
	`mm_‰ì
(
hâp
);

3245  (
NULL
);

3248  (
hâp
);

3249 
	}
}

3252 
	$evhâp_‰ì
(
evhâp
* 
hâp
)

3254 
evhâp_cb
 *
hâp_cb
;

3255 
evhâp_c⁄√˘i⁄
 *
evc⁄
;

3256 
evhâp_bound_sockë
 *
bound
;

3257 
evhâp
* 
vho°
;

3258 
evhâp_£rvî_Æüs
 *
Æüs
;

3261 (
bound
 = 
	`TAILQ_FIRST
(&
hâp
->
sockës
)Ë!
NULL
) {

3262 
	`TAILQ_REMOVE
(&
hâp
->
sockës
, 
bound
, 
√xt
);

3264 
	`evc⁄∆i°íî_‰ì
(
bound
->
li°íî
);

3266 
	`mm_‰ì
(
bound
);

3269 (
evc⁄
 = 
	`TAILQ_FIRST
(&
hâp
->
c⁄√˘i⁄s
)Ë!
NULL
) {

3271 
	`evhâp_c⁄√˘i⁄_‰ì
(
evc⁄
);

3274 (
hâp_cb
 = 
	`TAILQ_FIRST
(&
hâp
->
ˇŒbacks
)Ë!
NULL
) {

3275 
	`TAILQ_REMOVE
(&
hâp
->
ˇŒbacks
, 
hâp_cb
, 
√xt
);

3276 
	`mm_‰ì
(
hâp_cb
->
wh©
);

3277 
	`mm_‰ì
(
hâp_cb
);

3280 (
vho°
 = 
	`TAILQ_FIRST
(&
hâp
->
vútuÆho°s
)Ë!
NULL
) {

3281 
	`TAILQ_REMOVE
(&
hâp
->
vútuÆho°s
, 
vho°
, 
√xt_vho°
);

3283 
	`evhâp_‰ì
(
vho°
);

3286 i‡(
hâp
->
vho°_∑âîn
 !
NULL
)

3287 
	`mm_‰ì
(
hâp
->
vho°_∑âîn
);

3289 (
Æüs
 = 
	`TAILQ_FIRST
(&
hâp
->
Æü£s
)Ë!
NULL
) {

3290 
	`TAILQ_REMOVE
(&
hâp
->
Æü£s
, 
Æüs
, 
√xt
);

3291 
	`mm_‰ì
(
Æüs
->alias);

3292 
	`mm_‰ì
(
Æüs
);

3295 
	`mm_‰ì
(
hâp
);

3296 
	}
}

3299 
	$evhâp_add_vútuÆ_ho°
(
evhâp
* 
hâp
, c⁄° *
∑âîn
,

3300 
evhâp
* 
vho°
)

3303 i‡(
vho°
->
vho°_∑âîn
 !
NULL
 ||

3304 
	`TAILQ_FIRST
(&
vho°
->
sockës
Ë!
NULL
)

3307 
vho°
->
vho°_∑âîn
 = 
	`mm_°rdup
(
∑âîn
);

3308 i‡(
vho°
->
vho°_∑âîn
 =
NULL
)

3311 
	`TAILQ_INSERT_TAIL
(&
hâp
->
vútuÆho°s
, 
vho°
, 
√xt_vho°
);

3314 
	}
}

3317 
	$evhâp_ªmove_vútuÆ_ho°
(
evhâp
* 
hâp
, evhâp* 
vho°
)

3319 i‡(
vho°
->
vho°_∑âîn
 =
NULL
)

3322 
	`TAILQ_REMOVE
(&
hâp
->
vútuÆho°s
, 
vho°
, 
√xt_vho°
);

3324 
	`mm_‰ì
(
vho°
->
vho°_∑âîn
);

3325 
vho°
->
vho°_∑âîn
 = 
NULL
;

3328 
	}
}

3331 
	$evhâp_add_£rvî_Æüs
(
evhâp
 *
hâp
, c⁄° *
Æüs
)

3333 
evhâp_£rvî_Æüs
 *
evÆüs
;

3335 
evÆüs
 = 
	`mm_ˇŒoc
(1, (*evalias));

3336 i‡(!
evÆüs
)

3339 
evÆüs
->
Æüs
 = 
	`mm_°rdup
(alias);

3340 i‡(!
evÆüs
->
Æüs
) {

3341 
	`mm_‰ì
(
evÆüs
);

3345 
	`TAILQ_INSERT_TAIL
(&
hâp
->
Æü£s
, 
evÆüs
, 
√xt
);

3348 
	}
}

3351 
	$evhâp_ªmove_£rvî_Æüs
(
evhâp
 *
hâp
, c⁄° *
Æüs
)

3353 
evhâp_£rvî_Æüs
 *
evÆüs
;

3355 
	`TAILQ_FOREACH
(
evÆüs
, &
hâp
->
Æü£s
, 
√xt
) {

3356 i‡(
	`evutû_ascii_°rˇ£cmp
(
evÆüs
->
Æüs
,álias) == 0) {

3357 
	`TAILQ_REMOVE
(&
hâp
->
Æü£s
, 
evÆüs
, 
√xt
);

3358 
	`mm_‰ì
(
evÆüs
->
Æüs
);

3359 
	`mm_‰ì
(
evÆüs
);

3365 
	}
}

3368 
	$evhâp_£t_timeout
(
evhâp
* 
hâp
, 
timeout_ö_£cs
)

3370 
hâp
->
timeout
 = 
timeout_ö_£cs
;

3371 
	}
}

3374 
	$evhâp_£t_max_hódîs_size
(
evhâp
* 
hâp
, 
ev_ssize_t
 
max_hódîs_size
)

3376 i‡(
max_hódîs_size
 < 0)

3377 
hâp
->
deÁu…_max_hódîs_size
 = 
EV_SIZE_MAX
;

3379 
hâp
->
deÁu…_max_hódîs_size
 = 
max_hódîs_size
;

3380 
	}
}

3383 
	$evhâp_£t_max_body_size
(
evhâp
* 
hâp
, 
ev_ssize_t
 
max_body_size
)

3385 i‡(
max_body_size
 < 0)

3386 
hâp
->
deÁu…_max_body_size
 = 
EV_UINT64_MAX
;

3388 
hâp
->
deÁu…_max_body_size
 = 
max_body_size
;

3389 
	}
}

3392 
	$evhâp_£t_Ælowed_mëhods
(
evhâp
* 
hâp
, 
ev_uöt16_t
 
mëhods
)

3394 
hâp
->
Ælowed_mëhods
 = 
mëhods
;

3395 
	}
}

3398 
evhâp_£t_cb
(
evhâp
 *
hâp
, c⁄° *
uri
,

3399 (*
cb
)(
evhâp_ªque°
 *, *), *
cb¨g
)

3401 
evhâp_cb
 *
hâp_cb
;

3403 
	`TAILQ_FOREACH
(
hâp_cb
, &
hâp
->
ˇŒbacks
, 
√xt
) {

3404 i‡(
	`°rcmp
(
hâp_cb
->
wh©
, 
uri
) == 0)

3408 i‡((
hâp_cb
 = 
	`mm_ˇŒoc
(1, (
evhâp_cb
))Ë=
NULL
) {

3409 
	`evít_w¨n
("%s: cÆloc", 
__func__
);

3413 
hâp_cb
->
wh©
 = 
	`mm_°rdup
(
uri
);

3414 i‡(
hâp_cb
->
wh©
 =
NULL
) {

3415 
	`evít_w¨n
("%s: sådup", 
__func__
);

3416 
	`mm_‰ì
(
hâp_cb
);

3419 
hâp_cb
->
cb
 = cb;

3420 
hâp_cb
->
cb¨g
 = cbarg;

3422 
	`TAILQ_INSERT_TAIL
(&
hâp
->
ˇŒbacks
, 
hâp_cb
, 
√xt
);

3425 
	}
}

3428 
	$evhâp_dñ_cb
(
evhâp
 *
hâp
, c⁄° *
uri
)

3430 
evhâp_cb
 *
hâp_cb
;

3432 
	`TAILQ_FOREACH
(
hâp_cb
, &
hâp
->
ˇŒbacks
, 
√xt
) {

3433 i‡(
	`°rcmp
(
hâp_cb
->
wh©
, 
uri
) == 0)

3436 i‡(
hâp_cb
 =
NULL
)

3439 
	`TAILQ_REMOVE
(&
hâp
->
ˇŒbacks
, 
hâp_cb
, 
√xt
);

3440 
	`mm_‰ì
(
hâp_cb
->
wh©
);

3441 
	`mm_‰ì
(
hâp_cb
);

3444 
	}
}

3447 
evhâp_£t_gícb
(
evhâp
 *
hâp
,

3448 (*
cb
)(
evhâp_ªque°
 *, *), *
cb¨g
)

3450 
hâp
->
gícb
 = 
cb
;

3451 
hâp
->
gícb¨g
 = 
cb¨g
;

3452 
	}
}

3458 
evhâp_ªque°
 *

3459 
evhâp_ªque°_√w
((*
cb
)(
evhâp_ªque°
 *, *), *
¨g
)

3461 
evhâp_ªque°
 *
ªq
 = 
NULL
;

3464 i‡((
ªq
 = 
	`mm_ˇŒoc
(1, (
evhâp_ªque°
))Ë=
NULL
) {

3465 
	`evít_w¨n
("%s: cÆloc", 
__func__
);

3466 
îr‹
;

3469 
ªq
->
hódîs_size
 = 0;

3470 
ªq
->
body_size
 = 0;

3472 
ªq
->
köd
 = 
EVHTTP_RESPONSE
;

3473 
ªq
->
öput_hódîs
 = 
	`mm_ˇŒoc
(1, (
evkeyvÆq
));

3474 i‡(
ªq
->
öput_hódîs
 =
NULL
) {

3475 
	`evít_w¨n
("%s: cÆloc", 
__func__
);

3476 
îr‹
;

3478 
	`TAILQ_INIT
(
ªq
->
öput_hódîs
);

3480 
ªq
->
ouçut_hódîs
 = 
	`mm_ˇŒoc
(1, (
evkeyvÆq
));

3481 i‡(
ªq
->
ouçut_hódîs
 =
NULL
) {

3482 
	`evít_w¨n
("%s: cÆloc", 
__func__
);

3483 
îr‹
;

3485 
	`TAILQ_INIT
(
ªq
->
ouçut_hódîs
);

3487 i‡((
ªq
->
öput_buf„r
 = 
	`evbuf„r_√w
()Ë=
NULL
) {

3488 
	`evít_w¨n
("%s:Évbuf„r_√w", 
__func__
);

3489 
îr‹
;

3492 i‡((
ªq
->
ouçut_buf„r
 = 
	`evbuf„r_√w
()Ë=
NULL
) {

3493 
	`evít_w¨n
("%s:Évbuf„r_√w", 
__func__
);

3494 
îr‹
;

3497 
ªq
->
cb
 = cb;

3498 
ªq
->
cb_¨g
 = 
¨g
;

3500  (
ªq
);

3502 
îr‹
:

3503 i‡(
ªq
 !
NULL
)

3504 
	`evhâp_ªque°_‰ì
(
ªq
);

3505  (
NULL
);

3506 
	}
}

3509 
	$evhâp_ªque°_‰ì
(
evhâp_ªque°
 *
ªq
)

3511 i‡((
ªq
->
Êags
 & 
EVHTTP_REQ_DEFER_FREE
) != 0) {

3512 
ªq
->
Êags
 |
EVHTTP_REQ_NEEDS_FREE
;

3516 i‡(
ªq
->
ªmŸe_ho°
 !
NULL
)

3517 
	`mm_‰ì
(
ªq
->
ªmŸe_ho°
);

3518 i‡(
ªq
->
uri
 !
NULL
)

3519 
	`mm_‰ì
(
ªq
->
uri
);

3520 i‡(
ªq
->
uri_ñems
 !
NULL
)

3521 
	`evhâp_uri_‰ì
(
ªq
->
uri_ñems
);

3522 i‡(
ªq
->
ª•⁄£_code_löe
 !
NULL
)

3523 
	`mm_‰ì
(
ªq
->
ª•⁄£_code_löe
);

3524 i‡(
ªq
->
ho°_ˇche
 !
NULL
)

3525 
	`mm_‰ì
(
ªq
->
ho°_ˇche
);

3527 
	`evhâp_˛ór_hódîs
(
ªq
->
öput_hódîs
);

3528 
	`mm_‰ì
(
ªq
->
öput_hódîs
);

3530 
	`evhâp_˛ór_hódîs
(
ªq
->
ouçut_hódîs
);

3531 
	`mm_‰ì
(
ªq
->
ouçut_hódîs
);

3533 i‡(
ªq
->
öput_buf„r
 !
NULL
)

3534 
	`evbuf„r_‰ì
(
ªq
->
öput_buf„r
);

3536 i‡(
ªq
->
ouçut_buf„r
 !
NULL
)

3537 
	`evbuf„r_‰ì
(
ªq
->
ouçut_buf„r
);

3539 
	`mm_‰ì
(
ªq
);

3540 
	}
}

3543 
	$evhâp_ªque°_own
(
evhâp_ªque°
 *
ªq
)

3545 
ªq
->
Êags
 |
EVHTTP_USER_OWNED
;

3546 
	}
}

3549 
	$evhâp_ªque°_is_ow√d
(
evhâp_ªque°
 *
ªq
)

3551  (
ªq
->
Êags
 & 
EVHTTP_USER_OWNED
) != 0;

3552 
	}
}

3554 
evhâp_c⁄√˘i⁄
 *

3555 
	$evhâp_ªque°_gë_c⁄√˘i⁄
(
evhâp_ªque°
 *
ªq
)

3557  
ªq
->
evc⁄
;

3558 
	}
}

3560 
evít_ba£
 *

3561 
	$evhâp_c⁄√˘i⁄_gë_ba£
(
evhâp_c⁄√˘i⁄
 *
c⁄n
)

3563  
c⁄n
->
ba£
;

3564 
	}
}

3567 
evhâp_ªque°_£t_chunked_cb
(
evhâp_ªque°
 *
ªq
,

3568 (*
cb
)(
evhâp_ªque°
 *, *))

3570 
ªq
->
chunk_cb
 = 
cb
;

3571 
	}
}

3578 
	$evhâp_ªque°_gë_uri
(c⁄° 
evhâp_ªque°
 *
ªq
) {

3579 i‡(
ªq
->
uri
 =
NULL
)

3580 
	`evít_debug
(("%s:Ñeque° %∞ha†nÿuri\n", 
__func__
, 
ªq
));

3581  (
ªq
->
uri
);

3582 
	}
}

3584 c⁄° 
evhâp_uri
 *

3585 
	$evhâp_ªque°_gë_evhâp_uri
(c⁄° 
evhâp_ªque°
 *
ªq
) {

3586 i‡(
ªq
->
uri_ñems
 =
NULL
)

3587 
	`evít_debug
(("%s:Ñequest %p hasÇo uriÉlems\n",

3588 
__func__
, 
ªq
));

3589  (
ªq
->
uri_ñems
);

3590 
	}
}

3593 
	$evhâp_ªque°_gë_ho°
(
evhâp_ªque°
 *
ªq
)

3595 c⁄° *
ho°
 = 
NULL
;

3597 i‡(
ªq
->
ho°_ˇche
)

3598  
ªq
->
ho°_ˇche
;

3600 i‡(
ªq
->
uri_ñems
)

3601 
ho°
 = 
	`evhâp_uri_gë_ho°
(
ªq
->
uri_ñems
);

3602 i‡(!
ho°
 && 
ªq
->
öput_hódîs
) {

3603 c⁄° *
p
;

3604 
size_t
 
Àn
;

3606 
ho°
 = 
	`evhâp_föd_hódî
(
ªq
->
öput_hódîs
, "Host");

3609 i‡(
ho°
) {

3610 
p
 = 
ho°
 + 
	`°æí
(host) - 1;

3611 
p
 > 
ho°
 && 
	`EVUTIL_ISDIGIT
(*p))

3612 --
p
;

3613 i‡(
p
 > 
ho°
 && *p == ':') {

3614 
Àn
 = 
p
 - 
ho°
;

3615 
ªq
->
ho°_ˇche
 = 
	`mm_mÆloc
(
Àn
 + 1);

3616 i‡(!
ªq
->
ho°_ˇche
) {

3617 
	`evít_w¨n
("%s: mÆloc", 
__func__
);

3618  
NULL
;

3620 
	`mem˝y
(
ªq
->
ho°_ˇche
, 
ho°
, 
Àn
);

3621 
ªq
->
ho°_ˇche
[
Àn
] = '\0';

3622 
ho°
 = 
ªq
->
ho°_ˇche
;

3627  
ho°
;

3628 
	}
}

3630 
evhâp_cmd_ty≥


3631 
	$evhâp_ªque°_gë_comm™d
(c⁄° 
evhâp_ªque°
 *
ªq
) {

3632  (
ªq
->
ty≥
);

3633 
	}
}

3636 
	$evhâp_ªque°_gë_ª•⁄£_code
(c⁄° 
evhâp_ªque°
 *
ªq
)

3638  
ªq
->
ª•⁄£_code
;

3639 
	}
}

3642 
evkeyvÆq
 *
	$evhâp_ªque°_gë_öput_hódîs
(
evhâp_ªque°
 *
ªq
)

3644  (
ªq
->
öput_hódîs
);

3645 
	}
}

3648 
evkeyvÆq
 *
	$evhâp_ªque°_gë_ouçut_hódîs
(
evhâp_ªque°
 *
ªq
)

3650  (
ªq
->
ouçut_hódîs
);

3651 
	}
}

3654 
evbuf„r
 *
	$evhâp_ªque°_gë_öput_buf„r
(
evhâp_ªque°
 *
ªq
)

3656  (
ªq
->
öput_buf„r
);

3657 
	}
}

3660 
evbuf„r
 *
	$evhâp_ªque°_gë_ouçut_buf„r
(
evhâp_ªque°
 *
ªq
)

3662  (
ªq
->
ouçut_buf„r
);

3663 
	}
}

3671 
evhâp_c⁄√˘i⁄
*

3672 
	$evhâp_gë_ªque°_c⁄√˘i⁄
(

3673 
evhâp
* 
hâp
,

3674 
evutû_sockë_t
 
fd
, 
sockaddr
 *
ß
, 
ev_sockÀn_t
 
ßÀn
)

3676 
evhâp_c⁄√˘i⁄
 *
evc⁄
;

3677 *
ho°«me
 = 
NULL
, *
p‹äame
 = NULL;

3679 
	`«me_‰om_addr
(
ß
, 
ßÀn
, &
ho°«me
, &
p‹äame
);

3680 i‡(
ho°«me
 =
NULL
 || 
p‹äame
 == NULL) {

3681 i‡(
ho°«me
Ë
	`mm_‰ì
(hostname);

3682 i‡(
p‹äame
Ë
	`mm_‰ì
(portname);

3683  (
NULL
);

3686 
	`evít_debug
(("%s:ÇewÑeque° from %s:%†⁄ "
EV_SOCK_FMT
"\n",

3687 
__func__
, 
ho°«me
, 
p‹äame
, 
	`EV_SOCK_ARG
(
fd
)));

3690 
evc⁄
 = 
	`evhâp_c⁄√˘i⁄_ba£_√w
(

3691 
hâp
->
ba£
, 
NULL
, 
ho°«me
, 
	`©oi
(
p‹äame
));

3692 
	`mm_‰ì
(
ho°«me
);

3693 
	`mm_‰ì
(
p‹äame
);

3694 i‡(
evc⁄
 =
NULL
)

3695  (
NULL
);

3697 
evc⁄
->
max_hódîs_size
 = 
hâp
->
deÁu…_max_hódîs_size
;

3698 
evc⁄
->
max_body_size
 = 
hâp
->
deÁu…_max_body_size
;

3700 
evc⁄
->
Êags
 |
EVHTTP_CON_INCOMING
;

3701 
evc⁄
->
°©e
 = 
EVCON_READING_FIRSTLINE
;

3703 
evc⁄
->
fd
 = fd;

3705 
	`buf„ªvít_£tfd
(
evc⁄
->
bu„v
, 
fd
);

3707  (
evc⁄
);

3708 
	}
}

3711 
	$evhâp_assocüã_√w_ªque°_wôh_c⁄√˘i⁄
(
evhâp_c⁄√˘i⁄
 *
evc⁄
)

3713 
evhâp
 *
hâp
 = 
evc⁄
->
hâp_£rvî
;

3714 
evhâp_ªque°
 *
ªq
;

3715 i‡((
ªq
 = 
	`evhâp_ªque°_√w
(
evhâp_h™dÀ_ªque°
, 
hâp
)Ë=
NULL
)

3718 i‡((
ªq
->
ªmŸe_ho°
 = 
	`mm_°rdup
(
evc⁄
->
addªss
)Ë=
NULL
) {

3719 
	`evít_w¨n
("%s: sådup", 
__func__
);

3720 
	`evhâp_ªque°_‰ì
(
ªq
);

3723 
ªq
->
ªmŸe_p‹t
 = 
evc⁄
->
p‹t
;

3725 
ªq
->
evc⁄
 =Évcon;

3726 
ªq
->
Êags
 |
EVHTTP_REQ_OWN_CONNECTION
;

3733 
ªq
->
u£rd⁄e
 = 1;

3735 
	`TAILQ_INSERT_TAIL
(&
evc⁄
->
ªque°s
, 
ªq
, 
√xt
);

3737 
ªq
->
köd
 = 
EVHTTP_REQUEST
;

3740 
	`evhâp_°¨t_ªad
(
evc⁄
);

3743 
	}
}

3746 
	$evhâp_gë_ªque°
(
evhâp
 *
hâp
, 
evutû_sockë_t
 
fd
,

3747 
sockaddr
 *
ß
, 
ev_sockÀn_t
 
ßÀn
)

3749 
evhâp_c⁄√˘i⁄
 *
evc⁄
;

3751 
evc⁄
 = 
	`evhâp_gë_ªque°_c⁄√˘i⁄
(
hâp
, 
fd
, 
ß
, 
ßÀn
);

3752 i‡(
evc⁄
 =
NULL
) {

3753 
	`evít_sock_w¨n
(
fd
, "%s: c™nŸ gë c⁄√˘i⁄ o¿"
EV_SOCK_FMT
,

3754 
__func__
, 
	`EV_SOCK_ARG
(
fd
));

3755 
	`evutû_˛o£sockë
(
fd
);

3760 i‡(
hâp
->
timeout
 != -1)

3761 
	`evhâp_c⁄√˘i⁄_£t_timeout
(
evc⁄
, 
hâp
->
timeout
);

3767 
evc⁄
->
hâp_£rvî
 = 
hâp
;

3768 
	`TAILQ_INSERT_TAIL
(&
hâp
->
c⁄√˘i⁄s
, 
evc⁄
, 
√xt
);

3770 i‡(
	`evhâp_assocüã_√w_ªque°_wôh_c⁄√˘i⁄
(
evc⁄
) == -1)

3771 
	`evhâp_c⁄√˘i⁄_‰ì
(
evc⁄
);

3772 
	}
}

3781 
	$«me_‰om_addr
(
sockaddr
 *
ß
, 
ev_sockÀn_t
 
ßÀn
,

3782 **
pho°
, **
µ‹t
)

3784 
¡›
[
NI_MAXHOST
];

3785 
°Ω‹t
[
NI_MAXSERV
];

3786 
ni_ªsu…
;

3788 #ifde‡
_EVENT_HAVE_GETNAMEINFO


3789 
ni_ªsu…
 = 
	`gë«meöfo
(
ß
, 
ßÀn
,

3790 
¡›
, “t›), 
°Ω‹t
, (strport),

3791 
NI_NUMERICHOST
|
NI_NUMERICSERV
);

3793 i‡(
ni_ªsu…
 != 0) {

3794 #ifde‡
EAI_SYSTEM


3796 i‡(
ni_ªsu…
 =
EAI_SYSTEM
)

3797 
	`evít_îr
(1, "getnameinfo failed");

3800 
	`evít_îrx
(1, "gë«meöfÿÁûed: %s", 
	`gai_°ªº‹
(
ni_ªsu…
));

3804 
ni_ªsu…
 = 
	`Áke_gë«meöfo
(
ß
, 
ßÀn
,

3805 
¡›
, “t›), 
°Ω‹t
, (strport),

3806 
NI_NUMERICHOST
|
NI_NUMERICSERV
);

3807 i‡(
ni_ªsu…
 != 0)

3811 *
pho°
 = 
	`mm_°rdup
(
¡›
);

3812 *
µ‹t
 = 
	`mm_°rdup
(
°Ω‹t
);

3813 
	}
}

3817 
evutû_sockë_t


3818 
	$böd_sockë_ai
(
evutû_addröfo
 *
ai
, 
ªu£
)

3820 
evutû_sockë_t
 
fd
;

3822 
⁄
 = 1, 
r
;

3823 
£ºno
;

3826 
fd
 = 
	`sockë
(
ai
 ?ái->
ai_Ámûy
 : 
AF_INET
, 
SOCK_STREAM
, 0);

3827 i‡(
fd
 == -1) {

3828 
	`evít_sock_w¨n
(-1, "socket");

3832 i‡(
	`evutû_make_sockë_n⁄blockög
(
fd
) < 0)

3833 
out
;

3834 i‡(
	`evutû_make_sockë_˛o£⁄exec
(
fd
) < 0)

3835 
out
;

3837 i‡(
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_KEEPALIVE
, (*)&
⁄
, (on))<0)

3838 
out
;

3839 i‡(
ªu£
) {

3840 i‡(
	`evutû_make_li°í_sockë_ªu£abÀ
(
fd
) < 0)

3841 
out
;

3844 i‡(
ai
 !
NULL
) {

3845 
r
 = 
	`böd
(
fd
, 
ai
->
ai_addr
, (
ev_sockÀn_t
Ôi->
ai_addæí
);

3846 i‡(
r
 == -1)

3847 
out
;

3850  (
fd
);

3852 
out
:

3853 
£ºno
 = 
	`EVUTIL_SOCKET_ERROR
();

3854 
	`evutû_˛o£sockë
(
fd
);

3855 
	`EVUTIL_SET_SOCKET_ERROR
(
£ºno
);

3857 
	}
}

3859 
evutû_addröfo
 *

3860 
	$make_addröfo
(c⁄° *
addªss
, 
ev_uöt16_t
 
p‹t
)

3862 
evutû_addröfo
 *
ai
 = 
NULL
;

3864 
evutû_addröfo
 
höts
;

3865 
°Ω‹t
[
NI_MAXSERV
];

3866 
ai_ªsu…
;

3868 
	`mem£t
(&
höts
, 0, (hints));

3869 
höts
.
ai_Ámûy
 = 
AF_UNSPEC
;

3870 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

3873 
höts
.
ai_Êags
 = 
EVUTIL_AI_PASSIVE
|
EVUTIL_AI_ADDRCONFIG
;

3874 
	`evutû_¢¥ötf
(
°Ω‹t
, (°Ω‹t), "%d", 
p‹t
);

3875 i‡((
ai_ªsu…
 = 
	`evutû_gëaddröfo
(
addªss
, 
°Ω‹t
, &
höts
, &
ai
))

3877 i‡(
ai_ªsu…
 =
EVUTIL_EAI_SYSTEM
)

3878 
	`evít_w¨n
("getaddrinfo");

3880 
	`evít_w¨nx
("getaddrinfo: %s",

3881 
	`evutû_gai_°ªº‹
(
ai_ªsu…
));

3882  (
NULL
);

3885  (
ai
);

3886 
	}
}

3888 
evutû_sockë_t


3889 
	$böd_sockë
(c⁄° *
addªss
, 
ev_uöt16_t
 
p‹t
, 
ªu£
)

3891 
evutû_sockë_t
 
fd
;

3892 
evutû_addröfo
 *
aô›
 = 
NULL
;

3895 i‡(
addªss
 =
NULL
 && 
p‹t
 == 0)

3896  
	`böd_sockë_ai
(
NULL
, 0);

3898 
aô›
 = 
	`make_addröfo
(
addªss
, 
p‹t
);

3900 i‡(
aô›
 =
NULL
)

3903 
fd
 = 
	`böd_sockë_ai
(
aô›
, 
ªu£
);

3905 
	`evutû_‰ìaddröfo
(
aô›
);

3907  (
fd
);

3908 
	}
}

3910 
	sevhâp_uri
 {

3911 
	mÊags
;

3912 *
	mscheme
;

3913 *
	mu£röfo
;

3914 *
	mho°
;

3915 
	mp‹t
;

3916 *
	m∑th
;

3917 *
	mquîy
;

3918 *
	m‰agmít
;

3921 
evhâp_uri
 *

3922 
	$evhâp_uri_√w
()

3924 
evhâp_uri
 *
uri
 = 
	`mm_ˇŒoc
((evhttp_uri), 1);

3925 i‡(
uri
)

3926 
uri
->
p‹t
 = -1;

3927  
uri
;

3928 
	}
}

3931 
	$evhâp_uri_£t_Êags
(
evhâp_uri
 *
uri
, 
Êags
)

3933 
uri
->
Êags
 = flags;

3934 
	}
}

3940 
	$scheme_ok
(c⁄° *
s
, c⁄° *
eos
)

3943 
	`EVUTIL_ASSERT
(
eos
 >
s
);

3944 i‡(
s
 =
eos
)

3946 i‡(!
	`EVUTIL_ISALPHA
(*
s
))

3948 ++
s
 < 
eos
) {

3949 i‡(! 
	`EVUTIL_ISALNUM
(*
s
) &&

3950 *
s
 != '+' && *s != '-' && *s != '.')

3954 
	}
}

3956 
	#SUBDELIMS
 "!$&'()*+,;="

	)

3960 
	$u£röfo_ok
(c⁄° *
s
, c⁄° *
eos
)

3962 
s
 < 
eos
) {

3963 i‡(
	`CHAR_IS_UNRESERVED
(*
s
) ||

3964 
	`°rchr
(
SUBDELIMS
, *
s
) ||

3965 *
s
 == ':')

3966 ++
s
;

3967 i‡(*
s
 ='%' && s+2 < 
eos
 &&

3968 
	`EVUTIL_ISXDIGIT
(
s
[1]) &&

3969 
	`EVUTIL_ISXDIGIT
(
s
[2]))

3970 
s
 += 3;

3975 
	}
}

3978 
	$ªg«me_ok
(c⁄° *
s
, c⁄° *
eos
)

3980 
s
 && s<
eos
) {

3981 i‡(
	`CHAR_IS_UNRESERVED
(*
s
) ||

3982 
	`°rchr
(
SUBDELIMS
, *
s
))

3983 ++
s
;

3984 i‡(*
s
 == '%' &&

3985 
	`EVUTIL_ISXDIGIT
(
s
[1]) &&

3986 
	`EVUTIL_ISXDIGIT
(
s
[2]))

3987 
s
 += 3;

3992 
	}
}

3995 
	$∑r£_p‹t
(c⁄° *
s
, c⁄° *
eos
)

3997 
p‹äum
 = 0;

3998 
s
 < 
eos
) {

3999 i‡(! 
	`EVUTIL_ISDIGIT
(*
s
))

4001 
p‹äum
 = (p‹äum * 10Ë+ (*
s
 - '0');

4002 i‡(
p‹äum
 < 0)

4004 ++
s
;

4006  
p‹äum
;

4007 
	}
}

4011 
	$bøckë_addr_ok
(c⁄° *
s
, c⁄° *
eos
)

4013 i‡(
s
 + 3 > 
eos
 || *s != '[' || *(eos-1) != ']')

4015 i‡(
s
[1] == 'v') {

4019 
s
 += 2;

4020 --
eos
;

4021 i‡(!
	`EVUTIL_ISXDIGIT
(*
s
))

4023 
s
 < 
eos
 && *s != '.') {

4024 i‡(
	`EVUTIL_ISXDIGIT
(*
s
))

4025 ++
s
;

4029 i‡(*
s
 != '.')

4031 ++
s
;

4032 
s
 < 
eos
) {

4033 i‡(
	`CHAR_IS_UNRESERVED
(*
s
) ||

4034 
	`°rchr
(
SUBDELIMS
, *
s
) ||

4035 *
s
 == ':')

4036 ++
s
;

4043 
buf
[64];

4044 
ev_ssize_t
 
n_ch¨s
 = 
eos
-
s
-2;

4045 
ö6_addr
 
ö6
;

4046 i‡(
n_ch¨s
 >= 64)

4048 
	`mem˝y
(
buf
, 
s
+1, 
n_ch¨s
);

4049 
buf
[
n_ch¨s
]='\0';

4050  (
	`evutû_öë_±⁄
(
AF_INET6
,
buf
,&
ö6
)==1) ? 1 : 0;

4052 
	}
}

4055 
	$∑r£_auth‹ôy
(
evhâp_uri
 *
uri
, *
s
, *
eos
)

4057 *
˝
, *
p‹t
;

4058 
	`EVUTIL_ASSERT
(
eos
);

4059 i‡(
eos
 =
s
) {

4060 
uri
->
ho°
 = 
	`mm_°rdup
("");

4061 i‡(
uri
->
ho°
 =
NULL
) {

4062 
	`evít_w¨n
("%s: sådup", 
__func__
);

4070 
˝
 = 
	`°rchr
(
s
, '@');

4071 i‡(
˝
 && c∞< 
eos
) {

4072 i‡(! 
	`u£röfo_ok
(
s
,
˝
))

4074 *
˝
++ = '\0';

4075 
uri
->
u£röfo
 = 
	`mm_°rdup
(
s
);

4076 i‡(
uri
->
u£röfo
 =
NULL
) {

4077 
	`evít_w¨n
("%s: sådup", 
__func__
);

4081 
˝
 = 
s
;

4084 
p‹t
=
eos
-1;Ö‹à>
˝
 && 
	`EVUTIL_ISDIGIT
(*port); --port)

4086 i‡(
p‹t
 >
˝
 && *port == ':') {

4087 i‡(
p‹t
+1 =
eos
)

4089 
uri
->
p‹t
 = -1;

4090 i‡((
uri
->
p‹t
 = 
	`∑r£_p‹t
’‹t+1, 
eos
))<0)

4092 
eos
 = 
p‹t
;

4096 
	`EVUTIL_ASSERT
(
eos
 >
˝
);

4097 i‡(*
˝
 ='[' && 
eos
 >= cp+2 && *(eos-1) == ']') {

4099 i‡(! 
	`bøckë_addr_ok
(
˝
, 
eos
))

4103 i‡(! 
	`ªg«me_ok
(
˝
,
eos
))

4106 
uri
->
ho°
 = 
	`mm_mÆloc
(
eos
-
˝
+1);

4107 i‡(
uri
->
ho°
 =
NULL
) {

4108 
	`evít_w¨n
("%s: mÆloc", 
__func__
);

4111 
	`mem˝y
(
uri
->
ho°
, 
˝
, 
eos
-cp);

4112 
uri
->
ho°
[
eos
-
˝
] = '\0';

4115 
	}
}

4118 
	$íd_of_auth‹ôy
(*
˝
)

4120 *
˝
) {

4121 i‡(*
˝
 == '?' || *cp == '#' || *cp == '/')

4122  
˝
;

4123 ++
˝
;

4125  
˝
;

4126 
	}
}

4128 
	euri_∑π
 {

4129 
	mPART_PATH
,

4130 
	mPART_QUERY
,

4131 
	mPART_FRAGMENT


4139 
	$íd_of_∑th
(*
˝
, 
uri_∑π
 
∑π
, 
Êags
)

4141 i‡(
Êags
 & 
EVHTTP_URI_NONCONFORMANT
) {

4147 
∑π
) {

4148 
PART_PATH
:

4149 *
˝
 && *cp != '#' && *cp != '?')

4150 ++
˝
;

4152 
PART_QUERY
:

4153 *
˝
 && *cp != '#')

4154 ++
˝
;

4156 
PART_FRAGMENT
:

4157 
˝
 +
	`°æí
(cp);

4160  
˝
;

4163 *
˝
) {

4164 i‡(
	`CHAR_IS_UNRESERVED
(*
˝
) ||

4165 
	`°rchr
(
SUBDELIMS
, *
˝
) ||

4166 *
˝
 == ':' || *cp == '@' || *cp == '/')

4167 ++
˝
;

4168 i‡(*
˝
 ='%' && 
	`EVUTIL_ISXDIGIT
(cp[1]) &&

4169 
	`EVUTIL_ISXDIGIT
(
˝
[2]))

4170 
˝
 += 3;

4171 i‡(*
˝
 ='?' && 
∑π
 !
PART_PATH
)

4172 ++
˝
;

4174  
˝
;

4176  
˝
;

4177 
	}
}

4180 
	$∑th_m©ches_noscheme
(c⁄° *
˝
)

4182 *
˝
) {

4183 i‡(*
˝
 == ':')

4185 i‡(*
˝
 == '/')

4187 ++
˝
;

4190 
	}
}

4192 
evhâp_uri
 *

4193 
	$evhâp_uri_∑r£
(c⁄° *
sour˚_uri
)

4195  
	`evhâp_uri_∑r£_wôh_Êags
(
sour˚_uri
, 0);

4196 
	}
}

4198 
evhâp_uri
 *

4199 
	$evhâp_uri_∑r£_wôh_Êags
(c⁄° *
sour˚_uri
, 
Êags
)

4201 *
ªadbuf
 = 
NULL
, *
ªadp
 = NULL, *
tokí
 = NULL, *
quîy
 = NULL;

4202 *
∑th
 = 
NULL
, *
‰agmít
 = NULL;

4203 
gŸ_auth‹ôy
 = 0;

4205 
evhâp_uri
 *
uri
 = 
	`mm_ˇŒoc
(1, (evhttp_uri));

4206 i‡(
uri
 =
NULL
) {

4207 
	`evít_w¨n
("%s: cÆloc", 
__func__
);

4208 
îr
;

4210 
uri
->
p‹t
 = -1;

4211 
uri
->
Êags
 = flags;

4213 
ªadbuf
 = 
	`mm_°rdup
(
sour˚_uri
);

4214 i‡(
ªadbuf
 =
NULL
) {

4215 
	`evít_w¨n
("%s: sådup", 
__func__
);

4216 
îr
;

4219 
ªadp
 = 
ªadbuf
;

4220 
tokí
 = 
NULL
;

4231 
tokí
 = 
	`°rchr
(
ªadp
, ':');

4232 i‡(
tokí
 && 
	`scheme_ok
(
ªadp
,token)) {

4233 *
tokí
 = '\0';

4234 
uri
->
scheme
 = 
	`mm_°rdup
(
ªadp
);

4235 i‡(
uri
->
scheme
 =
NULL
) {

4236 
	`evít_w¨n
("%s: sådup", 
__func__
);

4237 
îr
;

4239 
ªadp
 = 
tokí
+1;

4243 i‡(
ªadp
[0]=='/' &&Ñeadp[1] == '/') {

4244 *
auth‹ôy
;

4245 
ªadp
 += 2;

4246 
auth‹ôy
 = 
ªadp
;

4247 
∑th
 = 
	`íd_of_auth‹ôy
(
ªadp
);

4248 i‡(
	`∑r£_auth‹ôy
(
uri
, 
auth‹ôy
, 
∑th
) < 0)

4249 
îr
;

4250 
ªadp
 = 
∑th
;

4251 
gŸ_auth‹ôy
 = 1;

4256 
∑th
 = 
ªadp
;

4257 
ªadp
 = 
	`íd_of_∑th
(
∑th
, 
PART_PATH
, 
Êags
);

4260 i‡(*
ªadp
 == '?') {

4261 *
ªadp
 = '\0';

4262 ++
ªadp
;

4263 
quîy
 = 
ªadp
;

4264 
ªadp
 = 
	`íd_of_∑th
‘ódp, 
PART_QUERY
, 
Êags
);

4267 i‡(*
ªadp
 == '#') {

4268 *
ªadp
 = '\0';

4269 ++
ªadp
;

4270 
‰agmít
 = 
ªadp
;

4271 
ªadp
 = 
	`íd_of_∑th
‘ódp, 
PART_FRAGMENT
, 
Êags
);

4273 i‡(*
ªadp
 != '\0') {

4274 
îr
;

4280 i‡(!
gŸ_auth‹ôy
 && 
∑th
[0]=='/' &&Öath[1]=='/')

4281 
îr
;

4284 i‡(
gŸ_auth‹ôy
 && 
∑th
[0] != '/' &&Öath[0] != '\0')

4285 
îr
;

4290 i‡(! 
uri
->
scheme
 && !
	`∑th_m©ches_noscheme
(
∑th
))

4291 
îr
;

4293 
	`EVUTIL_ASSERT
(
∑th
);

4294 
uri
->
∑th
 = 
	`mm_°rdup
(path);

4295 i‡(
uri
->
∑th
 =
NULL
) {

4296 
	`evít_w¨n
("%s: sådup", 
__func__
);

4297 
îr
;

4300 i‡(
quîy
) {

4301 
uri
->
quîy
 = 
	`mm_°rdup
(query);

4302 i‡(
uri
->
quîy
 =
NULL
) {

4303 
	`evít_w¨n
("%s: sådup", 
__func__
);

4304 
îr
;

4307 i‡(
‰agmít
) {

4308 
uri
->
‰agmít
 = 
	`mm_°rdup
(fragment);

4309 i‡(
uri
->
‰agmít
 =
NULL
) {

4310 
	`evít_w¨n
("%s: sådup", 
__func__
);

4311 
îr
;

4315 
	`mm_‰ì
(
ªadbuf
);

4317  
uri
;

4318 
îr
:

4319 i‡(
uri
)

4320 
	`evhâp_uri_‰ì
(
uri
);

4321 i‡(
ªadbuf
)

4322 
	`mm_‰ì
(
ªadbuf
);

4323  
NULL
;

4324 
	}
}

4327 
	$evhâp_uri_‰ì
(
evhâp_uri
 *
uri
)

4329 
	#_URI_FREE_STR
(
f
) \

4330 i‡(
uri
->
f
) { \

4331 
	`mm_‰ì
(
uri
->
f
); \

4332 }

	)

4334 
	`_URI_FREE_STR
(
scheme
);

4335 
	`_URI_FREE_STR
(
u£röfo
);

4336 
	`_URI_FREE_STR
(
ho°
);

4337 
	`_URI_FREE_STR
(
∑th
);

4338 
	`_URI_FREE_STR
(
quîy
);

4339 
	`_URI_FREE_STR
(
‰agmít
);

4341 
	`mm_‰ì
(
uri
);

4342 #unde‡
_URI_FREE_STR


4343 
	}
}

4346 
	$evhâp_uri_joö
(
evhâp_uri
 *
uri
, *
buf
, 
size_t
 
limô
)

4348 
evbuf„r
 *
tmp
 = 0;

4349 
size_t
 
joöed_size
 = 0;

4350 *
ouçut
 = 
NULL
;

4352 
	#_URI_ADD
(
f
Ë
	`evbuf„r_add
(
tmp
, 
uri
->f, 
	`°æí
(uri->f))

	)

4354 i‡(!
uri
 || !
buf
 || !
limô
)

4355  
NULL
;

4357 
tmp
 = 
	`evbuf„r_√w
();

4358 i‡(!
tmp
)

4359  
NULL
;

4361 i‡(
uri
->
scheme
) {

4362 
	`_URI_ADD
(
scheme
);

4363 
	`evbuf„r_add
(
tmp
, ":", 1);

4365 i‡(
uri
->
ho°
) {

4366 
	`evbuf„r_add
(
tmp
, "//", 2);

4367 i‡(
uri
->
u£röfo
)

4368 
	`evbuf„r_add_¥ötf
(
tmp
,"%s@", 
uri
->
u£röfo
);

4369 
	`_URI_ADD
(
ho°
);

4370 i‡(
uri
->
p‹t
 >= 0)

4371 
	`evbuf„r_add_¥ötf
(
tmp
,":%d", 
uri
->
p‹t
);

4373 i‡(
uri
->
∑th
 && uri->path[0] != '/' && uri->path[0] != '\0')

4374 
îr
;

4377 i‡(
uri
->
∑th
)

4378 
	`_URI_ADD
(
∑th
);

4380 i‡(
uri
->
quîy
) {

4381 
	`evbuf„r_add
(
tmp
, "?", 1);

4382 
	`_URI_ADD
(
quîy
);

4385 i‡(
uri
->
‰agmít
) {

4386 
	`evbuf„r_add
(
tmp
, "#", 1);

4387 
	`_URI_ADD
(
‰agmít
);

4390 
	`evbuf„r_add
(
tmp
, "\0", 1);

4392 
joöed_size
 = 
	`evbuf„r_gë_Àngth
(
tmp
);

4394 i‡(
joöed_size
 > 
limô
) {

4396 
	`evbuf„r_‰ì
(
tmp
);

4397  
NULL
;

4399 
	`evbuf„r_ªmove
(
tmp
, 
buf
, 
joöed_size
);

4401 
ouçut
 = 
buf
;

4402 
îr
:

4403 
	`evbuf„r_‰ì
(
tmp
);

4405  
ouçut
;

4406 #unde‡
_URI_ADD


4407 
	}
}

4410 
	$evhâp_uri_gë_scheme
(c⁄° 
evhâp_uri
 *
uri
)

4412  
uri
->
scheme
;

4413 
	}
}

4415 
	$evhâp_uri_gë_u£röfo
(c⁄° 
evhâp_uri
 *
uri
)

4417  
uri
->
u£röfo
;

4418 
	}
}

4420 
	$evhâp_uri_gë_ho°
(c⁄° 
evhâp_uri
 *
uri
)

4422  
uri
->
ho°
;

4423 
	}
}

4425 
	$evhâp_uri_gë_p‹t
(c⁄° 
evhâp_uri
 *
uri
)

4427  
uri
->
p‹t
;

4428 
	}
}

4430 
	$evhâp_uri_gë_∑th
(c⁄° 
evhâp_uri
 *
uri
)

4432  
uri
->
∑th
;

4433 
	}
}

4435 
	$evhâp_uri_gë_quîy
(c⁄° 
evhâp_uri
 *
uri
)

4437  
uri
->
quîy
;

4438 
	}
}

4440 
	$evhâp_uri_gë_‰agmít
(c⁄° 
evhâp_uri
 *
uri
)

4442  
uri
->
‰agmít
;

4443 
	}
}

4445 
	#_URI_SET_STR
(
f
) do { \

4446 i‡(
uri
->
f
) \

4447 
	`mm_‰ì
(
uri
->
f
); \

4448 i‡(
f
) { \

4449 i‡((
uri
->
f
 = 
	`mm_°rdup
(f)Ë=
NULL
) { \

4450 
	`evít_w¨n
("%s: sådup()", 
__func__
); \

4454 
uri
->
f
 = 
NULL
; \

4456 } 0)

	)

4459 
	$evhâp_uri_£t_scheme
(
evhâp_uri
 *
uri
, c⁄° *
scheme
)

4461 i‡(
scheme
 && !
	`scheme_ok
(scheme, scheme+
	`°æí
(scheme)))

4464 
	`_URI_SET_STR
(
scheme
);

4466 
	}
}

4468 
	$evhâp_uri_£t_u£röfo
(
evhâp_uri
 *
uri
, c⁄° *
u£röfo
)

4470 i‡(
u£röfo
 && !
	`u£röfo_ok
(u£röfo, u£röfo+
	`°æí
(userinfo)))

4472 
	`_URI_SET_STR
(
u£röfo
);

4474 
	}
}

4476 
	$evhâp_uri_£t_ho°
(
evhâp_uri
 *
uri
, c⁄° *
ho°
)

4478 i‡(
ho°
) {

4479 i‡(
ho°
[0] == '[') {

4480 i‡(! 
	`bøckë_addr_ok
(
ho°
, ho°+
	`°æí
(host)))

4483 i‡(! 
	`ªg«me_ok
(
ho°
, ho°+
	`°æí
(host)))

4488 
	`_URI_SET_STR
(
ho°
);

4490 
	}
}

4492 
	$evhâp_uri_£t_p‹t
(
evhâp_uri
 *
uri
, 
p‹t
)

4494 i‡(
p‹t
 < -1)

4496 
uri
->
p‹t
 =Öort;

4498 
	}
}

4499 
	#íd_of_˝©h
(
˝
,
p
,
f
) \

4500 ((c⁄° *)(
	`íd_of_∑th
(((*)(
˝
)), (
p
), (
f
))))

	)

4503 
	$evhâp_uri_£t_∑th
(
evhâp_uri
 *
uri
, c⁄° *
∑th
)

4505 i‡(
∑th
 && 
	`íd_of_˝©h
’©h, 
PART_PATH
, 
uri
->
Êags
Ë!∑th+
	`°æí
(path))

4508 
	`_URI_SET_STR
(
∑th
);

4510 
	}
}

4512 
	$evhâp_uri_£t_quîy
(
evhâp_uri
 *
uri
, c⁄° *
quîy
)

4514 i‡(
quîy
 && 
	`íd_of_˝©h
(quîy, 
PART_QUERY
, 
uri
->
Êags
Ë!quîy+
	`°æí
(query))

4516 
	`_URI_SET_STR
(
quîy
);

4518 
	}
}

4520 
	$evhâp_uri_£t_‰agmít
(
evhâp_uri
 *
uri
, c⁄° *
‰agmít
)

4522 i‡(
‰agmít
 && 
	`íd_of_˝©h
(‰agmít, 
PART_FRAGMENT
, 
uri
->
Êags
Ë!‰agmít+
	`°æí
(fragment))

4524 
	`_URI_SET_STR
(
‰agmít
);

4526 
	}
}

	@include/event2/buffer.h

26 #i‚de‡
_EVENT2_BUFFER_H_


27 
	#_EVENT2_BUFFER_H_


	)

75 #ifde‡
__˝lu•lus


79 
	~<evít2/evít-c⁄fig.h
>

80 
	~<°d¨g.h
>

81 #ifde‡
_EVENT_HAVE_SYS_TYPES_H


82 
	~<sys/ty≥s.h
>

84 #ifde‡
_EVENT_HAVE_SYS_UIO_H


85 
	~<sys/uio.h
>

87 
	~<evít2/utû.h
>

95 
evbuf„r


96 #ifde‡
_EVENT_IN_DOXYGEN


109 
	sevbuf„r_±r
 {

110 
ev_ssize_t
 
pos
;

114 *
chaö
;

115 
size_t
 
pos_ö_chaö
;

116 } 
_öã∫Æ
;

124 #ifde‡
_EVENT_HAVE_SYS_UIO_H


125 
	#evbuf„r_iovec
 
iovec


	)

127 
	#_EVBUFFER_IOVEC_IS_NATIVE


	)

129 
	sevbuf„r_iovec
 {

131 *
iov_ba£
;

133 
size_t
 
iov_Àn
;

143 
evbuf„r
 *
evbuf„r_√w
();

149 
evbuf„r_‰ì
(
evbuf„r
 *
buf
);

163 
evbuf„r_íabÀ_lockög
(
evbuf„r
 *
buf
, *
lock
);

169 
evbuf„r_lock
(
evbuf„r
 *
buf
);

175 
evbuf„r_u∆ock
(
evbuf„r
 *
buf
);

193 
	#EVBUFFER_FLAG_DRAINS_TO_FD
 1

	)

202 
evbuf„r_£t_Êags
(
evbuf„r
 *
buf
, 
ev_uöt64_t
 
Êags
);

210 
evbuf„r_˛ór_Êags
(
evbuf„r
 *
buf
, 
ev_uöt64_t
 
Êags
);

218 
size_t
 
evbuf„r_gë_Àngth
(c⁄° 
evbuf„r
 *
buf
);

232 
size_t
 
evbuf„r_gë_c⁄tiguous_•a˚
(c⁄° 
evbuf„r
 *
buf
);

244 
evbuf„r_ex∑nd
(
evbuf„r
 *
buf
, 
size_t
 
d©Àn
);

280 
evbuf„r_ª£rve_•a˚
(
evbuf„r
 *
buf
, 
ev_ssize_t
 
size
,

281 
evbuf„r_iovec
 *
vec
, 
n_vec
);

304 
evbuf„r_commô_•a˚
(
evbuf„r
 *
buf
,

305 
evbuf„r_iovec
 *
vec
, 
n_vecs
);

315 
evbuf„r_add
(
evbuf„r
 *
buf
, c⁄° *
d©a
, 
size_t
 
d©Àn
);

329 
evbuf„r_ªmove
(
evbuf„r
 *
buf
, *
d©a
, 
size_t
 
d©Àn
);

342 
ev_ssize_t
 
evbuf„r_c›yout
(
evbuf„r
 *
buf
, *
d©a_out
, 
size_t
 
d©Àn
);

357 
evbuf„r_ªmove_buf„r
(
evbuf„r
 *
§c
, evbuf„∏*
d°
,

358 
size_t
 
d©Àn
);

362 
	eevbuf„r_eﬁ_°yÀ
 {

372 
EVBUFFER_EOL_ANY
,

375 
EVBUFFER_EOL_CRLF
,

377 
EVBUFFER_EOL_CRLF_STRICT
,

379 
EVBUFFER_EOL_LF


396 *
evbuf„r_ªad 
(
evbuf„r
 *
buf„r
, 
size_t
 *
n_ªad_out
,

397 
evbuf„r_eﬁ_°yÀ
 
eﬁ_°yÀ
);

411 
evbuf„r_add_buf„r
(
evbuf„r
 *
outbuf
, evbuf„∏*
öbuf
);

419 (*
evbuf„r_ªf_˛ónup_cb
)(c⁄° *
	td©a
,

420 
	tsize_t
 
	td©Æí
, *
	texåa
);

437 
evbuf„r_add_ª„ªn˚
(
evbuf„r
 *
outbuf
,

438 c⁄° *
d©a
, 
size_t
 
d©Àn
,

439 
evbuf„r_ªf_˛ónup_cb
 
˛ónup‚
, *
˛ónup‚_¨g
);

462 
evbuf„r_add_fûe
(
evbuf„r
 *
outbuf
, 
fd
, 
ev_off_t
 
off£t
,

463 
ev_off_t
 
Àngth
);

477 
evbuf„r_add_¥ötf
(
evbuf„r
 *
buf
, c⁄° *
fmt
, ...)

478 #ifde‡
__GNUC__


479 
__©åibuã__
((
f‹m©
(
¥ötf
, 2, 3)))

491 
evbuf„r_add_v¥ötf
(
evbuf„r
 *
buf
, c⁄° *
fmt
, 
va_li°
 
≠
)

492 #ifde‡
__GNUC__


493 
__©åibuã__
((
f‹m©
(
¥ötf
, 2, 0)))

505 
evbuf„r_døö
(
evbuf„r
 *
buf
, 
size_t
 
Àn
);

518 
evbuf„r_wrôe
(
evbuf„r
 *
buf„r
, 
evutû_sockë_t
 
fd
);

532 
evbuf„r_wrôe_©mo°
(
evbuf„r
 *
buf„r
, 
evutû_sockë_t
 
fd
,

533 
ev_ssize_t
 
howmuch
);

544 
evbuf„r_ªad
(
evbuf„r
 *
buf„r
, 
evutû_sockë_t
 
fd
, 
howmuch
);

557 
evbuf„r_±r
 
evbuf„r_£¨ch
(
evbuf„r
 *
buf„r
, c⁄° *
wh©
, 
size_t
 
Àn
, c⁄° evbuf„r_±∏*
°¨t
);

573 
evbuf„r_±r
 
evbuf„r_£¨ch_ønge
(
evbuf„r
 *
buf„r
, c⁄° *
wh©
, 
size_t
 
Àn
, c⁄° evbuf„r_±∏*
°¨t
, c⁄° evbuf„r_±∏*
íd
);

579 
	eevbuf„r_±r_how
 {

582 
EVBUFFER_PTR_SET
,

584 
EVBUFFER_PTR_ADD


600 
evbuf„r_±r_£t
(
evbuf„r
 *
buf„r
, 
evbuf„r_±r
 *
±r
,

601 
size_t
 
posôi⁄
, 
evbuf„r_±r_how
 
how
);

617 
evbuf„r_±r
 
evbuf„r_£¨ch_eﬁ
(
evbuf„r
 *
buf„r
,

618 
evbuf„r_±r
 *
°¨t
, 
size_t
 *
eﬁ_Àn_out
,

619 
evbuf„r_eﬁ_°yÀ
 
eﬁ_°yÀ
);

649 
evbuf„r_≥ek
(
evbuf„r
 *
buf„r
, 
ev_ssize_t
 
Àn
,

650 
evbuf„r_±r
 *
°¨t_©
,

651 
evbuf„r_iovec
 *
vec_out
, 
n_vec
);

658 
	sevbuf„r_cb_öfo
 {

661 
size_t
 
‹ig_size
;

663 
size_t
 
n_added
;

665 
size_t
 
n_dñëed
;

687 (*
evbuf„r_cb_func
)(
	tevbuf„r
 *
	tbuf„r
, c⁄° 
	tevbuf„r_cb_öfo
 *
	töfo
, *
	t¨g
);

689 
evbuf„r_cb_íåy
;

701 
evbuf„r_cb_íåy
 *
evbuf„r_add_cb
(
evbuf„r
 *
buf„r
, 
evbuf„r_cb_func
 
cb
, *
cb¨g
);

711 
evbuf„r_ªmove_cb_íåy
(
evbuf„r
 *
buf„r
,

712 
evbuf„r_cb_íåy
 *
ít
);

720 
evbuf„r_ªmove_cb
(
evbuf„r
 *
buf„r
, 
evbuf„r_cb_func
 
cb
, *
cb¨g
);

727 
	#EVBUFFER_CB_ENABLED
 1

	)

736 
evbuf„r_cb_£t_Êags
(
evbuf„r
 *
buf„r
,

737 
evbuf„r_cb_íåy
 *
cb
, 
ev_uöt32_t
 
Êags
);

746 
evbuf„r_cb_˛ór_Êags
(
evbuf„r
 *
buf„r
,

747 
evbuf„r_cb_íåy
 *
cb
, 
ev_uöt32_t
 
Êags
);

759 
evbuf„r_cb_su•íd
(
evbuf„r
 *
buf„r
, 
evbuf„r_cb_íåy
 *
cb
);

768 
evbuf„r_cb_unsu•íd
(
evbuf„r
 *
buf„r
, 
evbuf„r_cb_íåy
 *
cb
);

780 *
evbuf„r_puŒup
(
evbuf„r
 *
buf
, 
ev_ssize_t
 
size
);

791 
evbuf„r_¥ïíd
(
evbuf„r
 *
buf
, c⁄° *
d©a
, 
size_t
 
size
);

801 
evbuf„r_¥ïíd_buf„r
(
evbuf„r
 *
d°
, evbuf„r* 
§c
);

817 
evbuf„r_‰ìze
(
evbuf„r
 *
buf
, 
©_‰⁄t
);

826 
evbuf„r_un‰ìze
(
evbuf„r
 *
buf
, 
©_‰⁄t
);

828 
evít_ba£
;

836 
evbuf„r_de„r_ˇŒbacks
(
evbuf„r
 *
buf„r
, 
evít_ba£
 *
ba£
);

838 #ifde‡
__˝lu•lus


	@include/event2/buffer_compat.h

27 #i‚de‡
_EVENT2_BUFFER_COMPAT_H_


28 
	#_EVENT2_BUFFER_COMPAT_H_


	)

48 *
evbuf„r_ªadlöe
(
evbuf„r
 *
buf„r
);

70 (*
	tevbuf„r_cb
)(
	tevbuf„r
 *
	tbuf„r
, 
	tsize_t
 
	tﬁd_Àn
, size_à
	t√w_Àn
, *
	t¨g
);

91 
	`evbuf„r_£tcb
(
evbuf„r
 *
buf„r
, 
evbuf„r_cb
 
cb
, *
cb¨g
);

102 *
	`evbuf„r_föd
(
evbuf„r
 *
buf„r
, c⁄° *
wh©
, 
size_t
 
Àn
);

105 
	#EVBUFFER_LENGTH
(
x
Ë
	`evbuf„r_gë_Àngth
(x)

	)

107 
	#EVBUFFER_DATA
(
x
Ë
	`evbuf„r_puŒup
((x), -1)

	)

	@include/event2/bufferevent.h

27 #i‚de‡
_EVENT2_BUFFEREVENT_H_


28 
	#_EVENT2_BUFFEREVENT_H_


	)

77 #ifde‡
__˝lu•lus


81 
	~<evít2/evít-c⁄fig.h
>

82 #ifde‡
_EVENT_HAVE_SYS_TYPES_H


83 
	~<sys/ty≥s.h
>

85 #ifde‡
_EVENT_HAVE_SYS_TIME_H


86 
	~<sys/time.h
>

90 
	~<evít2/utû.h
>

98 
	#BEV_EVENT_READING
 0x01

	)

99 
	#BEV_EVENT_WRITING
 0x02

	)

100 
	#BEV_EVENT_EOF
 0x10

	)

101 
	#BEV_EVENT_ERROR
 0x20

	)

102 
	#BEV_EVENT_TIMEOUT
 0x40

	)

103 
	#BEV_EVENT_CONNECTED
 0x80

	)

111 
buf„ªvít


112 #ifde‡
_EVENT_IN_DOXYGEN


116 
evít_ba£
;

117 
evbuf„r
;

118 
sockaddr
;

133 (*
buf„ªvít_d©a_cb
)(
	tbuf„ªvít
 *
	tbev
, *
	t˘x
);

149 (*
buf„ªvít_evít_cb
)(
	tbuf„ªvít
 *
	tbev
, 
	twh©
, *
	t˘x
);

152 
	ebuf„ªvít_›ti⁄s
 {

155 
BEV_OPT_CLOSE_ON_FREE
 = (1<<0),

159 
BEV_OPT_THREADSAFE
 = (1<<1),

162 
BEV_OPT_DEFER_CALLBACKS
 = (1<<2),

168 
BEV_OPT_UNLOCK_CALLBACKS
 = (1<<3)

184 
buf„ªvít
 *
buf„ªvít_sockë_√w
(
evít_ba£
 *
ba£
, 
evutû_sockë_t
 
fd
, 
›ti⁄s
);

205 
buf„ªvít_sockë_c⁄√˘
(
buf„ªvít
 *, 
sockaddr
 *, );

207 
evdns_ba£
;

234 
buf„ªvít_sockë_c⁄√˘_ho°«me
(
buf„ªvít
 *,

235 
evdns_ba£
 *, , const *, );

245 
buf„ªvít_sockë_gë_dns_îr‹
(
buf„ªvít
 *
bev
);

258 
buf„ªvít_ba£_£t
(
evít_ba£
 *
ba£
, 
buf„ªvít
 *
bu„v
);

263 
evít_ba£
 *
buf„ªvít_gë_ba£
(
buf„ªvít
 *
bev
);

274 
buf„ªvít_¥i‹ôy_£t
(
buf„ªvít
 *
bu„v
, 
¥i
);

282 
buf„ªvít_‰ì
(
buf„ªvít
 *
bu„v
);

299 
buf„ªvít_£tcb
(
buf„ªvít
 *
bu„v
,

300 
buf„ªvít_d©a_cb
 
ªadcb
, buf„ªvít_d©a_cb 
wrôecb
,

301 
buf„ªvít_evít_cb
 
evítcb
, *
cb¨g
);

310 
buf„ªvít_£tfd
(
buf„ªvít
 *
bu„v
, 
evutû_sockë_t
 
fd
);

316 
evutû_sockë_t
 
buf„ªvít_gëfd
(
buf„ªvít
 *
bu„v
);

322 
buf„ªvít
 *
buf„ªvít_gë_undîlyög
(buf„ªvíà*
bu„v
);

337 
buf„ªvít_wrôe
(
buf„ªvít
 *
bu„v
,

338 c⁄° *
d©a
, 
size_t
 
size
);

350 
buf„ªvít_wrôe_buf„r
(
buf„ªvít
 *
bu„v
, 
evbuf„r
 *
buf
);

363 
size_t
 
buf„ªvít_ªad
(
buf„ªvít
 *
bu„v
, *
d©a
, size_à
size
);

373 
buf„ªvít_ªad_buf„r
(
buf„ªvít
 *
bu„v
, 
evbuf„r
 *
buf
);

384 
evbuf„r
 *
buf„ªvít_gë_öput
(
buf„ªvít
 *
bu„v
);

398 
evbuf„r
 *
buf„ªvít_gë_ouçut
(
buf„ªvít
 *
bu„v
);

408 
buf„ªvít_íabÀ
(
buf„ªvít
 *
bu„v
, 
evít
);

418 
buf„ªvít_dißbÀ
(
buf„ªvít
 *
bu„v
, 
evít
);

426 
buf„ªvít_gë_íabÀd
(
buf„ªvít
 *
bu„v
);

454 
buf„ªvít_£t_timeouts
(
buf„ªvít
 *
bu„v
,

455 c⁄° 
timevÆ
 *
timeout_ªad
, c⁄° timevÆ *
timeout_wrôe
);

475 
buf„ªvít_£tw©îm¨k
(
buf„ªvít
 *
bu„v
, 
evíts
,

476 
size_t
 
lowm¨k
, size_à
highm¨k
);

482 
buf„ªvít_lock
(
buf„ªvít
 *
bu„v
);

488 
buf„ªvít_u∆ock
(
buf„ªvít
 *
bu„v
);

494 
	ebuf„ªvít_Êush_mode
 {

496 
BEV_NORMAL
 = 0,

499 
BEV_FLUSH
 = 1,

502 
BEV_FINISHED
 = 2

513 
buf„ªvít_Êush
(
buf„ªvít
 *
bu„v
,

514 
iŸy≥
,

515 
buf„ªvít_Êush_mode
 
mode
);

525 
	ebuf„ªvít_fûãr_ªsu…
 {

527 
BEV_OK
 = 0,

530 
BEV_NEED_MORE
 = 1,

534 
BEV_ERROR
 = 2

555 
buf„ªvít_fûãr_ªsu…
 (*
	tbuf„ªvít_fûãr_cb
)(

556 
	tevbuf„r
 *
	t§c
, evbuf„∏*
	td°
, 
	tev_ssize_t
 
	td°_limô
,

557 
	tbuf„ªvít_Êush_mode
 
	tmode
, *
	t˘x
);

572 
buf„ªvít
 *

573 
buf„ªvít_fûãr_√w
(
buf„ªvít
 *
undîlyög
,

574 
buf„ªvít_fûãr_cb
 
öput_fûãr
,

575 
buf„ªvít_fûãr_cb
 
ouçut_fûãr
,

576 
›ti⁄s
,

577 (*
‰ì_c⁄ãxt
)(*),

578 *
˘x
);

591 
buf„ªvít_∑ú_√w
(
evít_ba£
 *
ba£
, 
›ti⁄s
,

592 
buf„ªvít
 *
∑ú
[2]);

598 
buf„ªvít
 *
buf„ªvít_∑ú_gë_∑π√r
(buf„ªvíà*
bev
);

604 
ev_tokí_buckë_cfg
;

610 
buf„ªvít_øã_limô_group
;

613 
	#EV_RATE_LIMIT_MAX
 
EV_SSIZE_MAX


	)

631 
ev_tokí_buckë_cfg
 *
ev_tokí_buckë_cfg_√w
(

632 
size_t
 
ªad_øã
, size_à
ªad_bur°
,

633 
size_t
 
wrôe_øã
, size_à
wrôe_bur°
,

634 c⁄° 
timevÆ
 *
tick_Àn
);

641 
ev_tokí_buckë_cfg_‰ì
(
ev_tokí_buckë_cfg
 *
cfg
);

654 
buf„ªvít_£t_øã_limô
(
buf„ªvít
 *
bev
,

655 
ev_tokí_buckë_cfg
 *
cfg
);

674 
buf„ªvít_øã_limô_group
 *
buf„ªvít_øã_limô_group_√w
(

675 
evít_ba£
 *
ba£
,

676 c⁄° 
ev_tokí_buckë_cfg
 *
cfg
);

682 
buf„ªvít_øã_limô_group_£t_cfg
(

683 
buf„ªvít_øã_limô_group
 *,

684 c⁄° 
ev_tokí_buckë_cfg
 *);

702 
buf„ªvít_øã_limô_group_£t_mö_sh¨e
(

703 
buf„ªvít_øã_limô_group
 *, 
size_t
);

709 
buf„ªvít_øã_limô_group_‰ì
(
buf„ªvít_øã_limô_group
 *);

721 
buf„ªvít_add_to_øã_limô_group
(
buf„ªvít
 *
bev
,

722 
buf„ªvít_øã_limô_group
 *
g
);

725 
buf„ªvít_ªmove_‰om_øã_limô_group
(
buf„ªvít
 *
bev
);

738 
ev_ssize_t
 
buf„ªvít_gë_ªad_limô
(
buf„ªvít
 *
bev
);

739 
ev_ssize_t
 
buf„ªvít_gë_wrôe_limô
(
buf„ªvít
 *
bev
);

742 
ev_ssize_t
 
buf„ªvít_gë_max_to_ªad
(
buf„ªvít
 *
bev
);

743 
ev_ssize_t
 
buf„ªvít_gë_max_to_wrôe
(
buf„ªvít
 *
bev
);

754 
ev_ssize_t
 
buf„ªvít_øã_limô_group_gë_ªad_limô
(

755 
buf„ªvít_øã_limô_group
 *);

756 
ev_ssize_t
 
buf„ªvít_øã_limô_group_gë_wrôe_limô
(

757 
buf„ªvít_øã_limô_group
 *);

774 
buf„ªvít_de¸emít_ªad_limô
(
buf„ªvít
 *
bev
, 
ev_ssize_t
 
de¸
);

775 
buf„ªvít_de¸emít_wrôe_limô
(
buf„ªvít
 *
bev
, 
ev_ssize_t
 
de¸
);

791 
buf„ªvít_øã_limô_group_de¸emít_ªad
(

792 
buf„ªvít_øã_limô_group
 *, 
ev_ssize_t
);

793 
buf„ªvít_øã_limô_group_de¸emít_wrôe
(

794 
buf„ªvít_øã_limô_group
 *, 
ev_ssize_t
);

804 
buf„ªvít_øã_limô_group_gë_tŸÆs
(

805 
buf„ªvít_øã_limô_group
 *
gΩ
,

806 
ev_uöt64_t
 *
tŸÆ_ªad_out
,Év_uöt64_à*
tŸÆ_wrôãn_out
);

814 
buf„ªvít_øã_limô_group_ª£t_tŸÆs
(

815 
buf„ªvít_øã_limô_group
 *
gΩ
);

817 #ifde‡
__˝lu•lus


	@include/event2/bufferevent_compat.h

28 #i‚de‡
_EVENT2_BUFFEREVENT_COMPAT_H_


29 
	#_EVENT2_BUFFEREVENT_COMPAT_H_


	)

31 
	#evbuf„rcb
 
buf„ªvít_d©a_cb


	)

32 
	#evîr‹cb
 
buf„ªvít_evít_cb


	)

75 
buf„ªvít
 *
buf„ªvít_√w
(
evutû_sockë_t
 
fd
,

76 
evbuf„rcb
 
ªadcb
,Évbuf„rcb 
wrôecb
, 
evîr‹cb
 
îr‹cb
, *
cb¨g
);

86 
buf„ªvít_£âimeout
(
buf„ªvít
 *
bu„v
,

87 
timeout_ªad
, 
timeout_wrôe
);

89 
	#EVBUFFER_READ
 
BEV_EVENT_READING


	)

90 
	#EVBUFFER_WRITE
 
BEV_EVENT_WRITING


	)

91 
	#EVBUFFER_EOF
 
BEV_EVENT_EOF


	)

92 
	#EVBUFFER_ERROR
 
BEV_EVENT_ERROR


	)

93 
	#EVBUFFER_TIMEOUT
 
BEV_EVENT_TIMEOUT


	)

96 
	#EVBUFFER_INPUT
(
x
Ë
	`buf„ªvít_gë_öput
(x)

	)

98 
	#EVBUFFER_OUTPUT
(
x
Ë
	`buf„ªvít_gë_ouçut
(x)

	)

	@include/event2/bufferevent_ssl.h

26 #i‚de‡
_EVENT2_BUFFEREVENT_SSL_H_


27 
	#_EVENT2_BUFFEREVENT_SSL_H_


	)

34 
	~<evít2/evít-c⁄fig.h
>

35 
	~<evít2/buf„ªvít.h
>

36 
	~<evít2/utû.h
>

38 #ifde‡
__˝lu•lus


43 
s¶_°
;

49 
	ebuf„ªvít_s¶_°©e
 {

50 
BUFFEREVENT_SSL_OPEN
 = 0,

51 
BUFFEREVENT_SSL_CONNECTING
 = 1,

52 
BUFFEREVENT_SSL_ACCEPTING
 = 2

55 #i‡
deföed
(
_EVENT_HAVE_OPENSSL
Ë|| deföed(
_EVENT_IN_DOXYGEN
)

67 
buf„ªvít
 *

68 
buf„ªvít_›ís¶_fûãr_√w
(
evít_ba£
 *
ba£
,

69 
buf„ªvít
 *
undîlyög
,

70 
s¶_°
 *
s¶
,

71 
buf„ªvít_s¶_°©e
 
°©e
,

72 
›ti⁄s
);

84 
buf„ªvít
 *

85 
buf„ªvít_›ís¶_sockë_√w
(
evít_ba£
 *
ba£
,

86 
evutû_sockë_t
 
fd
,

87 
s¶_°
 *
s¶
,

88 
buf„ªvít_s¶_°©e
 
°©e
,

89 
›ti⁄s
);

92 
s¶_°
 *

93 
buf„ªvít_›ís¶_gë_s¶
(
buf„ªvít
 *
bu„v
);

96 
buf„ªvít_s¶_ª√gŸüã
(
buf„ªvít
 *
bev
);

99 
buf„ªvít_gë_›ís¶_îr‹
(
buf„ªvít
 *
bev
);

103 #ifde‡
__˝lu•lus


	@include/event2/bufferevent_struct.h

27 #i‚de‡
_EVENT2_BUFFEREVENT_STRUCT_H_


28 
	#_EVENT2_BUFFEREVENT_STRUCT_H_


	)

40 #ifde‡
__˝lu•lus


44 
	~<evít2/evít-c⁄fig.h
>

45 #ifde‡
_EVENT_HAVE_SYS_TYPES_H


46 
	~<sys/ty≥s.h
>

48 #ifde‡
_EVENT_HAVE_SYS_TIME_H


49 
	~<sys/time.h
>

53 
	~<evít2/utû.h
>

55 
	~<evít2/evít_°ru˘.h
>

57 
	sevít_w©îm¨k
 {

58 
size_t
 
low
;

59 
size_t
 
high
;

70 
	sbuf„ªvít
 {

72 
evít_ba£
 *
ev_ba£
;

75 c⁄° 
buf„ªvít_›s
 *
be_›s
;

80 
evít
 
ev_ªad
;

84 
evít
 
ev_wrôe
;

88 
evbuf„r
 *
öput
;

92 
evbuf„r
 *
ouçut
;

94 
evít_w©îm¨k
 
wm_ªad
;

95 
evít_w©îm¨k
 
wm_wrôe
;

97 
buf„ªvít_d©a_cb
 
ªadcb
;

98 
buf„ªvít_d©a_cb
 
wrôecb
;

101 
buf„ªvít_evít_cb
 
îr‹cb
;

102 *
cb¨g
;

104 
timevÆ
 
timeout_ªad
;

105 
timevÆ
 
timeout_wrôe
;

109 
íabÀd
;

112 #ifde‡
__˝lu•lus


	@include/event2/dns.h

135 #i‚de‡
_EVENT2_DNS_H_


136 
	#_EVENT2_DNS_H_


	)

138 #ifde‡
__˝lu•lus


143 
	~<evít2/utû.h
>

146 
	#DNS_ERR_NONE
 0

	)

148 
	#DNS_ERR_FORMAT
 1

	)

151 
	#DNS_ERR_SERVERFAILED
 2

	)

153 
	#DNS_ERR_NOTEXIST
 3

	)

155 
	#DNS_ERR_NOTIMPL
 4

	)

158 
	#DNS_ERR_REFUSED
 5

	)

160 
	#DNS_ERR_TRUNCATED
 65

	)

162 
	#DNS_ERR_UNKNOWN
 66

	)

164 
	#DNS_ERR_TIMEOUT
 67

	)

166 
	#DNS_ERR_SHUTDOWN
 68

	)

168 
	#DNS_ERR_CANCEL
 69

	)

172 
	#DNS_ERR_NODATA
 70

	)

174 
	#DNS_IPv4_A
 1

	)

175 
	#DNS_PTR
 2

	)

176 
	#DNS_IPv6_AAAA
 3

	)

178 
	#DNS_QUERY_NO_SEARCH
 1

	)

180 
	#DNS_OPTION_SEARCH
 1

	)

181 
	#DNS_OPTION_NAMESERVERS
 2

	)

182 
	#DNS_OPTION_MISC
 4

	)

183 
	#DNS_OPTION_HOSTSFILE
 8

	)

184 
	#DNS_OPTIONS_ALL
 15

	)

187 
	#DNS_NO_SEARCH
 
DNS_QUERY_NO_SEARCH


	)

199 (*
evdns_ˇŒback_ty≥
Ë(
	tªsu…
, 
	tty≥
, 
	tcou¡
, 
	tâl
, *
	taddªs£s
, *
	t¨g
);

201 
evdns_ba£
;

202 
evít_ba£
;

216 
evdns_ba£
 * 
evdns_ba£_√w
(
evít_ba£
 *evít_ba£, 
öôülize_«me£rvîs
);

231 
evdns_ba£_‰ì
(
evdns_ba£
 *
ba£
, 
Áû_ªque°s
);

239 c⁄° *
evdns_îr_to_°rög
(
îr
);

253 
evdns_ba£_«me£rvî_add
(
evdns_ba£
 *
ba£
,

254 
addªss
);

268 
evdns_ba£_cou¡_«me£rvîs
(
evdns_ba£
 *
ba£
);

279 
evdns_ba£_˛ór_«me£rvîs_™d_su•íd
(
evdns_ba£
 *
ba£
);

292 
evdns_ba£_ªsume
(
evdns_ba£
 *
ba£
);

311 
evdns_ba£_«me£rvî_ù_add
(
evdns_ba£
 *
ba£
,

312 c⁄° *
ù_as_°rög
);

318 
evdns_ba£_«me£rvî_sockaddr_add
(
evdns_ba£
 *
ba£
,

319 c⁄° 
sockaddr
 *
ß
, 
ev_sockÀn_t
 
Àn
, 
Êags
);

321 
evdns_ªque°
;

334 
evdns_ªque°
 *
evdns_ba£_ªsﬁve_ùv4
(
evdns_ba£
 *
ba£
, c⁄° *
«me
, 
Êags
, 
evdns_ˇŒback_ty≥
 
ˇŒback
, *
±r
);

347 
evdns_ªque°
 *
evdns_ba£_ªsﬁve_ùv6
(
evdns_ba£
 *
ba£
, c⁄° *
«me
, 
Êags
, 
evdns_ˇŒback_ty≥
 
ˇŒback
, *
±r
);

349 
ö_addr
;

350 
ö6_addr
;

363 
evdns_ªque°
 *
evdns_ba£_ªsﬁve_ªvî£
(
evdns_ba£
 *
ba£
, c⁄° 
ö_addr
 *
ö
, 
Êags
, 
evdns_ˇŒback_ty≥
 
ˇŒback
, *
±r
);

377 
evdns_ªque°
 *
evdns_ba£_ªsﬁve_ªvî£_ùv6
(
evdns_ba£
 *
ba£
, c⁄° 
ö6_addr
 *
ö
, 
Êags
, 
evdns_ˇŒback_ty≥
 
ˇŒback
, *
±r
);

386 
evdns_ˇn˚l_ªque°
(
evdns_ba£
 *
ba£
, 
evdns_ªque°
 *
ªq
);

404 
evdns_ba£_£t_›ti⁄
(
evdns_ba£
 *
ba£
, c⁄° *
›ti⁄
, c⁄° *
vÆ
);

429 
evdns_ba£_ªsﬁv_c⁄f_∑r£
(
evdns_ba£
 *
ba£
, 
Êags
, c⁄° *c⁄° 
fûíame
);

441 
evdns_ba£_lﬂd_ho°s
(
evdns_ba£
 *
ba£
, c⁄° *
ho°s_‚ame
);

453 #ifde‡
WIN32


454 
evdns_ba£_c⁄fig_wödows_«me£rvîs
(
evdns_ba£
 *);

455 
	#EVDNS_BASE_CONFIG_WINDOWS_NAMESERVERS_IMPLEMENTED


	)

462 
evdns_ba£_£¨ch_˛ór
(
evdns_ba£
 *
ba£
);

470 
evdns_ba£_£¨ch_add
(
evdns_ba£
 *
ba£
, c⁄° *
domaö
);

481 
evdns_ba£_£¨ch_ndŸs_£t
(
evdns_ba£
 *
ba£
, c⁄° 
ndŸs
);

489 (*
evdns_debug_log_‚_ty≥
)(
	tis_w¨nög
, c⁄° *
	tmsg
);

499 
evdns_£t_log_‚
(
evdns_debug_log_‚_ty≥
 
‚
);

511 
evdns_£t_å™ß˘i⁄_id_‚
(
ev_uöt16_t
 (*
‚
)());

522 
evdns_£t_øndom_byãs_‚
((*
‚
)(*, 
size_t
));

528 
evdns_£rvî_ªque°
;

529 
evdns_£rvî_que°i⁄
;

542 (*
evdns_ªque°_ˇŒback_‚_ty≥
)(
	tevdns_£rvî_ªque°
 *, *);

543 
	#EVDNS_ANSWER_SECTION
 0

	)

544 
	#EVDNS_AUTHORITY_SECTION
 1

	)

545 
	#EVDNS_ADDITIONAL_SECTION
 2

	)

547 
	#EVDNS_TYPE_A
 1

	)

548 
	#EVDNS_TYPE_NS
 2

	)

549 
	#EVDNS_TYPE_CNAME
 5

	)

550 
	#EVDNS_TYPE_SOA
 6

	)

551 
	#EVDNS_TYPE_PTR
 12

	)

552 
	#EVDNS_TYPE_MX
 15

	)

553 
	#EVDNS_TYPE_TXT
 16

	)

554 
	#EVDNS_TYPE_AAAA
 28

	)

556 
	#EVDNS_QTYPE_AXFR
 252

	)

557 
	#EVDNS_QTYPE_ALL
 255

	)

559 
	#EVDNS_CLASS_INET
 1

	)

562 
	#EVDNS_FLAGS_AA
 0x400

	)

563 
	#EVDNS_FLAGS_RD
 0x080

	)

575 
evdns_£rvî_p‹t
 *
evdns_add_£rvî_p‹t_wôh_ba£
(
evít_ba£
 *
ba£
, 
evutû_sockë_t
 
sockë
, 
Êags
, 
evdns_ªque°_ˇŒback_‚_ty≥
 
ˇŒback
, *
u£r_d©a
);

577 
evdns_˛o£_£rvî_p‹t
(
evdns_£rvî_p‹t
 *
p‹t
);

582 
evdns_£rvî_ªque°_£t_Êags
(
evdns_£rvî_ªque°
 *
ªq
, 
Êags
);

586 
evdns_£rvî_ªque°_add_ª∂y
(
evdns_£rvî_ªque°
 *
ªq
, 
£˘i⁄
, c⁄° *
«me
, 
ty≥
, 
dns_˛ass
, 
âl
, 
d©Æí
, 
is_«me
, c⁄° *
d©a
);

587 
evdns_£rvî_ªque°_add_a_ª∂y
(
evdns_£rvî_ªque°
 *
ªq
, c⁄° *
«me
, 
n
, c⁄° *
addrs
, 
âl
);

588 
evdns_£rvî_ªque°_add_ØØ_ª∂y
(
evdns_£rvî_ªque°
 *
ªq
, c⁄° *
«me
, 
n
, c⁄° *
addrs
, 
âl
);

589 
evdns_£rvî_ªque°_add_±r_ª∂y
(
evdns_£rvî_ªque°
 *
ªq
, 
ö_addr
 *
ö
, c⁄° *
öaddr_«me
, c⁄° *
ho°«me
, 
âl
);

590 
evdns_£rvî_ªque°_add_˙ame_ª∂y
(
evdns_£rvî_ªque°
 *
ªq
, c⁄° *
«me
, c⁄° *
˙ame
, 
âl
);

595 
evdns_£rvî_ªque°_ª•⁄d
(
evdns_£rvî_ªque°
 *
ªq
, 
îr
);

599 
evdns_£rvî_ªque°_dr›
(
evdns_£rvî_ªque°
 *
ªq
);

600 
sockaddr
;

604 
evdns_£rvî_ªque°_gë_ªque°ög_addr
(
evdns_£rvî_ªque°
 *
_ªq
, 
sockaddr
 *
ß
, 
addr_Àn
);

607 (*
evdns_gëaddröfo_cb
)(
	tªsu…
, 
	tevutû_addröfo
 *
	tªs
, *
	t¨g
);

609 
evdns_ba£
;

610 
evdns_gëaddröfo_ªque°
;

628 
evdns_gëaddröfo_ªque°
 *
evdns_gëaddröfo
(

629 
evdns_ba£
 *
dns_ba£
,

630 c⁄° *
nodíame
, c⁄° *
£rv«me
,

631 c⁄° 
evutû_addröfo
 *
höts_ö
,

632 
evdns_gëaddröfo_cb
 
cb
, *
¨g
);

637 
evdns_gëaddröfo_ˇn˚l
(
evdns_gëaddröfo_ªque°
 *
ªq
);

639 #ifde‡
__˝lu•lus


	@include/event2/dns_compat.h

27 #i‚de‡
_EVENT2_DNS_COMPAT_H_


28 
	#_EVENT2_DNS_COMPAT_H_


	)

38 #ifde‡
__˝lu•lus


42 
	~<evít2/evít-c⁄fig.h
>

43 #ifde‡
_EVENT_HAVE_SYS_TYPES_H


44 
	~<sys/ty≥s.h
>

46 #ifde‡
_EVENT_HAVE_SYS_TIME_H


47 
	~<sys/time.h
>

51 
	~<evít2/utû.h
>

69 
evdns_öô
();

71 
evdns_ba£
;

79 
evdns_ba£
 *
evdns_gë_globÆ_ba£
();

96 
evdns_shutdown
(
Áû_ªque°s
);

112 
evdns_«me£rvî_add
(
addªss
);

129 
evdns_cou¡_«me£rvîs
();

143 
evdns_˛ór_«me£rvîs_™d_su•íd
();

158 
evdns_ªsume
();

173 
evdns_«me£rvî_ù_add
(c⁄° *
ù_as_°rög
);

189 
evdns_ªsﬁve_ùv4
(c⁄° *
«me
, 
Êags
, 
evdns_ˇŒback_ty≥
 
ˇŒback
, *
±r
);

201 
evdns_ªsﬁve_ùv6
(c⁄° *
«me
, 
Êags
, 
evdns_ˇŒback_ty≥
 
ˇŒback
, *
±r
);

203 
ö_addr
;

204 
ö6_addr
;

220 
evdns_ªsﬁve_ªvî£
(c⁄° 
ö_addr
 *
ö
, 
Êags
, 
evdns_ˇŒback_ty≥
 
ˇŒback
, *
±r
);

236 
evdns_ªsﬁve_ªvî£_ùv6
(c⁄° 
ö6_addr
 *
ö
, 
Êags
, 
evdns_ˇŒback_ty≥
 
ˇŒback
, *
±r
);

254 
evdns_£t_›ti⁄
(c⁄° *
›ti⁄
, c⁄° *
vÆ
, 
Êags
);

281 
evdns_ªsﬁv_c⁄f_∑r£
(
Êags
, c⁄° *c⁄° 
fûíame
);

290 
evdns_£¨ch_˛ór
();

301 
evdns_£¨ch_add
(c⁄° *
domaö
);

315 
evdns_£¨ch_ndŸs_£t
(c⁄° 
ndŸs
);

325 
evdns_£rvî_p‹t
 *
evdns_add_£rvî_p‹t
(
evutû_sockë_t
 
sockë
, 
Êags
, 
evdns_ªque°_ˇŒback_‚_ty≥
 
ˇŒback
, *
u£r_d©a
);

327 #ifde‡
WIN32


328 
evdns_c⁄fig_wödows_«me£rvîs
();

329 
	#EVDNS_CONFIG_WINDOWS_NAMESERVERS_IMPLEMENTED


	)

332 #ifde‡
__˝lu•lus


	@include/event2/dns_struct.h

27 #i‚de‡
_EVENT2_DNS_STRUCT_H_


28 
	#_EVENT2_DNS_STRUCT_H_


	)

37 #ifde‡
__˝lu•lus


41 
	~<evít2/evít-c⁄fig.h
>

42 #ifde‡
_EVENT_HAVE_SYS_TYPES_H


43 
	~<sys/ty≥s.h
>

45 #ifde‡
_EVENT_HAVE_SYS_TIME_H


46 
	~<sys/time.h
>

50 
	~<evít2/utû.h
>

56 
	sevdns_£rvî_ªque°
 {

57 
Êags
;

58 
nque°i⁄s
;

59 
evdns_£rvî_que°i⁄
 **
que°i⁄s
;

61 
	sevdns_£rvî_que°i⁄
 {

62 
ty≥
;

63 #ifde‡
__˝lu•lus


64 
dns_que°i⁄_˛ass
;

69 
˛ass
;

70 
	#dns_que°i⁄_˛ass
 
˛ass


	)

72 
«me
[1];

75 #ifde‡
__˝lu•lus


	@include/event2/event-config.h

11 #i‚de‡
_EVENT2_EVENT_CONFIG_H_


12 
	#_EVENT2_EVENT_CONFIG_H_


	)

33 
	#_EVENT_HAVE_ARPA_INET_H
 1

	)

36 
	#_EVENT_HAVE_CLOCK_GETTIME
 1

	)

40 
	#_EVENT_HAVE_DECL_CTL_KERN
 1

	)

44 
	#_EVENT_HAVE_DECL_KERN_ARND
 0

	)

48 
	#_EVENT_HAVE_DECL_KERN_RANDOM
 1

	)

52 
	#_EVENT_HAVE_DECL_RANDOM_UUID
 1

	)

58 
	#_EVENT_HAVE_DLFCN_H
 1

	)

61 
	#_EVENT_HAVE_EPOLL
 1

	)

64 
	#_EVENT_HAVE_EPOLL_CTL
 1

	)

67 
	#_EVENT_HAVE_EVENTFD
 1

	)

73 
	#_EVENT_HAVE_FCNTL
 1

	)

76 
	#_EVENT_HAVE_FCNTL_H
 1

	)

79 
	#_EVENT_HAVE_FD_MASK
 1

	)

82 
	#_EVENT_HAVE_GETADDRINFO
 1

	)

85 
	#_EVENT_HAVE_GETEGID
 1

	)

88 
	#_EVENT_HAVE_GETEUID
 1

	)

103 
	#_EVENT_HAVE_GETNAMEINFO
 1

	)

106 
	#_EVENT_HAVE_GETPROTOBYNUMBER
 1

	)

112 
	#_EVENT_HAVE_GETTIMEOFDAY
 1

	)

115 
	#_EVENT_HAVE_INET_ATON
 1

	)

118 
	#_EVENT_HAVE_INET_NTOP
 1

	)

121 
	#_EVENT_HAVE_INET_PTON
 1

	)

124 
	#_EVENT_HAVE_INTTYPES_H
 1

	)

133 
	#_EVENT_HAVE_LIBZ
 1

	)

136 
	#_EVENT_HAVE_MEMORY_H
 1

	)

139 
	#_EVENT_HAVE_MMAP
 1

	)

142 
	#_EVENT_HAVE_NETDB_H
 1

	)

148 
	#_EVENT_HAVE_NETINET_IN_H
 1

	)

151 
	#_EVENT_HAVE_OPENSSL
 1

	)

154 
	#_EVENT_HAVE_OPENSSL_BIO_H
 1

	)

157 
	#_EVENT_HAVE_PIPE
 1

	)

160 
	#_EVENT_HAVE_POLL
 1

	)

163 
	#_EVENT_HAVE_POLL_H
 1

	)

175 
	#_EVENT_HAVE_PTHREADS
 1

	)

178 
	#_EVENT_HAVE_PUTENV
 1

	)

181 
	#_EVENT_HAVE_SA_FAMILY_T
 1

	)

184 
	#_EVENT_HAVE_SELECT
 1

	)

187 
	#_EVENT_HAVE_SENDFILE
 1

	)

190 
	#_EVENT_HAVE_SETENV
 1

	)

193 
	#_EVENT_HAVE_SETFD
 1

	)

196 
	#_EVENT_HAVE_SIGACTION
 1

	)

199 
	#_EVENT_HAVE_SIGNAL
 1

	)

202 
	#_EVENT_HAVE_SPLICE
 1

	)

205 
	#_EVENT_HAVE_STDARG_H
 1

	)

208 
	#_EVENT_HAVE_STDDEF_H
 1

	)

211 
	#_EVENT_HAVE_STDINT_H
 1

	)

214 
	#_EVENT_HAVE_STDLIB_H
 1

	)

217 
	#_EVENT_HAVE_STRINGS_H
 1

	)

220 
	#_EVENT_HAVE_STRING_H
 1

	)

226 
	#_EVENT_HAVE_STRSEP
 1

	)

229 
	#_EVENT_HAVE_STRTOK_R
 1

	)

232 
	#_EVENT_HAVE_STRTOLL
 1

	)

235 
	#_EVENT_HAVE_STRUCT_ADDRINFO
 1

	)

238 
	#_EVENT_HAVE_STRUCT_IN6_ADDR
 1

	)

241 
	#_EVENT_HAVE_STRUCT_IN6_ADDR_S6_ADDR16
 1

	)

244 
	#_EVENT_HAVE_STRUCT_IN6_ADDR_S6_ADDR32
 1

	)

247 
	#_EVENT_HAVE_STRUCT_SOCKADDR_IN6
 1

	)

256 
	#_EVENT_HAVE_STRUCT_SOCKADDR_STORAGE
 1

	)

259 
	#_EVENT_HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY
 1

	)

265 
	#_EVENT_HAVE_SYSCTL
 1

	)

271 
	#_EVENT_HAVE_SYS_EPOLL_H
 1

	)

274 
	#_EVENT_HAVE_SYS_EVENTFD_H
 1

	)

280 
	#_EVENT_HAVE_SYS_IOCTL_H
 1

	)

283 
	#_EVENT_HAVE_SYS_MMAN_H
 1

	)

286 
	#_EVENT_HAVE_SYS_PARAM_H
 1

	)

289 
	#_EVENT_HAVE_SYS_QUEUE_H
 1

	)

292 
	#_EVENT_HAVE_SYS_SELECT_H
 1

	)

295 
	#_EVENT_HAVE_SYS_SENDFILE_H
 1

	)

298 
	#_EVENT_HAVE_SYS_SOCKET_H
 1

	)

301 
	#_EVENT_HAVE_SYS_STAT_H
 1

	)

304 
	#_EVENT_HAVE_SYS_SYSCTL_H
 1

	)

307 
	#_EVENT_HAVE_SYS_TIME_H
 1

	)

310 
	#_EVENT_HAVE_SYS_TYPES_H
 1

	)

313 
	#_EVENT_HAVE_SYS_UIO_H
 1

	)

316 
	#_EVENT_HAVE_SYS_WAIT_H
 1

	)

319 
	#_EVENT_HAVE_TAILQFOREACH
 1

	)

322 
	#_EVENT_HAVE_TIMERADD
 1

	)

325 
	#_EVENT_HAVE_TIMERCLEAR
 1

	)

328 
	#_EVENT_HAVE_TIMERCMP
 1

	)

331 
	#_EVENT_HAVE_TIMERISSET
 1

	)

334 
	#_EVENT_HAVE_UINT16_T
 1

	)

337 
	#_EVENT_HAVE_UINT32_T
 1

	)

340 
	#_EVENT_HAVE_UINT64_T
 1

	)

343 
	#_EVENT_HAVE_UINT8_T
 1

	)

346 
	#_EVENT_HAVE_UINTPTR_T
 1

	)

349 
	#_EVENT_HAVE_UMASK
 1

	)

352 
	#_EVENT_HAVE_UNISTD_H
 1

	)

355 
	#_EVENT_HAVE_UNSETENV
 1

	)

358 
	#_EVENT_HAVE_VASPRINTF
 1

	)

364 
	#_EVENT_HAVE_ZLIB_H
 1

	)

368 
	#_EVENT_LT_OBJDIR
 ".libs/"

	)

374 
	#_EVENT_NUMERIC_VERSION
 0x02001500

	)

377 
	#_EVENT_PACKAGE
 "libevít"

	)

380 
	#_EVENT_PACKAGE_BUGREPORT
 ""

	)

383 
	#_EVENT_PACKAGE_NAME
 ""

	)

386 
	#_EVENT_PACKAGE_STRING
 ""

	)

389 
	#_EVENT_PACKAGE_TARNAME
 ""

	)

392 
	#_EVENT_PACKAGE_URL
 ""

	)

395 
	#_EVENT_PACKAGE_VERSION
 ""

	)

402 
	#_EVENT_SIZEOF_INT
 4

	)

405 
	#_EVENT_SIZEOF_LONG
 8

	)

408 
	#_EVENT_SIZEOF_LONG_LONG
 8

	)

411 
	#_EVENT_SIZEOF_PTHREAD_T
 8

	)

414 
	#_EVENT_SIZEOF_SHORT
 2

	)

417 
	#_EVENT_SIZEOF_SIZE_T
 8

	)

420 
	#_EVENT_SIZEOF_VOID_P
 8

	)

423 
	#_EVENT_STDC_HEADERS
 1

	)

426 
	#_EVENT_TIME_WITH_SYS_TIME
 1

	)

429 
	#_EVENT_VERSION
 "2.0.21-°abÀ"

	)

439 #i‚de‡
_EVENT___˝lu•lus


	@include/event2/event.h

27 #i‚de‡
_EVENT2_EVENT_H_


28 
	#_EVENT2_EVENT_H_


	)

183 #ifde‡
__˝lu•lus


187 
	~<evít2/evít-c⁄fig.h
>

188 #ifde‡
_EVENT_HAVE_SYS_TYPES_H


189 
	~<sys/ty≥s.h
>

191 #ifde‡
_EVENT_HAVE_SYS_TIME_H


192 
	~<sys/time.h
>

195 
	~<°dio.h
>

198 
	~<evít2/utû.h
>

213 
evít_ba£


214 #ifde‡
_EVENT_IN_DOXYGEN


272 
evít


273 #ifde‡
_EVENT_IN_DOXYGEN


291 
evít_c⁄fig


292 #ifde‡
_EVENT_IN_DOXYGEN


317 
evít_íabÀ_debug_mode
();

328 
evít_debug_u«ssign
(
evít
 *);

337 
evít_ba£
 *
evít_ba£_√w
();

349 
evít_ªöô
(
evít_ba£
 *
ba£
);

364 
evít_ba£_di•©ch
(
evít_ba£
 *);

372 c⁄° *
evít_ba£_gë_mëhod
(c⁄° 
evít_ba£
 *);

386 c⁄° **
evít_gë_suµ‹ãd_mëhods
();

398 
evít_c⁄fig
 *
evít_c⁄fig_√w
();

405 
evít_c⁄fig_‰ì
(
evít_c⁄fig
 *
cfg
);

419 
evít_c⁄fig_avoid_mëhod
(
evít_c⁄fig
 *
cfg
, c⁄° *
mëhod
);

430 
	eevít_mëhod_„©uª
 {

432 
EV_FEATURE_ET
 = 0x01,

437 
EV_FEATURE_O1
 = 0x02,

440 
EV_FEATURE_FDS
 = 0x04

451 
	eevít_ba£_c⁄fig_Êag
 {

454 
EVENT_BASE_FLAG_NOLOCK
 = 0x01,

457 
EVENT_BASE_FLAG_IGNORE_ENV
 = 0x02,

464 
EVENT_BASE_FLAG_STARTUP_IOCP
 = 0x04,

468 
EVENT_BASE_FLAG_NO_CACHE_TIME
 = 0x08,

484 
EVENT_BASE_FLAG_EPOLL_USE_CHANGELIST
 = 0x10

494 
evít_ba£_gë_„©uªs
(c⁄° 
evít_ba£
 *
ba£
);

518 
evít_c⁄fig_ªquúe_„©uªs
(
evít_c⁄fig
 *
cfg
, 
„©uª
);

526 
evít_c⁄fig_£t_Êag
(
evít_c⁄fig
 *
cfg
, 
Êag
);

537 
evít_c⁄fig_£t_num_˝us_höt
(
evít_c⁄fig
 *
cfg
, 
˝us
);

551 
evít_ba£
 *
evít_ba£_√w_wôh_c⁄fig
(c⁄° 
evít_c⁄fig
 *);

561 
evít_ba£_‰ì
(
evít_ba£
 *);

566 
	#EVENT_LOG_DEBUG
 0

	)

567 
	#EVENT_LOG_MSG
 1

	)

568 
	#EVENT_LOG_WARN
 2

	)

569 
	#EVENT_LOG_ERR
 3

	)

574 
	#_EVENT_LOG_DEBUG
 
EVENT_LOG_DEBUG


	)

575 
	#_EVENT_LOG_MSG
 
EVENT_LOG_MSG


	)

576 
	#_EVENT_LOG_WARN
 
EVENT_LOG_WARN


	)

577 
	#_EVENT_LOG_ERR
 
EVENT_LOG_ERR


	)

584 (*
evít_log_cb
)(
	t£vîôy
, c⁄° *
	tmsg
);

595 
evít_£t_log_ˇŒback
(
evít_log_cb
 
cb
);

602 (*
evít_Áèl_cb
)(
	tîr
);

616 
evít_£t_Áèl_ˇŒback
(
evít_Áèl_cb
 
cb
);

627 
evít_ba£_£t
(
evít_ba£
 *, 
evít
 *);

636 
	#EVLOOP_ONCE
 0x01

	)

639 
	#EVLOOP_NONBLOCK
 0x02

	)

660 
evít_ba£_lo›
(
evít_ba£
 *, );

677 
evít_ba£_lo›exô
(
evít_ba£
 *, c⁄° 
timevÆ
 *);

692 
evít_ba£_lo›bªak
(
evít_ba£
 *);

706 
evít_ba£_gŸ_exô
(
evít_ba£
 *);

720 
evít_ba£_gŸ_bªak
(
evít_ba£
 *);

731 
	#EV_TIMEOUT
 0x01

	)

733 
	#EV_READ
 0x02

	)

735 
	#EV_WRITE
 0x04

	)

737 
	#EV_SIGNAL
 0x08

	)

744 
	#EV_PERSIST
 0x10

	)

746 
	#EV_ET
 0x20

	)

754 
	#evtimî_assign
(
ev
, 
b
, 
cb
, 
¨g
) \

755 
	`evít_assign
((
ev
), (
b
), -1, 0, (
cb
), (
¨g
))

	)

756 
	#evtimî_√w
(
b
, 
cb
, 
¨g
Ë
	`evít_√w
((b), -1, 0, (cb), (¨g))

	)

757 
	#evtimî_add
(
ev
, 
tv
Ë
	`evít_add
(”v), (tv))

	)

758 
	#evtimî_dñ
(
ev
Ë
	`evít_dñ
”v)

	)

759 
	#evtimî_≥ndög
(
ev
, 
tv
Ë
	`evít_≥ndög
(”v), 
EV_TIMEOUT
, (tv))

	)

760 
	#evtimî_öôülized
(
ev
Ë
	`evít_öôülized
”v)

	)

769 
	#evsig«l_add
(
ev
, 
tv
Ë
	`evít_add
(”v), (tv))

	)

770 
	#evsig«l_assign
(
ev
, 
b
, 
x
, 
cb
, 
¨g
) \

771 
	`evít_assign
((
ev
), (
b
), (
x
), 
EV_SIGNAL
|
EV_PERSIST
, 
cb
, (
¨g
))

	)

772 
	#evsig«l_√w
(
b
, 
x
, 
cb
, 
¨g
) \

773 
	`evít_√w
((
b
), (
x
), 
EV_SIGNAL
|
EV_PERSIST
, (
cb
), (
¨g
))

	)

774 
	#evsig«l_dñ
(
ev
Ë
	`evít_dñ
”v)

	)

775 
	#evsig«l_≥ndög
(
ev
, 
tv
Ë
	`evít_≥ndög
(”v), 
EV_SIGNAL
, (tv))

	)

776 
	#evsig«l_öôülized
(
ev
Ë
	`evít_öôülized
”v)

	)

790 (*
evít_ˇŒback_‚
)(
	tevutû_sockë_t
, , *);

840 
evít
 *
evít_√w
(
evít_ba£
 *, 
evutû_sockë_t
, , 
evít_ˇŒback_‚
, *);

881 
evít_assign
(
evít
 *, 
evít_ba£
 *, 
evutû_sockë_t
, , 
evít_ˇŒback_‚
, *);

889 
evít_‰ì
(
evít
 *);

913 
evít_ba£_⁄˚
(
evít_ba£
 *, 
evutû_sockë_t
, , 
evít_ˇŒback_‚
, *, c⁄° 
timevÆ
 *);

937 
evít_add
(
evít
 *
ev
, c⁄° 
timevÆ
 *
timeout
);

950 
evít_dñ
(
evít
 *);

967 
evít_a˘ive
(
evít
 *
ev
, 
ªs
, 
nˇŒs
);

982 
evít_≥ndög
(c⁄° 
evít
 *
ev
, 
evíts
, 
timevÆ
 *
tv
);

1000 
evít_öôülized
(c⁄° 
evít
 *
ev
);

1005 
	#evít_gë_sig«l
(
ev
Ë(()
	`evít_gë_fd
”v))

	)

1011 
evutû_sockë_t
 
evít_gë_fd
(c⁄° 
evít
 *
ev
);

1016 
evít_ba£
 *
evít_gë_ba£
(c⁄° 
evít
 *
ev
);

1021 
evít_gë_evíts
(c⁄° 
evít
 *
ev
);

1026 
evít_ˇŒback_‚
 
evít_gë_ˇŒback
(c⁄° 
evít
 *
ev
);

1031 *
evít_gë_ˇŒback_¨g
(c⁄° 
evít
 *
ev
);

1040 
evít_gë_assignmít
(c⁄° 
evít
 *event,

1041 
evít_ba£
 **
ba£_out
, 
evutû_sockë_t
 *
fd_out
, *
evíts_out
,

1042 
evít_ˇŒback_‚
 *
ˇŒback_out
, **
¨g_out
);

1057 
size_t
 
evít_gë_°ru˘_evít_size
();

1068 c⁄° *
evít_gë_vîsi⁄
();

1081 
ev_uöt32_t
 
evít_gë_vîsi⁄_numbî
();

1084 
	#LIBEVENT_VERSION
 
_EVENT_VERSION


	)

1087 
	#LIBEVENT_VERSION_NUMBER
 
_EVENT_NUMERIC_VERSION


	)

1090 
	#EVENT_MAX_PRIORITIES
 256

	)

1118 
evít_ba£_¥i‹ôy_öô
(
evít_ba£
 *, );

1128 
evít_¥i‹ôy_£t
(
evít
 *, );

1149 c⁄° 
timevÆ
 *
evít_ba£_öô_comm⁄_timeout
(
evít_ba£
 *
ba£
,

1150 c⁄° 
timevÆ
 *
duøti⁄
);

1152 #i‡!
deföed
(
_EVENT_DISABLE_MM_REPLACEMENT
Ë|| deföed(
_EVENT_IN_DOXYGEN
)

1175 
evít_£t_mem_fun˘i⁄s
(

1176 *(*
mÆloc_‚
)(
size_t
 
sz
),

1177 *(*
ªÆloc_‚
)(*
±r
, 
size_t
 
sz
),

1178 (*
‰ì_‚
)(*
±r
));

1181 
	#EVENT_SET_MEM_FUNCTIONS_IMPLEMENTED


	)

1184 
evít_ba£_dump_evíts
(
evít_ba£
 *, 
FILE
 *);

1197 
evít_ba£_gëtimeofday_ˇched
(
evít_ba£
 *
ba£
,

1198 
timevÆ
 *
tv
);

1200 #ifde‡
__˝lu•lus


	@include/event2/event_compat.h

27 #i‚de‡
_EVENT2_EVENT_COMPAT_H_


28 
	#_EVENT2_EVENT_COMPAT_H_


	)

45 #ifde‡
__˝lu•lus


49 
	~<evít2/evít-c⁄fig.h
>

50 #ifde‡
_EVENT_HAVE_SYS_TYPES_H


51 
	~<sys/ty≥s.h
>

53 #ifde‡
_EVENT_HAVE_SYS_TIME_H


54 
	~<sys/time.h
>

58 
	~<evít2/utû.h
>

73 
evít_ba£
 *
evít_öô
();

86 
evít_di•©ch
();

99 
evít_lo›
();

114 
evít_lo›exô
(c⁄° 
timevÆ
 *);

129 
evít_lo›bªak
();

140 
evít_⁄˚
(
evutû_sockë_t
 , ,

141 (*)(
evutû_sockë_t
, , *), *, c⁄° 
timevÆ
 *);

153 c⁄° *
evít_gë_mëhod
();

165 
evít_¥i‹ôy_öô
();

174 
evít_£t
(
evít
 *, 
evutû_sockë_t
, , (*)(evutil_socket_t, , *), *);

176 
	#evtimî_£t
(
ev
, 
cb
, 
¨g
Ë
	`evít_£t
(”v), -1, 0, (cb), (¨g))

	)

177 
	#evsig«l_£t
(
ev
, 
x
, 
cb
, 
¨g
) \

178 
	`evít_£t
((
ev
), (
x
), 
EV_SIGNAL
|
EV_PERSIST
, (
cb
), (
¨g
))

	)

188 
	#timeout_add
(
ev
, 
tv
Ë
	`evít_add
(”v), (tv))

	)

189 
	#timeout_£t
(
ev
, 
cb
, 
¨g
Ë
	`evít_£t
(”v), -1, 0, (cb), (¨g))

	)

190 
	#timeout_dñ
(
ev
Ë
	`evít_dñ
”v)

	)

191 
	#timeout_≥ndög
(
ev
, 
tv
Ë
	`evít_≥ndög
(”v), 
EV_TIMEOUT
, (tv))

	)

192 
	#timeout_öôülized
(
ev
Ë
	`evít_öôülized
”v)

	)

202 
	#sig«l_add
(
ev
, 
tv
Ë
	`evít_add
(”v), (tv))

	)

203 
	#sig«l_£t
(
ev
, 
x
, 
cb
, 
¨g
) \

204 
	`evít_£t
((
ev
), (
x
), 
EV_SIGNAL
|
EV_PERSIST
, (
cb
), (
¨g
))

	)

205 
	#sig«l_dñ
(
ev
Ë
	`evít_dñ
”v)

	)

206 
	#sig«l_≥ndög
(
ev
, 
tv
Ë
	`evít_≥ndög
(”v), 
EV_SIGNAL
, (tv))

	)

207 
	#sig«l_öôülized
(
ev
Ë
	`evít_öôülized
”v)

	)

210 #i‚de‡
EVENT_FD


212 
	#EVENT_FD
(
ev
Ë(()
	`evít_gë_fd
”v))

	)

213 
	#EVENT_SIGNAL
(
ev
Ë
	`evít_gë_sig«l
”v)

	)

216 #ifde‡
__˝lu•lus


	@include/event2/event_struct.h

27 #i‚de‡
_EVENT2_EVENT_STRUCT_H_


28 
	#_EVENT2_EVENT_STRUCT_H_


	)

39 #ifde‡
__˝lu•lus


43 
	~<evít2/evít-c⁄fig.h
>

44 #ifde‡
_EVENT_HAVE_SYS_TYPES_H


45 
	~<sys/ty≥s.h
>

47 #ifde‡
_EVENT_HAVE_SYS_TIME_H


48 
	~<sys/time.h
>

52 
	~<evít2/utû.h
>

55 
	~<evít2/keyvÆq_°ru˘.h
>

57 
	#EVLIST_TIMEOUT
 0x01

	)

58 
	#EVLIST_INSERTED
 0x02

	)

59 
	#EVLIST_SIGNAL
 0x04

	)

60 
	#EVLIST_ACTIVE
 0x08

	)

61 
	#EVLIST_INTERNAL
 0x10

	)

62 
	#EVLIST_INIT
 0x80

	)

65 
	#EVLIST_ALL
 (0xf000 | 0x9f)

	)

68 #i‚de‡
TAILQ_ENTRY


69 
	#_EVENT_DEFINED_TQENTRY


	)

70 
	#TAILQ_ENTRY
(
ty≥
) \

72 
ty≥
 *
tqe_√xt
; \

73 
ty≥
 **
tqe_¥ev
; \

74 }

	)

77 #i‚de‡
TAILQ_HEAD


78 
	#_EVENT_DEFINED_TQHEAD


	)

79 
	#TAILQ_HEAD
(
«me
, 
ty≥
) \

80 
	s«me
 { \

81 
ty≥
 *
tqh_fú°
; \

82 
ty≥
 **
tqh_œ°
; \

83 }

	)

86 
evít_ba£
;

87 
	sevít
 {

88 
TAILQ_ENTRY
(
evít
Ë
ev_a˘ive_√xt
;

89 
TAILQ_ENTRY
(
evít
Ë
ev_√xt
;

92 
TAILQ_ENTRY
(
evít
Ë
ev_√xt_wôh_comm⁄_timeout
;

93 
mö_hóp_idx
;

94 } 
ev_timeout_pos
;

95 
evutû_sockë_t
 
ev_fd
;

97 
evít_ba£
 *
ev_ba£
;

102 
TAILQ_ENTRY
(
evít
Ë
ev_io_√xt
;

103 
timevÆ
 
ev_timeout
;

104 } 
ev_io
;

108 
TAILQ_ENTRY
(
evít
Ë
ev_sig«l_√xt
;

109 
ev_nˇŒs
;

111 *
ev_≤ˇŒs
;

112 } 
ev_sig«l
;

113 } 
_ev
;

115 
ev_evíts
;

116 
ev_ªs
;

117 
ev_Êags
;

118 
ev_uöt8_t
 
ev_¥i
;

119 
ev_uöt8_t
 
ev_˛osuª
;

120 
timevÆ
 
ev_timeout
;

123 (*
ev_ˇŒback
)(
evutû_sockë_t
, , *
¨g
);

124 *
ev_¨g
;

127 
TAILQ_HEAD
 (
evít_li°
, 
evít
);

129 #ifde‡
_EVENT_DEFINED_TQENTRY


130 #unde‡
TAILQ_ENTRY


133 #ifde‡
_EVENT_DEFINED_TQHEAD


134 #unde‡
TAILQ_HEAD


137 #ifde‡
__˝lu•lus


	@include/event2/http.h

27 #i‚de‡
_EVENT2_HTTP_H_


28 
	#_EVENT2_HTTP_H_


	)

31 
	~<evít2/utû.h
>

33 #ifde‡
__˝lu•lus


38 
evbuf„r
;

39 
evít_ba£
;

53 
	#HTTP_OK
 200

	)

54 
	#HTTP_NOCONTENT
 204

	)

55 
	#HTTP_MOVEPERM
 301

	)

56 
	#HTTP_MOVETEMP
 302

	)

57 
	#HTTP_NOTMODIFIED
 304

	)

58 
	#HTTP_BADREQUEST
 400

	)

59 
	#HTTP_NOTFOUND
 404

	)

60 
	#HTTP_BADMETHOD
 405

	)

61 
	#HTTP_ENTITYTOOLARGE
 413

	)

62 
	#HTTP_EXPECTATIONFAILED
 417

	)

63 
	#HTTP_INTERNAL
 500

	)

64 
	#HTTP_NOTIMPLEMENTED
 501

	)

65 
	#HTTP_SERVUNAVAIL
 503

	)

67 
evhâp
;

68 
evhâp_ªque°
;

69 
evkeyvÆq
;

70 
evhâp_bound_sockë
;

71 
evc⁄∆i°íî
;

80 
evhâp
 *
evhâp_√w
(
evít_ba£
 *
ba£
);

94 
evhâp_böd_sockë
(
evhâp
 *
hâp
, c⁄° *
addªss
, 
ev_uöt16_t
 
p‹t
);

107 
evhâp_bound_sockë
 *
evhâp_böd_sockë_wôh_h™dÀ
(
evhâp
 *
hâp
, c⁄° *
addªss
, 
ev_uöt16_t
 
p‹t
);

125 
evhâp_ac˚±_sockë
(
evhâp
 *
hâp
, 
evutû_sockë_t
 
fd
);

137 
evhâp_bound_sockë
 *
evhâp_ac˚±_sockë_wôh_h™dÀ
(
evhâp
 *
hâp
, 
evutû_sockë_t
 
fd
);

144 
evhâp_bound_sockë
 *
evhâp_böd_li°íî
(
evhâp
 *
hâp
, 
evc⁄∆i°íî
 *
li°íî
);

149 
evc⁄∆i°íî
 *
evhâp_bound_sockë_gë_li°íî
(
evhâp_bound_sockë
 *
bound
);

168 
evhâp_dñ_ac˚±_sockë
(
evhâp
 *
hâp
, 
evhâp_bound_sockë
 *
bound_sockë
);

177 
evutû_sockë_t
 
evhâp_bound_sockë_gë_fd
(
evhâp_bound_sockë
 *
bound_sockë
);

187 
evhâp_‰ì
(
evhâp
* 
hâp
);

190 
evhâp_£t_max_hódîs_size
(
evhâp
* 
hâp
, 
ev_ssize_t
 
max_hódîs_size
);

192 
evhâp_£t_max_body_size
(
evhâp
* 
hâp
, 
ev_ssize_t
 
max_body_size
);

205 
evhâp_£t_Ælowed_mëhods
(
evhâp
* 
hâp
, 
ev_uöt16_t
 
mëhods
);

216 
evhâp_£t_cb
(
evhâp
 *
hâp
, c⁄° *
∑th
,

217 (*
cb
)(
evhâp_ªque°
 *, *), *
cb_¨g
);

220 
evhâp_dñ_cb
(
evhâp
 *, const *);

233 
evhâp_£t_gícb
(
evhâp
 *
hâp
,

234 (*
cb
)(
evhâp_ªque°
 *, *), *
¨g
);

258 
evhâp_add_vútuÆ_ho°
(
evhâp
* 
hâp
, c⁄° *
∑âîn
,

259 
evhâp
* 
vho°
);

269 
evhâp_ªmove_vútuÆ_ho°
(
evhâp
* 
hâp
, evhâp* 
vho°
);

279 
evhâp_add_£rvî_Æüs
(
evhâp
 *
hâp
, c⁄° *
Æüs
);

288 
evhâp_ªmove_£rvî_Æüs
(
evhâp
 *
hâp
, c⁄° *
Æüs
);

296 
evhâp_£t_timeout
(
evhâp
 *
hâp
, 
timeout_ö_£cs
);

308 
evhâp_£nd_îr‹
(
evhâp_ªque°
 *
ªq
, 
îr‹
,

309 c⁄° *
ªas⁄
);

324 
evhâp_£nd_ª∂y
(
evhâp_ªque°
 *
ªq
, 
code
,

325 c⁄° *
ªas⁄
, 
evbuf„r
 *
d©abuf
);

343 
evhâp_£nd_ª∂y_°¨t
(
evhâp_ªque°
 *
ªq
, 
code
,

344 c⁄° *
ªas⁄
);

357 
evhâp_£nd_ª∂y_chunk
(
evhâp_ªque°
 *
ªq
,

358 
evbuf„r
 *
d©abuf
);

364 
evhâp_£nd_ª∂y_íd
(
evhâp_ªque°
 *
ªq
);

377 
	eevhâp_cmd_ty≥
 {

378 
EVHTTP_REQ_GET
 = 1 << 0,

379 
EVHTTP_REQ_POST
 = 1 << 1,

380 
EVHTTP_REQ_HEAD
 = 1 << 2,

381 
EVHTTP_REQ_PUT
 = 1 << 3,

382 
EVHTTP_REQ_DELETE
 = 1 << 4,

383 
EVHTTP_REQ_OPTIONS
 = 1 << 5,

384 
EVHTTP_REQ_TRACE
 = 1 << 6,

385 
EVHTTP_REQ_CONNECT
 = 1 << 7,

386 
EVHTTP_REQ_PATCH
 = 1 << 8

390 
	eevhâp_ªque°_köd
 { 
EVHTTP_REQUEST
, 
EVHTTP_RESPONSE
 };

397 
evhâp_ªque°
 *
evhâp_ªque°_√w
(

398 (*
cb
)(
evhâp_ªque°
 *, *), *
¨g
);

407 
evhâp_ªque°_£t_chunked_cb
(
evhâp_ªque°
 *,

408 (*
cb
)(
evhâp_ªque°
 *, *));

411 
evhâp_ªque°_‰ì
(
evhâp_ªque°
 *
ªq
);

413 
evdns_ba£
;

427 
evhâp_c⁄√˘i⁄
 *
evhâp_c⁄√˘i⁄_ba£_√w
(

428 
evít_ba£
 *
ba£
, 
evdns_ba£
 *
dnsba£
,

429 c⁄° *
addªss
, 
p‹t
);

434 
buf„ªvít
 *
evhâp_c⁄√˘i⁄_gë_buf„ªvít
(

435 
evhâp_c⁄√˘i⁄
 *
evc⁄
);

442 
evhâp_ªque°_own
(
evhâp_ªque°
 *
ªq
);

445 
evhâp_ªque°_is_ow√d
(
evhâp_ªque°
 *
ªq
);

453 
evhâp_c⁄√˘i⁄
 *
evhâp_ªque°_gë_c⁄√˘i⁄
(
evhâp_ªque°
 *
ªq
);

458 
evít_ba£
 *
evhâp_c⁄√˘i⁄_gë_ba£
(
evhâp_c⁄√˘i⁄
 *
ªq
);

460 
evhâp_c⁄√˘i⁄_£t_max_hódîs_size
(
evhâp_c⁄√˘i⁄
 *
evc⁄
,

461 
ev_ssize_t
 
√w_max_hódîs_size
);

463 
evhâp_c⁄√˘i⁄_£t_max_body_size
(
evhâp_c⁄√˘i⁄
* 
evc⁄
,

464 
ev_ssize_t
 
√w_max_body_size
);

467 
evhâp_c⁄√˘i⁄_‰ì
(
evhâp_c⁄√˘i⁄
 *
evc⁄
);

470 
evhâp_c⁄√˘i⁄_£t_loˇl_addªss
(
evhâp_c⁄√˘i⁄
 *
evc⁄
,

471 c⁄° *
addªss
);

474 
evhâp_c⁄√˘i⁄_£t_loˇl_p‹t
(
evhâp_c⁄√˘i⁄
 *
evc⁄
,

475 
ev_uöt16_t
 
p‹t
);

478 
evhâp_c⁄√˘i⁄_£t_timeout
(
evhâp_c⁄√˘i⁄
 *
evc⁄
,

479 
timeout_ö_£cs
);

482 
evhâp_c⁄√˘i⁄_£t_ªåõs
(
evhâp_c⁄√˘i⁄
 *
evc⁄
,

483 
ªåy_max
);

486 
evhâp_c⁄√˘i⁄_£t_˛o£cb
(
evhâp_c⁄√˘i⁄
 *
evc⁄
,

487 (*)(
evhâp_c⁄√˘i⁄
 *, *), *);

490 
evhâp_c⁄√˘i⁄_gë_≥î
(
evhâp_c⁄√˘i⁄
 *
evc⁄
,

491 **
addªss
, 
ev_uöt16_t
 *
p‹t
);

506 
evhâp_make_ªque°
(
evhâp_c⁄√˘i⁄
 *
evc⁄
,

507 
evhâp_ªque°
 *
ªq
,

508 
evhâp_cmd_ty≥
 
ty≥
, c⁄° *
uri
);

523 
evhâp_ˇn˚l_ªque°
(
evhâp_ªque°
 *
ªq
);

528 
evhâp_uri
;

531 c⁄° *
evhâp_ªque°_gë_uri
(c⁄° 
evhâp_ªque°
 *
ªq
);

533 c⁄° 
evhâp_uri
 *
evhâp_ªque°_gë_evhâp_uri
(c⁄° 
evhâp_ªque°
 *
ªq
);

535 
evhâp_cmd_ty≥
 
evhâp_ªque°_gë_comm™d
(c⁄° 
evhâp_ªque°
 *
ªq
);

537 
evhâp_ªque°_gë_ª•⁄£_code
(c⁄° 
evhâp_ªque°
 *
ªq
);

540 
evkeyvÆq
 *
evhâp_ªque°_gë_öput_hódîs
(
evhâp_ªque°
 *
ªq
);

542 
evkeyvÆq
 *
evhâp_ªque°_gë_ouçut_hódîs
(
evhâp_ªque°
 *
ªq
);

544 
evbuf„r
 *
evhâp_ªque°_gë_öput_buf„r
(
evhâp_ªque°
 *
ªq
);

546 
evbuf„r
 *
evhâp_ªque°_gë_ouçut_buf„r
(
evhâp_ªque°
 *
ªq
);

551 c⁄° *
evhâp_ªque°_gë_ho°
(
evhâp_ªque°
 *
ªq
);

564 c⁄° *
evhâp_föd_hódî
(c⁄° 
evkeyvÆq
 *
hódîs
,

565 c⁄° *
key
);

575 
evhâp_ªmove_hódî
(
evkeyvÆq
 *
hódîs
, c⁄° *
key
);

586 
evhâp_add_hódî
(
evkeyvÆq
 *
hódîs
, c⁄° *
key
, c⁄° *
vÆue
);

593 
evhâp_˛ór_hódîs
(
evkeyvÆq
 *
hódîs
);

609 *
evhâp_ícode_uri
(c⁄° *
°r
);

625 *
evhâp_urõncode
(c⁄° *
°r
, 
ev_ssize_t
 
size
, 
•a˚_to_∂us
);

641 *
evhâp_decode_uri
(c⁄° *
uri
);

658 *
evhâp_uridecode
(c⁄° *
uri
, 
decode_∂us
,

659 
size_t
 *
size_out
);

680 
evhâp_∑r£_quîy
(c⁄° *
uri
, 
evkeyvÆq
 *
hódîs
);

699 
evhâp_∑r£_quîy_°r
(c⁄° *
uri
, 
evkeyvÆq
 *
hódîs
);

712 *
evhâp_htmÀsˇ≥
(c⁄° *
html
);

717 
evhâp_uri
 *
evhâp_uri_√w
();

723 
evhâp_uri_£t_Êags
(
evhâp_uri
 *
uri
, 
Êags
);

727 c⁄° *
evhâp_uri_gë_scheme
(c⁄° 
evhâp_uri
 *
uri
);

732 c⁄° *
evhâp_uri_gë_u£röfo
(c⁄° 
evhâp_uri
 *
uri
);

745 c⁄° *
evhâp_uri_gë_ho°
(c⁄° 
evhâp_uri
 *
uri
);

747 
evhâp_uri_gë_p‹t
(c⁄° 
evhâp_uri
 *
uri
);

749 c⁄° *
evhâp_uri_gë_∑th
(c⁄° 
evhâp_uri
 *
uri
);

752 c⁄° *
evhâp_uri_gë_quîy
(c⁄° 
evhâp_uri
 *
uri
);

755 c⁄° *
evhâp_uri_gë_‰agmít
(c⁄° 
evhâp_uri
 *
uri
);

759 
evhâp_uri_£t_scheme
(
evhâp_uri
 *
uri
, c⁄° *
scheme
);

762 
evhâp_uri_£t_u£röfo
(
evhâp_uri
 *
uri
, c⁄° *
u£röfo
);

765 
evhâp_uri_£t_ho°
(
evhâp_uri
 *
uri
, c⁄° *
ho°
);

768 
evhâp_uri_£t_p‹t
(
evhâp_uri
 *
uri
, 
p‹t
);

771 
evhâp_uri_£t_∑th
(
evhâp_uri
 *
uri
, c⁄° *
∑th
);

775 
evhâp_uri_£t_quîy
(
evhâp_uri
 *
uri
, c⁄° *
quîy
);

779 
evhâp_uri_£t_‰agmít
(
evhâp_uri
 *
uri
, c⁄° *
‰agmít
);

815 
evhâp_uri
 *
evhâp_uri_∑r£_wôh_Êags
(c⁄° *
sour˚_uri
,

816 
Êags
);

830 
	#EVHTTP_URI_NONCONFORMANT
 0x01

	)

833 
evhâp_uri
 *
evhâp_uri_∑r£
(c⁄° *
sour˚_uri
);

842 
evhâp_uri_‰ì
(
evhâp_uri
 *
uri
);

857 *
evhâp_uri_joö
(
evhâp_uri
 *
uri
, *
buf
, 
size_t
 
limô
);

859 #ifde‡
__˝lu•lus


	@include/event2/http_compat.h

27 #i‚de‡
_EVENT2_HTTP_COMPAT_H_


28 
	#_EVENT2_HTTP_COMPAT_H_


	)

37 #ifde‡
__˝lu•lus


41 
	~<evít2/evít-c⁄fig.h
>

42 #ifde‡
_EVENT_HAVE_SYS_TYPES_H


43 
	~<sys/ty≥s.h
>

45 #ifde‡
_EVENT_HAVE_SYS_TIME_H


46 
	~<sys/time.h
>

50 
	~<evít2/utû.h
>

61 
evhâp
 *
evhâp_°¨t
(c⁄° *
addªss
, 
p‹t
);

70 
evhâp_c⁄√˘i⁄
 *
evhâp_c⁄√˘i⁄_√w
(

71 c⁄° *
addªss
, 
p‹t
);

79 
evhâp_c⁄√˘i⁄_£t_ba£
(
evhâp_c⁄√˘i⁄
 *
evc⁄
,

80 
evít_ba£
 *
ba£
);

84 
	#evhâp_ªque°_uri
 
evhâp_ªque°_gë_uri


	)

86 #ifde‡
__˝lu•lus


	@include/event2/http_struct.h

27 #i‚de‡
_EVENT2_HTTP_STRUCT_H_


28 
	#_EVENT2_HTTP_STRUCT_H_


	)

37 #ifde‡
__˝lu•lus


41 
	~<evít2/evít-c⁄fig.h
>

42 #ifde‡
_EVENT_HAVE_SYS_TYPES_H


43 
	~<sys/ty≥s.h
>

45 #ifde‡
_EVENT_HAVE_SYS_TIME_H


46 
	~<sys/time.h
>

50 
	~<evít2/utû.h
>

57 
	sevhâp_ªque°
 {

58 #i‡
deföed
(
TAILQ_ENTRY
)

59 
TAILQ_ENTRY
(
evhâp_ªque°
Ë
√xt
;

62 
evhâp_ªque°
 *
tqe_√xt
;

63 
evhâp_ªque°
 **
tqe_¥ev
;

64 } 
√xt
;

68 
evhâp_c⁄√˘i⁄
 *
evc⁄
;

69 
Êags
;

71 
	#EVHTTP_REQ_OWN_CONNECTION
 0x0001

	)

73 
	#EVHTTP_PROXY_REQUEST
 0x0002

	)

75 
	#EVHTTP_USER_OWNED
 0x0004

	)

77 
	#EVHTTP_REQ_DEFER_FREE
 0x0008

	)

79 
	#EVHTTP_REQ_NEEDS_FREE
 0x0010

	)

81 
evkeyvÆq
 *
öput_hódîs
;

82 
evkeyvÆq
 *
ouçut_hódîs
;

85 *
ªmŸe_ho°
;

86 
ev_uöt16_t
 
ªmŸe_p‹t
;

89 *
ho°_ˇche
;

91 
evhâp_ªque°_köd
 
köd
;

92 
evhâp_cmd_ty≥
 
ty≥
;

94 
size_t
 
hódîs_size
;

95 
size_t
 
body_size
;

97 *
uri
;

98 
evhâp_uri
 *
uri_ñems
;

100 
maj‹
;

101 
mö‹
;

103 
ª•⁄£_code
;

104 *
ª•⁄£_code_löe
;

106 
evbuf„r
 *
öput_buf„r
;

107 
ev_öt64_t
 
¡‹ód
;

108 
chunked
:1,

109 
u£rd⁄e
:1;

111 
evbuf„r
 *
ouçut_buf„r
;

114 (*
cb
)(
evhâp_ªque°
 *, *);

115 *
cb_¨g
;

122 (*
chunk_cb
)(
evhâp_ªque°
 *, *);

125 #ifde‡
__˝lu•lus


	@include/event2/keyvalq_struct.h

27 #i‚de‡
_EVENT2_EVENT_KEYVALQ_STRUCT_H_


28 
	#_EVENT2_EVENT_KEYVALQ_STRUCT_H_


	)

30 #ifde‡
__˝lu•lus


36 #i‚de‡
TAILQ_ENTRY


37 
	#_EVENT_DEFINED_TQENTRY


	)

38 
	#TAILQ_ENTRY
(
ty≥
) \

40 
ty≥
 *
tqe_√xt
; \

41 
ty≥
 **
tqe_¥ev
; \

42 }

	)

45 #i‚de‡
TAILQ_HEAD


46 
	#_EVENT_DEFINED_TQHEAD


	)

47 
	#TAILQ_HEAD
(
«me
, 
ty≥
) \

48 
	s«me
 { \

49 
ty≥
 *
tqh_fú°
; \

50 
ty≥
 **
tqh_œ°
; \

51 }

	)

58 
	sevkeyvÆ
 {

59 
TAILQ_ENTRY
(
evkeyvÆ
Ë
√xt
;

61 *
key
;

62 *
vÆue
;

65 
TAILQ_HEAD
 (
evkeyvÆq
, 
evkeyvÆ
);

68 #ifde‡
_EVENT_DEFINED_TQENTRY


69 #unde‡
TAILQ_ENTRY


72 #ifde‡
_EVENT_DEFINED_TQHEAD


73 #unde‡
TAILQ_HEAD


76 #ifde‡
__˝lu•lus


	@include/event2/listener.h

27 #i‚de‡
_EVENT2_LISTENER_H_


28 
	#_EVENT2_LISTENER_H_


	)

30 #ifde‡
__˝lu•lus


34 
	~<evít2/evít.h
>

36 
sockaddr
;

37 
evc⁄∆i°íî
;

48 (*
evc⁄∆i°íî_cb
)(
	tevc⁄∆i°íî
 *, 
	tevutû_sockë_t
, 
	tsockaddr
 *, 
	tsockÀn
, *);

56 (*
evc⁄∆i°íî_îr‹cb
)(
	tevc⁄∆i°íî
 *, *);

60 
	#LEV_OPT_LEAVE_SOCKETS_BLOCKING
 (1u<<0)

	)

63 
	#LEV_OPT_CLOSE_ON_FREE
 (1u<<1)

	)

65 
	#LEV_OPT_CLOSE_ON_EXEC
 (1u<<2)

	)

68 
	#LEV_OPT_REUSEABLE
 (1u<<3)

	)

71 
	#LEV_OPT_THREADSAFE
 (1u<<4)

	)

90 
evc⁄∆i°íî
 *
evc⁄∆i°íî_√w
(
evít_ba£
 *
ba£
,

91 
evc⁄∆i°íî_cb
 
cb
, *
±r
, 
Êags
, 
backlog
,

92 
evutû_sockë_t
 
fd
);

108 
evc⁄∆i°íî
 *
evc⁄∆i°íî_√w_böd
(
evít_ba£
 *
ba£
,

109 
evc⁄∆i°íî_cb
 
cb
, *
±r
, 
Êags
, 
backlog
,

110 c⁄° 
sockaddr
 *
ß
, 
sockÀn
);

114 
evc⁄∆i°íî_‰ì
(
evc⁄∆i°íî
 *
Àv
);

118 
evc⁄∆i°íî_íabÀ
(
evc⁄∆i°íî
 *
Àv
);

122 
evc⁄∆i°íî_dißbÀ
(
evc⁄∆i°íî
 *
Àv
);

125 
evít_ba£
 *
evc⁄∆i°íî_gë_ba£
(
evc⁄∆i°íî
 *
Àv
);

128 
evutû_sockë_t
 
evc⁄∆i°íî_gë_fd
(
evc⁄∆i°íî
 *
Àv
);

132 
evc⁄∆i°íî_£t_cb
(
evc⁄∆i°íî
 *
Àv
,

133 
evc⁄∆i°íî_cb
 
cb
, *
¨g
);

136 
evc⁄∆i°íî_£t_îr‹_cb
(
evc⁄∆i°íî
 *
Àv
,

137 
evc⁄∆i°íî_îr‹cb
 
îr‹cb
);

139 #ifde‡
__˝lu•lus


	@include/event2/rpc.h

27 #i‚de‡
_EVENT2_RPC_H_


28 
	#_EVENT2_RPC_H_


	)

30 #ifde‡
__˝lu•lus


76 
	#EVTAG_HAS
(
msg
, 
membî
) \

77 ((
msg
)->
membî
##
_£t
 =1)

	)

79 #i‚de‡
_EVENT2_RPC_COMPAT_H_


88 
	#EVTAG_ASSIGN
(
msg
, 
membî
, 
vÆue
) \

89 (*(
msg
)->
ba£
->
membî
##
_assign
)((msg), (
vÆue
))

	)

98 
	#EVTAG_ASSIGN_WITH_LEN
(
msg
, 
membî
, 
vÆue
, 
Àn
) \

99 (*(
msg
)->
ba£
->
membî
##
_assign
)((msg), (
vÆue
), (
Àn
))

	)

108 
	#EVTAG_GET
(
msg
, 
membî
, 
pvÆue
) \

109 (*(
msg
)->
ba£
->
membî
##
_gë
)((msg), (
pvÆue
))

	)

119 
	#EVTAG_GET_WITH_LEN
(
msg
, 
membî
, 
pvÆue
, 
∂í
) \

120 (*(
msg
)->
ba£
->
membî
##
_gë
)((msg), (
pvÆue
), (
∂í
))

	)

127 
	#EVTAG_ARRAY_ADD_VALUE
(
msg
, 
membî
, 
vÆue
) \

128 (*(
msg
)->
ba£
->
membî
##
_add
)((msg), (
vÆue
))

	)

132 
	#EVTAG_ARRAY_ADD
(
msg
, 
membî
) \

133 (*(
msg
)->
ba£
->
membî
##
_add
)(msg)

	)

137 
	#EVTAG_ARRAY_GET
(
msg
, 
membî
, 
off£t
, 
pvÆue
) \

138 (*(
msg
)->
ba£
->
membî
##
_gë
)((msg), (
off£t
), (
pvÆue
))

	)

142 
	#EVTAG_ARRAY_LEN
(
msg
, 
membî
Ë((msg)->membî##
_Àngth
)

	)

145 
evbuf„r
;

146 
evít_ba£
;

147 
evΩc_ªq_gíîic
;

148 
evΩc_ªque°_wøµî
;

149 
evΩc
;

155 
	#EVRPC_STRUCT
(
Ω˙ame
Ë
evΩc_ªq__
##
	)
Ω˙ame

157 
evhâp_ªque°
;

158 
evΩc_°©us
;

159 
evΩc_hook_mëa
;

172 
	#EVRPC_HEADER
(
Ω˙ame
, 
ªq°ru˘
, 
Ωly°ru˘
) \

173 
	`EVRPC_STRUCT
(
Ω˙ame
) { \

174 
evΩc_hook_mëa
 *
hook_mëa
; \

175 
ªq°ru˘
* 
ªque°
; \

176 
Ωly°ru˘
* 
ª∂y
; \

177 
evΩc
* 
Ωc
; \

178 
evhâp_ªque°
* 
hâp_ªq
; \

179 
evbuf„r
* 
Ωc_d©a
; \

181 
evΩc_£nd_ªque°_
##
	`Ω˙ame
(
evΩc_poﬁ
 *, \

182 
ªq°ru˘
 *, 
Ωly°ru˘
 *, \

183 (*)(
evΩc_°©us
 *, \

184 
ªq°ru˘
 *, 
Ωly°ru˘
 *, *
cb¨g
), \

185 *);

	)

187 
evΩc_poﬁ
;

190 
evΩc_ªque°_wøµî
 *
evΩc_make_ªque°_˘x
(

191 
evΩc_poﬁ
 *
poﬁ
, *
ªque°
, *
ª∂y
,

192 c⁄° *
Ω˙ame
,

193 (*
ªq_m¨shÆ
)(
evbuf„r
*, *),

194 (*
Ωl_˛ór
)(*),

195 (*
Ωl_unm¨shÆ
)(*, 
evbuf„r
 *),

196 (*
cb
)(
evΩc_°©us
 *, *, *, *),

197 *
cb¨g
);

213 
	#EVRPC_MAKE_CTX
(
Ω˙ame
, 
ªq°ru˘
, 
Ωly°ru˘
, \

214 
poﬁ
, 
ªque°
, 
ª∂y
, 
cb
, 
cb¨g
) \

215 
	`evΩc_make_ªque°_˘x
(
poﬁ
, 
ªque°
, 
ª∂y
, \

217 ((*)(
evbuf„r
 *, *))
ªq°ru˘
##
_m¨shÆ
, \

218 ((*)(*))
Ωly°ru˘
##
_˛ór
, \

219 ((*)(*, 
evbuf„r
 *))
Ωly°ru˘
##
_unm¨shÆ
, \

220 ((*)(
evΩc_°©us
 *, *, *, *))
cb
, \

221 
cb¨g
)

	)

233 
	#EVRPC_GENERATE
(
Ω˙ame
, 
ªq°ru˘
, 
Ωly°ru˘
) \

234 
evΩc_£nd_ªque°_
##
	`Ω˙ame
(
evΩc_poﬁ
 *
poﬁ
, \

235 
ªq°ru˘
 *
ªque°
, 
Ωly°ru˘
 *
ª∂y
, \

236 (*
cb
)(
evΩc_°©us
 *, \

237 
ªq°ru˘
 *, 
Ωly°ru˘
 *, *
cb¨g
), \

238 *
cb¨g
) { \

239  
	`evΩc_£nd_ªque°_gíîic
(
poﬁ
, 
ªque°
, 
ª∂y
, \

240 ((*)(
evΩc_°©us
 *, *, *, *))
cb
, \

241 
cb¨g
, \

243 ((*)(
evbuf„r
 *, *))
ªq°ru˘
##
_m¨shÆ
, \

244 ((*)(*))
Ωly°ru˘
##
_˛ór
, \

245 ((*)(*, 
evbuf„r
 *))
Ωly°ru˘
##
_unm¨shÆ
); \

246 }

	)

257 
	#EVRPC_REQUEST_HTTP
(
Ωc_ªq
Ë‘pc_ªq)->
hâp_ªq


	)

260 
evΩc_ªque°_d⁄e
(
evΩc_ªq_gíîic
 *
ªq
);

263 *
evΩc_gë_ªque°
(
evΩc_ªq_gíîic
 *
ªq
);

264 *
evΩc_gë_ª∂y
(
evΩc_ªq_gíîic
 *
ªq
);

274 
	#EVRPC_REQUEST_DONE
(
Ωc_ªq
) do { \

275 
evΩc_ªq_gíîic
 *
_ªq
 = (evΩc_ªq_gíîi¯*)(
Ωc_ªq
); \

276 
	`evΩc_ªque°_d⁄e
(
_ªq
); \

277 } 0)

	)

280 
evΩc_ba£
;

281 
evhâp
;

291 
evΩc_ba£
 *
evΩc_öô
(
evhâp
 *
£rvî
);

301 
evΩc_‰ì
(
evΩc_ba£
 *
ba£
);

319 
	#EVRPC_REGISTER
(
ba£
, 
«me
, 
ªque°
, 
ª∂y
, 
ˇŒback
, 
cb¨g
) \

320 
	`evΩc_ªgi°î_gíîic
(
ba£
, #name, \

321 ((*)(
evΩc_ªq_gíîic
 *, *))
ˇŒback
, 
cb¨g
, \

322 (*(*)(*))
ªque°
##
_√w
, 
NULL
, \

323 ((*)(*))
ªque°
##
_‰ì
, \

324 ((*)(*, 
evbuf„r
 *))
ªque°
##
_unm¨shÆ
, \

325 (*(*)(*))
ª∂y
##
_√w
, 
NULL
, \

326 ((*)(*))
ª∂y
##
_‰ì
, \

327 ((*)(*))
ª∂y
##
_com∂ëe
, \

328 ((*)(
evbuf„r
 *, *))
ª∂y
##
_m¨shÆ
)

	)

337 
evΩc_ªgi°î_Ωc
(
evΩc_ba£
 *, 
evΩc
 *,

338 (*)(
evΩc_ªq_gíîic
*, *), *);

348 
	#EVRPC_UNREGISTER
(
ba£
, 
«me
Ë
	`evΩc_uƒegi°î_Ωc
((ba£), #«me)

	)

350 
evΩc_uƒegi°î_Ωc
(
evΩc_ba£
 *
ba£
, c⁄° *
«me
);

356 
evhâp_c⁄√˘i⁄
;

357 
evΩc_°©us
;

374 
	#EVRPC_MAKE_REQUEST
(
«me
, 
poﬁ
, 
ªque°
, 
ª∂y
, 
cb
, 
cb¨g
) \

375 
evΩc_£nd_ªque°_
##
	`«me
((
poﬁ
), (
ªque°
), (
ª∂y
), (
cb
), (
cb¨g
))

	)

388 
evΩc_make_ªque°
(
evΩc_ªque°_wøµî
 *
˘x
);

400 
evΩc_poﬁ
 *
evΩc_poﬁ_√w
(
evít_ba£
 *
ba£
);

406 
evΩc_poﬁ_‰ì
(
evΩc_poﬁ
 *
poﬁ
);

416 
evΩc_poﬁ_add_c⁄√˘i⁄
(
evΩc_poﬁ
 *
poﬁ
,

417 
evhâp_c⁄√˘i⁄
 *
evc⁄
);

427 
evΩc_poﬁ_ªmove_c⁄√˘i⁄
(
evΩc_poﬁ
 *
poﬁ
,

428 
evhâp_c⁄√˘i⁄
 *
evc⁄
);

445 
evΩc_poﬁ_£t_timeout
(
evΩc_poﬁ
 *
poﬁ
, 
timeout_ö_£cs
);

452 
	eEVRPC_HOOK_TYPE
 {

453 
EVRPC_INPUT
,

454 
EVRPC_OUTPUT


457 #i‚de‡
WIN32


460 
	#INPUT
 
EVRPC_INPUT


	)

463 
	#OUTPUT
 
EVRPC_OUTPUT


	)

470 
	eEVRPC_HOOK_RESULT
 {

471 
EVRPC_TERMINATE
 = -1,

472 
EVRPC_CONTINUE
 = 0,

473 
EVRPC_PAUSE
 = 1

492 *
evΩc_add_hook
(*
vba£
,

493 
EVRPC_HOOK_TYPE
 
hook_ty≥
,

494 (*
cb
)(*, 
evhâp_ªque°
 *, 
evbuf„r
 *, *),

495 *
cb_¨g
);

505 
evΩc_ªmove_hook
(*
vba£
,

506 
EVRPC_HOOK_TYPE
 
hook_ty≥
,

507 *
h™dÀ
);

515 
evΩc_ªsume_ªque°
(*
vba£
, *
˘x
, 
EVRPC_HOOK_RESULT
 
ªs
);

528 
evΩc_hook_add_mëa
(*
˘x
, c⁄° *
key
,

529 c⁄° *
d©a
, 
size_t
 
d©a_size
);

541 
evΩc_hook_föd_mëa
(*
˘x
, c⁄° *
key
,

542 **
d©a
, 
size_t
 *
d©a_size
);

550 
evhâp_c⁄√˘i⁄
 *
evΩc_hook_gë_c⁄√˘i⁄
(*
˘x
);

559 
evΩc_£nd_ªque°_gíîic
(
evΩc_poﬁ
 *
poﬁ
,

560 *
ªque°
, *
ª∂y
,

561 (*
cb
)(
evΩc_°©us
 *, *, *, *),

562 *
cb_¨g
,

563 c⁄° *
Ω˙ame
,

564 (*
ªq_m¨shÆ
)(
evbuf„r
 *, *),

565 (*
Ωl_˛ór
)(*),

566 (*
Ωl_unm¨shÆ
)(*, 
evbuf„r
 *));

576 
evΩc_ªgi°î_gíîic
(
evΩc_ba£
 *
ba£
, c⁄° *
«me
,

577 (*
ˇŒback
)(
evΩc_ªq_gíîic
 *, *), *
cb¨g
,

578 *(*
ªq_√w
)(*), *
ªq_√w_¨g
, (*
ªq_‰ì
)(*),

579 (*
ªq_unm¨shÆ
)(*, 
evbuf„r
 *),

580 *(*
Ωl_√w
)(*), *
Ωl_√w_¨g
, (*
Ωl_‰ì
)(*),

581 (*
Ωl_com∂ëe
)(*),

582 (*
Ωl_m¨shÆ
)(
evbuf„r
 *, *));

585 
evΩc_poﬁ
* 
evΩc_ªque°_gë_poﬁ
(
evΩc_ªque°_wøµî
 *
˘x
);

586 
evΩc_ªque°_£t_poﬁ
(
evΩc_ªque°_wøµî
 *
˘x
,

587 
evΩc_poﬁ
 *
poﬁ
);

588 
evΩc_ªque°_£t_cb
(
evΩc_ªque°_wøµî
 *
˘x
,

589 (*
cb
)(
evΩc_°©us
*, *
ªque°
, *
ª∂y
, *
¨g
),

590 *
cb_¨g
);

592 #ifde‡
__˝lu•lus


	@include/event2/rpc_compat.h

27 #i‚de‡
_EVENT2_RPC_COMPAT_H_


28 
	#_EVENT2_RPC_COMPAT_H_


	)

37 #ifde‡
__˝lu•lus


42 #i‡
deföed
(
__GNUC__
Ë&& !deföed(
__STRICT_ANSI__
)

44 #unde‡
EVTAG_ASSIGN


45 #unde‡
EVTAG_GET


46 #unde‡
EVTAG_ADD


48 
	#EVTAG_ASSIGN
(
msg
, 
membî
, 
¨gs
...) \

49 (*(
msg
)->
ba£
->
membî
##
_assign
)(msg, ## 
¨gs
)

	)

50 
	#EVTAG_GET
(
msg
, 
membî
, 
¨gs
...) \

51 (*(
msg
)->
ba£
->
membî
##
_gë
)(msg, ## 
¨gs
)

	)

52 
	#EVTAG_ADD
(
msg
, 
membî
, 
¨gs
...) \

53 (*(
msg
)->
ba£
->
membî
##
_add
)(msg, ## 
¨gs
)

	)

55 
	#EVTAG_LEN
(
msg
, 
membî
Ë((msg)->membî##
_Àngth
)

	)

57 #ifde‡
__˝lu•lus


	@include/event2/rpc_struct.h

27 #i‚de‡
_EVENT2_RPC_STRUCT_H_


28 
	#_EVENT2_RPC_STRUCT_H_


	)

30 #ifde‡
__˝lu•lus


44 
	sevΩc_°©us
 {

45 
	#EVRPC_STATUS_ERR_NONE
 0

	)

46 
	#EVRPC_STATUS_ERR_TIMEOUT
 1

	)

47 
	#EVRPC_STATUS_ERR_BADPAYLOAD
 2

	)

48 
	#EVRPC_STATUS_ERR_UNSTARTED
 3

	)

49 
	#EVRPC_STATUS_ERR_HOOKABORTED
 4

	)

50 
îr‹
;

53 
evhâp_ªque°
 *
hâp_ªq
;

59 
	sevΩc
 {

60 
TAILQ_ENTRY
(
evΩc
Ë
√xt
;

63 c⁄° * 
uri
;

66 *(*
ªque°_√w
)(*);

67 *
ªque°_√w_¨g
;

70 (*
ªque°_‰ì
)(*);

73 (*
ªque°_unm¨shÆ
)(*, 
evbuf„r
 *);

76 *(*
ª∂y_√w
)(*);

77 *
ª∂y_√w_¨g
;

80 (*
ª∂y_‰ì
)(*);

83 (*
ª∂y_com∂ëe
)(*);

86 (*
ª∂y_m¨shÆ
)(
evbuf„r
*, *);

89 (*
cb
)(
evΩc_ªq_gíîic
 *, *);

90 *
cb_¨g
;

93 
evΩc_ba£
 *
ba£
;

96 #ifde‡
__˝lu•lus


	@include/event2/tag.h

27 #i‚de‡
_EVENT2_TAG_H_


28 
	#_EVENT2_TAG_H_


	)

36 #ifde‡
__˝lu•lus


40 
	~<evít2/evít-c⁄fig.h
>

41 #ifde‡
_EVENT_HAVE_SYS_TYPES_H


42 
	~<sys/ty≥s.h
>

44 #ifde‡
_EVENT_HAVE_SYS_TIME_H


45 
	~<sys/time.h
>

49 
	~<evít2/utû.h
>

51 
evbuf„r
;

59 
evèg_öô
();

68 
evèg_unm¨shÆ_hódî
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 *
±ag
);

70 
evèg_m¨shÆ
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
èg
, c⁄° *
d©a
,

71 
ev_uöt32_t
 
Àn
);

72 
evèg_m¨shÆ_buf„r
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
èg
,

73 
evbuf„r
 *
d©a
);

85 
evèg_ícode_öt
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
numbî
);

86 
evèg_ícode_öt64
(
evbuf„r
 *
evbuf
, 
ev_uöt64_t
 
numbî
);

88 
evèg_m¨shÆ_öt
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
èg
,

89 
ev_uöt32_t
 
öãgî
);

90 
evèg_m¨shÆ_öt64
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
èg
,

91 
ev_uöt64_t
 
öãgî
);

93 
evèg_m¨shÆ_°rög
(
evbuf„r
 *
buf
, 
ev_uöt32_t
 
èg
,

94 c⁄° *
°rög
);

96 
evèg_m¨shÆ_timevÆ
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
èg
,

97 
timevÆ
 *
tv
);

99 
evèg_unm¨shÆ
(
evbuf„r
 *
§c
, 
ev_uöt32_t
 *
±ag
,

100 
evbuf„r
 *
d°
);

101 
evèg_≥ek
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 *
±ag
);

102 
evèg_≥ek_Àngth
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 *
∂ígth
);

103 
evèg_∑ylﬂd_Àngth
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 *
∂ígth
);

104 
evèg_c⁄sume
(
evbuf„r
 *
evbuf
);

106 
evèg_unm¨shÆ_öt
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
√ed_èg
,

107 
ev_uöt32_t
 *
pöãgî
);

108 
evèg_unm¨shÆ_öt64
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
√ed_èg
,

109 
ev_uöt64_t
 *
pöãgî
);

111 
evèg_unm¨shÆ_fixed
(
evbuf„r
 *
§c
, 
ev_uöt32_t
 
√ed_èg
,

112 *
d©a
, 
size_t
 
Àn
);

114 
evèg_unm¨shÆ_°rög
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
√ed_èg
,

115 **
p°rög
);

117 
evèg_unm¨shÆ_timevÆ
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
√ed_èg
,

118 
timevÆ
 *
±v
);

120 #ifde‡
__˝lu•lus


	@include/event2/tag_compat.h

27 #i‚de‡
_EVENT2_TAG_COMPAT_H_


28 
	#_EVENT2_TAG_COMPAT_H_


	)

45 
	#ícode_öt
(
evbuf
, 
numbî
Ë
	`evèg_ícode_öt
(”vbuf), (numbî))

	)

46 
	#ícode_öt64
(
evbuf
, 
numbî
Ë
	`evèg_ícode_öt64
(”vbuf), (numbî))

	)

	@include/event2/thread.h

26 #i‚de‡
_EVENT2_THREAD_H_


27 
	#_EVENT2_THREAD_H_


	)

49 #ifde‡
__˝lu•lus


53 
	~<evít2/evít-c⁄fig.h
>

62 
	#EVTHREAD_WRITE
 0x04

	)

65 
	#EVTHREAD_READ
 0x08

	)

69 
	#EVTHREAD_TRY
 0x10

	)

72 #i‡!
deföed
(
_EVENT_DISABLE_THREAD_SUPPORT
Ë|| deföed(
_EVENT_IN_DOXYGEN
)

74 
	#EVTHREAD_LOCK_API_VERSION
 1

	)

83 
	#EVTHREAD_LOCKTYPE_RECURSIVE
 1

	)

86 
	#EVTHREAD_LOCKTYPE_READWRITE
 2

	)

93 
	sevthªad_lock_ˇŒbacks
 {

96 
lock_≠i_vîsi⁄
;

104 
suµ‹ãd_lockty≥s
;

107 *(*
Æloc
)(
lockty≥
);

110 (*
‰ì
)(*
lock
, 
lockty≥
);

113 (*
lock
)(
mode
, *lock);

116 (*
u∆ock
)(
mode
, *
lock
);

127 
evthªad_£t_lock_ˇŒbacks
(c⁄° 
evthªad_lock_ˇŒbacks
 *);

129 
	#EVTHREAD_CONDITION_API_VERSION
 1

	)

131 
timevÆ
;

137 
	sevthªad_c⁄dôi⁄_ˇŒbacks
 {

140 
c⁄dôi⁄_≠i_vîsi⁄
;

145 *(*
Æloc_c⁄dôi⁄
)(
c⁄dty≥
);

147 (*
‰ì_c⁄dôi⁄
)(*
c⁄d
);

154 (*
sig«l_c⁄dôi⁄
)(*
c⁄d
, 
brﬂdˇ°
);

165 (*
waô_c⁄dôi⁄
)(*
c⁄d
, *
lock
,

166 c⁄° 
timevÆ
 *
timeout
);

177 
evthªad_£t_c⁄dôi⁄_ˇŒbacks
(

178 c⁄° 
evthªad_c⁄dôi⁄_ˇŒbacks
 *);

187 
evthªad_£t_id_ˇŒback
(

188 (*
id_‚
)());

190 #i‡(
deföed
(
WIN32
Ë&& !deföed(
_EVENT_DISABLE_THREAD_SUPPORT
)Ë|| deföed(
_EVENT_IN_DOXYGEN
)

195 
evthªad_u£_wödows_thªads
();

199 
	#EVTHREAD_USE_WINDOWS_THREADS_IMPLEMENTED
 1

	)

202 #i‡
deföed
(
_EVENT_HAVE_PTHREADS
Ë|| deföed(
_EVENT_IN_DOXYGEN
)

208 
evthªad_u£_±hªads
();

210 
	#EVTHREAD_USE_PTHREADS_IMPLEMENTED
 1

	)

220 
evthªad_íabÀ_lock_debugög
();

224 
evít_ba£
;

230 
evthªad_make_ba£_nŸifübÀ
(
evít_ba£
 *
ba£
);

232 #ifde‡
__˝lu•lus


	@include/event2/util.h

26 #i‚de‡
_EVENT2_UTIL_H_


27 
	#_EVENT2_UTIL_H_


	)

36 #ifde‡
__˝lu•lus


40 
	~<evít2/evít-c⁄fig.h
>

41 #ifde‡
_EVENT_HAVE_SYS_TIME_H


42 
	~<sys/time.h
>

44 #ifde‡
_EVENT_HAVE_STDINT_H


45 
	~<°döt.h
>

46 #ñi‡
deföed
(
_EVENT_HAVE_INTTYPES_H
)

47 
	~<öây≥s.h
>

49 #ifde‡
_EVENT_HAVE_SYS_TYPES_H


50 
	~<sys/ty≥s.h
>

52 #ifde‡
_EVENT_HAVE_STDDEF_H


53 
	~<°ddef.h
>

55 #ifde‡
_MSC_VER


56 
	~<Ba£Tsd.h
>

58 
	~<°d¨g.h
>

59 #ifde‡
_EVENT_HAVE_NETDB_H


60 #i‡!
deföed
(
_GNU_SOURCE
)

61 
	#_GNU_SOURCE


	)

63 
	~<√tdb.h
>

66 #ifde‡
WIN32


67 
	~<wösock2.h
>

69 
	~<sys/sockë.h
>

73 #i‡
deföed
(
_EVENT_SIZEOF_VOID__
Ë&& !deföed(
_EVENT_SIZEOF_VOID_P
)

74 
	#_EVENT_SIZEOF_VOID_P
 
_EVENT_SIZEOF_VOID__


	)

106 #ifde‡
_EVENT_HAVE_UINT64_T


107 
	#ev_uöt64_t
 
uöt64_t


	)

108 
	#ev_öt64_t
 
öt64_t


	)

109 #ñi‡
deföed
(
WIN32
)

110 
	#ev_uöt64_t
 
__öt64


	)

111 
	#ev_öt64_t
 sig√d 
__öt64


	)

112 #ñi‡
_EVENT_SIZEOF_LONG_LONG
 == 8

113 
	#ev_uöt64_t
 

	)

114 
	#ev_öt64_t
 

	)

115 #ñi‡
_EVENT_SIZEOF_LONG
 == 8

116 
	#ev_uöt64_t
 

	)

117 
	#ev_öt64_t
 

	)

118 #ñi‡
deföed
(
_EVENT_IN_DOXYGEN
)

119 
	#ev_uöt64_t
 ...

	)

120 
	#ev_öt64_t
 ...

	)

125 #ifde‡
_EVENT_HAVE_UINT32_T


126 
	#ev_uöt32_t
 
uöt32_t


	)

127 
	#ev_öt32_t
 
öt32_t


	)

128 #ñi‡
deföed
(
WIN32
)

129 
	#ev_uöt32_t
 

	)

130 
	#ev_öt32_t
 sig√d 

	)

131 #ñi‡
_EVENT_SIZEOF_LONG
 == 4

132 
	#ev_uöt32_t
 

	)

133 
	#ev_öt32_t
 sig√d 

	)

134 #ñi‡
_EVENT_SIZEOF_INT
 == 4

135 
	#ev_uöt32_t
 

	)

136 
	#ev_öt32_t
 sig√d 

	)

137 #ñi‡
deföed
(
_EVENT_IN_DOXYGEN
)

138 
	#ev_uöt32_t
 ...

	)

139 
	#ev_öt32_t
 ...

	)

144 #ifde‡
_EVENT_HAVE_UINT16_T


145 
	#ev_uöt16_t
 
uöt16_t


	)

146 
	#ev_öt16_t
 
öt16_t


	)

147 #ñi‡
deföed
(
WIN32
)

148 
	#ev_uöt16_t
 

	)

149 
	#ev_öt16_t
 sig√d 

	)

150 #ñi‡
_EVENT_SIZEOF_INT
 == 2

151 
	#ev_uöt16_t
 

	)

152 
	#ev_öt16_t
 sig√d 

	)

153 #ñi‡
_EVENT_SIZEOF_SHORT
 == 2

154 
	#ev_uöt16_t
 

	)

155 
	#ev_öt16_t
 sig√d 

	)

156 #ñi‡
deföed
(
_EVENT_IN_DOXYGEN
)

157 
	#ev_uöt16_t
 ...

	)

158 
	#ev_öt16_t
 ...

	)

163 #ifde‡
_EVENT_HAVE_UINT8_T


164 
	#ev_uöt8_t
 
uöt8_t


	)

165 
	#ev_öt8_t
 
öt8_t


	)

166 #ñi‡
deföed
(
_EVENT_IN_DOXYGEN
)

167 
	#ev_uöt8_t
 ...

	)

168 
	#ev_öt8_t
 ...

	)

170 
	#ev_uöt8_t
 

	)

171 
	#ev_öt8_t
 sig√d 

	)

174 #ifde‡
_EVENT_HAVE_UINTPTR_T


175 
	#ev_uöçå_t
 
uöçå_t


	)

176 
	#ev_öçå_t
 
öçå_t


	)

177 #ñi‡
_EVENT_SIZEOF_VOID_P
 <= 4

178 
	#ev_uöçå_t
 
ev_uöt32_t


	)

179 
	#ev_öçå_t
 
ev_öt32_t


	)

180 #ñi‡
_EVENT_SIZEOF_VOID_P
 <= 8

181 
	#ev_uöçå_t
 
ev_uöt64_t


	)

182 
	#ev_öçå_t
 
ev_öt64_t


	)

183 #ñi‡
deföed
(
_EVENT_IN_DOXYGEN
)

184 
	#ev_uöçå_t
 ...

	)

185 
	#ev_öçå_t
 ...

	)

190 #ifde‡
_EVENT_ssize_t


191 
	#ev_ssize_t
 
_EVENT_ssize_t


	)

193 
	#ev_ssize_t
 
ssize_t


	)

196 #ifde‡
WIN32


197 
	#ev_off_t
 
ev_öt64_t


	)

199 
	#ev_off_t
 
off_t


	)

218 
	#EV_UINT64_MAX
 ((((
ev_uöt64_t
)0xffffffffULË<< 32Ë| 0xffffffffUL)

	)

219 
	#EV_INT64_MAX
 ((((
ev_öt64_t
Ë0x7fffffffLË<< 32Ë| 0xffffffffL)

	)

220 
	#EV_INT64_MIN
 ((-
EV_INT64_MAX
Ë- 1)

	)

221 
	#EV_UINT32_MAX
 ((
ev_uöt32_t
)0xffffffffUL)

	)

222 
	#EV_INT32_MAX
 ((
ev_öt32_t
Ë0x7fffffffL)

	)

223 
	#EV_INT32_MIN
 ((-
EV_INT32_MAX
Ë- 1)

	)

224 
	#EV_UINT16_MAX
 ((
ev_uöt16_t
)0xffffUL)

	)

225 
	#EV_INT16_MAX
 ((
ev_öt16_t
Ë0x7fffL)

	)

226 
	#EV_INT16_MIN
 ((-
EV_INT16_MAX
Ë- 1)

	)

227 
	#EV_UINT8_MAX
 255

	)

228 
	#EV_INT8_MAX
 127

	)

229 
	#EV_INT8_MIN
 ((-
EV_INT8_MAX
Ë- 1)

	)

237 #i‡
_EVENT_SIZEOF_SIZE_T
 == 8

238 
	#EV_SIZE_MAX
 
EV_UINT64_MAX


	)

239 
	#EV_SSIZE_MAX
 
EV_INT64_MAX


	)

240 #ñi‡
_EVENT_SIZEOF_SIZE_T
 == 4

241 
	#EV_SIZE_MAX
 
EV_UINT32_MAX


	)

242 
	#EV_SSIZE_MAX
 
EV_INT32_MAX


	)

243 #ñi‡
deföed
(
_EVENT_IN_DOXYGEN
)

244 
	#EV_SIZE_MAX
 ...

	)

245 
	#EV_SSIZE_MAX
 ...

	)

250 
	#EV_SSIZE_MIN
 ((-
EV_SSIZE_MAX
Ë- 1)

	)

253 #ifde‡
WIN32


254 
	#ev_sockÀn_t
 

	)

255 #ñi‡
deföed
(
_EVENT_sockÀn_t
)

256 
	#ev_sockÀn_t
 
_EVENT_sockÀn_t


	)

258 
	#ev_sockÀn_t
 
sockÀn_t


	)

261 #ifde‡
_EVENT_HAVE_STRUCT_SOCKADDR_STORAGE___SS_FAMILY


262 #i‡!
deföed
(
_EVENT_HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY
) \

263 && !
deföed
(
ss_Ámûy
)

264 
	#ss_Ámûy
 
__ss_Ámûy


	)

271 #ifde‡
WIN32


272 
	#evutû_sockë_t
 
öçå_t


	)

274 
	#evutû_sockë_t
 

	)

288 
evutû_sockë∑ú
(
d
, 
ty≥
, 
¥Ÿocﬁ
, 
evutû_sockë_t
 
sv
[2]);

294 
evutû_make_sockë_n⁄blockög
(
evutû_sockë_t
 
sock
);

307 
evutû_make_li°í_sockë_ªu£abÀ
(
evutû_sockë_t
 
sock
);

315 
evutû_make_sockë_˛o£⁄exec
(
evutû_sockë_t
 
sock
);

323 
evutû_˛o£sockë
(
evutû_sockë_t
 
sock
);

324 
	#EVUTIL_CLOSESOCKET
(
s
Ë
	`evutû_˛o£sockë
(s)

	)

327 #ifde‡
WIN32


329 
	#EVUTIL_SOCKET_ERROR
(Ë
	`WSAGëLa°Eº‹
()

	)

331 
	#EVUTIL_SET_SOCKET_ERROR
(
îrcode
) \

332 dÿ{ 
	`WSASëLa°Eº‹
(
îrcode
); } 0)

	)

334 
evutû_sockë_gëîr‹
(
evutû_sockë_t
 
sock
);

336 c⁄° *
evutû_sockë_îr‹_to_°rög
(
îrcode
);

337 #ñi‡
deföed
(
_EVENT_IN_DOXYGEN
)

353 
	#EVUTIL_SOCKET_ERROR
(Ë...

	)

355 
	#EVUTIL_SET_SOCKET_ERROR
(
îrcode
Ë...

	)

357 
	#evutû_sockë_gëîr‹
(
sock
Ë...

	)

359 
	#evutû_sockë_îr‹_to_°rög
(
îrcode
Ë...

	)

362 
	#EVUTIL_SOCKET_ERROR
(Ë(
î∫o
)

	)

363 
	#EVUTIL_SET_SOCKET_ERROR
(
îrcode
) \

364 dÿ{ 
î∫o
 = (
îrcode
); } 0)

	)

365 
	#evutû_sockë_gëîr‹
(
sock
Ë(
î∫o
)

	)

366 
	#evutû_sockë_îr‹_to_°rög
(
îrcode
Ë(
	`°ªº‹
”ºcode))

	)

378 #ifde‡
_EVENT_HAVE_TIMERADD


379 
	#evutû_timîadd
(
tvp
, 
uvp
, 
vvp
Ë
	`timîadd
(—vp), (uvp), (vvp))

	)

380 
	#evutû_timîsub
(
tvp
, 
uvp
, 
vvp
Ë
	`timîsub
(—vp), (uvp), (vvp))

	)

382 
	#evutû_timîadd
(
tvp
, 
uvp
, 
vvp
) \

384 (
vvp
)->
tv_£c
 = (
tvp
)->tv_£¯+ (
uvp
)->tv_sec; \

385 (
vvp
)->
tv_u£c
 = (
tvp
)->tv_u£¯+ (
uvp
)->tv_usec; \

386 i‡((
vvp
)->
tv_u£c
 >= 1000000) { \

387 (
vvp
)->
tv_£c
++; \

388 (
vvp
)->
tv_u£c
 -= 1000000; \

390 } 0)

	)

391 
	#evutû_timîsub
(
tvp
, 
uvp
, 
vvp
) \

393 (
vvp
)->
tv_£c
 = (
tvp
)->tv_£¯- (
uvp
)->tv_sec; \

394 (
vvp
)->
tv_u£c
 = (
tvp
)->tv_u£¯- (
uvp
)->tv_usec; \

395 i‡((
vvp
)->
tv_u£c
 < 0) { \

396 (
vvp
)->
tv_£c
--; \

397 (
vvp
)->
tv_u£c
 += 1000000; \

399 } 0)

	)

402 #ifde‡
_EVENT_HAVE_TIMERCLEAR


403 
	#evutû_timî˛ór
(
tvp
Ë
	`timî˛ór
—vp)

	)

405 
	#evutû_timî˛ór
(
tvp
Ë—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0

	)

411 
	#evutû_timîcmp
(
tvp
, 
uvp
, 
cmp
) \

412 (((
tvp
)->
tv_£c
 =(
uvp
)->tv_sec) ? \

413 ((
tvp
)->
tv_u£c
 
	`cmp
 (
uvp
)->tv_usec) : \

414 ((
tvp
)->
tv_£c
 
	`cmp
 (
uvp
)->tv_£c))

	)

416 #ifde‡
_EVENT_HAVE_TIMERISSET


417 
	#evutû_timîis£t
(
tvp
Ë
	`timîis£t
—vp)

	)

419 
	#evutû_timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

423 #ifde‡
off£tof


424 
	#evutû_off£tof
(
ty≥
, 
fõld
Ë
	`off£tof
—y≥, fõld)

	)

426 
	#evutû_off£tof
(
ty≥
, 
fõld
Ë((
off_t
)(&(—y≥ *)0)->fõld))

	)

431 
ev_öt64_t
 
evutû_°πﬁl
(c⁄° *
s
, **
íd±r
, 
ba£
);

434 #ifde‡
_EVENT_HAVE_GETTIMEOFDAY


435 
	#evutû_gëtimeofday
(
tv
, 
tz
Ë
	`gëtimeofday
(—v), (tz))

	)

437 
timez⁄e
;

438 
evutû_gëtimeofday
(
timevÆ
 *
tv
, 
timez⁄e
 *
tz
);

444 
evutû_¢¥ötf
(*
buf
, 
size_t
 
buÊí
, c⁄° *
f‹m©
, ...)

445 #ifde‡
__GNUC__


446 
__©åibuã__
((
f‹m©
(
¥ötf
, 3, 4)))

452 
evutû_v¢¥ötf
(*
buf
, 
size_t
 
buÊí
, c⁄° *
f‹m©
, 
va_li°
 
≠
)

453 #ifde‡
__GNUC__


454 
__©åibuã__
((
f‹m©
(
¥ötf
, 3, 0)))

459 c⁄° *
evutû_öë_¡›
(
af
, c⁄° *
§c
, *
d°
, 
size_t
 
Àn
);

461 
evutû_öë_±⁄
(
af
, c⁄° *
§c
, *
d°
);

462 
sockaddr
;

484 
evutû_∑r£_sockaddr_p‹t
(c⁄° *
°r
, 
sockaddr
 *
out
, *
ouéí
);

491 
evutû_sockaddr_cmp
(c⁄° 
sockaddr
 *
ß1
, c⁄° sockadd∏*
ß2
,

492 
ö˛ude_p‹t
);

497 
evutû_ascii_°rˇ£cmp
(c⁄° *
°r1
, c⁄° *
°r2
);

501 
evutû_ascii_°∫ˇ£cmp
(c⁄° *
°r1
, c⁄° *
°r2
, 
size_t
 
n
);

505 #ifde‡
_EVENT_HAVE_STRUCT_ADDRINFO


506 
	#evutû_addröfo
 
addröfo


	)

513 
	sevutû_addröfo
 {

514 
ai_Êags
;

515 
ai_Ámûy
;

516 
ai_sockty≥
;

517 
ai_¥Ÿocﬁ
;

518 
size_t
 
ai_addæí
;

519 *
ai_ˇn⁄«me
;

520 
sockaddr
 *
ai_addr
;

521 
evutû_addröfo
 *
ai_√xt
;

531 #ifde‡
EAI_ADDRFAMILY


532 
	#EVUTIL_EAI_ADDRFAMILY
 
EAI_ADDRFAMILY


	)

534 
	#EVUTIL_EAI_ADDRFAMILY
 -901

	)

536 #ifde‡
EAI_AGAIN


537 
	#EVUTIL_EAI_AGAIN
 
EAI_AGAIN


	)

539 
	#EVUTIL_EAI_AGAIN
 -902

	)

541 #ifde‡
EAI_BADFLAGS


542 
	#EVUTIL_EAI_BADFLAGS
 
EAI_BADFLAGS


	)

544 
	#EVUTIL_EAI_BADFLAGS
 -903

	)

546 #ifde‡
EAI_FAIL


547 
	#EVUTIL_EAI_FAIL
 
EAI_FAIL


	)

549 
	#EVUTIL_EAI_FAIL
 -904

	)

551 #ifde‡
EAI_FAMILY


552 
	#EVUTIL_EAI_FAMILY
 
EAI_FAMILY


	)

554 
	#EVUTIL_EAI_FAMILY
 -905

	)

556 #ifde‡
EAI_MEMORY


557 
	#EVUTIL_EAI_MEMORY
 
EAI_MEMORY


	)

559 
	#EVUTIL_EAI_MEMORY
 -906

	)

564 #i‡
deföed
(
EAI_NODATA
Ë&& (!deföed(
EAI_NONAME
) || EAI_NODATA != EAI_NONAME)

565 
	#EVUTIL_EAI_NODATA
 
EAI_NODATA


	)

567 
	#EVUTIL_EAI_NODATA
 -907

	)

569 #ifde‡
EAI_NONAME


570 
	#EVUTIL_EAI_NONAME
 
EAI_NONAME


	)

572 
	#EVUTIL_EAI_NONAME
 -908

	)

574 #ifde‡
EAI_SERVICE


575 
	#EVUTIL_EAI_SERVICE
 
EAI_SERVICE


	)

577 
	#EVUTIL_EAI_SERVICE
 -909

	)

579 #ifde‡
EAI_SOCKTYPE


580 
	#EVUTIL_EAI_SOCKTYPE
 
EAI_SOCKTYPE


	)

582 
	#EVUTIL_EAI_SOCKTYPE
 -910

	)

584 #ifde‡
EAI_SYSTEM


585 
	#EVUTIL_EAI_SYSTEM
 
EAI_SYSTEM


	)

587 
	#EVUTIL_EAI_SYSTEM
 -911

	)

590 
	#EVUTIL_EAI_CANCEL
 -90001

	)

592 #ifde‡
AI_PASSIVE


593 
	#EVUTIL_AI_PASSIVE
 
AI_PASSIVE


	)

595 
	#EVUTIL_AI_PASSIVE
 0x1000

	)

597 #ifde‡
AI_CANONNAME


598 
	#EVUTIL_AI_CANONNAME
 
AI_CANONNAME


	)

600 
	#EVUTIL_AI_CANONNAME
 0x2000

	)

602 #ifde‡
AI_NUMERICHOST


603 
	#EVUTIL_AI_NUMERICHOST
 
AI_NUMERICHOST


	)

605 
	#EVUTIL_AI_NUMERICHOST
 0x4000

	)

607 #ifde‡
AI_NUMERICSERV


608 
	#EVUTIL_AI_NUMERICSERV
 
AI_NUMERICSERV


	)

610 
	#EVUTIL_AI_NUMERICSERV
 0x8000

	)

612 #ifde‡
AI_V4MAPPED


613 
	#EVUTIL_AI_V4MAPPED
 
AI_V4MAPPED


	)

615 
	#EVUTIL_AI_V4MAPPED
 0x10000

	)

617 #ifde‡
AI_ALL


618 
	#EVUTIL_AI_ALL
 
AI_ALL


	)

620 
	#EVUTIL_AI_ALL
 0x20000

	)

622 #ifde‡
AI_ADDRCONFIG


623 
	#EVUTIL_AI_ADDRCONFIG
 
AI_ADDRCONFIG


	)

625 
	#EVUTIL_AI_ADDRCONFIG
 0x40000

	)

629 
evutû_addröfo
;

641 
evutû_gëaddröfo
(c⁄° *
nodíame
, c⁄° *
£rv«me
,

642 c⁄° 
evutû_addröfo
 *
höts_ö
, evutû_addröfÿ**
ªs
);

645 
evutû_‰ìaddröfo
(
evutû_addröfo
 *
ai
);

647 c⁄° *
evutû_gai_°ªº‹
(
îr
);

655 
evutû_£cuª_∫g_gë_byãs
(*
buf
, 
size_t
 
n
);

673 
evutû_£cuª_∫g_öô
();

689 
evutû_£cuª_∫g_add_byãs
(c⁄° *
d©
, 
size_t
 
d©Àn
);

691 #ifde‡
__˝lu•lus


	@iocp-internal.h

27 #i‚de‡
_EVENT_IOCP_INTERNAL_H


28 
	#_EVENT_IOCP_INTERNAL_H


	)

30 #ifde‡
__˝lu•lus


34 
evít_ovîœµed
;

35 
evít_io˝_p‹t
;

36 
evbuf„r
;

37 (*
io˝_ˇŒback
)(
	tevít_ovîœµed
 *, 
	tev_uöçå_t
, 
	tev_ssize_t
, 
	tsuc˚ss
);

42 #ifde‡
WIN32


51 
	sevít_ovîœµed
 {

52 
OVERLAPPED
 
ovîœµed
;

53 
io˝_ˇŒback
 
cb
;

58 
BOOL
 (
	tWINAPI
 *
	tAc˚±ExPå
)(
	tSOCKET
, SOCKET, 
	tPVOID
, 
	tDWORD
, DWORD, DWORD, 
	tLPDWORD
, 
	tLPOVERLAPPED
);

59 
BOOL
 (
	tWINAPI
 *
	tC⁄√˘ExPå
)(
	tSOCKET
, c⁄° 
	tsockaddr
 *, , 
	tPVOID
, 
	tDWORD
, 
	tLPDWORD
, 
	tLPOVERLAPPED
);

60 (
WINAPI
 *
	tGëAc˚±ExSockaddrsPå
)(
	tPVOID
, 
	tDWORD
, DWORD, DWORD, 
	tLPSOCKADDR
 *, 
	tLPINT
, LPSOCKADDR *, LPINT);

65 
	swö32_exãnsi⁄_‚s
 {

66 
Ac˚±ExPå
 
Ac˚±Ex
;

67 
C⁄√˘ExPå
 
C⁄√˘Ex
;

68 
GëAc˚±ExSockaddrsPå
 
GëAc˚±ExSockaddrs
;

75 
	sevít_io˝_p‹t
 {

77 
HANDLE
 
p‹t
;

79 
CRITICAL_SECTION
 
lock
;

81 
n_thªads
;

83 
shutdown
;

86 
ms
;

88 
HANDLE
 *
thªads
;

90 
n_live_thªads
;

92 
HANDLE
 *
shutdownSem≠h‹e
;

95 c⁄° 
wö32_exãnsi⁄_‚s
 *
evít_gë_wö32_exãnsi⁄_‚s
();

98 
	sevít_ovîœµed
 {

99 
io˝_ˇŒback
 
cb
;

109 
evít_ovîœµed_öô
(
evít_ovîœµed
 *, 
io˝_ˇŒback
 
cb
);

115 
evbuf„r
 *
evbuf„r_ovîœµed_√w
(
evutû_sockë_t
 
fd
);

118 
evutû_sockë_t
 
_evbuf„r_ovîœµed_gë_fd
(
evbuf„r
 *
buf
);

120 
_evbuf„r_ovîœµed_£t_fd
(
evbuf„r
 *
buf
, 
evutû_sockë_t
 
fd
);

134 
evbuf„r_œunch_ªad
(
evbuf„r
 *
buf
, 
size_t
 
n
, 
evít_ovîœµed
 *
ﬁ
);

148 
evbuf„r_œunch_wrôe
(
evbuf„r
 *
buf
, 
ev_ssize_t
 
n
, 
evít_ovîœµed
 *
ﬁ
);

151 
evbuf„r_commô_ªad
(
evbuf„r
 *, 
ev_ssize_t
);

152 
evbuf„r_commô_wrôe
(
evbuf„r
 *, 
ev_ssize_t
);

158 
evít_io˝_p‹t
 *
evít_io˝_p‹t_œunch
(
n_˝us
);

163 
evít_io˝_p‹t_assocüã
(
evít_io˝_p‹t
 *
p‹t
, 
evutû_sockë_t
 
fd
,

164 
ev_uöçå_t
 
key
);

172 
evít_io˝_shutdown
(
evít_io˝_p‹t
 *
p‹t
, 
waôM£c
);

175 
evít_io˝_a˘iv©e_ovîœµed
(
evít_io˝_p‹t
 *
p‹t
,

176 
evít_ovîœµed
 *
o
,

177 
ev_uöçå_t
 
key
, 
ev_uöt32_t
 
n_byãs
);

179 
evít_ba£
;

181 
evít_io˝_p‹t
 *
evít_ba£_gë_io˝
(
evít_ba£
 *
ba£
);

184 
evít_ba£_°¨t_io˝
(
evít_ba£
 *
ba£
, 
n_˝us
);

185 
evít_ba£_°›_io˝
(
evít_ba£
 *
ba£
);

188 
buf„ªvít
 *
buf„ªvít_async_√w
(
evít_ba£
 *
ba£
,

189 
evutû_sockë_t
 
fd
, 
›ti⁄s
);

192 
buf„ªvít_async_£t_c⁄√˘ed
(
buf„ªvít
 *
bev
);

193 
buf„ªvít_async_ˇn_c⁄√˘
(
buf„ªvít
 *
bev
);

194 
buf„ªvít_async_c⁄√˘
(
buf„ªvít
 *
bev
, 
evutû_sockë_t
 
fd
,

195 c⁄° 
sockaddr
 *
ß
, 
sockÀn
);

197 #ifde‡
__˝lu•lus


	@ipv6-internal.h

30 #i‚de‡
_EVENT_IPV6_INTERNAL_H


31 
	#_EVENT_IPV6_INTERNAL_H


	)

33 
	~<sys/ty≥s.h
>

34 #ifde‡
_EVENT_HAVE_SYS_SOCKET_H


35 
	~<sys/sockë.h
>

37 
	~"evít2/evít-c⁄fig.h
"

38 
	~"evít2/utû.h
"

40 #ifde‡
__˝lu•lus


50 #i‚de‡
_EVENT_HAVE_STRUCT_IN6_ADDR


51 
	sö6_addr
 {

52 
ev_uöt8_t
 
s6_addr
[16];

56 #i‚de‡
_EVENT_HAVE_SA_FAMILY_T


57 
	tß_Ámûy_t
;

60 #i‚de‡
_EVENT_HAVE_STRUCT_SOCKADDR_IN6


61 
	ssockaddr_ö6
 {

64 
ß_Ámûy_t
 
	msö6_Ámûy
;

65 
ev_uöt16_t
 
	msö6_p‹t
;

66 
ö6_addr
 
	msö6_addr
;

70 #i‚de‡
AF_INET6


71 
	#AF_INET6
 3333

	)

73 #i‚de‡
PF_INET6


74 
	#PF_INET6
 
AF_INET6


	)

77 #ifde‡
__˝lu•lus


	@kqueue.c

29 
	~"evít2/evít-c⁄fig.h
"

31 
	#_GNU_SOURCE


	)

33 
	~<sys/ty≥s.h
>

34 #ifde‡
_EVENT_HAVE_SYS_TIME_H


35 
	~<sys/time.h
>

37 
	~<sys/queue.h
>

38 
	~<sys/evít.h
>

39 
	~<sig«l.h
>

40 
	~<°dio.h
>

41 
	~<°dlib.h
>

42 
	~<°rög.h
>

43 
	~<uni°d.h
>

44 
	~<î∫o.h
>

45 #ifde‡
_EVENT_HAVE_INTTYPES_H


46 
	~<öây≥s.h
>

52 #i‡
deföed
(
_EVENT_HAVE_INTTYPES_H
Ë&& !deföed(
__O≥nBSD__
Ë&& !deföed(
__FªeBSD__
Ë&& !deföed(
__d¨wö__
Ë&& !deföed(
__APPLE__
)

53 
	#PTR_TO_UDATA
(
x
Ë((
öçå_t
)(x))

	)

54 
	#INT_TO_UDATA
(
x
Ë((
öçå_t
)(x))

	)

56 
	#PTR_TO_UDATA
(
x
Ë(x)

	)

57 
	#INT_TO_UDATA
(
x
Ë((*)(x))

	)

60 
	~"evít-öã∫Æ.h
"

61 
	~"log-öã∫Æ.h
"

62 
	~"evm≠-öã∫Æ.h
"

63 
	~"evít2/thªad.h
"

64 
	~"evthªad-öã∫Æ.h
"

65 
	~"ch™gñi°-öã∫Æ.h
"

67 
	#NEVENT
 64

	)

69 
	skq›
 {

70 
kevít
 *
	mch™ges
;

71 
	mch™ges_size
;

73 
kevít
 *
	mevíts
;

74 
	mevíts_size
;

75 
	mkq
;

76 
pid_t
 
	mpid
;

79 
kq›_‰ì
(
kq›
 *kqop);

81 *
kq_öô
(
evít_ba£
 *);

82 
kq_sig_add
(
evít_ba£
 *, , , , *);

83 
kq_sig_dñ
(
evít_ba£
 *, , , , *);

84 
kq_di•©ch
(
evít_ba£
 *, 
timevÆ
 *);

85 
kq_dóŒoc
(
evít_ba£
 *);

87 c⁄° 
evít›
 
	gkq›s
 = {

89 
kq_öô
,

90 
evít_ch™gñi°_add
,

91 
evít_ch™gñi°_dñ
,

92 
kq_di•©ch
,

93 
kq_dóŒoc
,

95 
EV_FEATURE_ET
|
EV_FEATURE_O1
|
EV_FEATURE_FDS
,

96 
EVENT_CHANGELIST_FDINFO_SIZE


99 c⁄° 
evít›
 
	gkqsig›s
 = {

101 
NULL
,

102 
kq_sig_add
,

103 
kq_sig_dñ
,

104 
NULL
,

105 
NULL
,

112 
	$kq_öô
(
evít_ba£
 *
ba£
)

114 
kq
 = -1;

115 
kq›
 *
kqueue›
 = 
NULL
;

117 i‡(!(
kqueue›
 = 
	`mm_ˇŒoc
(1, (
kq›
))))

118  (
NULL
);

122 i‡((
kq
 = 
	`kqueue
()) == -1) {

123 
	`evít_w¨n
("kqueue");

124 
îr
;

127 
kqueue›
->
kq
 = kq;

129 
kqueue›
->
pid
 = 
	`gëpid
();

132 
kqueue›
->
ch™ges
 = 
	`mm_ˇŒoc
(
NEVENT
, (
kevít
));

133 i‡(
kqueue›
->
ch™ges
 =
NULL
)

134 
îr
;

135 
kqueue›
->
evíts
 = 
	`mm_ˇŒoc
(
NEVENT
, (
kevít
));

136 i‡(
kqueue›
->
evíts
 =
NULL
)

137 
îr
;

138 
kqueue›
->
evíts_size
 = kqueue›->
ch™ges_size
 = 
NEVENT
;

141 
	`mem£t
(&
kqueue›
->
ch™ges
[0], 0,  kqueueop->changes[0]);

142 
kqueue›
->
ch™ges
[0].
idít
 = -1;

143 
kqueue›
->
ch™ges
[0].
fûãr
 = 
EVFILT_READ
;

144 
kqueue›
->
ch™ges
[0].
Êags
 = 
EV_ADD
;

150 i‡(
	`kevít
(
kq
,

151 
kqueue›
->
ch™ges
, 1, kqueue›->
evíts
, 
NEVENT
, 
NULL
) != 1 ||

152 ()
kqueue›
->
evíts
[0].
idít
 != -1 ||

153 
kqueue›
->
evíts
[0].
Êags
 !
EV_ERROR
) {

154 
	`evít_w¨n
("%s: dëe˘ed brokí kqueue;ÇŸ usög.", 
__func__
);

155 
îr
;

158 
ba£
->
evsig£l
 = &
kqsig›s
;

160  (
kqueue›
);

161 
îr
:

162 i‡(
kqueue›
)

163 
	`kq›_‰ì
(
kqueue›
);

165  (
NULL
);

166 
	}
}

169 
	$kq_sigh™dÀr
(
sig
)

172 
	}
}

174 
	#ADD_UDATA
 0x30303

	)

177 
	$kq_£tup_kevít
(
kevít
 *
out
, 
evutû_sockë_t
 
fd
, 
fûãr
, 
ch™ge
)

179 
	`mem£t
(
out
, 0, (
kevít
));

180 
out
->
idít
 = 
fd
;

181 
out
->
fûãr
 = filter;

183 i‡(
ch™ge
 & 
EV_CHANGE_ADD
) {

184 
out
->
Êags
 = 
EV_ADD
;

187 
out
->
ud©a
 = 
	`INT_TO_UDATA
(
ADD_UDATA
);

188 i‡(
ch™ge
 & 
EV_ET
)

189 
out
->
Êags
 |
EV_CLEAR
;

190 #ifde‡
NOTE_EOF


192 i‡(
fûãr
 =
EVFILT_READ
)

193 
out
->
fÊags
 = 
NOTE_EOF
;

196 
	`EVUTIL_ASSERT
(
ch™ge
 & 
EV_CHANGE_DEL
);

197 
out
->
Êags
 = 
EV_DELETE
;

199 
	}
}

202 
	$kq_buûd_ch™ges_li°
(c⁄° 
evít_ch™gñi°
 *
ch™gñi°
,

203 
kq›
 *kqop)

205 
i
;

206 
n_ch™ges
 = 0;

208 
i
 = 0; i < 
ch™gñi°
->
n_ch™ges
; ++i) {

209 
evít_ch™ge
 *
ö_ch
 = &
ch™gñi°
->
ch™ges
[
i
];

210 
kevít
 *
out_ch
;

211 i‡(
n_ch™ges
 >
kq›
->
ch™ges_size
 - 1) {

212 
√wsize
 = 
kq›
->
ch™ges_size
 * 2;

213 
kevít
 *
√wch™ges
;

215 
√wch™ges
 = 
	`mm_ªÆloc
(
kq›
->
ch™ges
,

216 
√wsize
 * (
kevít
));

217 i‡(
√wch™ges
 =
NULL
) {

218 
	`evít_w¨n
("%s:ÑóŒoc", 
__func__
);

221 
kq›
->
ch™ges
 = 
√wch™ges
;

222 
kq›
->
ch™ges_size
 = 
√wsize
;

224 i‡(
ö_ch
->
ªad_ch™ge
) {

225 
out_ch
 = &
kq›
->
ch™ges
[
n_ch™ges
++];

226 
	`kq_£tup_kevít
(
out_ch
, 
ö_ch
->
fd
, 
EVFILT_READ
,

227 
ö_ch
->
ªad_ch™ge
);

229 i‡(
ö_ch
->
wrôe_ch™ge
) {

230 
out_ch
 = &
kq›
->
ch™ges
[
n_ch™ges
++];

231 
	`kq_£tup_kevít
(
out_ch
, 
ö_ch
->
fd
, 
EVFILT_WRITE
,

232 
ö_ch
->
wrôe_ch™ge
);

235  
n_ch™ges
;

236 
	}
}

239 
	$kq_grow_evíts
(
kq›
 *kq›, 
size_t
 
√w_size
)

241 
kevít
 *
√wªsu…
;

243 
√wªsu…
 = 
	`mm_ªÆloc
(
kq›
->
evíts
,

244 
√w_size
 * (
kevít
));

246 i‡(
√wªsu…
) {

247 
kq›
->
evíts
 = 
√wªsu…
;

248 
kq›
->
evíts_size
 = 
√w_size
;

253 
	}
}

256 
	$kq_di•©ch
(
evít_ba£
 *
ba£
, 
timevÆ
 *
tv
)

258 
kq›
 *kq› = 
ba£
->
evba£
;

259 
kevít
 *
evíts
 = 
kq›
->events;

260 
kevít
 *
ch™ges
;

261 
time•ec
 
ts
, *
ts_p
 = 
NULL
;

262 
i
, 
n_ch™ges
, 
ªs
;

264 i‡(
tv
 !
NULL
) {

265 
	`TIMEVAL_TO_TIMESPEC
(
tv
, &
ts
);

266 
ts_p
 = &
ts
;

270 
	`EVUTIL_ASSERT
(
kq›
->
ch™ges
);

271 
n_ch™ges
 = 
	`kq_buûd_ch™ges_li°
(&
ba£
->
ch™gñi°
, 
kq›
);

272 i‡(
n_ch™ges
 < 0)

275 
	`evít_ch™gñi°_ªmove_Æl
(&
ba£
->
ch™gñi°
, base);

279 
ch™ges
 = 
kq›
->changes;

280 
kq›
->
ch™ges
 = 
NULL
;

291 i‡(
kq›
->
evíts_size
 < 
n_ch™ges
) {

292 
√w_size
 = 
kq›
->
evíts_size
;

294 
√w_size
 *= 2;

295 } 
√w_size
 < 
n_ch™ges
);

297 
	`kq_grow_evíts
(
kq›
, 
√w_size
);

298 
evíts
 = 
kq›
->events;

301 
	`EVBASE_RELEASE_LOCK
(
ba£
, 
th_ba£_lock
);

303 
ªs
 = 
	`kevít
(
kq›
->
kq
, 
ch™ges
, 
n_ch™ges
,

304 
evíts
, 
kq›
->
evíts_size
, 
ts_p
);

306 
	`EVBASE_ACQUIRE_LOCK
(
ba£
, 
th_ba£_lock
);

308 
	`EVUTIL_ASSERT
(
kq›
->
ch™ges
 =
NULL
);

309 
kq›
->
ch™ges
 = changes;

311 i‡(
ªs
 == -1) {

312 i‡(
î∫o
 !
EINTR
) {

313 
	`evít_w¨n
("kevent");

320 
	`evít_debug
(("%s: kevíàªp‹t†%d", 
__func__
, 
ªs
));

322 
i
 = 0; i < 
ªs
; i++) {

323 
which
 = 0;

325 i‡(
evíts
[
i
].
Êags
 & 
EV_ERROR
) {

326 
evíts
[
i
].
d©a
) {

332 
ENOENT
:

335 
EINVAL
:

339 
EBADF
:

349 
EPERM
:

350 
EPIPE
:

355 i‡(
evíts
[
i
].
ud©a
) {

358 
which
 |
EV_READ
;

368 
î∫o
 = 
evíts
[
i
].
d©a
;

371 } i‡(
evíts
[
i
].
fûãr
 =
EVFILT_READ
) {

372 
which
 |
EV_READ
;

373 } i‡(
evíts
[
i
].
fûãr
 =
EVFILT_WRITE
) {

374 
which
 |
EV_WRITE
;

375 } i‡(
evíts
[
i
].
fûãr
 =
EVFILT_SIGNAL
) {

376 
which
 |
EV_SIGNAL
;

379 i‡(!
which
)

382 i‡(
evíts
[
i
].
fûãr
 =
EVFILT_SIGNAL
) {

383 
	`evm≠_sig«l_a˘ive
(
ba£
, 
evíts
[
i
].
idít
, 1);

385 
	`evm≠_io_a˘ive
(
ba£
, 
evíts
[
i
].
idít
, 
which
 | 
EV_ET
);

389 i‡(
ªs
 =
kq›
->
evíts_size
) {

392 
	`kq_grow_evíts
(
kq›
, kq›->
evíts_size
 * 2);

396 
	}
}

399 
	$kq›_‰ì
(
kq›
 *kqop)

401 i‡(
kq›
->
ch™ges
)

402 
	`mm_‰ì
(
kq›
->
ch™ges
);

403 i‡(
kq›
->
evíts
)

404 
	`mm_‰ì
(
kq›
->
evíts
);

405 i‡(
kq›
->
kq
 >0 && kq›->
pid
 =
	`gëpid
())

406 
	`˛o£
(
kq›
->
kq
);

407 
	`mem£t
(
kq›
, 0, (kqop));

408 
	`mm_‰ì
(
kq›
);

409 
	}
}

412 
	$kq_dóŒoc
(
evít_ba£
 *
ba£
)

414 
kq›
 *kq› = 
ba£
->
evba£
;

415 
	`evsig_dóŒoc
(
ba£
);

416 
	`kq›_‰ì
(
kq›
);

417 
	}
}

421 
	$kq_sig_add
(
evít_ba£
 *
ba£
, 
nsig«l
, 
ﬁd
, 
evíts
, *
p
)

423 
kq›
 *kq› = 
ba£
->
evba£
;

424 
kevít
 
kev
;

425 
time•ec
 
timeout
 = { 0, 0 };

426 ()
p
;

428 
	`EVUTIL_ASSERT
(
nsig«l
 >0 &&Çsig«»< 
NSIG
);

430 
	`mem£t
(&
kev
, 0, (kev));

431 
kev
.
idít
 = 
nsig«l
;

432 
kev
.
fûãr
 = 
EVFILT_SIGNAL
;

433 
kev
.
Êags
 = 
EV_ADD
;

438 i‡(
	`kevít
(
kq›
->
kq
, &
kev
, 1, 
NULL
, 0, &
timeout
) == -1)

443 i‡(
	`_evsig_£t_h™dÀr
(
ba£
, 
nsig«l
, 
kq_sigh™dÀr
) == -1)

447 
	}
}

450 
	$kq_sig_dñ
(
evít_ba£
 *
ba£
, 
nsig«l
, 
ﬁd
, 
evíts
, *
p
)

452 
kq›
 *kq› = 
ba£
->
evba£
;

453 
kevít
 
kev
;

455 
time•ec
 
timeout
 = { 0, 0 };

456 ()
p
;

458 
	`EVUTIL_ASSERT
(
nsig«l
 >0 &&Çsig«»< 
NSIG
);

460 
	`mem£t
(&
kev
, 0, (kev));

461 
kev
.
idít
 = 
nsig«l
;

462 
kev
.
fûãr
 = 
EVFILT_SIGNAL
;

463 
kev
.
Êags
 = 
EV_DELETE
;

468 i‡(
	`kevít
(
kq›
->
kq
, &
kev
, 1, 
NULL
, 0, &
timeout
) == -1)

471 i‡(
	`_evsig_ª°‹e_h™dÀr
(
ba£
, 
nsig«l
) == -1)

475 
	}
}

	@listener.c

27 
	~<sys/ty≥s.h
>

29 
	~"evít2/evít-c⁄fig.h
"

31 #ifde‡
WIN32


32 #i‚de‡
_WIN32_WINNT


34 
	#_WIN32_WINNT
 0x0403

	)

36 
	~<wösock2.h
>

37 
	~<ws2t˝ù.h
>

38 
	~<mswsock.h
>

40 
	~<î∫o.h
>

41 #ifde‡
_EVENT_HAVE_SYS_SOCKET_H


42 
	~<sys/sockë.h
>

44 #ifde‡
_EVENT_HAVE_FCNTL_H


45 
	~<f˙é.h
>

47 #ifde‡
_EVENT_HAVE_UNISTD_H


48 
	~<uni°d.h
>

51 
	~"evít2/li°íî.h
"

52 
	~"evít2/utû.h
"

53 
	~"evít2/evít.h
"

54 
	~"evít2/evít_°ru˘.h
"

55 
	~"mm-öã∫Æ.h
"

56 
	~"utû-öã∫Æ.h
"

57 
	~"log-öã∫Æ.h
"

58 
	~"evthªad-öã∫Æ.h
"

59 #ifde‡
WIN32


60 
	~"io˝-öã∫Æ.h
"

61 
	~"de„r-öã∫Æ.h
"

62 
	~"evít-öã∫Æ.h
"

65 
	sevc⁄∆i°íî_›s
 {

66 (*
	míabÀ
)(
	mevc⁄∆i°íî
 *);

67 (*
	mdißbÀ
)(
	mevc⁄∆i°íî
 *);

68 (*
	mde°roy
)(
	mevc⁄∆i°íî
 *);

69 (*
	mshutdown
)(
	mevc⁄∆i°íî
 *);

70 
evutû_sockë_t
 (*
gëfd
)(
	mevc⁄∆i°íî
 *);

71 
	mevít_ba£
 *(*
	mgëba£
)(
	mevc⁄∆i°íî
 *);

74 
	sevc⁄∆i°íî
 {

75 c⁄° 
evc⁄∆i°íî_›s
 *
	m›s
;

76 *
	mlock
;

77 
evc⁄∆i°íî_cb
 
	mcb
;

78 
evc⁄∆i°íî_îr‹cb
 
	mîr‹cb
;

79 *
	mu£r_d©a
;

80 
	mÊags
;

81 
	mªf˙t
;

82 
	míabÀd
 : 1;

85 
	sevc⁄∆i°íî_evít
 {

86 
evc⁄∆i°íî
 
	mba£
;

87 
evít
 
	mli°íî
;

90 #ifde‡
WIN32


91 
	sevc⁄∆i°íî_io˝
 {

92 
evc⁄∆i°íî
 
	mba£
;

93 
evutû_sockë_t
 
	mfd
;

94 
evít_ba£
 *
	mevít_ba£
;

95 
evít_io˝_p‹t
 *
	mp‹t
;

96 
	mn_ac˚±ög
;

97 
	mshuâög_down
 : 1;

98 
	mevít_added
 : 1;

99 
ac˚±ög_sockë
 **
	mac˚±ög
;

103 
	#LOCK
(
li°íî
Ë
	`EVLOCK_LOCK
(÷i°íî)->
lock
, 0)

	)

104 
	#UNLOCK
(
li°íî
Ë
	`EVLOCK_UNLOCK
(÷i°íî)->
lock
, 0)

	)

106 
evc⁄∆i°íî
 *

107 
evc⁄∆i°íî_√w_async
(
evít_ba£
 *
ba£
,

108 
evc⁄∆i°íî_cb
 
cb
, *
±r
, 
Êags
, 
backlog
,

109 
evutû_sockë_t
 
fd
);

111 
evít_li°íî_íabÀ
(
evc⁄∆i°íî
 *);

112 
evít_li°íî_dißbÀ
(
evc⁄∆i°íî
 *);

113 
evít_li°íî_de°roy
(
evc⁄∆i°íî
 *);

114 
evutû_sockë_t
 
evít_li°íî_gëfd
(
evc⁄∆i°íî
 *);

115 
evít_ba£
 *
evít_li°íî_gëba£
(
evc⁄∆i°íî
 *);

119 
	$li°íî_ö¸ef_™d_lock
(
evc⁄∆i°íî
 *
li°íî
)

121 
	`LOCK
(
li°íî
);

122 ++
li°íî
->
ªf˙t
;

123 
	}
}

127 
	$li°íî_de¸ef_™d_u∆ock
(
evc⁄∆i°íî
 *
li°íî
)

129 
ªf˙t
 = --
li°íî
->refcnt;

130 i‡(
ªf˙t
 == 0) {

131 
li°íî
->
›s
->
	`de°roy
(listener);

132 
	`UNLOCK
(
li°íî
);

133 
	`EVTHREAD_FREE_LOCK
(
li°íî
->
lock
, 
EVTHREAD_LOCKTYPE_RECURSIVE
);

134 
	`mm_‰ì
(
li°íî
);

137 
	`UNLOCK
(
li°íî
);

140 
	}
}

142 c⁄° 
evc⁄∆i°íî_›s
 
	gevc⁄∆i°íî_evít_›s
 = {

143 
evít_li°íî_íabÀ
,

144 
evít_li°íî_dißbÀ
,

145 
evít_li°íî_de°roy
,

146 
NULL
,

147 
evít_li°íî_gëfd
,

148 
evít_li°íî_gëba£


151 
li°íî_ªad_cb
(
evutû_sockë_t
, , *);

153 
evc⁄∆i°íî
 *

154 
	$evc⁄∆i°íî_√w
(
evít_ba£
 *
ba£
,

155 
evc⁄∆i°íî_cb
 
cb
, *
±r
, 
Êags
, 
backlog
,

156 
evutû_sockë_t
 
fd
)

158 
evc⁄∆i°íî_evít
 *
Àv
;

160 #ifde‡
WIN32


161 i‡(
ba£
 && 
	`evít_ba£_gë_io˝
(base)) {

162 c⁄° 
wö32_exãnsi⁄_‚s
 *
ext
 =

163 
	`evít_gë_wö32_exãnsi⁄_‚s
();

164 i‡(
ext
->
Ac˚±Ex
 &&Éxt->
GëAc˚±ExSockaddrs
)

165  
	`evc⁄∆i°íî_√w_async
(
ba£
, 
cb
, 
±r
, 
Êags
,

166 
backlog
, 
fd
);

170 i‡(
backlog
 > 0) {

171 i‡(
	`li°í
(
fd
, 
backlog
) < 0)

172  
NULL
;

173 } i‡(
backlog
 < 0) {

174 i‡(
	`li°í
(
fd
, 128) < 0)

175  
NULL
;

178 
Àv
 = 
	`mm_ˇŒoc
(1, (
evc⁄∆i°íî_evít
));

179 i‡(!
Àv
)

180  
NULL
;

182 
Àv
->
ba£
.
›s
 = &
evc⁄∆i°íî_evít_›s
;

183 
Àv
->
ba£
.
cb
 = cb;

184 
Àv
->
ba£
.
u£r_d©a
 = 
±r
;

185 
Àv
->
ba£
.
Êags
 = flags;

186 
Àv
->
ba£
.
ªf˙t
 = 1;

188 i‡(
Êags
 & 
LEV_OPT_THREADSAFE
) {

189 
	`EVTHREAD_ALLOC_LOCK
(
Àv
->
ba£
.
lock
, 
EVTHREAD_LOCKTYPE_RECURSIVE
);

192 
	`evít_assign
(&
Àv
->
li°íî
, 
ba£
, 
fd
, 
EV_READ
|
EV_PERSIST
,

193 
li°íî_ªad_cb
, 
Àv
);

195 
	`evc⁄∆i°íî_íabÀ
(&
Àv
->
ba£
);

197  &
Àv
->
ba£
;

198 
	}
}

200 
evc⁄∆i°íî
 *

201 
	$evc⁄∆i°íî_√w_böd
(
evít_ba£
 *
ba£
, 
evc⁄∆i°íî_cb
 
cb
,

202 *
±r
, 
Êags
, 
backlog
, c⁄° 
sockaddr
 *
ß
,

203 
sockÀn
)

205 
evc⁄∆i°íî
 *
li°íî
;

206 
evutû_sockë_t
 
fd
;

207 
⁄
 = 1;

208 
Ámûy
 = 
ß
 ? sa->
ß_Ámûy
 : 
AF_UNSPEC
;

210 i‡(
backlog
 == 0)

211  
NULL
;

213 
fd
 = 
	`sockë
(
Ámûy
, 
SOCK_STREAM
, 0);

214 i‡(
fd
 == -1)

215  
NULL
;

217 i‡(
	`evutû_make_sockë_n⁄blockög
(
fd
) < 0) {

218 
	`evutû_˛o£sockë
(
fd
);

219  
NULL
;

222 i‡(
Êags
 & 
LEV_OPT_CLOSE_ON_EXEC
) {

223 i‡(
	`evutû_make_sockë_˛o£⁄exec
(
fd
) < 0) {

224 
	`evutû_˛o£sockë
(
fd
);

225  
NULL
;

229 i‡(
	`£tsock›t
(
fd
, 
SOL_SOCKET
, 
SO_KEEPALIVE
, (*)&
⁄
, (on))<0) {

230 
	`evutû_˛o£sockë
(
fd
);

231  
NULL
;

233 i‡(
Êags
 & 
LEV_OPT_REUSEABLE
) {

234 i‡(
	`evutû_make_li°í_sockë_ªu£abÀ
(
fd
) < 0) {

235 
	`evutû_˛o£sockë
(
fd
);

236  
NULL
;

240 i‡(
ß
) {

241 i‡(
	`böd
(
fd
, 
ß
, 
sockÀn
)<0) {

242 
	`evutû_˛o£sockë
(
fd
);

243  
NULL
;

247 
li°íî
 = 
	`evc⁄∆i°íî_√w
(
ba£
, 
cb
, 
±r
, 
Êags
, 
backlog
, 
fd
);

248 i‡(!
li°íî
) {

249 
	`evutû_˛o£sockë
(
fd
);

250  
NULL
;

253  
li°íî
;

254 
	}
}

257 
	$evc⁄∆i°íî_‰ì
(
evc⁄∆i°íî
 *
Àv
)

259 
	`LOCK
(
Àv
);

260 
Àv
->
cb
 = 
NULL
;

261 
Àv
->
îr‹cb
 = 
NULL
;

262 i‡(
Àv
->
›s
->
shutdown
)

263 
Àv
->
›s
->
	`shutdown
(lev);

264 
	`li°íî_de¸ef_™d_u∆ock
(
Àv
);

265 
	}
}

268 
	$evít_li°íî_de°roy
(
evc⁄∆i°íî
 *
Àv
)

270 
evc⁄∆i°íî_evít
 *
Àv_e
 =

271 
	`EVUTIL_UPCAST
(
Àv
, 
evc⁄∆i°íî_evít
, 
ba£
);

273 
	`evít_dñ
(&
Àv_e
->
li°íî
);

274 i‡(
Àv
->
Êags
 & 
LEV_OPT_CLOSE_ON_FREE
)

275 
	`evutû_˛o£sockë
(
	`evít_gë_fd
(&
Àv_e
->
li°íî
));

276 
	`evít_debug_u«ssign
(&
Àv_e
->
li°íî
);

277 
	}
}

280 
	$evc⁄∆i°íî_íabÀ
(
evc⁄∆i°íî
 *
Àv
)

282 
r
;

283 
	`LOCK
(
Àv
);

284 
Àv
->
íabÀd
 = 1;

285 i‡(
Àv
->
cb
)

286 
r
 = 
Àv
->
›s
->
	`íabÀ
(lev);

288 
r
 = 0;

289 
	`UNLOCK
(
Àv
);

290  
r
;

291 
	}
}

294 
	$evc⁄∆i°íî_dißbÀ
(
evc⁄∆i°íî
 *
Àv
)

296 
r
;

297 
	`LOCK
(
Àv
);

298 
Àv
->
íabÀd
 = 0;

299 
r
 = 
Àv
->
›s
->
	`dißbÀ
(lev);

300 
	`UNLOCK
(
Àv
);

301  
r
;

302 
	}
}

305 
	$evít_li°íî_íabÀ
(
evc⁄∆i°íî
 *
Àv
)

307 
evc⁄∆i°íî_evít
 *
Àv_e
 =

308 
	`EVUTIL_UPCAST
(
Àv
, 
evc⁄∆i°íî_evít
, 
ba£
);

309  
	`evít_add
(&
Àv_e
->
li°íî
, 
NULL
);

310 
	}
}

313 
	$evít_li°íî_dißbÀ
(
evc⁄∆i°íî
 *
Àv
)

315 
evc⁄∆i°íî_evít
 *
Àv_e
 =

316 
	`EVUTIL_UPCAST
(
Àv
, 
evc⁄∆i°íî_evít
, 
ba£
);

317  
	`evít_dñ
(&
Àv_e
->
li°íî
);

318 
	}
}

320 
evutû_sockë_t


321 
	$evc⁄∆i°íî_gë_fd
(
evc⁄∆i°íî
 *
Àv
)

323 
evutû_sockë_t
 
fd
;

324 
	`LOCK
(
Àv
);

325 
fd
 = 
Àv
->
›s
->
	`gëfd
(lev);

326 
	`UNLOCK
(
Àv
);

327  
fd
;

328 
	}
}

330 
evutû_sockë_t


331 
	$evít_li°íî_gëfd
(
evc⁄∆i°íî
 *
Àv
)

333 
evc⁄∆i°íî_evít
 *
Àv_e
 =

334 
	`EVUTIL_UPCAST
(
Àv
, 
evc⁄∆i°íî_evít
, 
ba£
);

335  
	`evít_gë_fd
(&
Àv_e
->
li°íî
);

336 
	}
}

338 
evít_ba£
 *

339 
	$evc⁄∆i°íî_gë_ba£
(
evc⁄∆i°íî
 *
Àv
)

341 
evít_ba£
 *
ba£
;

342 
	`LOCK
(
Àv
);

343 
ba£
 = 
Àv
->
›s
->
	`gëba£
(lev);

344 
	`UNLOCK
(
Àv
);

345  
ba£
;

346 
	}
}

348 
evít_ba£
 *

349 
	$evít_li°íî_gëba£
(
evc⁄∆i°íî
 *
Àv
)

351 
evc⁄∆i°íî_evít
 *
Àv_e
 =

352 
	`EVUTIL_UPCAST
(
Àv
, 
evc⁄∆i°íî_evít
, 
ba£
);

353  
	`evít_gë_ba£
(&
Àv_e
->
li°íî
);

354 
	}
}

357 
	$evc⁄∆i°íî_£t_cb
(
evc⁄∆i°íî
 *
Àv
,

358 
evc⁄∆i°íî_cb
 
cb
, *
¨g
)

360 
íabÀ
 = 0;

361 
	`LOCK
(
Àv
);

362 i‡(
Àv
->
íabÀd
 && !Àv->
cb
)

363 
íabÀ
 = 1;

364 
Àv
->
cb
 = cb;

365 
Àv
->
u£r_d©a
 = 
¨g
;

366 i‡(
íabÀ
)

367 
	`evc⁄∆i°íî_íabÀ
(
Àv
);

368 
	`UNLOCK
(
Àv
);

369 
	}
}

372 
	$evc⁄∆i°íî_£t_îr‹_cb
(
evc⁄∆i°íî
 *
Àv
,

373 
evc⁄∆i°íî_îr‹cb
 
îr‹cb
)

375 
	`LOCK
(
Àv
);

376 
Àv
->
îr‹cb
 =Érrorcb;

377 
	`UNLOCK
(
Àv
);

378 
	}
}

381 
	$li°íî_ªad_cb
(
evutû_sockë_t
 
fd
, 
wh©
, *
p
)

383 
evc⁄∆i°íî
 *
Àv
 = 
p
;

384 
îr
;

385 
evc⁄∆i°íî_cb
 
cb
;

386 
evc⁄∆i°íî_îr‹cb
 
îr‹cb
;

387 *
u£r_d©a
;

388 
	`LOCK
(
Àv
);

390 
sockaddr_°‹age
 
ss
;

391 #ifde‡
WIN32


392 
sockÀn
 = (
ss
);

394 
sockÀn_t
 
sockÀn
 = (
ss
);

396 
evutû_sockë_t
 
√w_fd
 = 
	`ac˚±
(
fd
, (
sockaddr
*)&
ss
, &
sockÀn
);

397 i‡(
√w_fd
 < 0)

399 i‡(
sockÀn
 == 0) {

402 
	`evutû_˛o£sockë
(
√w_fd
);

406 i‡(!(
Àv
->
Êags
 & 
LEV_OPT_LEAVE_SOCKETS_BLOCKING
))

407 
	`evutû_make_sockë_n⁄blockög
(
√w_fd
);

409 i‡(
Àv
->
cb
 =
NULL
) {

410 
	`UNLOCK
(
Àv
);

413 ++
Àv
->
ªf˙t
;

414 
cb
 = 
Àv
->cb;

415 
u£r_d©a
 = 
Àv
->user_data;

416 
	`UNLOCK
(
Àv
);

417 
	`cb
(
Àv
, 
√w_fd
, (
sockaddr
*)&
ss
, ()
sockÀn
,

418 
u£r_d©a
);

419 
	`LOCK
(
Àv
);

420 i‡(
Àv
->
ªf˙t
 == 1) {

421 
‰ìd
 = 
	`li°íî_de¸ef_™d_u∆ock
(
Àv
);

422 
	`EVUTIL_ASSERT
(
‰ìd
);

425 --
Àv
->
ªf˙t
;

427 
îr
 = 
	`evutû_sockë_gëîr‹
(
fd
);

428 i‡(
	`EVUTIL_ERR_ACCEPT_RETRIABLE
(
îr
)) {

429 
	`UNLOCK
(
Àv
);

432 i‡(
Àv
->
îr‹cb
 !
NULL
) {

433 ++
Àv
->
ªf˙t
;

434 
îr‹cb
 = 
Àv
->errorcb;

435 
u£r_d©a
 = 
Àv
->user_data;

436 
	`UNLOCK
(
Àv
);

437 
	`îr‹cb
(
Àv
, 
u£r_d©a
);

438 
	`LOCK
(
Àv
);

439 
	`li°íî_de¸ef_™d_u∆ock
(
Àv
);

441 
	`evít_sock_w¨n
(
fd
, "Error fromáccept() call");

443 
	}
}

445 #ifde‡
WIN32


446 
	sac˚±ög_sockë
 {

447 
CRITICAL_SECTION
 
	mlock
;

448 
evít_ovîœµed
 
	movîœµed
;

449 
SOCKET
 
	ms
;

450 
	mîr‹
;

451 
de„ºed_cb
 
	mde„ºed
;

452 
evc⁄∆i°íî_io˝
 *
	mÀv
;

453 
ev_uöt8_t
 
	mbuÊí
;

454 
ev_uöt8_t
 
	mÁmûy
;

455 
	m‰ì_⁄_cb
:1;

456 
	maddrbuf
[1];

459 
ac˚±ed_sockë_cb
(
evít_ovîœµed
 *
o
, 
ev_uöçå_t
 
key
,

460 
ev_ssize_t
 
n
, 
ok
);

461 
ac˚±ed_sockë_övoke_u£r_cb
(
de„ºed_cb
 *
cb
, *
¨g
);

464 
	$io˝_li°íî_evít_add
(
evc⁄∆i°íî_io˝
 *
Àv
)

466 i‡(
Àv
->
evít_added
)

469 
Àv
->
evít_added
 = 1;

470 
	`evít_ba£_add_vútuÆ
(
Àv
->
evít_ba£
);

471 
	}
}

474 
	$io˝_li°íî_evít_dñ
(
evc⁄∆i°íî_io˝
 *
Àv
)

476 i‡(!
Àv
->
evít_added
)

479 
Àv
->
evít_added
 = 0;

480 
	`evít_ba£_dñ_vútuÆ
(
Àv
->
evít_ba£
);

481 
	}
}

483 
ac˚±ög_sockë
 *

484 
	$√w_ac˚±ög_sockë
(
evc⁄∆i°íî_io˝
 *
Àv
, 
Ámûy
)

486 
ac˚±ög_sockë
 *
ªs
;

487 
addæí
;

488 
buÊí
;

490 i‡(
Ámûy
 =
AF_INET
)

491 
addæí
 = (
sockaddr_ö
);

492 i‡(
Ámûy
 =
AF_INET6
)

493 
addæí
 = (
sockaddr_ö6
);

495  
NULL
;

496 
buÊí
 = (
addæí
+16)*2;

498 
ªs
 = 
	`mm_ˇŒoc
(1,(
ac˚±ög_sockë
)-1+
buÊí
);

499 i‡(!
ªs
)

500  
NULL
;

502 
	`evít_ovîœµed_öô
(&
ªs
->
ovîœµed
, 
ac˚±ed_sockë_cb
);

503 
ªs
->
s
 = 
INVALID_SOCKET
;

504 
ªs
->
Àv
 =Üev;

505 
ªs
->
buÊí
 = buflen;

506 
ªs
->
Ámûy
 = family;

508 
	`evít_de„ºed_cb_öô
(&
ªs
->
de„ºed
,

509 
ac˚±ed_sockë_övoke_u£r_cb
, 
ªs
);

511 
	`InôülizeCrôiˇlSe˘i⁄AndSpöCou¡
(&
ªs
->
lock
, 1000);

513  
ªs
;

514 
	}
}

517 
	$‰ì_™d_u∆ock_ac˚±ög_sockë
(
ac˚±ög_sockë
 *
as
)

520 i‡(
as
->
s
 !
INVALID_SOCKET
)

521 
	`˛o£sockë
(
as
->
s
);

523 
	`LóveCrôiˇlSe˘i⁄
(&
as
->
lock
);

524 
	`DñëeCrôiˇlSe˘i⁄
(&
as
->
lock
);

525 
	`mm_‰ì
(
as
);

526 
	}
}

529 
	$°¨t_ac˚±ög
(
ac˚±ög_sockë
 *
as
)

532 c⁄° 
wö32_exãnsi⁄_‚s
 *
ext
 = 
	`evít_gë_wö32_exãnsi⁄_‚s
();

533 
DWORD
 
≥ndög
 = 0;

534 
SOCKET
 
s
 = 
	`sockë
(
as
->
Ámûy
, 
SOCK_STREAM
, 0);

535 
îr‹
 = 0;

537 i‡(!
as
->
Àv
->
ba£
.
íabÀd
)

540 i‡(
s
 =
INVALID_SOCKET
) {

541 
îr‹
 = 
	`WSAGëLa°Eº‹
();

542 
ªp‹t_îr
;

547 
	`£tsock›t
(
s
, 
SOL_SOCKET
, 
SO_UPDATE_ACCEPT_CONTEXT
,

548 (*)&
as
->
Àv
->
fd
, (&as->lev->fd));

550 i‡(!(
as
->
Àv
->
ba£
.
Êags
 & 
LEV_OPT_LEAVE_SOCKETS_BLOCKING
))

551 
	`evutû_make_sockë_n⁄blockög
(
s
);

553 i‡(
	`evít_io˝_p‹t_assocüã
(
as
->
Àv
->
p‹t
, 
s
, 1) < 0) {

554 
	`˛o£sockë
(
s
);

558 
as
->
s
 = s;

560 i‡(
ext
->
	`Ac˚±Ex
(
as
->
Àv
->
fd
, 
s
,ás->
addrbuf
, 0,

561 
as
->
buÊí
/2,ás->buÊí/2, &
≥ndög
, &as->
ovîœµed
.overlapped))

564 
	`ac˚±ed_sockë_cb
(&
as
->
ovîœµed
, 1, 0, 1);

566 
îr‹
 = 
	`WSAGëLa°Eº‹
();

567 i‡(
îr‹
 !
ERROR_IO_PENDING
) {

568 
ªp‹t_îr
;

574 
ªp‹t_îr
:

575 
as
->
îr‹
 =Érror;

576 
	`evít_de„ºed_cb_scheduÀ
(

577 
	`evít_ba£_gë_de„ºed_cb_queue
(
as
->
Àv
->
evít_ba£
),

578 &
as
->
de„ºed
);

580 
	}
}

583 
	$°›_ac˚±ög
(
ac˚±ög_sockë
 *
as
)

586 
SOCKET
 
s
 = 
as
->s;

587 
as
->
s
 = 
INVALID_SOCKET
;

588 
	`˛o£sockë
(
s
);

589 
	}
}

592 
	$ac˚±ed_sockë_övoke_u£r_cb
(
de„ºed_cb
 *
dcb
, *
¨g
)

594 
ac˚±ög_sockë
 *
as
 = 
¨g
;

596 
sockaddr
 *
ß_loˇl
=
NULL
, *
ß_ªmŸe
=NULL;

597 
sockÀn_loˇl
=0, 
sockÀn_ªmŸe
=0;

598 c⁄° 
wö32_exãnsi⁄_‚s
 *
ext
 = 
	`evít_gë_wö32_exãnsi⁄_‚s
();

599 
evc⁄∆i°íî
 *
Àv
 = &
as
->Àv->
ba£
;

600 
evutû_sockë_t
 
sock
=-1;

601 *
d©a
;

602 
evc⁄∆i°íî_cb
 
cb
=
NULL
;

603 
evc⁄∆i°íî_îr‹cb
 
îr‹cb
=
NULL
;

604 
îr‹
;

606 
	`EVUTIL_ASSERT
(
ext
->
GëAc˚±ExSockaddrs
);

608 
	`LOCK
(
Àv
);

609 
	`E¡îCrôiˇlSe˘i⁄
(&
as
->
lock
);

610 i‡(
as
->
‰ì_⁄_cb
) {

611 
	`‰ì_™d_u∆ock_ac˚±ög_sockë
(
as
);

612 
	`li°íî_de¸ef_™d_u∆ock
(
Àv
);

616 ++
Àv
->
ªf˙t
;

618 
îr‹
 = 
as
->error;

619 i‡(
îr‹
) {

620 
as
->
îr‹
 = 0;

621 
îr‹cb
 = 
Àv
->errorcb;

623 
ext
->
	`GëAc˚±ExSockaddrs
(

624 
as
->
addrbuf
, 0,ás->
buÊí
/2,ás->buflen/2,

625 &
ß_loˇl
, &
sockÀn_loˇl
, &
ß_ªmŸe
,

626 &
sockÀn_ªmŸe
);

627 
sock
 = 
as
->
s
;

628 
cb
 = 
Àv
->cb;

629 
as
->
s
 = 
INVALID_SOCKET
;

634 
	`£tsock›t
(
sock
, 
SOL_SOCKET
, 
SO_UPDATE_ACCEPT_CONTEXT
,

635 (*)&
as
->
Àv
->
fd
, (&as->lev->fd));

637 
d©a
 = 
Àv
->
u£r_d©a
;

639 
	`LóveCrôiˇlSe˘i⁄
(&
as
->
lock
);

640 
	`UNLOCK
(
Àv
);

642 i‡(
îr‹cb
) {

643 
	`WSASëLa°Eº‹
(
îr‹
);

644 
	`îr‹cb
(
Àv
, 
d©a
);

645 } i‡(
cb
) {

646 
	`cb
(
Àv
, 
sock
, 
ß_ªmŸe
, 
sockÀn_ªmŸe
, 
d©a
);

649 
	`LOCK
(
Àv
);

650 i‡(
	`li°íî_de¸ef_™d_u∆ock
(
Àv
))

653 
	`E¡îCrôiˇlSe˘i⁄
(&
as
->
lock
);

654 
	`°¨t_ac˚±ög
(
as
);

655 
	`LóveCrôiˇlSe˘i⁄
(&
as
->
lock
);

656 
	}
}

659 
	$ac˚±ed_sockë_cb
(
evít_ovîœµed
 *
o
, 
ev_uöçå_t
 
key
, 
ev_ssize_t
 
n
, 
ok
)

661 
ac˚±ög_sockë
 *
as
 =

662 
	`EVUTIL_UPCAST
(
o
, 
ac˚±ög_sockë
, 
ovîœµed
);

664 
	`LOCK
(&
as
->
Àv
->
ba£
);

665 
	`E¡îCrôiˇlSe˘i⁄
(&
as
->
lock
);

666 i‡(
ok
) {

668 
	`evít_de„ºed_cb_scheduÀ
(

669 
	`evít_ba£_gë_de„ºed_cb_queue
(
as
->
Àv
->
evít_ba£
),

670 &
as
->
de„ºed
);

671 
	`LóveCrôiˇlSe˘i⁄
(&
as
->
lock
);

672 } i‡(
as
->
‰ì_⁄_cb
) {

673 
evc⁄∆i°íî
 *
Àv
 = &
as
->Àv->
ba£
;

674 
	`‰ì_™d_u∆ock_ac˚±ög_sockë
(
as
);

675 
	`li°íî_de¸ef_™d_u∆ock
(
Àv
);

677 } i‡(
as
->
s
 =
INVALID_SOCKET
) {

679 
	`LóveCrôiˇlSe˘i⁄
(&
as
->
lock
);

682 
BOOL
 
ok
;

683 
DWORD
 
å™s„r
 = 0, 
Êags
=0;

684 
	`evít_sock_w¨n
(
as
->
s
, "UnexpectedÉrror on AcceptEx");

685 
ok
 = 
	`WSAGëOvîœµedResu…
(
as
->
s
, &
o
->
ovîœµed
,

686 &
å™s„r
, 
FALSE
, &
Êags
);

687 i‡(
ok
) {

689 
as
->
îr‹
 = 1;

691 
as
->
îr‹
 = 
	`WSAGëLa°Eº‹
();

693 
	`evít_de„ºed_cb_scheduÀ
(

694 
	`evít_ba£_gë_de„ºed_cb_queue
(
as
->
Àv
->
evít_ba£
),

695 &
as
->
de„ºed
);

696 
	`LóveCrôiˇlSe˘i⁄
(&
as
->
lock
);

698 
	`UNLOCK
(&
as
->
Àv
->
ba£
);

699 
	}
}

702 
	$io˝_li°íî_íabÀ
(
evc⁄∆i°íî
 *
Àv
)

704 
i
;

705 
evc⁄∆i°íî_io˝
 *
Àv_io˝
 =

706 
	`EVUTIL_UPCAST
(
Àv
, 
evc⁄∆i°íî_io˝
, 
ba£
);

708 
	`LOCK
(
Àv
);

709 
	`io˝_li°íî_evít_add
(
Àv_io˝
);

710 
i
 = 0; i < 
Àv_io˝
->
n_ac˚±ög
; ++i) {

711 
ac˚±ög_sockë
 *
as
 = 
Àv_io˝
->
ac˚±ög
[
i
];

712 i‡(!
as
)

714 
	`E¡îCrôiˇlSe˘i⁄
(&
as
->
lock
);

715 i‡(!
as
->
‰ì_⁄_cb
 &&ás->
s
 =
INVALID_SOCKET
)

716 
	`°¨t_ac˚±ög
(
as
);

717 
	`LóveCrôiˇlSe˘i⁄
(&
as
->
lock
);

719 
	`UNLOCK
(
Àv
);

721 
	}
}

724 
	$io˝_li°íî_dißbÀ_im∂
(
evc⁄∆i°íî
 *
Àv
, 
shutdown
)

726 
i
;

727 
evc⁄∆i°íî_io˝
 *
Àv_io˝
 =

728 
	`EVUTIL_UPCAST
(
Àv
, 
evc⁄∆i°íî_io˝
, 
ba£
);

730 
	`LOCK
(
Àv
);

731 
	`io˝_li°íî_evít_dñ
(
Àv_io˝
);

732 
i
 = 0; i < 
Àv_io˝
->
n_ac˚±ög
; ++i) {

733 
ac˚±ög_sockë
 *
as
 = 
Àv_io˝
->
ac˚±ög
[
i
];

734 i‡(!
as
)

736 
	`E¡îCrôiˇlSe˘i⁄
(&
as
->
lock
);

737 i‡(!
as
->
‰ì_⁄_cb
 &&ás->
s
 !
INVALID_SOCKET
) {

738 i‡(
shutdown
)

739 
as
->
‰ì_⁄_cb
 = 1;

740 
	`°›_ac˚±ög
(
as
);

742 
	`LóveCrôiˇlSe˘i⁄
(&
as
->
lock
);

745 i‡(
shutdown
 && 
Àv
->
Êags
 & 
LEV_OPT_CLOSE_ON_FREE
)

746 
	`evutû_˛o£sockë
(
Àv_io˝
->
fd
);

748 
	`UNLOCK
(
Àv
);

750 
	}
}

753 
	$io˝_li°íî_dißbÀ
(
evc⁄∆i°íî
 *
Àv
)

755  
	`io˝_li°íî_dißbÀ_im∂
(
Àv
,0);

756 
	}
}

759 
	$io˝_li°íî_de°roy
(
evc⁄∆i°íî
 *
Àv
)

761 
evc⁄∆i°íî_io˝
 *
Àv_io˝
 =

762 
	`EVUTIL_UPCAST
(
Àv
, 
evc⁄∆i°íî_io˝
, 
ba£
);

764 i‡(! 
Àv_io˝
->
shuâög_down
) {

765 
Àv_io˝
->
shuâög_down
 = 1;

766 
	`io˝_li°íî_dißbÀ_im∂
(
Àv
,1);

769 
	}
}

771 
evutû_sockë_t


772 
	$io˝_li°íî_gëfd
(
evc⁄∆i°íî
 *
Àv
)

774 
evc⁄∆i°íî_io˝
 *
Àv_io˝
 =

775 
	`EVUTIL_UPCAST
(
Àv
, 
evc⁄∆i°íî_io˝
, 
ba£
);

776  
Àv_io˝
->
fd
;

777 
	}
}

778 
evít_ba£
 *

779 
	$io˝_li°íî_gëba£
(
evc⁄∆i°íî
 *
Àv
)

781 
evc⁄∆i°íî_io˝
 *
Àv_io˝
 =

782 
	`EVUTIL_UPCAST
(
Àv
, 
evc⁄∆i°íî_io˝
, 
ba£
);

783  
Àv_io˝
->
evít_ba£
;

784 
	}
}

786 c⁄° 
evc⁄∆i°íî_›s
 
	gevc⁄∆i°íî_io˝_›s
 = {

787 
io˝_li°íî_íabÀ
,

788 
io˝_li°íî_dißbÀ
,

789 
io˝_li°íî_de°roy
,

790 
io˝_li°íî_de°roy
,

791 
io˝_li°íî_gëfd
,

792 
io˝_li°íî_gëba£


796 
	#N_SOCKETS_PER_LISTENER
 4

	)

798 
evc⁄∆i°íî
 *

799 
	$evc⁄∆i°íî_√w_async
(
evít_ba£
 *
ba£
,

800 
evc⁄∆i°íî_cb
 
cb
, *
±r
, 
Êags
, 
backlog
,

801 
evutû_sockë_t
 
fd
)

803 
sockaddr_°‹age
 
ss
;

804 
sockÀn
 = (
ss
);

805 
evc⁄∆i°íî_io˝
 *
Àv
;

806 
i
;

808 
Êags
 |
LEV_OPT_THREADSAFE
;

810 i‡(!
ba£
 || !
	`evít_ba£_gë_io˝
(base))

811 
îr
;

814 i‡(
backlog
 > 0) {

815 i‡(
	`li°í
(
fd
, 
backlog
) < 0)

816 
îr
;

817 } i‡(
backlog
 < 0) {

818 i‡(
	`li°í
(
fd
, 128) < 0)

819 
îr
;

821 i‡(
	`gësock«me
(
fd
, (
sockaddr
*)&
ss
, &
sockÀn
)) {

822 
	`evít_sock_w¨n
(
fd
, "getsockname");

823 
îr
;

825 
Àv
 = 
	`mm_ˇŒoc
(1, (
evc⁄∆i°íî_io˝
));

826 i‡(!
Àv
) {

827 
	`evít_w¨n
("calloc");

828 
îr
;

830 
Àv
->
ba£
.
›s
 = &
evc⁄∆i°íî_io˝_›s
;

831 
Àv
->
ba£
.
cb
 = cb;

832 
Àv
->
ba£
.
u£r_d©a
 = 
±r
;

833 
Àv
->
ba£
.
Êags
 = flags;

834 
Àv
->
ba£
.
ªf˙t
 = 1;

835 
Àv
->
ba£
.
íabÀd
 = 1;

837 
Àv
->
p‹t
 = 
	`evít_ba£_gë_io˝
(
ba£
);

838 
Àv
->
fd
 = fd;

839 
Àv
->
evít_ba£
 = 
ba£
;

842 i‡(
	`evít_io˝_p‹t_assocüã
(
Àv
->
p‹t
, 
fd
, 1) < 0)

843 
îr_‰ì_Àv
;

845 
	`EVTHREAD_ALLOC_LOCK
(
Àv
->
ba£
.
lock
, 
EVTHREAD_LOCKTYPE_RECURSIVE
);

847 
Àv
->
n_ac˚±ög
 = 
N_SOCKETS_PER_LISTENER
;

848 
Àv
->
ac˚±ög
 = 
	`mm_ˇŒoc
÷ev->
n_ac˚±ög
,

849 (
ac˚±ög_sockë
 *));

850 i‡(!
Àv
->
ac˚±ög
) {

851 
	`evít_w¨n
("calloc");

852 
îr_dñëe_lock
;

854 
i
 = 0; i < 
Àv
->
n_ac˚±ög
; ++i) {

855 
Àv
->
ac˚±ög
[
i
] = 
	`√w_ac˚±ög_sockë
÷ev, 
ss
.
ss_Ámûy
);

856 i‡(!
Àv
->
ac˚±ög
[
i
]) {

857 
	`evít_w¨nx
("Couldn't createáccepting socket");

858 
îr_‰ì_ac˚±ög
;

860 i‡(
cb
 && 
	`°¨t_ac˚±ög
(
Àv
->
ac˚±ög
[
i
]) < 0) {

861 
	`evít_w¨nx
("Couldn't startáccepting on socket");

862 
	`E¡îCrôiˇlSe˘i⁄
(&
Àv
->
ac˚±ög
[
i
]->
lock
);

863 
	`‰ì_™d_u∆ock_ac˚±ög_sockë
(
Àv
->
ac˚±ög
[
i
]);

864 
îr_‰ì_ac˚±ög
;

866 ++
Àv
->
ba£
.
ªf˙t
;

869 
	`io˝_li°íî_evít_add
(
Àv
);

871  &
Àv
->
ba£
;

873 
îr_‰ì_ac˚±ög
:

874 
	`mm_‰ì
(
Àv
->
ac˚±ög
);

876 
îr_dñëe_lock
:

877 
	`EVTHREAD_FREE_LOCK
(
Àv
->
ba£
.
lock
, 
EVTHREAD_LOCKTYPE_RECURSIVE
);

878 
îr_‰ì_Àv
:

879 
	`mm_‰ì
(
Àv
);

880 
îr
:

882  
NULL
;

883 
	}
}

	@log-internal.h

27 #i‚de‡
_LOG_H_


28 
	#_LOG_H_


	)

30 
	~"evít2/utû.h
"

32 #ifde‡
__GNUC__


33 
	#EV_CHECK_FMT
(
a
,
b
Ë
	`__©åibuã__
((
	`f‹m©
(
¥ötf
,á, b)))

	)

34 
	#EV_NORETURN
 
	`__©åibuã__
((
n‹ëu∫
))

	)

36 
	#EV_CHECK_FMT
(
a
,
b
)

	)

37 
	#EV_NORETURN


	)

40 
	#_EVENT_ERR_ABORT
 (()0xdóddód)

	)

42 
	$evít_îr
(
evÆ
, c⁄° *
fmt
, ...Ë
	$EV_CHECK_FMT
(2,3Ë
EV_NORETURN
;

43 
	$evít_w¨n
(c⁄° *
fmt
, ...Ë
	`EV_CHECK_FMT
(1,2);

44 
	$evít_sock_îr
(
evÆ
, 
evutû_sockë_t
 
sock
, c⁄° *
fmt
, ...Ë
	$EV_CHECK_FMT
(3,4Ë
EV_NORETURN
;

45 
	$evít_sock_w¨n
(
evutû_sockë_t
 
sock
, c⁄° *
fmt
, ...Ë
	`EV_CHECK_FMT
(2,3);

46 
	$evít_îrx
(
evÆ
, c⁄° *
fmt
, ...Ë
	$EV_CHECK_FMT
(2,3Ë
EV_NORETURN
;

47 
	$evít_w¨nx
(c⁄° *
fmt
, ...Ë
	`EV_CHECK_FMT
(1,2);

48 
	$evít_msgx
(c⁄° *
fmt
, ...Ë
	`EV_CHECK_FMT
(1,2);

49 
	$_evít_debugx
(c⁄° *
fmt
, ...Ë
	`EV_CHECK_FMT
(1,2);

51 #ifde‡
USE_DEBUG


52 
	#evít_debug
(
x
Ë
_evít_debugx
 
	)
x

54 
	#evít_debug
(
x
Ëdÿ{;
	}
} 0)

	)

57 #unde‡
EV_CHECK_FMT


	@log.c

40 
	~"evít2/evít-c⁄fig.h
"

42 #ifde‡
WIN32


43 
	~<wösock2.h
>

44 
	#WIN32_LEAN_AND_MEAN


	)

45 
	~<wödows.h
>

46 #unde‡
WIN32_LEAN_AND_MEAN


48 
	~<sys/ty≥s.h
>

49 
	~<°dio.h
>

50 
	~<°dlib.h
>

51 
	~<°d¨g.h
>

52 
	~<°rög.h
>

53 
	~<î∫o.h
>

54 
	~"evít2/evít.h
"

55 
	~"evít2/utû.h
"

57 
	~"log-öã∫Æ.h
"

59 
_w¨n_hñ≥r
(
£vîôy
, c⁄° *
îr°r
, c⁄° *
fmt
,

60 
va_li°
 
≠
);

61 
evít_log
(
£vîôy
, c⁄° *
msg
);

62 
	$evít_exô
(
îrcode
Ë
EV_NORETURN
;

64 
evít_Áèl_cb
 
Áèl_‚
 = 
NULL
;

67 
	$evít_£t_Áèl_ˇŒback
(
evít_Áèl_cb
 
cb
)

69 
Áèl_‚
 = 
cb
;

70 
	}
}

73 
	$evít_exô
(
îrcode
)

75 i‡(
Áèl_‚
) {

76 
	`Áèl_‚
(
îrcode
);

77 
	`exô
(
îrcode
);

78 } i‡(
îrcode
 =
_EVENT_ERR_ABORT
)

79 
	`ab‹t
();

81 
	`exô
(
îrcode
);

82 
	}
}

85 
	$evít_îr
(
evÆ
, c⁄° *
fmt
, ...)

87 
va_li°
 
≠
;

89 
	`va_°¨t
(
≠
, 
fmt
);

90 
	`_w¨n_hñ≥r
(
_EVENT_LOG_ERR
, 
	`°ªº‹
(
î∫o
), 
fmt
, 
≠
);

91 
	`va_íd
(
≠
);

92 
	`evít_exô
(
evÆ
);

93 
	}
}

96 
	$evít_w¨n
(c⁄° *
fmt
, ...)

98 
va_li°
 
≠
;

100 
	`va_°¨t
(
≠
, 
fmt
);

101 
	`_w¨n_hñ≥r
(
_EVENT_LOG_WARN
, 
	`°ªº‹
(
î∫o
), 
fmt
, 
≠
);

102 
	`va_íd
(
≠
);

103 
	}
}

106 
	$evít_sock_îr
(
evÆ
, 
evutû_sockë_t
 
sock
, c⁄° *
fmt
, ...)

108 
va_li°
 
≠
;

109 
îr
 = 
	`evutû_sockë_gëîr‹
(
sock
);

111 
	`va_°¨t
(
≠
, 
fmt
);

112 
	`_w¨n_hñ≥r
(
_EVENT_LOG_ERR
, 
	`evutû_sockë_îr‹_to_°rög
(
îr
), 
fmt
, 
≠
);

113 
	`va_íd
(
≠
);

114 
	`evít_exô
(
evÆ
);

115 
	}
}

118 
	$evít_sock_w¨n
(
evutû_sockë_t
 
sock
, c⁄° *
fmt
, ...)

120 
va_li°
 
≠
;

121 
îr
 = 
	`evutû_sockë_gëîr‹
(
sock
);

123 
	`va_°¨t
(
≠
, 
fmt
);

124 
	`_w¨n_hñ≥r
(
_EVENT_LOG_WARN
, 
	`evutû_sockë_îr‹_to_°rög
(
îr
), 
fmt
, 
≠
);

125 
	`va_íd
(
≠
);

126 
	}
}

129 
	$evít_îrx
(
evÆ
, c⁄° *
fmt
, ...)

131 
va_li°
 
≠
;

133 
	`va_°¨t
(
≠
, 
fmt
);

134 
	`_w¨n_hñ≥r
(
_EVENT_LOG_ERR
, 
NULL
, 
fmt
, 
≠
);

135 
	`va_íd
(
≠
);

136 
	`evít_exô
(
evÆ
);

137 
	}
}

140 
	$evít_w¨nx
(c⁄° *
fmt
, ...)

142 
va_li°
 
≠
;

144 
	`va_°¨t
(
≠
, 
fmt
);

145 
	`_w¨n_hñ≥r
(
_EVENT_LOG_WARN
, 
NULL
, 
fmt
, 
≠
);

146 
	`va_íd
(
≠
);

147 
	}
}

150 
	$evít_msgx
(c⁄° *
fmt
, ...)

152 
va_li°
 
≠
;

154 
	`va_°¨t
(
≠
, 
fmt
);

155 
	`_w¨n_hñ≥r
(
_EVENT_LOG_MSG
, 
NULL
, 
fmt
, 
≠
);

156 
	`va_íd
(
≠
);

157 
	}
}

160 
	$_evít_debugx
(c⁄° *
fmt
, ...)

162 
va_li°
 
≠
;

164 
	`va_°¨t
(
≠
, 
fmt
);

165 
	`_w¨n_hñ≥r
(
_EVENT_LOG_DEBUG
, 
NULL
, 
fmt
, 
≠
);

166 
	`va_íd
(
≠
);

167 
	}
}

170 
	$_w¨n_hñ≥r
(
£vîôy
, c⁄° *
îr°r
, c⁄° *
fmt
, 
va_li°
 
≠
)

172 
buf
[1024];

173 
size_t
 
Àn
;

175 i‡(
fmt
 !
NULL
)

176 
	`evutû_v¢¥ötf
(
buf
, (buf), 
fmt
, 
≠
);

178 
buf
[0] = '\0';

180 i‡(
îr°r
) {

181 
Àn
 = 
	`°æí
(
buf
);

182 i‡(
Àn
 < (
buf
) - 3) {

183 
	`evutû_¢¥ötf
(
buf
 + 
Àn
, (bufË-Üí, ": %s", 
îr°r
);

187 
	`evít_log
(
£vîôy
, 
buf
);

188 
	}
}

190 
evít_log_cb
 
	glog_‚
 = 
NULL
;

193 
	$evít_£t_log_ˇŒback
(
evít_log_cb
 
cb
)

195 
log_‚
 = 
cb
;

196 
	}
}

199 
	$evít_log
(
£vîôy
, c⁄° *
msg
)

201 i‡(
log_‚
)

202 
	`log_‚
(
£vîôy
, 
msg
);

204 c⁄° *
£vîôy_°r
;

205 
£vîôy
) {

206 
_EVENT_LOG_DEBUG
:

207 
£vîôy_°r
 = "debug";

209 
_EVENT_LOG_MSG
:

210 
£vîôy_°r
 = "msg";

212 
_EVENT_LOG_WARN
:

213 
£vîôy_°r
 = "warn";

215 
_EVENT_LOG_ERR
:

216 
£vîôy_°r
 = "err";

219 
£vîôy_°r
 = "???";

222 ()
	`Ârötf
(
°dîr
, "[%s] %s\n", 
£vîôy_°r
, 
msg
);

224 
	}
}

	@minheap-internal.h

28 #i‚de‡
_MIN_HEAP_H_


29 
	#_MIN_HEAP_H_


	)

31 
	~"evít2/evít-c⁄fig.h
"

32 
	~"evít2/evít.h
"

33 
	~"evít2/evít_°ru˘.h
"

34 
	~"evít2/utû.h
"

35 
	~"utû-öã∫Æ.h
"

36 
	~"mm-öã∫Æ.h
"

38 
	smö_hóp


40 
evít
** 
	mp
;

41 
	mn
, 
	ma
;

42 } 
	tmö_hóp_t
;

44 
ölöe
 
mö_hóp_˘‹
(
mö_hóp_t
* 
s
);

45 
ölöe
 
mö_hóp_dt‹
(
mö_hóp_t
* 
s
);

46 
ölöe
 
mö_hóp_ñem_öô
(
evít
* 
e
);

47 
ölöe
 
mö_hóp_ñt_is_t›
(c⁄° 
evít
 *
e
);

48 
ölöe
 
mö_hóp_ñem_gª©î
(
evít
 *
a
, evíà*
b
);

49 
ölöe
 
mö_hóp_em±y
(
mö_hóp_t
* 
s
);

50 
ölöe
 
mö_hóp_size
(
mö_hóp_t
* 
s
);

51 
ölöe
 
evít
* 
mö_hóp_t›
(
mö_hóp_t
* 
s
);

52 
ölöe
 
mö_hóp_ª£rve
(
mö_hóp_t
* 
s
, 
n
);

53 
ölöe
 
mö_hóp_push
(
mö_hóp_t
* 
s
, 
evít
* 
e
);

54 
ölöe
 
evít
* 
mö_hóp_p›
(
mö_hóp_t
* 
s
);

55 
ölöe
 
mö_hóp_îa£
(
mö_hóp_t
* 
s
, 
evít
* 
e
);

56 
ölöe
 
mö_hóp_shi·_up_
(
mö_hóp_t
* 
s
, 
hﬁe_ödex
, 
evít
* 
e
);

57 
ölöe
 
mö_hóp_shi·_down_
(
mö_hóp_t
* 
s
, 
hﬁe_ödex
, 
evít
* 
e
);

59 
	$mö_hóp_ñem_gª©î
(
evít
 *
a
, evíà*
b
)

61  
	`evutû_timîcmp
(&
a
->
ev_timeout
, &
b
->ev_timeout, >);

62 
	}
}

64 
	$mö_hóp_˘‹
(
mö_hóp_t
* 
s
Ë{ s->
p
 = 0; s->
n
 = 0; s->
a
 = 0; 
	}
}

65 
	$mö_hóp_dt‹
(
mö_hóp_t
* 
s
Ë{ i‡(s->
p
Ë
	`mm_‰ì
(s->p); 
	}
}

66 
	$mö_hóp_ñem_öô
(
evít
* 
e
Ë{É->
ev_timeout_pos
.
mö_hóp_idx
 = -1; 
	}
}

67 
	$mö_hóp_em±y
(
mö_hóp_t
* 
s
Ë{  0u =s->
n
; 
	}
}

68 
	$mö_hóp_size
(
mö_hóp_t
* 
s
Ë{  s->
n
; 
	}
}

69 
evít
* 
	$mö_hóp_t›
(
mö_hóp_t
* 
s
Ë{  s->
n
 ? *s->
p
 : 0; 
	}
}

71 
	$mö_hóp_push
(
mö_hóp_t
* 
s
, 
evít
* 
e
)

73 i‡(
	`mö_hóp_ª£rve
(
s
, s->
n
 + 1))

75 
	`mö_hóp_shi·_up_
(
s
, s->
n
++, 
e
);

77 
	}
}

79 
evít
* 
	$mö_hóp_p›
(
mö_hóp_t
* 
s
)

81 i‡(
s
->
n
)

83 
evít
* 
e
 = *
s
->
p
;

84 
	`mö_hóp_shi·_down_
(
s
, 0u, s->
p
[--s->
n
]);

85 
e
->
ev_timeout_pos
.
mö_hóp_idx
 = -1;

86  
e
;

89 
	}
}

91 
	$mö_hóp_ñt_is_t›
(c⁄° 
evít
 *
e
)

93  
e
->
ev_timeout_pos
.
mö_hóp_idx
 == 0;

94 
	}
}

96 
	$mö_hóp_îa£
(
mö_hóp_t
* 
s
, 
evít
* 
e
)

98 i‡(-1 !
e
->
ev_timeout_pos
.
mö_hóp_idx
)

100 
evít
 *
œ°
 = 
s
->
p
[--s->
n
];

101 
∑ª¡
 = (
e
->
ev_timeout_pos
.
mö_hóp_idx
 - 1) / 2;

107 i‡(
e
->
ev_timeout_pos
.
mö_hóp_idx
 > 0 && 
	`mö_hóp_ñem_gª©î
(
s
->
p
[
∑ª¡
], 
œ°
))

108 
	`mö_hóp_shi·_up_
(
s
, 
e
->
ev_timeout_pos
.
mö_hóp_idx
, 
œ°
);

110 
	`mö_hóp_shi·_down_
(
s
, 
e
->
ev_timeout_pos
.
mö_hóp_idx
, 
œ°
);

111 
e
->
ev_timeout_pos
.
mö_hóp_idx
 = -1;

115 
	}
}

117 
	$mö_hóp_ª£rve
(
mö_hóp_t
* 
s
, 
n
)

119 i‡(
s
->
a
 < 
n
)

121 
evít
** 
p
;

122 
a
 = 
s
->a ? s->a * 2 : 8;

123 i‡(
a
 < 
n
)

124 
a
 = 
n
;

125 i‡(!(
p
 = (
evít
**)
	`mm_ªÆloc
(
s
->p, 
a
 *  *p)))

127 
s
->
p
 =Ö;

128 
s
->
a
 =á;

131 
	}
}

133 
	$mö_hóp_shi·_up_
(
mö_hóp_t
* 
s
, 
hﬁe_ödex
, 
evít
* 
e
)

135 
∑ª¡
 = (
hﬁe_ödex
 - 1) / 2;

136 
hﬁe_ödex
 && 
	`mö_hóp_ñem_gª©î
(
s
->
p
[
∑ª¡
], 
e
))

138 (
s
->
p
[
hﬁe_ödex
] = s->p[
∑ª¡
])->
ev_timeout_pos
.
mö_hóp_idx
 = hole_index;

139 
hﬁe_ödex
 = 
∑ª¡
;

140 
∑ª¡
 = (
hﬁe_ödex
 - 1) / 2;

142 (
s
->
p
[
hﬁe_ödex
] = 
e
)->
ev_timeout_pos
.
mö_hóp_idx
 = hole_index;

143 
	}
}

145 
	$mö_hóp_shi·_down_
(
mö_hóp_t
* 
s
, 
hﬁe_ödex
, 
evít
* 
e
)

147 
mö_chûd
 = 2 * (
hﬁe_ödex
 + 1);

148 
mö_chûd
 <
s
->
n
)

150 
mö_chûd
 -mö_chûd =
s
->
n
 || 
	`mö_hóp_ñem_gª©î
(s->
p
[min_child], s->p[min_child - 1]);

151 i‡(!(
	`mö_hóp_ñem_gª©î
(
e
, 
s
->
p
[
mö_chûd
])))

153 (
s
->
p
[
hﬁe_ödex
] = s->p[
mö_chûd
])->
ev_timeout_pos
.
mö_hóp_idx
 = hole_index;

154 
hﬁe_ödex
 = 
mö_chûd
;

155 
mö_chûd
 = 2 * (
hﬁe_ödex
 + 1);

157 (
s
->
p
[
hﬁe_ödex
] = 
e
)->
ev_timeout_pos
.
mö_hóp_idx
 = hole_index;

158 
	}
}

	@mm-internal.h

26 #i‚de‡
_EVENT_MM_INTERNAL_H


27 
	#_EVENT_MM_INTERNAL_H


	)

29 
	~<sys/ty≥s.h
>

31 #ifde‡
__˝lu•lus


35 #i‚de‡
_EVENT_DISABLE_MM_REPLACEMENT


39 *
evít_mm_mÆloc_
(
size_t
 
sz
);

40 *
evít_mm_ˇŒoc_
(
size_t
 
cou¡
, size_à
size
);

41 *
evít_mm_°rdup_
(c⁄° *
s
);

42 *
evít_mm_ªÆloc_
(*
p
, 
size_t
 
sz
);

43 
evít_mm_‰ì_
(*
p
);

44 
	#mm_mÆloc
(
sz
Ë
	`evít_mm_mÆloc_
(sz)

	)

45 
	#mm_ˇŒoc
(
cou¡
, 
size
Ë
	`evít_mm_ˇŒoc_
((cou¡), (size))

	)

46 
	#mm_°rdup
(
s
Ë
	`evít_mm_°rdup_
(s)

	)

47 
	#mm_ªÆloc
(
p
, 
sz
Ë
	`evít_mm_ªÆloc_
(’), (sz))

	)

48 
	#mm_‰ì
(
p
Ë
	`evít_mm_‰ì_
’)

	)

50 
	#mm_mÆloc
(
sz
Ë
	`mÆloc
(sz)

	)

51 
	#mm_ˇŒoc
(
n
, 
sz
Ë
	`ˇŒoc
(“), (sz))

	)

52 
	#mm_°rdup
(
s
Ë
	`°rdup
(s)

	)

53 
	#mm_ªÆloc
(
p
, 
sz
Ë
	`ªÆloc
(’), (sz))

	)

54 
	#mm_‰ì
(
p
Ë
	`‰ì
’)

	)

57 #ifde‡
__˝lu•lus


	@poll.c

29 
	~"evít2/evít-c⁄fig.h
"

31 
	~<sys/ty≥s.h
>

32 #ifde‡
_EVENT_HAVE_SYS_TIME_H


33 
	~<sys/time.h
>

35 
	~<sys/queue.h
>

36 
	~<pﬁl.h
>

37 
	~<sig«l.h
>

38 
	~<limôs.h
>

39 
	~<°dio.h
>

40 
	~<°dlib.h
>

41 
	~<°rög.h
>

42 
	~<uni°d.h
>

43 
	~<î∫o.h
>

45 
	~"evít-öã∫Æ.h
"

46 
	~"evsig«l-öã∫Æ.h
"

47 
	~"log-öã∫Æ.h
"

48 
	~"evm≠-öã∫Æ.h
"

49 
	~"evít2/thªad.h
"

50 
	~"evthªad-öã∫Æ.h
"

52 
	spﬁlidx
 {

53 
	midx∂us1
;

56 
	spﬁl›
 {

57 
	mevít_cou¡
;

58 
	mnfds
;

59 
	mªÆloc_c›y
;

61 
pﬁlfd
 *
	mevít_£t
;

62 
pﬁlfd
 *
	mevít_£t_c›y
;

65 *
pﬁl_öô
(
evít_ba£
 *);

66 
pﬁl_add
(
evít_ba£
 *, , 
ﬁd
, 
evíts
, *
_idx
);

67 
pﬁl_dñ
(
evít_ba£
 *, , 
ﬁd
, 
evíts
, *
_idx
);

68 
pﬁl_di•©ch
(
evít_ba£
 *, 
timevÆ
 *);

69 
pﬁl_dóŒoc
(
evít_ba£
 *);

71 c⁄° 
evít›
 
	gpﬁl›s
 = {

73 
pﬁl_öô
,

74 
pﬁl_add
,

75 
pﬁl_dñ
,

76 
pﬁl_di•©ch
,

77 
pﬁl_dóŒoc
,

79 
EV_FEATURE_FDS
,

80 (
pﬁlidx
),

84 
	$pﬁl_öô
(
evít_ba£
 *
ba£
)

86 
pﬁl›
 *pollop;

88 i‡(!(
pﬁl›
 = 
	`mm_ˇŒoc
(1, (pollop))))

89  (
NULL
);

91 
	`evsig_öô
(
ba£
);

93  (
pﬁl›
);

94 
	}
}

96 #ifde‡
CHECK_INVARIANTS


98 
	$pﬁl_check_ok
(
pﬁl›
 *
p›
)

100 
i
, 
idx
;

101 
evít
 *
ev
;

103 
i
 = 0; i < 
p›
->
fd_cou¡
; ++i) {

104 
idx
 = 
p›
->
idx∂us1_by_fd
[
i
]-1;

105 i‡(
idx
 < 0)

107 
	`EVUTIL_ASSERT
(
p›
->
evít_£t
[
idx
].
fd
 =
i
);

109 
i
 = 0; i < 
p›
->
nfds
; ++i) {

110 
pﬁlfd
 *
pfd
 = &
p›
->
evít_£t
[
i
];

111 
	`EVUTIL_ASSERT
(
p›
->
idx∂us1_by_fd
[
pfd
->
fd
] =
i
+1);

113 
	}
}

115 
	#pﬁl_check_ok
(
p›
)

	)

119 
	$pﬁl_di•©ch
(
evít_ba£
 *
ba£
, 
timevÆ
 *
tv
)

121 
ªs
, 
i
, 
j
, 
nfds
;

122 
m£c
 = -1;

123 
pﬁl›
 *
p›
 = 
ba£
->
evba£
;

124 
pﬁlfd
 *
evít_£t
;

126 
	`pﬁl_check_ok
(
p›
);

128 
nfds
 = 
p›
->nfds;

130 #i‚de‡
_EVENT_DISABLE_THREAD_SUPPORT


131 i‡(
ba£
->
th_ba£_lock
) {

137 i‡(
p›
->
ªÆloc_c›y
) {

138 
pﬁlfd
 *
tmp
 = 
	`mm_ªÆloc
(
p›
->
evít_£t_c›y
,

139 
p›
->
evít_cou¡
 * (
pﬁlfd
));

140 i‡(
tmp
 =
NULL
) {

141 
	`evít_w¨n
("realloc");

144 
p›
->
evít_£t_c›y
 = 
tmp
;

145 
p›
->
ªÆloc_c›y
 = 0;

147 
	`mem˝y
(
p›
->
evít_£t_c›y
,Ö›->
evít_£t
,

148 (
pﬁlfd
)*
nfds
);

149 
evít_£t
 = 
p›
->
evít_£t_c›y
;

151 
evít_£t
 = 
p›
->event_set;

154 
evít_£t
 = 
p›
->event_set;

157 i‡(
tv
 !
NULL
) {

158 
m£c
 = 
	`evutû_tv_to_m£c
(
tv
);

159 i‡(
m£c
 < 0 || m£¯> 
INT_MAX
)

160 
m£c
 = 
INT_MAX
;

163 
	`EVBASE_RELEASE_LOCK
(
ba£
, 
th_ba£_lock
);

165 
ªs
 = 
	`pﬁl
(
evít_£t
, 
nfds
, 
m£c
);

167 
	`EVBASE_ACQUIRE_LOCK
(
ba£
, 
th_ba£_lock
);

169 i‡(
ªs
 == -1) {

170 i‡(
î∫o
 !
EINTR
) {

171 
	`evít_w¨n
("poll");

178 
	`evít_debug
(("%s:Öﬁ»ªp‹t†%d", 
__func__
, 
ªs
));

180 i‡(
ªs
 =0 || 
nfds
 == 0)

183 
i
 = 
	`øndom
(Ë% 
nfds
;

184 
j
 = 0; j < 
nfds
; j++) {

185 
wh©
;

186 i‡(++
i
 =
nfds
)

187 
i
 = 0;

188 
wh©
 = 
evít_£t
[
i
].
ªvíts
;

189 i‡(!
wh©
)

192 
ªs
 = 0;

195 i‡(
wh©
 & (
POLLHUP
|
POLLERR
))

196 
wh©
 |
POLLIN
|
POLLOUT
;

197 i‡(
wh©
 & 
POLLIN
)

198 
ªs
 |
EV_READ
;

199 i‡(
wh©
 & 
POLLOUT
)

200 
ªs
 |
EV_WRITE
;

201 i‡(
ªs
 == 0)

204 
	`evm≠_io_a˘ive
(
ba£
, 
evít_£t
[
i
].
fd
, 
ªs
);

208 
	}
}

211 
	$pﬁl_add
(
evít_ba£
 *
ba£
, 
fd
, 
ﬁd
, 
evíts
, *
_idx
)

213 
pﬁl›
 *
p›
 = 
ba£
->
evba£
;

214 
pﬁlfd
 *
pfd
 = 
NULL
;

215 
pﬁlidx
 *
idx
 = 
_idx
;

216 
i
;

218 
	`EVUTIL_ASSERT
((
evíts
 & 
EV_SIGNAL
) == 0);

219 i‡(!(
evíts
 & (
EV_READ
|
EV_WRITE
)))

222 
	`pﬁl_check_ok
(
p›
);

223 i‡(
p›
->
nfds
 + 1 >p›->
evít_cou¡
) {

224 
pﬁlfd
 *
tmp_evít_£t
;

225 
tmp_evít_cou¡
;

227 i‡(
p›
->
evít_cou¡
 < 32)

228 
tmp_evít_cou¡
 = 32;

230 
tmp_evít_cou¡
 = 
p›
->
evít_cou¡
 * 2;

233 
tmp_evít_£t
 = 
	`mm_ªÆloc
(
p›
->
evít_£t
,

234 
tmp_evít_cou¡
 * (
pﬁlfd
));

235 i‡(
tmp_evít_£t
 =
NULL
) {

236 
	`evít_w¨n
("realloc");

239 
p›
->
evít_£t
 = 
tmp_evít_£t
;

241 
p›
->
evít_cou¡
 = 
tmp_evít_cou¡
;

242 
p›
->
ªÆloc_c›y
 = 1;

245 
i
 = 
idx
->
idx∂us1
 - 1;

247 i‡(
i
 >= 0) {

248 
pfd
 = &
p›
->
evít_£t
[
i
];

250 
i
 = 
p›
->
nfds
++;

251 
pfd
 = &
p›
->
evít_£t
[
i
];

252 
pfd
->
evíts
 = 0;

253 
pfd
->
fd
 = fd;

254 
idx
->
idx∂us1
 = 
i
 + 1;

257 
pfd
->
ªvíts
 = 0;

258 i‡(
evíts
 & 
EV_WRITE
)

259 
pfd
->
evíts
 |
POLLOUT
;

260 i‡(
evíts
 & 
EV_READ
)

261 
pfd
->
evíts
 |
POLLIN
;

262 
	`pﬁl_check_ok
(
p›
);

265 
	}
}

272 
	$pﬁl_dñ
(
evít_ba£
 *
ba£
, 
fd
, 
ﬁd
, 
evíts
, *
_idx
)

274 
pﬁl›
 *
p›
 = 
ba£
->
evba£
;

275 
pﬁlfd
 *
pfd
 = 
NULL
;

276 
pﬁlidx
 *
idx
 = 
_idx
;

277 
i
;

279 
	`EVUTIL_ASSERT
((
evíts
 & 
EV_SIGNAL
) == 0);

280 i‡(!(
evíts
 & (
EV_READ
|
EV_WRITE
)))

283 
	`pﬁl_check_ok
(
p›
);

284 
i
 = 
idx
->
idx∂us1
 - 1;

285 i‡(
i
 < 0)

289 
pfd
 = &
p›
->
evít_£t
[
i
];

290 i‡(
evíts
 & 
EV_READ
)

291 
pfd
->
evíts
 &~
POLLIN
;

292 i‡(
evíts
 & 
EV_WRITE
)

293 
pfd
->
evíts
 &~
POLLOUT
;

294 
	`pﬁl_check_ok
(
p›
);

295 i‡(
pfd
->
evíts
)

300 
idx
->
idx∂us1
 = 0;

302 --
p›
->
nfds
;

303 i‡(
i
 !
p›
->
nfds
) {

308 
	`mem˝y
(&
p›
->
evít_£t
[
i
], &p›->evít_£t[p›->
nfds
],

309 (
pﬁlfd
));

310 
idx
 = 
	`evm≠_io_gë_fdöfo
(&
ba£
->
io
, 
p›
->
evít_£t
[
i
].
fd
);

311 
	`EVUTIL_ASSERT
(
idx
);

312 
	`EVUTIL_ASSERT
(
idx
->
idx∂us1
 =
p›
->
nfds
 + 1);

313 
idx
->
idx∂us1
 = 
i
 + 1;

316 
	`pﬁl_check_ok
(
p›
);

318 
	}
}

321 
	$pﬁl_dóŒoc
(
evít_ba£
 *
ba£
)

323 
pﬁl›
 *
p›
 = 
ba£
->
evba£
;

325 
	`evsig_dóŒoc
(
ba£
);

326 i‡(
p›
->
evít_£t
)

327 
	`mm_‰ì
(
p›
->
evít_£t
);

328 i‡(
p›
->
evít_£t_c›y
)

329 
	`mm_‰ì
(
p›
->
evít_£t_c›y
);

331 
	`mem£t
(
p›
, 0, (
pﬁl›
));

332 
	`mm_‰ì
(
p›
);

333 
	}
}

	@ratelim-internal.h

26 #i‚de‡
_RATELIM_INTERNAL_H_


27 
	#_RATELIM_INTERNAL_H_


	)

29 #ifde‡
__˝lu•lus


33 
	~"evít2/utû.h
"

38 
	sev_tokí_buckë
 {

41 
ev_ssize_t
 
ªad_limô
, 
wrôe_limô
;

44 
ev_uöt32_t
 
œ°_upd©ed
;

48 
	sev_tokí_buckë_cfg
 {

50 
size_t
 
ªad_øã
;

52 
size_t
 
ªad_maximum
;

54 
size_t
 
wrôe_øã
;

56 
size_t
 
wrôe_maximum
;

60 
timevÆ
 
tick_timeout
;

63 
m£c_≥r_tick
;

68 
ev_tokí_buckë_upd©e
(
ev_tokí_buckë
 *
buckë
,

69 c⁄° 
ev_tokí_buckë_cfg
 *
cfg
,

70 
ev_uöt32_t
 
cuºít_tick
);

74 
ev_uöt32_t
 
ev_tokí_buckë_gë_tick
(c⁄° 
timevÆ
 *
tv
,

75 c⁄° 
ev_tokí_buckë_cfg
 *
cfg
);

82 
ev_tokí_buckë_öô
(
ev_tokí_buckë
 *
buckë
,

83 c⁄° 
ev_tokí_buckë_cfg
 *
cfg
,

84 
ev_uöt32_t
 
cuºít_tick
,

85 
ªöôülize
);

87 
buf„ªvít_ªmove_‰om_øã_limô_group_öã∫Æ
(
buf„ªvít
 *
bev
,

88 
unsu•íd
);

91 
	#ev_tokí_buckë_de¸emít_ªad
(
b
,
n
) \

93 (
b
)->
ªad_limô
 -(
n
); \

94 } 0)

	)

96 
	#ev_tokí_buckë_de¸emít_wrôe
(
b
,
n
) \

98 (
b
)->
wrôe_limô
 -(
n
); \

99 } 0)

	)

101 #ifde‡
__˝lu•lus


	@sample/dns-example.c

8 
	~<evít2/evít-c⁄fig.h
>

11 
	~"../ùv6-öã∫Æ.h
"

13 
	~<sys/ty≥s.h
>

15 #ifde‡
WIN32


16 
	~<wösock2.h
>

17 
	~<ws2t˝ù.h
>

19 
	~<sys/sockë.h
>

20 
	~<√töë/ö.h
>

21 
	~<¨∑/öë.h
>

24 
	~<evít2/evít.h
>

25 
	~<evít2/dns.h
>

26 
	~<evít2/dns_°ru˘.h
>

27 
	~<evít2/utû.h
>

29 #ifde‡
_EVENT_HAVE_NETINET_IN6_H


30 
	~<√töë/ö6.h
>

33 
	~<°dio.h
>

34 
	~<°dlib.h
>

35 
	~<°rög.h
>

37 
	#u32
 
ev_uöt32_t


	)

38 
	#u8
 
ev_uöt8_t


	)

41 
	$debug_¡ﬂ
(
u32
 
addªss
)

43 
buf
[32];

44 
u32
 
a
 = 
	`¡ohl
(
addªss
);

45 
	`evutû_¢¥ötf
(
buf
, (buf), "%d.%d.%d.%d",

46 ()(
u8
)((
a
>>24)&0xff),

47 ()(
u8
)((
a
>>16)&0xff),

48 ()(
u8
)((
a
>>8 )&0xff),

49 ()(
u8
)((
a
 )&0xff));

50  
buf
;

51 
	}
}

54 
	$maö_ˇŒback
(
ªsu…
, 
ty≥
, 
cou¡
, 
âl
,

55 *
addrs
, *
‹ig
) {

56 *
n
 = (*)
‹ig
;

57 
i
;

58 
i
 = 0; i < 
cou¡
; ++i) {

59 i‡(
ty≥
 =
DNS_IPv4_A
) {

60 
	`¥ötf
("%s: %s\n", 
n
, 
	`debug_¡ﬂ
(((
u32
*)
addrs
)[
i
]));

61 } i‡(
ty≥
 =
DNS_PTR
) {

62 
	`¥ötf
("%s: %s\n", 
n
, ((**)
addrs
)[
i
]);

65 i‡(!
cou¡
) {

66 
	`¥ötf
("%s: Nÿ™swî (%d)\n", 
n
, 
ªsu…
);

68 
	`fÊush
(
°dout
);

69 
	}
}

72 
	$gai_ˇŒback
(
îr
, 
evutû_addröfo
 *
ai
, *
¨g
)

74 c⁄° *
«me
 = 
¨g
;

75 
i
;

76 i‡(
îr
) {

77 
	`¥ötf
("%s: %s\n", 
«me
, 
	`evutû_gai_°ªº‹
(
îr
));

79 i‡(
ai
 &&ái->
ai_ˇn⁄«me
)

80 
	`¥ötf
(" %†==> %s\n", 
«me
, 
ai
->
ai_ˇn⁄«me
);

81 
i
=0; 
ai
;áòai->
ai_√xt
, ++i) {

82 
buf
[128];

83 i‡(
ai
->
ai_Ámûy
 =
PF_INET
) {

84 
sockaddr_ö
 *
sö
 =

85 (
sockaddr_ö
*)
ai
->
ai_addr
;

86 
	`evutû_öë_¡›
(
AF_INET
, &
sö
->
sö_addr
, 
buf
,

87 (
buf
));

88 
	`¥ötf
("[%d] %s: %s\n",
i
,
«me
,
buf
);

90 
sockaddr_ö6
 *
sö6
 =

91 (
sockaddr_ö6
*)
ai
->
ai_addr
;

92 
	`evutû_öë_¡›
(
AF_INET6
, &
sö6
->
sö6_addr
, 
buf
,

93 (
buf
));

94 
	`¥ötf
("[%d] %s: %s\n",
i
,
«me
,
buf
);

97 
	}
}

100 
	$evdns_£rvî_ˇŒback
(
evdns_£rvî_ªque°
 *
ªq
, *
d©a
)

102 
i
, 
r
;

103 ()
d©a
;

106 
i
 = 0; i < 
ªq
->
nque°i⁄s
; ++i) {

107 
u32
 
™s
 = 
	`ht⁄l
(0xc0a80b0bUL);

108 i‡(
ªq
->
que°i⁄s
[
i
]->
ty≥
 =
EVDNS_TYPE_A
 &&

109 
ªq
->
que°i⁄s
[
i
]->
dns_que°i⁄_˛ass
 =
EVDNS_CLASS_INET
) {

110 
	`¥ötf
(" --Ñïlyög f‹ %†(A)\n", 
ªq
->
que°i⁄s
[
i
]->
«me
);

111 
r
 = 
	`evdns_£rvî_ªque°_add_a_ª∂y
(
ªq
,Ñeq->
que°i⁄s
[
i
]->
«me
,

112 1, &
™s
, 10);

113 i‡(
r
<0)

114 
	`¥ötf
("eeep, didn't work.\n");

115 } i‡(
ªq
->
que°i⁄s
[
i
]->
ty≥
 =
EVDNS_TYPE_PTR
 &&

116 
ªq
->
que°i⁄s
[
i
]->
dns_que°i⁄_˛ass
 =
EVDNS_CLASS_INET
) {

117 
	`¥ötf
(" --Ñïlyög f‹ %†(PTR)\n", 
ªq
->
que°i⁄s
[
i
]->
«me
);

118 
r
 = 
	`evdns_£rvî_ªque°_add_±r_ª∂y
(
ªq
, 
NULL
,Ñeq->
que°i⁄s
[
i
]->
«me
,

120 i‡(
r
<0)

121 
	`¥ötf
("ugh,ÇoÜuck");

123 
	`¥ötf
(" -- skùpög %†[%d %d]\n", 
ªq
->
que°i⁄s
[
i
]->
«me
,

124 
ªq
->
que°i⁄s
[
i
]->
ty≥
,Ñeq->que°i⁄s[i]->
dns_que°i⁄_˛ass
);

128 
r
 = 
	`evdns_£rvî_ªque°_ª•⁄d
(
ªq
, 0);

129 i‡(
r
<0)

130 
	`¥ötf
("eeek, couldn't sendÑeply.\n");

131 
	}
}

133 
	gvîbo£
 = 0;

136 
	$log‚
(
is_w¨n
, c⁄° *
msg
) {

137 i‡(!
is_w¨n
 && !
vîbo£
)

139 
	`Ârötf
(
°dîr
, "%s: %s\n", 
is_w¨n
?"WARN":"INFO", 
msg
);

140 
	}
}

143 
	$maö
(
c
, **
v
) {

144 
idx
;

145 
ªvî£
 = 0, 
£rvîã°
 = 0, 
u£_gëaddröfo
 = 0;

146 
evít_ba£
 *evít_ba£ = 
NULL
;

147 
evdns_ba£
 *evdns_ba£ = 
NULL
;

148 c⁄° *
ªsﬁv_c⁄f
 = 
NULL
;

149 i‡(
c
<2) {

150 
	`Ârötf
(
°dîr
, "sy¡ax: %†[-x] [-v] [-¯ªsﬁv.c⁄f] ho°«me\n", 
v
[0]);

151 
	`Ârötf
(
°dîr
, "sy¡ax: %†[-£rvîã°]\n", 
v
[0]);

154 
idx
 = 1;

155 
idx
 < 
c
 && 
v
[idx][0] == '-') {

156 i‡(!
	`°rcmp
(
v
[
idx
], "-x"))

157 
ªvî£
 = 1;

158 i‡(!
	`°rcmp
(
v
[
idx
], "-v"))

159 
vîbo£
 = 1;

160 i‡(!
	`°rcmp
(
v
[
idx
], "-g"))

161 
u£_gëaddröfo
 = 1;

162 i‡(!
	`°rcmp
(
v
[
idx
], "-servertest"))

163 
£rvîã°
 = 1;

164 i‡(!
	`°rcmp
(
v
[
idx
], "-c")) {

165 i‡(
idx
 + 1 < 
c
)

166 
ªsﬁv_c⁄f
 = 
v
[++
idx
];

168 
	`Ârötf
(
°dîr
, "-cÇeedsánárgument\n");

170 
	`Ârötf
(
°dîr
, "Unknow¿›ti⁄ %s\n", 
v
[
idx
]);

171 ++
idx
;

174 #ifde‡
WIN32


176 
WSADATA
 
WSAD©a
;

177 
	`WSASèπup
(0x101, &
WSAD©a
);

181 
evít_ba£
 = 
	`evít_ba£_√w
();

182 
evdns_ba£
 = 
	`evdns_ba£_√w
(
evít_ba£
, 0);

183 
	`evdns_£t_log_‚
(
log‚
);

185 i‡(
£rvîã°
) {

186 
evutû_sockë_t
 
sock
;

187 
sockaddr_ö
 
my_addr
;

188 
sock
 = 
	`sockë
(
PF_INET
, 
SOCK_DGRAM
, 0);

189 i‡(
sock
 == -1) {

190 
	`≥º‹
("socket");

191 
	`exô
(1);

193 
	`evutû_make_sockë_n⁄blockög
(
sock
);

194 
my_addr
.
sö_Ámûy
 = 
AF_INET
;

195 
my_addr
.
sö_p‹t
 = 
	`ht⁄s
(10053);

196 
my_addr
.
sö_addr
.
s_addr
 = 
INADDR_ANY
;

197 i‡(
	`böd
(
sock
, (
sockaddr
*)&
my_addr
, (my_addr))<0) {

198 
	`≥º‹
("bind");

199 
	`exô
(1);

201 
	`evdns_add_£rvî_p‹t_wôh_ba£
(
evít_ba£
, 
sock
, 0, 
evdns_£rvî_ˇŒback
, 
NULL
);

203 i‡(
idx
 < 
c
) {

204 
ªs
;

205 #ifde‡
WIN32


206 i‡(
ªsﬁv_c⁄f
 =
NULL
)

207 
ªs
 = 
	`evdns_ba£_c⁄fig_wödows_«me£rvîs
(
evdns_ba£
);

210 
ªs
 = 
	`evdns_ba£_ªsﬁv_c⁄f_∑r£
(
evdns_ba£
,

211 
DNS_OPTION_NAMESERVERS
,

212 
ªsﬁv_c⁄f
 ?Ñesolv_conf : "/etc/resolv.conf");

214 i‡(
ªs
 < 0) {

215 
	`Ârötf
(
°dîr
, "Couldn't configureÇameservers");

220 
	`¥ötf
("EVUTIL_AI_CANONNAME i¿exam∂ê%d\n", 
EVUTIL_AI_CANONNAME
);

221 ; 
idx
 < 
c
; ++idx) {

222 i‡(
ªvî£
) {

223 
ö_addr
 
addr
;

224 i‡(
	`evutû_öë_±⁄
(
AF_INET
, 
v
[
idx
], &
addr
)!=1) {

225 
	`Ârötf
(
°dîr
, "SkùpögÇ⁄-IP %s\n", 
v
[
idx
]);

228 
	`Ârötf
(
°dîr
, "ªsﬁvög %s...\n",
v
[
idx
]);

229 
	`evdns_ba£_ªsﬁve_ªvî£
(
evdns_ba£
, &
addr
, 0, 
maö_ˇŒback
, 
v
[
idx
]);

230 } i‡(
u£_gëaddröfo
) {

231 
evutû_addröfo
 
höts
;

232 
	`mem£t
(&
höts
, 0, (hints));

233 
höts
.
ai_Ámûy
 = 
PF_UNSPEC
;

234 
höts
.
ai_¥Ÿocﬁ
 = 
IPPROTO_TCP
;

235 
höts
.
ai_Êags
 = 
EVUTIL_AI_CANONNAME
;

236 
	`Ârötf
(
°dîr
, "ªsﬁvög (fwdË%s...\n",
v
[
idx
]);

237 
	`evdns_gëaddröfo
(
evdns_ba£
, 
v
[
idx
], 
NULL
, &
höts
,

238 
gai_ˇŒback
, 
v
[
idx
]);

240 
	`Ârötf
(
°dîr
, "ªsﬁvög (fwdË%s...\n",
v
[
idx
]);

241 
	`evdns_ba£_ªsﬁve_ùv4
(
evdns_ba£
, 
v
[
idx
], 0, 
maö_ˇŒback
, v[idx]);

244 
	`fÊush
(
°dout
);

245 
	`evít_ba£_di•©ch
(
evít_ba£
);

247 
	}
}

	@sample/event-test.c

11 
	~<evít2/evít-c⁄fig.h
>

13 
	~<sys/ty≥s.h
>

14 
	~<sys/°©.h
>

15 #i‚de‡
WIN32


16 
	~<sys/queue.h
>

17 
	~<uni°d.h
>

18 
	~<sys/time.h
>

20 
	~<wösock2.h
>

21 
	~<wödows.h
>

23 
	~<f˙é.h
>

24 
	~<°dlib.h
>

25 
	~<°dio.h
>

26 
	~<°rög.h
>

27 
	~<î∫o.h
>

29 
	~<evít.h
>

32 
	$fifo_ªad
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

34 
buf
[255];

35 
Àn
;

36 
evít
 *
ev
 = 
¨g
;

37 #ifde‡
WIN32


38 
DWORD
 
dwByãsRód
;

42 
	`evít_add
(
ev
, 
NULL
);

44 
	`Ârötf
(
°dîr
, "fifo_read called with fd: %d,Évent: %d,árg: %p\n",

45 ()
fd
, 
evít
, 
¨g
);

46 #ifde‡
WIN32


47 
Àn
 = 
	`RódFûe
((
HANDLE
)
fd
, 
buf
, (bufË- 1, &
dwByãsRód
, 
NULL
);

50 i‡(
Àn
 && 
dwByãsRód
 == 0) {

51 
	`Ârötf
(
°dîr
, "End Of File");

52 
	`evít_dñ
(
ev
);

56 
buf
[
dwByãsRód
] = '\0';

58 
Àn
 = 
	`ªad
(
fd
, 
buf
, (buf) - 1);

60 i‡(
Àn
 == -1) {

61 
	`≥º‹
("read");

63 } i‡(
Àn
 == 0) {

64 
	`Ârötf
(
°dîr
, "Connection closed\n");

68 
buf
[
Àn
] = '\0';

70 
	`Ârötf
(
°dout
, "Ród: %s\n", 
buf
);

71 
	}
}

74 
	$maö
(
¨gc
, **
¨gv
)

76 
evít
 
evfifo
;

77 #ifde‡
WIN32


78 
HANDLE
 
sockë
;

80 
sockë
 = 
	`Cª©eFûeA
("test.txt",

81 
GENERIC_READ
,

83 
NULL
,

84 
OPEN_EXISTING
,

85 
FILE_ATTRIBUTE_NORMAL
,

86 
NULL
);

88 i‡(
sockë
 =
INVALID_HANDLE_VALUE
)

92 
°©
 
°
;

93 c⁄° *
fifo
 = "event.fifo";

94 
sockë
;

96 i‡(
	`l°©
(
fifo
, &
°
) == 0) {

97 i‡((
°
.
°_mode
 & 
S_IFMT
Ë=
S_IFREG
) {

98 
î∫o
 = 
EEXIST
;

99 
	`≥º‹
("lstat");

100 
	`exô
(1);

104 
	`u∆ök
(
fifo
);

105 i‡(
	`mkfifo
(
fifo
, 0600) == -1) {

106 
	`≥º‹
("mkfifo");

107 
	`exô
(1);

111 #ifde‡
__löux


112 
sockë
 = 
	`›í
(
fifo
, 
O_RDWR
 | 
O_NONBLOCK
, 0);

114 
sockë
 = 
	`›í
(
fifo
, 
O_RDONLY
 | 
O_NONBLOCK
, 0);

117 i‡(
sockë
 == -1) {

118 
	`≥º‹
("open");

119 
	`exô
(1);

122 
	`Ârötf
(
°dîr
, "Wrôêd©®tÿ%s\n", 
fifo
);

125 
	`evít_öô
();

128 #ifde‡
WIN32


129 
	`evít_£t
(&
evfifo
, (
evutû_sockë_t
)
sockë
, 
EV_READ
, 
fifo_ªad
, &evfifo);

131 
	`evít_£t
(&
evfifo
, 
sockë
, 
EV_READ
, 
fifo_ªad
, &evfifo);

135 
	`evít_add
(&
evfifo
, 
NULL
);

137 
	`evít_di•©ch
();

138 #ifde‡
WIN32


139 
	`Clo£H™dÀ
(
sockë
);

142 
	}
}

	@sample/hello-world.c

10 
	~<°rög.h
>

11 
	~<î∫o.h
>

12 
	~<°dio.h
>

13 
	~<sig«l.h
>

14 #i‚de‡
WIN32


15 
	~<√töë/ö.h
>

16 #ifde‡
_XOPEN_SOURCE_EXTENDED


17 
	~<¨∑/öë.h
>

19 
	~<sys/sockë.h
>

22 
	~<evít2/buf„ªvít.h
>

23 
	~<evít2/buf„r.h
>

24 
	~<evít2/li°íî.h
>

25 
	~<evít2/utû.h
>

26 
	~<evít2/evít.h
>

28 c⁄° 
	gMESSAGE
[] = "Hello, World!\n";

30 c⁄° 
	gPORT
 = 9995;

32 
li°íî_cb
(
evc⁄∆i°íî
 *, 
evutû_sockë_t
,

33 
sockaddr
 *, 
sockÀn
, *);

34 
c⁄n_wrôecb
(
buf„ªvít
 *, *);

35 
c⁄n_evítcb
(
buf„ªvít
 *, , *);

36 
sig«l_cb
(
evutû_sockë_t
, , *);

39 
	$maö
(
¨gc
, **
¨gv
)

41 
evít_ba£
 *
ba£
;

42 
evc⁄∆i°íî
 *
li°íî
;

43 
evít
 *
sig«l_evít
;

45 
sockaddr_ö
 
sö
;

46 #ifde‡
WIN32


47 
WSADATA
 
wß_d©a
;

48 
	`WSASèπup
(0x0201, &
wß_d©a
);

51 
ba£
 = 
	`evít_ba£_√w
();

52 i‡(!
ba£
) {

53 
	`Ârötf
(
°dîr
, "CouldÇot initializeÜibevent!\n");

57 
	`mem£t
(&
sö
, 0, (sin));

58 
sö
.
sö_Ámûy
 = 
AF_INET
;

59 
sö
.
sö_p‹t
 = 
	`ht⁄s
(
PORT
);

61 
li°íî
 = 
	`evc⁄∆i°íî_√w_böd
(
ba£
, 
li°íî_cb
, (*)base,

62 
LEV_OPT_REUSEABLE
|
LEV_OPT_CLOSE_ON_FREE
, -1,

63 (
sockaddr
*)&
sö
,

64 (
sö
));

66 i‡(!
li°íî
) {

67 
	`Ârötf
(
°dîr
, "CouldÇot createáÜistener!\n");

71 
sig«l_evít
 = 
	`evsig«l_√w
(
ba£
, 
SIGINT
, 
sig«l_cb
, (*)base);

73 i‡(!
sig«l_evít
 || 
	`evít_add
(sig«l_evít, 
NULL
)<0) {

74 
	`Ârötf
(
°dîr
, "CouldÇot create/addá signalÉvent!\n");

78 
	`evít_ba£_di•©ch
(
ba£
);

80 
	`evc⁄∆i°íî_‰ì
(
li°íî
);

81 
	`evít_‰ì
(
sig«l_evít
);

82 
	`evít_ba£_‰ì
(
ba£
);

84 
	`¥ötf
("done\n");

86 
	}
}

89 
	$li°íî_cb
(
evc⁄∆i°íî
 *
li°íî
, 
evutû_sockë_t
 
fd
,

90 
sockaddr
 *
ß
, 
sockÀn
, *
u£r_d©a
)

92 
evít_ba£
 *
ba£
 = 
u£r_d©a
;

93 
buf„ªvít
 *
bev
;

95 
bev
 = 
	`buf„ªvít_sockë_√w
(
ba£
, 
fd
, 
BEV_OPT_CLOSE_ON_FREE
);

96 i‡(!
bev
) {

97 
	`Ârötf
(
°dîr
, "Error constructing bufferevent!");

98 
	`evít_ba£_lo›bªak
(
ba£
);

101 
	`buf„ªvít_£tcb
(
bev
, 
NULL
, 
c⁄n_wrôecb
, 
c⁄n_evítcb
, NULL);

102 
	`buf„ªvít_íabÀ
(
bev
, 
EV_WRITE
);

103 
	`buf„ªvít_dißbÀ
(
bev
, 
EV_READ
);

105 
	`buf„ªvít_wrôe
(
bev
, 
MESSAGE
, 
	`°æí
(MESSAGE));

106 
	}
}

109 
	$c⁄n_wrôecb
(
buf„ªvít
 *
bev
, *
u£r_d©a
)

111 
evbuf„r
 *
ouçut
 = 
	`buf„ªvít_gë_ouçut
(
bev
);

112 i‡(
	`evbuf„r_gë_Àngth
(
ouçut
) == 0) {

113 
	`¥ötf
("flushedánswer\n");

114 
	`buf„ªvít_‰ì
(
bev
);

116 
	}
}

119 
	$c⁄n_evítcb
(
buf„ªvít
 *
bev
, 
evíts
, *
u£r_d©a
)

121 i‡(
evíts
 & 
BEV_EVENT_EOF
) {

122 
	`¥ötf
("Connection closed.\n");

123 } i‡(
evíts
 & 
BEV_EVENT_ERROR
) {

124 
	`¥ötf
("GotánÉrror onÅhe connection: %s\n",

125 
	`°ªº‹
(
î∫o
));

129 
	`buf„ªvít_‰ì
(
bev
);

130 
	}
}

133 
	$sig«l_cb
(
evutû_sockë_t
 
sig
, 
evíts
, *
u£r_d©a
)

135 
evít_ba£
 *
ba£
 = 
u£r_d©a
;

136 
timevÆ
 
dñay
 = { 2, 0 };

138 
	`¥ötf
("Caughtán interrupt signal;Éxiting cleanly inÅwo seconds.\n");

140 
	`evít_ba£_lo›exô
(
ba£
, &
dñay
);

141 
	}
}

	@sample/http-server.c

9 
	~<°dio.h
>

10 
	~<°dlib.h
>

11 
	~<°rög.h
>

13 
	~<sys/ty≥s.h
>

14 
	~<sys/°©.h
>

16 #ifde‡
WIN32


17 
	~<wösock2.h
>

18 
	~<ws2t˝ù.h
>

19 
	~<wödows.h
>

20 
	~<io.h
>

21 
	~<f˙é.h
>

22 #i‚de‡
S_ISDIR


23 
	#S_ISDIR
(
x
Ë(((xË& 
S_IFMT
Ë=
S_IFDIR
)

	)

26 
	~<sys/°©.h
>

27 
	~<sys/sockë.h
>

28 
	~<sig«l.h
>

29 
	~<f˙é.h
>

30 
	~<uni°d.h
>

31 
	~<dúít.h
>

34 
	~<evít2/evít.h
>

35 
	~<evít2/hâp.h
>

36 
	~<evít2/buf„r.h
>

37 
	~<evít2/utû.h
>

38 
	~<evít2/keyvÆq_°ru˘.h
>

40 #ifde‡
_EVENT_HAVE_NETINET_IN_H


41 
	~<√töë/ö.h
>

42 #ifde‡
_XOPEN_SOURCE_EXTENDED


43 
	~<¨∑/öë.h
>

48 
	~"../utû-öã∫Æ.h
"

50 #ifde‡
WIN32


51 
	#°©
 
_°©


	)

52 
	#f°©
 
_f°©


	)

53 
	#›í
 
_›í


	)

54 
	#˛o£
 
_˛o£


	)

55 
	#O_RDONLY
 
_O_RDONLY


	)

58 
	guri_roŸ
[512];

60 c⁄° 
	sèbÀ_íåy
 {

61 c⁄° *
	mexãnsi⁄
;

62 c⁄° *
	mc⁄ã¡_ty≥
;

63 } 
	gc⁄ã¡_ty≥_èbÀ
[] = {

76 { 
NULL
, NULL },

81 
	$guess_c⁄ã¡_ty≥
(c⁄° *
∑th
)

83 c⁄° *
œ°_≥riod
, *
exãnsi⁄
;

84 c⁄° 
èbÀ_íåy
 *
ít
;

85 
œ°_≥riod
 = 
	`°ºchr
(
∑th
, '.');

86 i‡(!
œ°_≥riod
 || 
	`°rchr
(last_period, '/'))

87 
nŸ_found
;

88 
exãnsi⁄
 = 
œ°_≥riod
 + 1;

89 
ít
 = &
c⁄ã¡_ty≥_èbÀ
[0];É¡->
exãnsi⁄
; ++ent) {

90 i‡(!
	`evutû_ascii_°rˇ£cmp
(
ít
->
exãnsi⁄
,Éxtension))

91  
ít
->
c⁄ã¡_ty≥
;

94 
nŸ_found
:

96 
	}
}

101 
	$dump_ªque°_cb
(
evhâp_ªque°
 *
ªq
, *
¨g
)

103 c⁄° *
cmdty≥
;

104 
evkeyvÆq
 *
hódîs
;

105 
evkeyvÆ
 *
hódî
;

106 
evbuf„r
 *
buf
;

108 
	`evhâp_ªque°_gë_comm™d
(
ªq
)) {

109 
EVHTTP_REQ_GET
: 
cmdty≥
 = "GET"; ;

110 
EVHTTP_REQ_POST
: 
cmdty≥
 = "POST"; ;

111 
EVHTTP_REQ_HEAD
: 
cmdty≥
 = "HEAD"; ;

112 
EVHTTP_REQ_PUT
: 
cmdty≥
 = "PUT"; ;

113 
EVHTTP_REQ_DELETE
: 
cmdty≥
 = "DELETE"; ;

114 
EVHTTP_REQ_OPTIONS
: 
cmdty≥
 = "OPTIONS"; ;

115 
EVHTTP_REQ_TRACE
: 
cmdty≥
 = "TRACE"; ;

116 
EVHTTP_REQ_CONNECT
: 
cmdty≥
 = "CONNECT"; ;

117 
EVHTTP_REQ_PATCH
: 
cmdty≥
 = "PATCH"; ;

118 : 
cmdty≥
 = "unknown"; ;

121 
	`¥ötf
("Receivedá %sÑequest for %s\nHeaders:\n",

122 
cmdty≥
, 
	`evhâp_ªque°_gë_uri
(
ªq
));

124 
hódîs
 = 
	`evhâp_ªque°_gë_öput_hódîs
(
ªq
);

125 
hódî
 = 
hódîs
->
tqh_fú°
; header;

126 
hódî
 = hódî->
√xt
.
tqe_√xt
) {

127 
	`¥ötf
(" %s: %s\n", 
hódî
->
key
, hódî->
vÆue
);

130 
buf
 = 
	`evhâp_ªque°_gë_öput_buf„r
(
ªq
);

131 
	`puts
("Input data: <<<");

132 
	`evbuf„r_gë_Àngth
(
buf
)) {

133 
n
;

134 
cbuf
[128];

135 
n
 = 
	`evbuf„r_ªmove
(
buf
, 
cbuf
, (buf)-1);

136 i‡(
n
 > 0)

137 (Ë
	`fwrôe
(
cbuf
, 1, 
n
, 
°dout
);

139 
	`puts
(">>>");

141 
	`evhâp_£nd_ª∂y
(
ªq
, 200, "OK", 
NULL
);

142 
	}
}

149 
	$£nd_documít_cb
(
evhâp_ªque°
 *
ªq
, *
¨g
)

151 
evbuf„r
 *
evb
 = 
NULL
;

152 c⁄° *
do¸oŸ
 = 
¨g
;

153 c⁄° *
uri
 = 
	`evhâp_ªque°_gë_uri
(
ªq
);

154 
evhâp_uri
 *
decoded
 = 
NULL
;

155 c⁄° *
∑th
;

156 *
decoded_∑th
;

157 *
whﬁe_∑th
 = 
NULL
;

158 
size_t
 
Àn
;

159 
fd
 = -1;

160 
°©
 
°
;

162 i‡(
	`evhâp_ªque°_gë_comm™d
(
ªq
Ë!
EVHTTP_REQ_GET
) {

163 
	`dump_ªque°_cb
(
ªq
, 
¨g
);

167 
	`¥ötf
("GŸá GETÑeque° f‹ <%s>\n", 
uri
);

170 
decoded
 = 
	`evhâp_uri_∑r£
(
uri
);

171 i‡(!
decoded
) {

172 
	`¥ötf
("It'sÇotá good URI. Sending BADREQUEST\n");

173 
	`evhâp_£nd_îr‹
(
ªq
, 
HTTP_BADREQUEST
, 0);

178 
∑th
 = 
	`evhâp_uri_gë_∑th
(
decoded
);

179 i‡(!
∑th
)Öath = "/";

182 
decoded_∑th
 = 
	`evhâp_uridecode
(
∑th
, 0, 
NULL
);

183 i‡(
decoded_∑th
 =
NULL
)

184 
îr
;

189 i‡(
	`°r°r
(
decoded_∑th
, ".."))

190 
îr
;

192 
Àn
 = 
	`°æí
(
decoded_∑th
)+°æí(
do¸oŸ
)+2;

193 i‡(!(
whﬁe_∑th
 = 
	`mÆloc
(
Àn
))) {

194 
	`≥º‹
("malloc");

195 
îr
;

197 
	`evutû_¢¥ötf
(
whﬁe_∑th
, 
Àn
, "%s/%s", 
do¸oŸ
, 
decoded_∑th
);

199 i‡(
	`°©
(
whﬁe_∑th
, &
°
)<0) {

200 
îr
;

204 
evb
 = 
	`evbuf„r_√w
();

206 i‡(
	`S_ISDIR
(
°
.
°_mode
)) {

209 #ifde‡
WIN32


210 
HANDLE
 
d
;

211 
WIN32_FIND_DATAA
 
ít
;

212 *
∑âîn
;

213 
size_t
 
dúÀn
;

215 
DIR
 *
d
;

216 
dúít
 *
ít
;

218 c⁄° *
åaûög_¶ash
 = "";

220 i‡(!
	`°æí
(
∑th
) ||Öath[strlen(path)-1] != '/')

221 
åaûög_¶ash
 = "/";

223 #ifde‡
WIN32


224 
dúÀn
 = 
	`°æí
(
whﬁe_∑th
);

225 
∑âîn
 = 
	`mÆloc
(
dúÀn
+3);

226 
	`mem˝y
(
∑âîn
, 
whﬁe_∑th
, 
dúÀn
);

227 
∑âîn
[
dúÀn
] = '\\';

228 
∑âîn
[
dúÀn
+1] = '*';

229 
∑âîn
[
dúÀn
+2] = '\0';

230 
d
 = 
	`FödFú°FûeA
(
∑âîn
, &
ít
);

231 
	`‰ì
(
∑âîn
);

232 i‡(
d
 =
INVALID_HANDLE_VALUE
)

233 
îr
;

235 i‡(!(
d
 = 
	`›ídú
(
whﬁe_∑th
)))

236 
îr
;

239 
	`evbuf„r_add_¥ötf
(
evb
, "<html>\n <head>\n"

246 
decoded_∑th
,

247 
uri_roŸ
, 
∑th
,

248 
åaûög_¶ash
,

249 
decoded_∑th
 );

250 #ifde‡
WIN32


252 c⁄° *
«me
 = 
ít
.
cFûeName
;

254 (
ít
 = 
	`ªaddú
(
d
))) {

255 c⁄° *
«me
 = 
ít
->
d_«me
;

257 
	`evbuf„r_add_¥ötf
(
evb
,

259 
«me
,Çame);

260 #ifde‡
WIN32


261 } 
	`FödNextFûeA
(
d
, &
ít
));

265 
	`evbuf„r_add_¥ötf
(
evb
, "</ul></body></html>\n");

266 #ifde‡
WIN32


267 
	`Clo£H™dÀ
(
d
);

269 
	`˛o£dú
(
d
);

271 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
),

276 c⁄° *
ty≥
 = 
	`guess_c⁄ã¡_ty≥
(
decoded_∑th
);

277 i‡((
fd
 = 
	`›í
(
whﬁe_∑th
, 
O_RDONLY
)) < 0) {

278 
	`≥º‹
("open");

279 
îr
;

282 i‡(
	`f°©
(
fd
, &
°
)<0) {

285 
	`≥º‹
("fstat");

286 
îr
;

288 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
),

289 "C⁄ã¡-Ty≥", 
ty≥
);

290 
	`evbuf„r_add_fûe
(
evb
, 
fd
, 0, 
°
.
°_size
);

293 
	`evhâp_£nd_ª∂y
(
ªq
, 200, "OK", 
evb
);

294 
d⁄e
;

295 
îr
:

296 
	`evhâp_£nd_îr‹
(
ªq
, 404, "Document wasÇot found");

297 i‡(
fd
>=0)

298 
	`˛o£
(
fd
);

299 
d⁄e
:

300 i‡(
decoded
)

301 
	`evhâp_uri_‰ì
(
decoded
);

302 i‡(
decoded_∑th
)

303 
	`‰ì
(
decoded_∑th
);

304 i‡(
whﬁe_∑th
)

305 
	`‰ì
(
whﬁe_∑th
);

306 i‡(
evb
)

307 
	`evbuf„r_‰ì
(
evb
);

308 
	}
}

311 
	$sy¡ax
()

313 
	`Ârötf
(
°dout
, "Syntax: http-server <docroot>\n");

314 
	}
}

317 
	$maö
(
¨gc
, **
¨gv
)

319 
evít_ba£
 *
ba£
;

320 
evhâp
 *
hâp
;

321 
evhâp_bound_sockë
 *
h™dÀ
;

323 
p‹t
 = 0;

324 #ifde‡
WIN32


325 
WSADATA
 
WSAD©a
;

326 
	`WSASèπup
(0x101, &
WSAD©a
);

328 i‡(
	`sig«l
(
SIGPIPE
, 
SIG_IGN
Ë=
SIG_ERR
)

331 i‡(
¨gc
 < 2) {

332 
	`sy¡ax
();

336 
ba£
 = 
	`evít_ba£_√w
();

337 i‡(!
ba£
) {

338 
	`Ârötf
(
°dîr
, "Couldn't createánÉvent_base:Éxiting\n");

343 
hâp
 = 
	`evhâp_√w
(
ba£
);

344 i‡(!
hâp
) {

345 
	`Ârötf
(
°dîr
, "couldn't createÉvhttp. Exiting.\n");

350 
	`evhâp_£t_cb
(
hâp
, "/dump", 
dump_ªque°_cb
, 
NULL
);

354 
	`evhâp_£t_gícb
(
hâp
, 
£nd_documít_cb
, 
¨gv
[1]);

357 
h™dÀ
 = 
	`evhâp_böd_sockë_wôh_h™dÀ
(
hâp
, "0.0.0.0", 
p‹t
);

358 i‡(!
h™dÀ
) {

359 
	`Ârötf
(
°dîr
, "couldn't bindÅoÖort %d. Exiting.\n",

360 ()
p‹t
);

366 
sockaddr_°‹age
 
ss
;

367 
evutû_sockë_t
 
fd
;

368 
ev_sockÀn_t
 
sockÀn
 = (
ss
);

369 
addrbuf
[128];

370 *
öaddr
;

371 c⁄° *
addr
;

372 
gŸ_p‹t
 = -1;

373 
fd
 = 
	`evhâp_bound_sockë_gë_fd
(
h™dÀ
);

374 
	`mem£t
(&
ss
, 0, (ss));

375 i‡(
	`gësock«me
(
fd
, (
sockaddr
 *)&
ss
, &
sockÀn
)) {

376 
	`≥º‹
("getsockname() failed");

379 i‡(
ss
.
ss_Ámûy
 =
AF_INET
) {

380 
gŸ_p‹t
 = 
	`¡ohs
(((
sockaddr_ö
*)&
ss
)->
sö_p‹t
);

381 
öaddr
 = &((
sockaddr_ö
*)&
ss
)->
sö_addr
;

382 } i‡(
ss
.
ss_Ámûy
 =
AF_INET6
) {

383 
gŸ_p‹t
 = 
	`¡ohs
(((
sockaddr_ö6
*)&
ss
)->
sö6_p‹t
);

384 
öaddr
 = &((
sockaddr_ö6
*)&
ss
)->
sö6_addr
;

386 
	`Ârötf
(
°dîr
, "Weirdáddress family %d\n",

387 
ss
.
ss_Ámûy
);

390 
addr
 = 
	`evutû_öë_¡›
(
ss
.
ss_Ámûy
, 
öaddr
, 
addrbuf
,

391 (
addrbuf
));

392 i‡(
addr
) {

393 
	`¥ötf
("Li°íög o¿%s:%d\n", 
addr
, 
gŸ_p‹t
);

394 
	`evutû_¢¥ötf
(
uri_roŸ
, (uri_root),

395 "hâp://%s:%d",
addr
,
gŸ_p‹t
);

397 
	`Ârötf
(
°dîr
, "evutil_inet_ntop failed\n");

402 
	`evít_ba£_di•©ch
(
ba£
);

405 
	}
}

	@sample/le-proxy.c

8 
	~<°dio.h
>

9 
	~<as£π.h
>

10 
	~<°dlib.h
>

11 
	~<°rög.h
>

12 
	~<î∫o.h
>

14 #ifde‡
WIN32


15 
	~<wösock2.h
>

16 
	~<ws2t˝ù.h
>

18 
	~<sys/sockë.h
>

19 
	~<√töë/ö.h
>

22 
	~<evít2/buf„ªvít_s¶.h
>

23 
	~<evít2/buf„ªvít.h
>

24 
	~<evít2/buf„r.h
>

25 
	~<evít2/li°íî.h
>

26 
	~<evít2/utû.h
>

28 
	~<›ís¶/s¶.h
>

29 
	~<›ís¶/îr.h
>

30 
	~<›ís¶/ønd.h
>

32 
evít_ba£
 *
	gba£
;

33 
sockaddr_°‹age
 
	gli°í_⁄_addr
;

34 
sockaddr_°‹age
 
	gc⁄√˘_to_addr
;

35 
	gc⁄√˘_to_addæí
;

36 
	gu£_wøµî
 = 1;

38 
SSL_CTX
 *
	gs¶_˘x
 = 
NULL
;

40 
	#MAX_OUTPUT
 (512*1024)

	)

42 
døöed_wrôecb
(
buf„ªvít
 *
bev
, *
˘x
);

43 
evítcb
(
buf„ªvít
 *
bev
, 
wh©
, *
˘x
);

46 
	$ªadcb
(
buf„ªvít
 *
bev
, *
˘x
)

48 
buf„ªvít
 *
∑π√r
 = 
˘x
;

49 
evbuf„r
 *
§c
, *
d°
;

50 
size_t
 
Àn
;

51 
§c
 = 
	`buf„ªvít_gë_öput
(
bev
);

52 
Àn
 = 
	`evbuf„r_gë_Àngth
(
§c
);

53 i‡(!
∑π√r
) {

54 
	`evbuf„r_døö
(
§c
, 
Àn
);

57 
d°
 = 
	`buf„ªvít_gë_ouçut
(
∑π√r
);

58 
	`evbuf„r_add_buf„r
(
d°
, 
§c
);

60 i‡(
	`evbuf„r_gë_Àngth
(
d°
Ë>
MAX_OUTPUT
) {

64 
	`buf„ªvít_£tcb
(
∑π√r
, 
ªadcb
, 
døöed_wrôecb
,

65 
evítcb
, 
bev
);

66 
	`buf„ªvít_£tw©îm¨k
(
∑π√r
, 
EV_WRITE
, 
MAX_OUTPUT
/2,

67 
MAX_OUTPUT
);

68 
	`buf„ªvít_dißbÀ
(
bev
, 
EV_READ
);

70 
	}
}

73 
	$døöed_wrôecb
(
buf„ªvít
 *
bev
, *
˘x
)

75 
buf„ªvít
 *
∑π√r
 = 
˘x
;

79 
	`buf„ªvít_£tcb
(
bev
, 
ªadcb
, 
NULL
, 
evítcb
, 
∑π√r
);

80 
	`buf„ªvít_£tw©îm¨k
(
bev
, 
EV_WRITE
, 0, 0);

81 i‡(
∑π√r
)

82 
	`buf„ªvít_íabÀ
(
∑π√r
, 
EV_READ
);

83 
	}
}

86 
	$˛o£_⁄_föished_wrôecb
(
buf„ªvít
 *
bev
, *
˘x
)

88 
evbuf„r
 *
b
 = 
	`buf„ªvít_gë_ouçut
(
bev
);

90 i‡(
	`evbuf„r_gë_Àngth
(
b
) == 0) {

91 
	`buf„ªvít_‰ì
(
bev
);

93 
	}
}

96 
	$evítcb
(
buf„ªvít
 *
bev
, 
wh©
, *
˘x
)

98 
buf„ªvít
 *
∑π√r
 = 
˘x
;

100 i‡(
wh©
 & (
BEV_EVENT_EOF
|
BEV_EVENT_ERROR
)) {

101 i‡(
wh©
 & 
BEV_EVENT_ERROR
) {

102 
îr
;

103 (
îr
 = (
	`buf„ªvít_gë_›ís¶_îr‹
(
bev
)))) {

104 c⁄° *
msg
 = (const *)

105 
	`ERR_ªas⁄_îr‹_°rög
(
îr
);

106 c⁄° *
lib
 = (const *)

107 
	`ERR_lib_îr‹_°rög
(
îr
);

108 c⁄° *
func
 = (const *)

109 
	`ERR_func_îr‹_°rög
(
îr
);

110 
	`Ârötf
(
°dîr
,

111 "%†ö %†%s\n", 
msg
, 
lib
, 
func
);

113 i‡(
î∫o
)

114 
	`≥º‹
("connectionÉrror");

117 i‡(
∑π√r
) {

119 
	`ªadcb
(
bev
, 
˘x
);

121 i‡(
	`evbuf„r_gë_Àngth
(

122 
	`buf„ªvít_gë_ouçut
(
∑π√r
))) {

126 
	`buf„ªvít_£tcb
(
∑π√r
,

127 
NULL
, 
˛o£_⁄_föished_wrôecb
,

128 
evítcb
, 
NULL
);

129 
	`buf„ªvít_dißbÀ
(
∑π√r
, 
EV_READ
);

133 
	`buf„ªvít_‰ì
(
∑π√r
);

136 
	`buf„ªvít_‰ì
(
bev
);

138 
	}
}

141 
	$sy¡ax
()

143 
	`Âuts
("Sy¡ax:\n", 
°dîr
);

144 
	`Âuts
("Üe-¥oxy [-s] [-W] <li°í-⁄-addr> <c⁄√˘-to-addr>\n", 
°dîr
);

145 
	`Âuts
("Exam∂e:\n", 
°dîr
);

146 
	`Âuts
("Üe-¥oxy 127.0.0.1:8888 1.2.3.4:80\n", 
°dîr
);

148 
	`exô
(1);

149 
	}
}

152 
	$ac˚±_cb
(
evc⁄∆i°íî
 *
li°íî
, 
evutû_sockë_t
 
fd
,

153 
sockaddr
 *
a
, 
¶í
, *
p
)

155 
buf„ªvít
 *
b_out
, *
b_ö
;

158 
b_ö
 = 
	`buf„ªvít_sockë_√w
(
ba£
, 
fd
,

159 
BEV_OPT_CLOSE_ON_FREE
|
BEV_OPT_DEFER_CALLBACKS
);

161 i‡(!
s¶_˘x
 || 
u£_wøµî
)

162 
b_out
 = 
	`buf„ªvít_sockë_√w
(
ba£
, -1,

163 
BEV_OPT_CLOSE_ON_FREE
|
BEV_OPT_DEFER_CALLBACKS
);

165 
SSL
 *
s¶
 = 
	`SSL_√w
(
s¶_˘x
);

166 
b_out
 = 
	`buf„ªvít_›ís¶_sockë_√w
(
ba£
, -1, 
s¶
,

167 
BUFFEREVENT_SSL_CONNECTING
,

168 
BEV_OPT_CLOSE_ON_FREE
|
BEV_OPT_DEFER_CALLBACKS
);

171 
	`as£π
(
b_ö
 && 
b_out
);

173 i‡(
	`buf„ªvít_sockë_c⁄√˘
(
b_out
,

174 (
sockaddr
*)&
c⁄√˘_to_addr
, 
c⁄√˘_to_addæí
)<0) {

175 
	`≥º‹
("bufferevent_socket_connect");

176 
	`buf„ªvít_‰ì
(
b_out
);

177 
	`buf„ªvít_‰ì
(
b_ö
);

181 i‡(
s¶_˘x
 && 
u£_wøµî
) {

182 
buf„ªvít
 *
b_s¶
;

183 
SSL
 *
s¶
 = 
	`SSL_√w
(
s¶_˘x
);

184 
b_s¶
 = 
	`buf„ªvít_›ís¶_fûãr_√w
(
ba£
,

185 
b_out
, 
s¶
, 
BUFFEREVENT_SSL_CONNECTING
,

186 
BEV_OPT_CLOSE_ON_FREE
|
BEV_OPT_DEFER_CALLBACKS
);

187 i‡(!
b_s¶
) {

188 
	`≥º‹
("Bufferevent_openssl_new");

189 
	`buf„ªvít_‰ì
(
b_out
);

190 
	`buf„ªvít_‰ì
(
b_ö
);

192 
b_out
 = 
b_s¶
;

195 
	`buf„ªvít_£tcb
(
b_ö
, 
ªadcb
, 
NULL
, 
evítcb
, 
b_out
);

196 
	`buf„ªvít_£tcb
(
b_out
, 
ªadcb
, 
NULL
, 
evítcb
, 
b_ö
);

198 
	`buf„ªvít_íabÀ
(
b_ö
, 
EV_READ
|
EV_WRITE
);

199 
	`buf„ªvít_íabÀ
(
b_out
, 
EV_READ
|
EV_WRITE
);

200 
	}
}

203 
	$maö
(
¨gc
, **
¨gv
)

205 
i
;

206 
sockÀn
;

208 
u£_s¶
 = 0;

209 
evc⁄∆i°íî
 *
li°íî
;

211 i‡(
¨gc
 < 3)

212 
	`sy¡ax
();

214 
i
=1; i < 
¨gc
; ++i) {

215 i‡(!
	`°rcmp
(
¨gv
[
i
], "-s")) {

216 
u£_s¶
 = 1;

217 } i‡(!
	`°rcmp
(
¨gv
[
i
], "-W")) {

218 
u£_wøµî
 = 0;

219 } i‡(
¨gv
[
i
][0] == '-') {

220 
	`sy¡ax
();

225 i‡(
i
+2 !
¨gc
)

226 
	`sy¡ax
();

228 
	`mem£t
(&
li°í_⁄_addr
, 0, (listen_on_addr));

229 
sockÀn
 = (
li°í_⁄_addr
);

230 i‡(
	`evutû_∑r£_sockaddr_p‹t
(
¨gv
[
i
],

231 (
sockaddr
*)&
li°í_⁄_addr
, &
sockÀn
)<0) {

232 
p
 = 
	`©oi
(
¨gv
[
i
]);

233 
sockaddr_ö
 *
sö
 = (sockaddr_ö*)&
li°í_⁄_addr
;

234 i‡(
p
 < 1 ||Ö > 65535)

235 
	`sy¡ax
();

236 
sö
->
sö_p‹t
 = 
	`ht⁄s
(
p
);

237 
sö
->
sö_addr
.
s_addr
 = 
	`ht⁄l
(0x7f000001);

238 
sö
->
sö_Ámûy
 = 
AF_INET
;

239 
sockÀn
 = (
sockaddr_ö
);

242 
	`mem£t
(&
c⁄√˘_to_addr
, 0, (connect_to_addr));

243 
c⁄√˘_to_addæí
 = (
c⁄√˘_to_addr
);

244 i‡(
	`evutû_∑r£_sockaddr_p‹t
(
¨gv
[
i
+1],

245 (
sockaddr
*)&
c⁄√˘_to_addr
, &
c⁄√˘_to_addæí
)<0)

246 
	`sy¡ax
();

248 
ba£
 = 
	`evít_ba£_√w
();

249 i‡(!
ba£
) {

250 
	`≥º‹
("event_base_new()");

254 i‡(
u£_s¶
) {

255 
r
;

256 
	`SSL_libøry_öô
();

257 
	`ERR_lﬂd_¸y±o_°rögs
();

258 
	`SSL_lﬂd_îr‹_°rögs
();

259 
	`O≥nSSL_add_Æl_Æg‹ôhms
();

260 
r
 = 
	`RAND_pﬁl
();

261 i‡(
r
 == 0) {

262 
	`Ârötf
(
°dîr
, "RAND_poll() failed.\n");

265 
s¶_˘x
 = 
	`SSL_CTX_√w
(
	`SSLv23_mëhod
());

268 
li°íî
 = 
	`evc⁄∆i°íî_√w_böd
(
ba£
, 
ac˚±_cb
, 
NULL
,

269 
LEV_OPT_CLOSE_ON_FREE
|
LEV_OPT_CLOSE_ON_EXEC
|
LEV_OPT_REUSEABLE
,

270 -1, (
sockaddr
*)&
li°í_⁄_addr
, 
sockÀn
);

272 
	`evít_ba£_di•©ch
(
ba£
);

274 
	`evc⁄∆i°íî_‰ì
(
li°íî
);

275 
	`evít_ba£_‰ì
(
ba£
);

278 
	}
}

	@sample/signal-test.c

7 
	~<sys/ty≥s.h
>

9 
	~<evít2/evít-c⁄fig.h
>

11 
	~<sys/°©.h
>

12 #i‚de‡
WIN32


13 
	~<sys/queue.h
>

14 
	~<uni°d.h
>

15 
	~<sys/time.h
>

17 
	~<wösock2.h
>

18 
	~<wödows.h
>

20 
	~<sig«l.h
>

21 
	~<f˙é.h
>

22 
	~<°dlib.h
>

23 
	~<°dio.h
>

24 
	~<°rög.h
>

25 
	~<î∫o.h
>

27 
	~<evít.h
>

29 #ifde‡
_EVENT___func__


30 
	#__func__
 
_EVENT___func__


	)

33 
	gˇŒed
 = 0;

36 
	$sig«l_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

38 
evít
 *
sig«l
 = 
¨g
;

40 
	`¥ötf
("%s: gŸ sig«»%d\n", 
__func__
, 
	`EVENT_SIGNAL
(
sig«l
));

42 i‡(
ˇŒed
 >= 2)

43 
	`evít_dñ
(
sig«l
);

45 
ˇŒed
++;

46 
	}
}

49 
	$maö
(
¨gc
, **
¨gv
)

51 
evít
 
sig«l_öt
;

52 
evít_ba£
* 
ba£
;

53 #ifde‡
WIN32


54 
WORD
 
wVîsi⁄Reque°ed
;

55 
WSADATA
 
wßD©a
;

57 
wVîsi⁄Reque°ed
 = 
	`MAKEWORD
(2, 2);

59 (Ë
	`WSASèπup
(
wVîsi⁄Reque°ed
, &
wßD©a
);

63 
ba£
 = 
	`evít_ba£_√w
();

66 
	`evít_assign
(&
sig«l_öt
, 
ba£
, 
SIGINT
, 
EV_SIGNAL
|
EV_PERSIST
, 
sig«l_cb
,

67 &
sig«l_öt
);

69 
	`evít_add
(&
sig«l_öt
, 
NULL
);

71 
	`evít_ba£_di•©ch
(
ba£
);

72 
	`evít_ba£_‰ì
(
ba£
);

75 
	}
}

	@sample/time-test.c

11 
	~<sys/ty≥s.h
>

13 
	~<evít2/evít-c⁄fig.h
>

15 
	~<sys/°©.h
>

16 #i‚de‡
WIN32


17 
	~<sys/queue.h
>

18 
	~<uni°d.h
>

20 
	~<time.h
>

21 #ifde‡
_EVENT_HAVE_SYS_TIME_H


22 
	~<sys/time.h
>

24 
	~<f˙é.h
>

25 
	~<°dlib.h
>

26 
	~<°dio.h
>

27 
	~<°rög.h
>

28 
	~<î∫o.h
>

30 
	~<evít2/evít.h
>

31 
	~<evít2/evít_°ru˘.h
>

32 
	~<evít2/utû.h
>

34 #ifde‡
WIN32


35 
	~<wösock2.h
>

38 
timevÆ
 
	gœ°time
;

40 
	gevít_is_≥rsi°ít
;

43 
	$timeout_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

45 
timevÆ
 
√wtime
, 
dif„ªn˚
;

46 
evít
 *
timeout
 = 
¨g
;

47 
ñ≠£d
;

49 
	`evutû_gëtimeofday
(&
√wtime
, 
NULL
);

50 
	`evutû_timîsub
(&
√wtime
, &
œ°time
, &
dif„ªn˚
);

51 
ñ≠£d
 = 
dif„ªn˚
.
tv_£c
 +

52 (
dif„ªn˚
.
tv_u£c
 / 1.0e6);

54 
	`¥ötf
("timeout_cb calledát %d: %.3f secondsÉlapsed.\n",

55 ()
√wtime
.
tv_£c
, 
ñ≠£d
);

56 
œ°time
 = 
√wtime
;

58 i‡(! 
evít_is_≥rsi°ít
) {

59 
timevÆ
 
tv
;

60 
	`evutû_timî˛ór
(&
tv
);

61 
tv
.
tv_£c
 = 2;

62 
	`evít_add
(
timeout
, &
tv
);

64 
	}
}

67 
	$maö
(
¨gc
, **
¨gv
)

69 
evít
 
timeout
;

70 
timevÆ
 
tv
;

71 
evít_ba£
 *
ba£
;

72 
Êags
;

74 #ifde‡
WIN32


75 
WORD
 
wVîsi⁄Reque°ed
;

76 
WSADATA
 
wßD©a
;

78 
wVîsi⁄Reque°ed
 = 
	`MAKEWORD
(2, 2);

80 ()
	`WSASèπup
(
wVîsi⁄Reque°ed
, &
wßD©a
);

83 i‡(
¨gc
 =2 && !
	`°rcmp
(
¨gv
[1], "-p")) {

84 
evít_is_≥rsi°ít
 = 1;

85 
Êags
 = 
EV_PERSIST
;

87 
evít_is_≥rsi°ít
 = 0;

88 
Êags
 = 0;

92 
ba£
 = 
	`evít_ba£_√w
();

95 
	`evít_assign
(&
timeout
, 
ba£
, -1, 
Êags
, 
timeout_cb
, (*) &timeout);

97 
	`evutû_timî˛ór
(&
tv
);

98 
tv
.
tv_£c
 = 2;

99 
	`evít_add
(&
timeout
, &
tv
);

101 
	`evutû_gëtimeofday
(&
œ°time
, 
NULL
);

103 
	`evít_ba£_di•©ch
(
ba£
);

106 
	}
}

	@select.c

29 
	~"evít2/evít-c⁄fig.h
"

31 
	~<sys/ty≥s.h
>

32 #ifde‡
_EVENT_HAVE_SYS_TIME_H


33 
	~<sys/time.h
>

35 #ifde‡
_EVENT_HAVE_SYS_SELECT_H


36 
	~<sys/£À˘.h
>

38 
	~<sys/queue.h
>

39 
	~<sig«l.h
>

40 
	~<°dio.h
>

41 
	~<°dlib.h
>

42 
	~<°rög.h
>

43 
	~<uni°d.h
>

44 
	~<î∫o.h
>

46 
	~"evít-öã∫Æ.h
"

47 
	~"evsig«l-öã∫Æ.h
"

48 
	~"evít2/thªad.h
"

49 
	~"evthªad-öã∫Æ.h
"

50 
	~"log-öã∫Æ.h
"

51 
	~"evm≠-öã∫Æ.h
"

53 #i‚de‡
_EVENT_HAVE_FD_MASK


55 
	tfd_mask
;

58 #i‚de‡
NFDBITS


59 
	#NFDBITS
 ((
fd_mask
)*8)

	)

63 
	#DIV_ROUNDUP
(
x
, 
y
Ë(((x)+((y)-1))/(y))

	)

66 
	#SELECT_ALLOC_SIZE
(
n
) \

67 (
	`DIV_ROUNDUP
(
n
, 
NFDBITS
Ë* (
fd_mask
))

	)

69 
	s£À˘›
 {

70 
	mevít_fds
;

71 
	mevít_fdsz
;

72 
	mªsize_out_£ts
;

73 
fd_£t
 *
	mevít_ªad£t_ö
;

74 
fd_£t
 *
	mevít_wrôe£t_ö
;

75 
fd_£t
 *
	mevít_ªad£t_out
;

76 
fd_£t
 *
	mevít_wrôe£t_out
;

79 *
£À˘_öô
(
evít_ba£
 *);

80 
£À˘_add
(
evít_ba£
 *, , 
ﬁd
, 
evíts
, *);

81 
£À˘_dñ
(
evít_ba£
 *, , 
ﬁd
, 
evíts
, *);

82 
£À˘_di•©ch
(
evít_ba£
 *, 
timevÆ
 *);

83 
£À˘_dóŒoc
(
evít_ba£
 *);

85 c⁄° 
evít›
 
	g£À˘›s
 = {

87 
£À˘_öô
,

88 
£À˘_add
,

89 
£À˘_dñ
,

90 
£À˘_di•©ch
,

91 
£À˘_dóŒoc
,

93 
EV_FEATURE_FDS
,

97 
£À˘_ªsize
(
£À˘›
 *
s›
, 
fdsz
);

98 
£À˘_‰ì_£À˘›
(
£À˘›
 *
s›
);

101 
	$£À˘_öô
(
evít_ba£
 *
ba£
)

103 
£À˘›
 *
s›
;

105 i‡(!(
s›
 = 
	`mm_ˇŒoc
(1, (
£À˘›
))))

106  (
NULL
);

108 i‡(
	`£À˘_ªsize
(
s›
, 
	`SELECT_ALLOC_SIZE
(32 + 1))) {

109 
	`£À˘_‰ì_£À˘›
(
s›
);

110  (
NULL
);

113 
	`evsig_öô
(
ba£
);

115  (
s›
);

116 
	}
}

118 #ifde‡
CHECK_INVARIANTS


120 
	$check_£À˘›
(
£À˘›
 *
s›
)

123 
	}
}

125 
	#check_£À˘›
(
s›
Ëdÿ{ (Ës›; } 0)

	)

129 
	$£À˘_di•©ch
(
evít_ba£
 *
ba£
, 
timevÆ
 *
tv
)

131 
ªs
=0, 
i
, 
j
, 
nfds
;

132 
£À˘›
 *
s›
 = 
ba£
->
evba£
;

134 
	`check_£À˘›
(
s›
);

135 i‡(
s›
->
ªsize_out_£ts
) {

136 
fd_£t
 *
ªad£t_out
=
NULL
, *
wrôe£t_out
=NULL;

137 
size_t
 
sz
 = 
s›
->
evít_fdsz
;

138 i‡(!(
ªad£t_out
 = 
	`mm_ªÆloc
(
s›
->
evít_ªad£t_out
, 
sz
)))

140 
s›
->
evít_ªad£t_out
 = 
ªad£t_out
;

141 i‡(!(
wrôe£t_out
 = 
	`mm_ªÆloc
(
s›
->
evít_wrôe£t_out
, 
sz
))) {

148 
s›
->
evít_wrôe£t_out
 = 
wrôe£t_out
;

149 
s›
->
ªsize_out_£ts
 = 0;

152 
	`mem˝y
(
s›
->
evít_ªad£t_out
, s›->
evít_ªad£t_ö
,

153 
s›
->
evít_fdsz
);

154 
	`mem˝y
(
s›
->
evít_wrôe£t_out
, s›->
evít_wrôe£t_ö
,

155 
s›
->
evít_fdsz
);

157 
nfds
 = 
s›
->
evít_fds
+1;

159 
	`EVBASE_RELEASE_LOCK
(
ba£
, 
th_ba£_lock
);

161 
ªs
 = 
	`£À˘
(
nfds
, 
s›
->
evít_ªad£t_out
,

162 
s›
->
evít_wrôe£t_out
, 
NULL
, 
tv
);

164 
	`EVBASE_ACQUIRE_LOCK
(
ba£
, 
th_ba£_lock
);

166 
	`check_£À˘›
(
s›
);

168 i‡(
ªs
 == -1) {

169 i‡(
î∫o
 !
EINTR
) {

170 
	`evít_w¨n
("select");

177 
	`evít_debug
(("%s: sñe˘Ñï‹t†%d", 
__func__
, 
ªs
));

179 
	`check_£À˘›
(
s›
);

180 
i
 = 
	`øndom
(Ë% 
nfds
;

181 
j
 = 0; j < 
nfds
; ++j) {

182 i‡(++
i
 >
nfds
)

183 
i
 = 0;

184 
ªs
 = 0;

185 i‡(
	`FD_ISSET
(
i
, 
s›
->
evít_ªad£t_out
))

186 
ªs
 |
EV_READ
;

187 i‡(
	`FD_ISSET
(
i
, 
s›
->
evít_wrôe£t_out
))

188 
ªs
 |
EV_WRITE
;

190 i‡(
ªs
 == 0)

193 
	`evm≠_io_a˘ive
(
ba£
, 
i
, 
ªs
);

195 
	`check_£À˘›
(
s›
);

198 
	}
}

201 
	$£À˘_ªsize
(
£À˘›
 *
s›
, 
fdsz
)

203 
fd_£t
 *
ªad£t_ö
 = 
NULL
;

204 
fd_£t
 *
wrôe£t_ö
 = 
NULL
;

206 i‡(
s›
->
evít_ªad£t_ö
)

207 
	`check_£À˘›
(
s›
);

209 i‡((
ªad£t_ö
 = 
	`mm_ªÆloc
(
s›
->
evít_ªad£t_ö
, 
fdsz
)Ë=
NULL
)

210 
îr‹
;

211 
s›
->
evít_ªad£t_ö
 = 
ªad£t_ö
;

212 i‡((
wrôe£t_ö
 = 
	`mm_ªÆloc
(
s›
->
evít_wrôe£t_ö
, 
fdsz
)Ë=
NULL
) {

219 
îr‹
;

221 
s›
->
evít_wrôe£t_ö
 = 
wrôe£t_ö
;

222 
s›
->
ªsize_out_£ts
 = 1;

224 
	`mem£t
((*)
s›
->
evít_ªad£t_ö
 + s›->
evít_fdsz
, 0,

225 
fdsz
 - 
s›
->
evít_fdsz
);

226 
	`mem£t
((*)
s›
->
evít_wrôe£t_ö
 + s›->
evít_fdsz
, 0,

227 
fdsz
 - 
s›
->
evít_fdsz
);

229 
s›
->
evít_fdsz
 = 
fdsz
;

230 
	`check_£À˘›
(
s›
);

234 
îr‹
:

235 
	`evít_w¨n
("malloc");

237 
	}
}

241 
	$£À˘_add
(
evít_ba£
 *
ba£
, 
fd
, 
ﬁd
, 
evíts
, *
p
)

243 
£À˘›
 *
s›
 = 
ba£
->
evba£
;

244 (Ë
p
;

246 
	`EVUTIL_ASSERT
((
evíts
 & 
EV_SIGNAL
) == 0);

247 
	`check_£À˘›
(
s›
);

252 i‡(
s›
->
evít_fds
 < 
fd
) {

253 
fdsz
 = 
s›
->
evít_fdsz
;

255 i‡(
fdsz
 < ()(
fd_mask
))

256 
fdsz
 = ()(
fd_mask
);

261 
fdsz
 < (Ë
	`SELECT_ALLOC_SIZE
(
fd
 + 1))

262 
fdsz
 *= 2;

264 i‡(
fdsz
 !
s›
->
evít_fdsz
) {

265 i‡(
	`£À˘_ªsize
(
s›
, 
fdsz
)) {

266 
	`check_£À˘›
(
s›
);

271 
s›
->
evít_fds
 = 
fd
;

274 i‡(
evíts
 & 
EV_READ
)

275 
	`FD_SET
(
fd
, 
s›
->
evít_ªad£t_ö
);

276 i‡(
evíts
 & 
EV_WRITE
)

277 
	`FD_SET
(
fd
, 
s›
->
evít_wrôe£t_ö
);

278 
	`check_£À˘›
(
s›
);

281 
	}
}

288 
	$£À˘_dñ
(
evít_ba£
 *
ba£
, 
fd
, 
ﬁd
, 
evíts
, *
p
)

290 
£À˘›
 *
s›
 = 
ba£
->
evba£
;

291 ()
p
;

293 
	`EVUTIL_ASSERT
((
evíts
 & 
EV_SIGNAL
) == 0);

294 
	`check_£À˘›
(
s›
);

296 i‡(
s›
->
evít_fds
 < 
fd
) {

297 
	`check_£À˘›
(
s›
);

301 i‡(
evíts
 & 
EV_READ
)

302 
	`FD_CLR
(
fd
, 
s›
->
evít_ªad£t_ö
);

304 i‡(
evíts
 & 
EV_WRITE
)

305 
	`FD_CLR
(
fd
, 
s›
->
evít_wrôe£t_ö
);

307 
	`check_£À˘›
(
s›
);

309 
	}
}

312 
	$£À˘_‰ì_£À˘›
(
£À˘›
 *
s›
)

314 i‡(
s›
->
evít_ªad£t_ö
)

315 
	`mm_‰ì
(
s›
->
evít_ªad£t_ö
);

316 i‡(
s›
->
evít_wrôe£t_ö
)

317 
	`mm_‰ì
(
s›
->
evít_wrôe£t_ö
);

318 i‡(
s›
->
evít_ªad£t_out
)

319 
	`mm_‰ì
(
s›
->
evít_ªad£t_out
);

320 i‡(
s›
->
evít_wrôe£t_out
)

321 
	`mm_‰ì
(
s›
->
evít_wrôe£t_out
);

323 
	`mem£t
(
s›
, 0, (
£À˘›
));

324 
	`mm_‰ì
(
s›
);

325 
	}
}

328 
	$£À˘_dóŒoc
(
evít_ba£
 *
ba£
)

330 
	`evsig_dóŒoc
(
ba£
);

332 
	`£À˘_‰ì_£À˘›
(
ba£
->
evba£
);

333 
	}
}

	@signal.c

29 
	~"evít2/evít-c⁄fig.h
"

31 #ifde‡
WIN32


32 
	#WIN32_LEAN_AND_MEAN


	)

33 
	~<wösock2.h
>

34 
	~<wödows.h
>

35 #unde‡
WIN32_LEAN_AND_MEAN


37 
	~<sys/ty≥s.h
>

38 #ifde‡
_EVENT_HAVE_SYS_TIME_H


39 
	~<sys/time.h
>

41 
	~<sys/queue.h
>

42 #ifde‡
_EVENT_HAVE_SYS_SOCKET_H


43 
	~<sys/sockë.h
>

45 
	~<sig«l.h
>

46 
	~<°dio.h
>

47 
	~<°dlib.h
>

48 
	~<°rög.h
>

49 #ifde‡
_EVENT_HAVE_UNISTD_H


50 
	~<uni°d.h
>

52 
	~<î∫o.h
>

53 #ifde‡
_EVENT_HAVE_FCNTL_H


54 
	~<f˙é.h
>

57 
	~"evít2/evít.h
"

58 
	~"evít2/evít_°ru˘.h
"

59 
	~"evít-öã∫Æ.h
"

60 
	~"evít2/utû.h
"

61 
	~"evsig«l-öã∫Æ.h
"

62 
	~"log-öã∫Æ.h
"

63 
	~"evm≠-öã∫Æ.h
"

64 
	~"evthªad-öã∫Æ.h
"

84 #i‚de‡
WIN32


87 
	#__cde˛


	)

90 
evsig_add
(
evít_ba£
 *, 
evutû_sockë_t
, , , *);

91 
evsig_dñ
(
evít_ba£
 *, 
evutû_sockë_t
, , , *);

93 c⁄° 
evít›
 
	gevsig›s
 = {

95 
NULL
,

96 
evsig_add
,

97 
evsig_dñ
,

98 
NULL
,

99 
NULL
,

103 #i‚de‡
_EVENT_DISABLE_THREAD_SUPPORT


105 *
	gevsig_ba£_lock
 = 
NULL
;

108 
evít_ba£
 *
	gevsig_ba£
 = 
NULL
;

110 
	gevsig_ba£_n_sig«ls_added
 = 0;

111 
evutû_sockë_t
 
	gevsig_ba£_fd
 = -1;

113 
__cde˛
 
evsig_h™dÀr
(
sig
);

115 
	#EVSIGBASE_LOCK
(Ë
	`EVLOCK_LOCK
(
evsig_ba£_lock
, 0)

	)

116 
	#EVSIGBASE_UNLOCK
(Ë
	`EVLOCK_UNLOCK
(
evsig_ba£_lock
, 0)

	)

119 
	$evsig_£t_ba£
(
evít_ba£
 *
ba£
)

121 
	`EVSIGBASE_LOCK
();

122 
evsig_ba£
 = 
ba£
;

123 
evsig_ba£_n_sig«ls_added
 = 
ba£
->
sig
.
ev_n_sig«ls_added
;

124 
evsig_ba£_fd
 = 
ba£
->
sig
.
ev_sig«l_∑ú
[0];

125 
	`EVSIGBASE_UNLOCK
();

126 
	}
}

130 
	$evsig_cb
(
evutû_sockë_t
 
fd
, 
wh©
, *
¨g
)

132 
sig«ls
[1024];

133 
ev_ssize_t
 
n
;

134 
i
;

135 
nˇught
[
NSIG
];

136 
evít_ba£
 *
ba£
;

138 
ba£
 = 
¨g
;

140 
	`mem£t
(&
nˇught
, 0, (ncaught));

143 
n
 = 
	`ªcv
(
fd
, 
sig«ls
, (signals), 0);

144 i‡(
n
 == -1) {

145 
îr
 = 
	`evutû_sockë_gëîr‹
(
fd
);

146 i‡(! 
	`EVUTIL_ERR_RW_RETRIABLE
(
îr
))

147 
	`evít_sock_îr
(1, 
fd
, "%s:Ñecv", 
__func__
);

149 } i‡(
n
 == 0) {

153 
i
 = 0; i < 
n
; ++i) {

154 
ev_uöt8_t
 
sig
 = 
sig«ls
[
i
];

155 i‡(
sig
 < 
NSIG
)

156 
nˇught
[
sig
]++;

160 
	`EVBASE_ACQUIRE_LOCK
(
ba£
, 
th_ba£_lock
);

161 
i
 = 0; i < 
NSIG
; ++i) {

162 i‡(
nˇught
[
i
])

163 
	`evm≠_sig«l_a˘ive
(
ba£
, 
i
, 
nˇught
[i]);

165 
	`EVBASE_RELEASE_LOCK
(
ba£
, 
th_ba£_lock
);

166 
	}
}

169 
	$evsig_öô
(
evít_ba£
 *
ba£
)

176 i‡(
	`evutû_sockë∑ú
(

177 
AF_UNIX
, 
SOCK_STREAM
, 0, 
ba£
->
sig
.
ev_sig«l_∑ú
) == -1) {

178 #ifde‡
WIN32


181 
	`evít_sock_w¨n
(-1, "%s: sockë∑ú", 
__func__
);

183 
	`evít_sock_îr
(1, -1, "%s: sockë∑ú", 
__func__
);

188 
	`evutû_make_sockë_˛o£⁄exec
(
ba£
->
sig
.
ev_sig«l_∑ú
[0]);

189 
	`evutû_make_sockë_˛o£⁄exec
(
ba£
->
sig
.
ev_sig«l_∑ú
[1]);

190 
ba£
->
sig
.
sh_ﬁd
 = 
NULL
;

191 
ba£
->
sig
.
sh_ﬁd_max
 = 0;

193 
	`evutû_make_sockë_n⁄blockög
(
ba£
->
sig
.
ev_sig«l_∑ú
[0]);

194 
	`evutû_make_sockë_n⁄blockög
(
ba£
->
sig
.
ev_sig«l_∑ú
[1]);

196 
	`evít_assign
(&
ba£
->
sig
.
ev_sig«l
, ba£, ba£->sig.
ev_sig«l_∑ú
[1],

197 
EV_READ
 | 
EV_PERSIST
, 
evsig_cb
, 
ba£
);

199 
ba£
->
sig
.
ev_sig«l
.
ev_Êags
 |
EVLIST_INTERNAL
;

200 
	`evít_¥i‹ôy_£t
(&
ba£
->
sig
.
ev_sig«l
, 0);

202 
ba£
->
evsig£l
 = &
evsig›s
;

205 
	}
}

210 
_evsig_£t_h™dÀr
(
evít_ba£
 *
ba£
,

211 
evsig«l
, (
__cde˛
 *
h™dÀr
)())

213 #ifde‡
_EVENT_HAVE_SIGACTION


214 
siga˘i⁄
 
ß
;

216 
ev_sigh™dÀr_t
 
sh
;

218 
evsig_öfo
 *
sig
 = &
ba£
->sig;

219 *
p
;

225 i‡(
evsig«l
 >
sig
->
sh_ﬁd_max
) {

226 
√w_max
 = 
evsig«l
 + 1;

227 
	`evít_debug
(("%s:Évsignal (%d) >= sh_old_max (%d),Ñesizing",

228 
__func__
, 
evsig«l
, 
sig
->
sh_ﬁd_max
));

229 
p
 = 
	`mm_ªÆloc
(
sig
->
sh_ﬁd
, 
√w_max
 * (*sig->sh_old));

230 i‡(
p
 =
NULL
) {

231 
	`evít_w¨n
("realloc");

235 
	`mem£t
((*)
p
 + 
sig
->
sh_ﬁd_max
 * (*sig->
sh_ﬁd
),

236 0, (
√w_max
 - 
sig
->
sh_ﬁd_max
Ë* (*sig->
sh_ﬁd
));

238 
sig
->
sh_ﬁd_max
 = 
√w_max
;

239 
sig
->
sh_ﬁd
 = 
p
;

243 
sig
->
sh_ﬁd
[
evsig«l
] = 
	`mm_mÆloc
( *sig->sh_old[evsignal]);

244 i‡(
sig
->
sh_ﬁd
[
evsig«l
] =
NULL
) {

245 
	`evít_w¨n
("malloc");

250 #ifde‡
_EVENT_HAVE_SIGACTION


251 
	`mem£t
(&
ß
, 0, (sa));

252 
ß
.
ß_h™dÀr
 = 
h™dÀr
;

253 
ß
.
ß_Êags
 |
SA_RESTART
;

254 
	`sigfûl£t
(&
ß
.
ß_mask
);

256 i‡(
	`siga˘i⁄
(
evsig«l
, &
ß
, 
sig
->
sh_ﬁd
[evsignal]) == -1) {

257 
	`evít_w¨n
("sigaction");

258 
	`mm_‰ì
(
sig
->
sh_ﬁd
[
evsig«l
]);

259 
sig
->
sh_ﬁd
[
evsig«l
] = 
NULL
;

263 i‡((
sh
 = 
	`sig«l
(
evsig«l
, 
h™dÀr
)Ë=
SIG_ERR
) {

264 
	`evít_w¨n
("signal");

265 
	`mm_‰ì
(
sig
->
sh_ﬁd
[
evsig«l
]);

266 
sig
->
sh_ﬁd
[
evsig«l
] = 
NULL
;

269 *
sig
->
sh_ﬁd
[
evsig«l
] = 
sh
;

273 
	}
}

276 
	$evsig_add
(
evít_ba£
 *
ba£
, 
evutû_sockë_t
 
evsig«l
, 
ﬁd
, 
evíts
, *
p
)

278 
evsig_öfo
 *
sig
 = &
ba£
->sig;

279 ()
p
;

281 
	`EVUTIL_ASSERT
(
evsig«l
 >0 &&Évsig«»< 
NSIG
);

284 
	`EVSIGBASE_LOCK
();

285 i‡(
evsig_ba£
 !
ba£
 && 
evsig_ba£_n_sig«ls_added
) {

286 
	`evít_w¨nx
("Addedá signalÅoÉvent base %p with signals "

292 
ba£
, 
evsig_ba£
, ba£->
ev£l
->
«me
);

294 
evsig_ba£
 = 
ba£
;

295 
evsig_ba£_n_sig«ls_added
 = ++
sig
->
ev_n_sig«ls_added
;

296 
evsig_ba£_fd
 = 
ba£
->
sig
.
ev_sig«l_∑ú
[0];

297 
	`EVSIGBASE_UNLOCK
();

299 
	`evít_debug
(("%s: %d: ch™gög sig«»h™dÀr", 
__func__
, ()
evsig«l
));

300 i‡(
	`_evsig_£t_h™dÀr
(
ba£
, ()
evsig«l
, 
evsig_h™dÀr
) == -1) {

301 
îr
;

305 i‡(!
sig
->
ev_sig«l_added
) {

306 i‡(
	`evít_add
(&
sig
->
ev_sig«l
, 
NULL
))

307 
îr
;

308 
sig
->
ev_sig«l_added
 = 1;

313 
îr
:

314 
	`EVSIGBASE_LOCK
();

315 --
evsig_ba£_n_sig«ls_added
;

316 --
sig
->
ev_n_sig«ls_added
;

317 
	`EVSIGBASE_UNLOCK
();

319 
	}
}

322 
	$_evsig_ª°‹e_h™dÀr
(
evít_ba£
 *
ba£
, 
evsig«l
)

324 
ªt
 = 0;

325 
evsig_öfo
 *
sig
 = &
ba£
->sig;

326 #ifde‡
_EVENT_HAVE_SIGACTION


327 
siga˘i⁄
 *
sh
;

329 
ev_sigh™dÀr_t
 *
sh
;

333 
sh
 = 
sig
->
sh_ﬁd
[
evsig«l
];

334 
sig
->
sh_ﬁd
[
evsig«l
] = 
NULL
;

335 #ifde‡
_EVENT_HAVE_SIGACTION


336 i‡(
	`siga˘i⁄
(
evsig«l
, 
sh
, 
NULL
) == -1) {

337 
	`evít_w¨n
("sigaction");

338 
ªt
 = -1;

341 i‡(
	`sig«l
(
evsig«l
, *
sh
Ë=
SIG_ERR
) {

342 
	`evít_w¨n
("signal");

343 
ªt
 = -1;

347 
	`mm_‰ì
(
sh
);

349  
ªt
;

350 
	}
}

353 
	$evsig_dñ
(
evít_ba£
 *
ba£
, 
evutû_sockë_t
 
evsig«l
, 
ﬁd
, 
evíts
, *
p
)

355 
	`EVUTIL_ASSERT
(
evsig«l
 >0 &&Évsig«»< 
NSIG
);

357 
	`evít_debug
(("%s: "
EV_SOCK_FMT
":Ñestoring signal handler",

358 
__func__
, 
	`EV_SOCK_ARG
(
evsig«l
)));

360 
	`EVSIGBASE_LOCK
();

361 --
evsig_ba£_n_sig«ls_added
;

362 --
ba£
->
sig
.
ev_n_sig«ls_added
;

363 
	`EVSIGBASE_UNLOCK
();

365  (
	`_evsig_ª°‹e_h™dÀr
(
ba£
, ()
evsig«l
));

366 
	}
}

368 
__cde˛


369 
	$evsig_h™dÀr
(
sig
)

371 
ßve_î∫o
 = 
î∫o
;

372 #ifde‡
WIN32


373 
sockë_î∫o
 = 
	`EVUTIL_SOCKET_ERROR
();

375 
ev_uöt8_t
 
msg
;

377 i‡(
evsig_ba£
 =
NULL
) {

378 
	`evít_w¨nx
(

380 
__func__
, 
sig
);

384 #i‚de‡
_EVENT_HAVE_SIGACTION


385 
	`sig«l
(
sig
, 
evsig_h™dÀr
);

389 
msg
 = 
sig
;

390 
	`£nd
(
evsig_ba£_fd
, (*)&
msg
, 1, 0);

391 
î∫o
 = 
ßve_î∫o
;

392 #ifde‡
WIN32


393 
	`EVUTIL_SET_SOCKET_ERROR
(
sockë_î∫o
);

395 
	}
}

398 
	$evsig_dóŒoc
(
evít_ba£
 *
ba£
)

400 
i
 = 0;

401 i‡(
ba£
->
sig
.
ev_sig«l_added
) {

402 
	`evít_dñ
(&
ba£
->
sig
.
ev_sig«l
);

403 
ba£
->
sig
.
ev_sig«l_added
 = 0;

407 
	`evít_debug_u«ssign
(&
ba£
->
sig
.
ev_sig«l
);

409 
i
 = 0; i < 
NSIG
; ++i) {

410 i‡(
i
 < 
ba£
->
sig
.
sh_ﬁd_max
 && ba£->sig.
sh_ﬁd
[i] !
NULL
)

411 
	`_evsig_ª°‹e_h™dÀr
(
ba£
, 
i
);

413 
	`EVSIGBASE_LOCK
();

414 i‡(
ba£
 =
evsig_ba£
) {

415 
evsig_ba£
 = 
NULL
;

416 
evsig_ba£_n_sig«ls_added
 = 0;

417 
evsig_ba£_fd
 = -1;

419 
	`EVSIGBASE_UNLOCK
();

421 i‡(
ba£
->
sig
.
ev_sig«l_∑ú
[0] != -1) {

422 
	`evutû_˛o£sockë
(
ba£
->
sig
.
ev_sig«l_∑ú
[0]);

423 
ba£
->
sig
.
ev_sig«l_∑ú
[0] = -1;

425 i‡(
ba£
->
sig
.
ev_sig«l_∑ú
[1] != -1) {

426 
	`evutû_˛o£sockë
(
ba£
->
sig
.
ev_sig«l_∑ú
[1]);

427 
ba£
->
sig
.
ev_sig«l_∑ú
[1] = -1;

429 
ba£
->
sig
.
sh_ﬁd_max
 = 0;

432 i‡(
ba£
->
sig
.
sh_ﬁd
) {

433 
	`mm_‰ì
(
ba£
->
sig
.
sh_ﬁd
);

434 
ba£
->
sig
.
sh_ﬁd
 = 
NULL
;

436 
	}
}

438 #i‚de‡
_EVENT_DISABLE_THREAD_SUPPORT


440 
	$evsig_globÆ_£tup_locks_
(c⁄° 
íabÀ_locks
)

442 
	`EVTHREAD_SETUP_GLOBAL_LOCK
(
evsig_ba£_lock
, 0);

444 
	}
}

	@strlcpy-internal.h

1 #i‚de‡
_STRLCPY_INTERNAL_H_


2 
	#_STRLCPY_INTERNAL_H_


	)

4 #ifde‡
__˝lu•lus


8 
	~"evít2/evít-c⁄fig.h
"

10 #i‚de‡
_EVENT_HAVE_STRLCPY


11 
	~<°rög.h
>

12 
size_t
 
_evít_°æ˝y
(*
d°
, c⁄° *
§c
, size_à
siz
);

13 
	#°æ˝y
 
_evít_°æ˝y


	)

16 #ifde‡
__˝lu•lus


	@strlcpy.c

30 #i‡
deföed
(
LIBC_SCCS
Ë&& !deföed(
löt
)

31 *
	grcsid
 = "$OpenBSD: strlcpy.c,v 1.5 2001/05/13 15:40:16 deraadt Exp $";

34 
	~<sys/ty≥s.h
>

36 
	~"evít2/evít-c⁄fig.h
"

38 #i‚de‡
_EVENT_HAVE_STRLCPY


39 
	~"°æ˝y-öã∫Æ.h
"

46 
size_t


47 
	$_evít_°æ˝y
(
d°
, 
§c
, 
siz
)

48 *
d°
;

49 c⁄° *
§c
;

50 
size_t
 
siz
;

52 *
d
 = 
d°
;

53 c⁄° *
s
 = 
§c
;

54 
size_t
 
n
 = 
siz
;

57 i‡(
n
 != 0 && --n != 0) {

59 i‡((*
d
++ = *
s
++) == 0)

61 } --
n
 != 0);

65 i‡(
n
 == 0) {

66 i‡(
siz
 != 0)

67 *
d
 = '\0';

68 *
s
++)

72  (
s
 - 
§c
 - 1);

73 
	}
}

	@test/bench.c

36 
	~"evít2/evít-c⁄fig.h
"

38 
	~<sys/ty≥s.h
>

39 
	~<sys/°©.h
>

40 #ifde‡
_EVENT_HAVE_SYS_TIME_H


41 
	~<sys/time.h
>

43 #ifde‡
WIN32


44 
	#WIN32_LEAN_AND_MEAN


	)

45 
	~<wödows.h
>

47 
	~<sys/sockë.h
>

48 
	~<sig«l.h
>

49 
	~<sys/ªsour˚.h
>

51 
	~<f˙é.h
>

52 
	~<°dlib.h
>

53 
	~<°dio.h
>

54 
	~<°rög.h
>

55 #ifde‡
_EVENT_HAVE_UNISTD_H


56 
	~<uni°d.h
>

58 
	~<î∫o.h
>

60 
	~<evít.h
>

61 
	~<evutû.h
>

63 
	gcou¡
, 
	gwrôes
, 
	gfúed
;

64 
evutû_sockë_t
 *
	gpùes
;

65 
	gnum_pùes
, 
	gnum_a˘ive
, 
	gnum_wrôes
;

66 
evít
 *
	gevíts
;

70 
	$ªad_cb
(
evutû_sockë_t
 
fd
, 
which
, *
¨g
)

72 
ev_öçå_t
 
idx
 = (ev_öçå_tË
¨g
, 
widx
 = idx + 1;

73 
u_ch¨
 
ch
;

75 
cou¡
 +
	`ªcv
(
fd
, (*)&
ch
, (ch), 0);

76 i‡(
wrôes
) {

77 i‡(
widx
 >
num_pùes
)

78 
widx
 -
num_pùes
;

79 
	`£nd
(
pùes
[2 * 
widx
 + 1], "e", 1, 0);

80 
wrôes
--;

81 
fúed
++;

83 
	}
}

85 
timevÆ
 *

86 
	$run_⁄˚
()

88 
evutû_sockë_t
 *
˝
, 
•a˚
;

89 
i
;

90 
timevÆ
 
ts
, 
ã
;

92 
˝
 = 
pùes
, 
i
 = 0; i < 
num_pùes
; i++, cp += 2) {

93 i‡(
	`evít_öôülized
(&
evíts
[
i
]))

94 
	`evít_dñ
(&
evíts
[
i
]);

95 
	`evít_£t
(&
evíts
[
i
], 
˝
[0], 
EV_READ
 | 
EV_PERSIST
, 
ªad_cb
, (*)(
ev_öçå_t
) i);

96 
	`evít_add
(&
evíts
[
i
], 
NULL
);

99 
	`evít_lo›
(
EVLOOP_ONCE
 | 
EVLOOP_NONBLOCK
);

101 
fúed
 = 0;

102 
•a˚
 = 
num_pùes
 / 
num_a˘ive
;

103 
•a˚
 = space * 2;

104 
i
 = 0; i < 
num_a˘ive
; i++, 
fúed
++)

105 
	`£nd
(
pùes
[
i
 * 
•a˚
 + 1], "e", 1, 0);

107 
cou¡
 = 0;

108 
wrôes
 = 
num_wrôes
;

109 { 
xcou¡
 = 0;

110 
	`evutû_gëtimeofday
(&
ts
, 
NULL
);

112 
	`evít_lo›
(
EVLOOP_ONCE
 | 
EVLOOP_NONBLOCK
);

113 
xcou¡
++;

114 } 
cou¡
 !
fúed
);

115 
	`evutû_gëtimeofday
(&
ã
, 
NULL
);

117 i‡(
xcou¡
 !
cou¡
Ë
	`Ârötf
(
°dîr
, "Xcount: %d, Rcount: %d\n", xcount, count);

120 
	`evutû_timîsub
(&
ã
, &
ts
, &te);

122  (&
ã
);

123 
	}
}

126 
	$maö
(
¨gc
, **
¨gv
)

128 #i‚de‡
WIN32


129 
æimô
 
æ
;

131 
i
, 
c
;

132 
timevÆ
 *
tv
;

133 
evutû_sockë_t
 *
˝
;

135 #ifde‡
WIN32


136 
WSADATA
 
WSAD©a
;

137 
	`WSASèπup
(0x101, &
WSAD©a
);

139 
num_pùes
 = 100;

140 
num_a˘ive
 = 1;

141 
num_wrôes
 = 
num_pùes
;

142 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "n:a:w:")) != -1) {

143 
c
) {

145 
num_pùes
 = 
	`©oi
(
›èrg
);

148 
num_a˘ive
 = 
	`©oi
(
›èrg
);

151 
num_wrôes
 = 
	`©oi
(
›èrg
);

154 
	`Ârötf
(
°dîr
, "IŒegÆárgumíà\"%c\"\n", 
c
);

155 
	`exô
(1);

159 #i‚de‡
WIN32


160 
æ
.
æim_cur
 =Ñl.
æim_max
 = 
num_pùes
 * 2 + 50;

161 i‡(
	`£ålimô
(
RLIMIT_NOFILE
, &
æ
) == -1) {

162 
	`≥º‹
("setrlimit");

163 
	`exô
(1);

167 
evíts
 = 
	`ˇŒoc
(
num_pùes
, (
evít
));

168 
pùes
 = 
	`ˇŒoc
(
num_pùes
 * 2, (
evutû_sockë_t
));

169 i‡(
evíts
 =
NULL
 || 
pùes
 == NULL) {

170 
	`≥º‹
("malloc");

171 
	`exô
(1);

174 
	`evít_öô
();

176 
˝
 = 
pùes
, 
i
 = 0; i < 
num_pùes
; i++, cp += 2) {

177 #ifde‡
USE_PIPES


178 i‡(
	`pùe
(
˝
) == -1) {

180 i‡(
	`evutû_sockë∑ú
(
AF_UNIX
, 
SOCK_STREAM
, 0, 
˝
) == -1) {

182 
	`≥º‹
("pipe");

183 
	`exô
(1);

187 
i
 = 0; i < 25; i++) {

188 
tv
 = 
	`run_⁄˚
();

189 i‡(
tv
 =
NULL
)

190 
	`exô
(1);

191 
	`Ârötf
(
°dout
, "%ld\n",

192 
tv
->
tv_£c
 * 1000000L +Åv->
tv_u£c
);

195 
	`exô
(0);

196 
	}
}

	@test/bench_cascade.c

28 
	~"evít2/evít-c⁄fig.h
"

30 
	~<sys/ty≥s.h
>

31 
	~<sys/°©.h
>

32 #ifde‡
_EVENT_HAVE_SYS_TIME_H


33 
	~<sys/time.h
>

35 #ifde‡
WIN32


36 
	#WIN32_LEAN_AND_MEAN


	)

37 
	~<wödows.h
>

39 
	~<sys/sockë.h
>

40 
	~<sys/ªsour˚.h
>

42 
	~<sig«l.h
>

43 
	~<f˙é.h
>

44 
	~<°dlib.h
>

45 
	~<°dio.h
>

46 
	~<°rög.h
>

47 #ifde‡
_EVENT_HAVE_UNISTD_H


48 
	~<uni°d.h
>

50 
	~<î∫o.h
>

52 
	~<evít.h
>

53 
	~<evutû.h
>

62 
	gfúed
;

63 
evutû_sockë_t
 *
	gpùes
;

64 
evít
 *
	gevíts
;

67 
	$ªad_cb
(
evutû_sockë_t
 
fd
, 
which
, *
¨g
)

69 
ch
;

70 
evutû_sockë_t
 
sock
 = (evutû_sockë_t)(
ev_öçå_t
)
¨g
;

72 
	`ªcv
(
fd
, &
ch
, (ch), 0);

73 i‡(
sock
 >= 0) {

74 i‡(
	`£nd
(
sock
, "e", 1, 0) < 0)

75 
	`≥º‹
("send");

77 
fúed
++;

78 
	}
}

80 
timevÆ
 *

81 
	$run_⁄˚
(
num_pùes
)

83 
i
;

84 
evutû_sockë_t
 *
˝
;

85 
timevÆ
 
ts
, 
ã
, 
tv_timeout
;

87 
evíts
 = 
	`ˇŒoc
(
num_pùes
, (
evít
));

88 
pùes
 = 
	`ˇŒoc
(
num_pùes
 * 2, (
evutû_sockë_t
));

90 i‡(
evíts
 =
NULL
 || 
pùes
 == NULL) {

91 
	`≥º‹
("malloc");

92 
	`exô
(1);

95 
˝
 = 
pùes
, 
i
 = 0; i < 
num_pùes
; i++, cp += 2) {

96 i‡(
	`evutû_sockë∑ú
(
AF_UNIX
, 
SOCK_STREAM
, 0, 
˝
) == -1) {

97 
	`≥º‹
("socketpair");

98 
	`exô
(1);

103 
	`evutû_gëtimeofday
(&
ts
, 
NULL
);

106 
	`evutû_timî˛ór
(&
tv_timeout
);

107 
tv_timeout
.
tv_£c
 = 60;

109 
˝
 = 
pùes
, 
i
 = 0; i < 
num_pùes
; i++, cp += 2) {

110 
evutû_sockë_t
 
fd
 = 
i
 < 
num_pùes
 - 1 ? 
˝
[3] : -1;

111 
	`evít_£t
(&
evíts
[
i
], 
˝
[0], 
EV_READ
, 
ªad_cb
,

112 (*)(
ev_öçå_t
)
fd
);

113 
	`evít_add
(&
evíts
[
i
], &
tv_timeout
);

116 
fúed
 = 0;

119 i‡(
	`£nd
(
pùes
[1], "e", 1, 0) < 0)

120 
	`≥º‹
("send");

122 
	`evít_di•©ch
();

124 
	`evutû_gëtimeofday
(&
ã
, 
NULL
);

125 
	`evutû_timîsub
(&
ã
, &
ts
, &te);

127 
˝
 = 
pùes
, 
i
 = 0; i < 
num_pùes
; i++, cp += 2) {

128 
	`evít_dñ
(&
evíts
[
i
]);

129 
	`˛o£
(
˝
[0]);

130 
	`˛o£
(
˝
[1]);

133 
	`‰ì
(
pùes
);

134 
	`‰ì
(
evíts
);

136  (&
ã
);

137 
	}
}

140 
	$maö
(
¨gc
, **
¨gv
)

142 #i‚de‡
WIN32


143 
æimô
 
æ
;

145 
i
, 
c
;

146 
timevÆ
 *
tv
;

148 
num_pùes
 = 100;

149 (
c
 = 
	`gë›t
(
¨gc
, 
¨gv
, "n:")) != -1) {

150 
c
) {

152 
num_pùes
 = 
	`©oi
(
›èrg
);

155 
	`Ârötf
(
°dîr
, "IŒegÆárgumíà\"%c\"\n", 
c
);

156 
	`exô
(1);

160 #i‚de‡
WIN32


161 
æ
.
æim_cur
 =Ñl.
æim_max
 = 
num_pùes
 * 2 + 50;

162 i‡(
	`£ålimô
(
RLIMIT_NOFILE
, &
æ
) == -1) {

163 
	`≥º‹
("setrlimit");

164 
	`exô
(1);

168 
	`evít_öô
();

170 
i
 = 0; i < 25; i++) {

171 
tv
 = 
	`run_⁄˚
(
num_pùes
);

172 i‡(
tv
 =
NULL
)

173 
	`exô
(1);

174 
	`Ârötf
(
°dout
, "%ld\n",

175 
tv
->
tv_£c
 * 1000000L +Åv->
tv_u£c
);

178 
	`exô
(0);

179 
	}
}

	@test/bench_http.c

28 
	~<sys/ty≥s.h
>

29 
	~<sys/°©.h
>

30 #ifde‡
WIN32


31 
	~<wösock2.h
>

33 
	~<sys/sockë.h
>

34 
	~<sys/ªsour˚.h
>

35 
	~<sys/time.h
>

36 
	~<uni°d.h
>

38 
	~<f˙é.h
>

39 
	~<sig«l.h
>

40 
	~<°dlib.h
>

41 
	~<°dio.h
>

42 
	~<°rög.h
>

43 
	~<î∫o.h
>

45 
	~"evít2/evít.h
"

46 
	~"evít2/buf„r.h
"

47 
	~"evít2/utû.h
"

48 
	~"evít2/hâp.h
"

49 
	~"evít2/thªad.h
"

51 
hâp_basic_cb
(
evhâp_ªque°
 *
ªq
, *
¨g
);

53 *
	gc⁄ã¡
;

54 
size_t
 
	gc⁄ã¡_Àn
 = 0;

57 
	$hâp_basic_cb
(
evhâp_ªque°
 *
ªq
, *
¨g
)

59 
evbuf„r
 *
evb
 = 
	`evbuf„r_√w
();

61 
	`evbuf„r_add
(
evb
, 
c⁄ã¡
, 
c⁄ã¡_Àn
);

64 
	`evhâp_£nd_ª∂y
(
ªq
, 
HTTP_OK
, "Evîythög i†föe", 
evb
);

66 
	`evbuf„r_‰ì
(
evb
);

67 
	}
}

69 #i‡
LIBEVENT_VERSION_NUMBER
 >= 0x02000200

71 
	$hâp_ªf_cb
(
evhâp_ªque°
 *
ªq
, *
¨g
)

73 
evbuf„r
 *
evb
 = 
	`evbuf„r_√w
();

75 
	`evbuf„r_add_ª„ªn˚
(
evb
, 
c⁄ã¡
, 
c⁄ã¡_Àn
, 
NULL
, NULL);

78 
	`evhâp_£nd_ª∂y
(
ªq
, 
HTTP_OK
, "Evîythög i†föe", 
evb
);

80 
	`evbuf„r_‰ì
(
evb
);

81 
	}
}

85 
	$maö
(
¨gc
, **
¨gv
)

87 
evít_c⁄fig
 *
cfg
 = 
	`evít_c⁄fig_√w
();

88 
evít_ba£
 *
ba£
;

89 
evhâp
 *
hâp
;

90 
i
;

91 
c
;

92 
u£_io˝
 = 0;

93 
p‹t
 = 8080;

94 *
íd±r
 = 
NULL
;

96 #ifde‡
WIN32


97 
WSADATA
 
WSAD©a
;

98 
	`WSASèπup
(0x101, &
WSAD©a
);

100 i‡(
	`sig«l
(
SIGPIPE
, 
SIG_IGN
Ë=
SIG_ERR
)

104 
i
 = 1; i < 
¨gc
; ++i) {

105 i‡(*
¨gv
[
i
] != '-')

108 
c
 = 
¨gv
[
i
][1];

110 i‡((
c
 ='p' || c ='l'Ë&& 
i
 + 1 >
¨gc
) {

111 
	`Ârötf
(
°dîr
, "-%¯ªquúe†¨gumít.\n", 
c
);

112 
	`exô
(1);

115 
c
) {

117 i‡(
i
+1 >
¨gc
 || !
¨gv
[i+1]) {

118 
	`Ârötf
(
°dîr
, "MissingÖort\n");

119 
	`exô
(1);

121 
p‹t
 = ()
	`°πﬁ
(
¨gv
[
i
+1], &
íd±r
, 10);

122 i‡(*
íd±r
 != '\0') {

123 
	`Ârötf
(
°dîr
, "BadÖort\n");

124 
	`exô
(1);

128 i‡(
i
+1 >
¨gc
 || !
¨gv
[i+1]) {

129 
	`Ârötf
(
°dîr
, "Missing contentÜength\n");

130 
	`exô
(1);

132 
c⁄ã¡_Àn
 = (
size_t
)
	`°πﬁ
(
¨gv
[
i
+1], &
íd±r
, 10);

133 i‡(*
íd±r
 !'\0' || 
c⁄ã¡_Àn
 == 0) {

134 
	`Ârötf
(
°dîr
, "Bad contentÜength\n");

135 
	`exô
(1);

138 #ifde‡
WIN32


140 
u£_io˝
 = 1;

141 
	`evthªad_u£_wödows_thªads
();

142 
	`evít_c⁄fig_£t_Êag
(
cfg
,
EVENT_BASE_FLAG_STARTUP_IOCP
);

146 
	`Ârötf
(
°dîr
, "IŒegÆárgumíà\"%c\"\n", 
c
);

147 
	`exô
(1);

151 
ba£
 = 
	`evít_ba£_√w_wôh_c⁄fig
(
cfg
);

152 i‡(!
ba£
) {

153 
	`Ârötf
(
°dîr
, "creatingÉvent_base failed. Exiting.\n");

157 
hâp
 = 
	`evhâp_√w
(
ba£
);

159 
c⁄ã¡
 = 
	`mÆloc
(
c⁄ã¡_Àn
);

160 i‡(
c⁄ã¡
 =
NULL
) {

161 
	`Ârötf
(
°dîr
, "Cannotállocate content\n");

162 
	`exô
(1);

164 
i
 = 0;

165 
i
 = 0; i < ()
c⁄ã¡_Àn
; ++i)

166 
c⁄ã¡
[
i
] = (i & 255);

169 
	`evhâp_£t_cb
(
hâp
, "/öd", 
hâp_basic_cb
, 
NULL
);

170 
	`Ârötf
(
°dîr
, "/ind - basic content (memory copy)\n");

172 #ifde‡
_EVENT2_EVENT_H_


173 
	`evhâp_£t_cb
(
hâp
, "/ªf", 
hâp_ªf_cb
, 
NULL
);

174 
	`Ârötf
(
°dîr
, "/ref - basic content (reference)\n");

177 
	`Ârötf
(
°dîr
, "Serving %d bytes onÖort %d using %s\n",

178 ()
c⁄ã¡_Àn
, 
p‹t
,

179 
u£_io˝
? "IOCP" : 
	`evít_ba£_gë_mëhod
(
ba£
));

181 
	`evhâp_böd_sockë
(
hâp
, "0.0.0.0", 
p‹t
);

183 i‡(
u£_io˝
) {

184 
timevÆ
 
tv
={99999999,0};

185 
	`evít_ba£_lo›exô
(
ba£
, &
tv
);

187 
	`evít_ba£_di•©ch
(
ba£
);

191 
	}
}

	@test/bench_httpclient.c

28 
	~<sys/ty≥s.h
>

29 #ifde‡
WIN32


30 
	~<wösock2.h
>

32 
	~<sys/sockë.h
>

33 
	~<√töë/ö.h
>

34 #ifde‡
_XOPEN_SOURCE_EXTENDED


35 
	~<¨∑/öë.h
>

38 
	~<°dlib.h
>

39 
	~<°rög.h
>

40 
	~<î∫o.h
>

42 
	~"evít2/evít.h
"

43 
	~"evít2/buf„ªvít.h
"

44 
	~"evít2/buf„r.h
"

45 
	~"evít2/utû.h
"

48 
	~"utû-öã∫Æ.h
"

50 c⁄° *
	gªsour˚
 = 
NULL
;

51 
evít_ba£
 *
	gba£
 = 
NULL
;

53 
	gtŸÆ_n_h™dÀd
 = 0;

54 
	gtŸÆ_n_îr‹s
 = 0;

55 
	gtŸÆ_n_œunched
 = 0;

56 
size_t
 
	gtŸÆ_n_byãs
 = 0;

57 
timevÆ
 
	gtŸÆ_time
 = {0,0};

58 
	gn_îr‹s
 = 0;

60 c⁄° 
	gPARALLELISM
 = 200;

61 c⁄° 
	gN_REQUESTS
 = 20000;

63 
	sªque°_öfo
 {

64 
size_t
 
	mn_ªad
;

65 
timevÆ
 
	m°¨ãd
;

68 
œunch_ªque°
();

69 
ªadcb
(
buf„ªvít
 *
b
, *
¨g
);

70 
îr‹cb
(
buf„ªvít
 *
b
, 
wh©
, *
¨g
);

73 
	$ªadcb
(
buf„ªvít
 *
b
, *
¨g
)

75 
ªque°_öfo
 *
ri
 = 
¨g
;

76 
evbuf„r
 *
öput
 = 
	`buf„ªvít_gë_öput
(
b
);

77 
size_t
 
n
 = 
	`evbuf„r_gë_Àngth
(
öput
);

79 
ri
->
n_ªad
 +
n
;

80 
	`evbuf„r_døö
(
öput
, 
n
);

81 
	}
}

84 
	$îr‹cb
(
buf„ªvít
 *
b
, 
wh©
, *
¨g
)

86 
ªque°_öfo
 *
ri
 = 
¨g
;

87 
timevÆ
 
now
, 
diff
;

88 i‡(
wh©
 & 
BEV_EVENT_EOF
) {

89 ++
tŸÆ_n_h™dÀd
;

90 
tŸÆ_n_byãs
 +
ri
->
n_ªad
;

91 
	`evutû_gëtimeofday
(&
now
, 
NULL
);

92 
	`evutû_timîsub
(&
now
, &
ri
->
°¨ãd
, &
diff
);

93 
	`evutû_timîadd
(&
diff
, &
tŸÆ_time
, &total_time);

95 i‡(
tŸÆ_n_h™dÀd
 && (total_n_handled%1000)==0)

96 
	`¥ötf
("%dÑeque°†d⁄e\n",
tŸÆ_n_h™dÀd
);

98 i‡(
tŸÆ_n_œunched
 < 
N_REQUESTS
) {

99 i‡(
	`œunch_ªque°
() < 0)

100 
	`≥º‹
("Can'tÜaunch");

103 ++
tŸÆ_n_îr‹s
;

104 
	`≥º‹
("UnexpectedÉrror");

107 
	`buf„ªvít_£tcb
(
b
, 
NULL
, NULL, NULL, NULL);

108 
	`‰ì
(
ri
);

109 
	`buf„ªvít_dißbÀ
(
b
, 
EV_READ
|
EV_WRITE
);

110 
	`buf„ªvít_‰ì
(
b
);

111 
	}
}

114 
	$‰ob_sockë
(
evutû_sockë_t
 
sock
)

116 
lögî
 
l
;

117 
⁄e
 = 1;

118 i‡(
	`£tsock›t
(
sock
, 
SOL_SOCKET
, 
SO_REUSEADDR
, (*)&
⁄e
, (one))<0)

119 
	`≥º‹
("setsockopt(SO_REUSEADDR)");

120 
l
.
l_⁄off
 = 1;

121 
l
.
l_lögî
 = 0;

122 i‡(
	`£tsock›t
(
sock
, 
SOL_SOCKET
, 
SO_LINGER
, (*)&
l
, (l))<0)

123 
	`≥º‹
("setsockopt(SO_LINGER)");

124 
	}
}

127 
	$œunch_ªque°
()

129 
evutû_sockë_t
 
sock
;

130 
sockaddr_ö
 
sö
;

131 
buf„ªvít
 *
b
;

133 
ªque°_öfo
 *
ri
;

135 
	`mem£t
(&
sö
, 0, (sin));

137 ++
tŸÆ_n_œunched
;

139 
sö
.
sö_Ámûy
 = 
AF_INET
;

140 
sö
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(0x7f000001);

141 
sö
.
sö_p‹t
 = 
	`ht⁄s
(8080);

142 i‡((
sock
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0)) < 0)

144 i‡(
	`evutû_make_sockë_n⁄blockög
(
sock
) < 0)

146 
	`‰ob_sockë
(
sock
);

147 i‡(
	`c⁄√˘
(
sock
, (
sockaddr
*)&
sö
, (sin)) < 0) {

148 
e
 = 
î∫o
;

149 i‡(! 
	`EVUTIL_ERR_CONNECT_RETRIABLE
(
e
)) {

154 
ri
 = 
	`mÆloc
((*ri));

155 
ri
->
n_ªad
 = 0;

156 
	`evutû_gëtimeofday
(&
ri
->
°¨ãd
, 
NULL
);

158 
b
 = 
	`buf„ªvít_sockë_√w
(
ba£
, 
sock
, 
BEV_OPT_CLOSE_ON_FREE
);

160 
	`buf„ªvít_£tcb
(
b
, 
ªadcb
, 
NULL
, 
îr‹cb
, 
ri
);

161 
	`buf„ªvít_íabÀ
(
b
, 
EV_READ
|
EV_WRITE
);

163 
	`evbuf„r_add_¥ötf
(
	`buf„ªvít_gë_ouçut
(
b
),

164 "GET %†HTTP/1.0\r\n\r\n", 
ªsour˚
);

167 
	}
}

171 
	$maö
(
¨gc
, **
¨gv
)

173 
i
;

174 
timevÆ
 
°¨t
, 
íd
, 
tŸÆ
;

175 
u£c
;

176 
throughput
;

177 
ªsour˚
 = "/ref";

179 
	`£tvbuf
(
°dout
, 
NULL
, 
_IONBF
, 0);

181 
ba£
 = 
	`evít_ba£_√w
();

183 
i
=0; i < 
PARALLELISM
; ++i) {

184 i‡(
	`œunch_ªque°
() < 0)

185 
	`≥º‹
("launch");

188 
	`evutû_gëtimeofday
(&
°¨t
, 
NULL
);

190 
	`evít_ba£_di•©ch
(
ba£
);

192 
	`evutû_gëtimeofday
(&
íd
, 
NULL
);

193 
	`evutû_timîsub
(&
íd
, &
°¨t
, &
tŸÆ
);

194 
u£c
 = 
tŸÆ_time
.
tv_£c
 * 1000000 +ÅŸÆ_time.
tv_u£c
;

196 i‡(!
tŸÆ_n_h™dÀd
) {

197 
	`puts
("Nothing worked. YouÖrobably did something dumb.");

202 
throughput
 = 
tŸÆ_n_h™dÀd
 /

203 (
tŸÆ
.
tv_£c
+ ((ÈŸÆ.
tv_u£c
)/1000000.0);

205 #ifde‡
WIN32


206 
	#I64_FMT
 "%I64d"

	)

207 
	#I64_TYP
 
__öt64


	)

209 
	#I64_FMT
 "%Œd"

	)

210 
	#I64_TYP
 

	)

213 
	`¥ötf
("\n%dÑequests in %d.%06d sec. (%.2fÅhroughput)\n"

215 
I64_FMT
 "bytesÑead. %dÉrrors.\n",

216 
tŸÆ_n_h™dÀd
,

217 ()
tŸÆ
.
tv_£c
, (ÈŸÆ.
tv_u£c
,

218 
throughput
,

219 ()(
u£c
/1000Ë/ 
tŸÆ_n_h™dÀd
,

220 (
I64_TYP
)
tŸÆ_n_byãs
, 
n_îr‹s
);

223 
	}
}

	@test/regress.c

28 #ifde‡
WIN32


29 
	~<wösock2.h
>

30 
	~<wödows.h
>

33 
	~"evít2/evít-c⁄fig.h
"

35 
	~<sys/ty≥s.h
>

36 
	~<sys/°©.h
>

37 #ifde‡
_EVENT_HAVE_SYS_TIME_H


38 
	~<sys/time.h
>

40 
	~<sys/queue.h
>

41 #i‚de‡
WIN32


42 
	~<sys/sockë.h
>

43 
	~<sys/waô.h
>

44 
	~<sig«l.h
>

45 
	~<uni°d.h
>

46 
	~<√tdb.h
>

48 
	~<f˙é.h
>

49 
	~<sig«l.h
>

50 
	~<°dlib.h
>

51 
	~<°dio.h
>

52 
	~<°rög.h
>

53 
	~<î∫o.h
>

54 
	~<as£π.h
>

55 
	~<˘y≥.h
>

57 
	~"evít2/evít.h
"

58 
	~"evít2/evít_°ru˘.h
"

59 
	~"evít2/evít_com∑t.h
"

60 
	~"evít2/èg.h
"

61 
	~"evít2/buf„r.h
"

62 
	~"evít2/buf„r_com∑t.h
"

63 
	~"evít2/utû.h
"

64 
	~"evít-öã∫Æ.h
"

65 
	~"evthªad-öã∫Æ.h
"

66 
	~"utû-öã∫Æ.h
"

67 
	~"log-öã∫Æ.h
"

69 
	~"ªgªss.h
"

71 #i‚de‡
WIN32


72 
	~"ªgªss.gí.h
"

75 
evutû_sockë_t
 
	g∑ú
[2];

76 
	gã°_ok
;

77 
	gˇŒed
;

78 
evít_ba£
 *
	gglobÆ_ba£
;

80 
	gwbuf
[4096];

81 
	grbuf
[4096];

82 
	gwoff
;

83 
	groff
;

84 
	gu£≥rsi°
;

85 
timevÆ
 
	gt£t
;

86 
timevÆ
 
	gtˇŒed
;

89 
	#TEST1
 "thi†i†®ã°"

	)

90 
	#SECONDS
 1

	)

92 #i‚de‡
SHUT_WR


93 
	#SHUT_WR
 1

	)

96 #ifde‡
WIN32


97 
	#wrôe
(
fd
,
buf
,
Àn
Ë
	`£nd
((fd),(buf),()÷í),0)

	)

98 
	#ªad
(
fd
,
buf
,
Àn
Ë
	`ªcv
((fd),(buf),()÷í),0)

	)

101 
	sbasic_cb_¨gs


103 
evít_ba£
 *
	meb
;

104 
evít
 *
	mev
;

105 
	mˇŒcou¡
;

109 
	$sim∂e_ªad_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

111 
buf
[256];

112 
Àn
;

114 
Àn
 = 
	`ªad
(
fd
, 
buf
, (buf));

116 i‡(
Àn
) {

117 i‡(!
ˇŒed
) {

118 i‡(
	`evít_add
(
¨g
, 
NULL
) == -1)

119 
	`exô
(1);

121 } i‡(
ˇŒed
 == 1)

122 
ã°_ok
 = 1;

124 
ˇŒed
++;

125 
	}
}

128 
	$basic_ªad_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
d©a
)

130 
buf
[256];

131 
Àn
;

132 
basic_cb_¨gs
 *
¨g
 = 
d©a
;

134 
Àn
 = 
	`ªad
(
fd
, 
buf
, (buf));

136 i‡(
Àn
 < 0) {

137 
	`â_Áû_≥º‹
("read (callback)");

139 
¨g
->
ˇŒcou¡
++) {

141 i‡(
Àn
 > 0)

144 
	`â_Áû_msg
("EOF before dataÑead");

148 i‡(
Àn
 > 0)

149 
	`â_Áû_msg
("notáll dataÑead on first cycle");

153 
	`â_Áû_msg
("too many cycles");

157 
	`evít_dñ
(
¨g
->
ev
);

158 
	`evít_ba£_lo›exô
(
¨g
->
eb
, 
NULL
);

159 
	}
}

162 
	$dummy_ªad_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

164 
	}
}

167 
	$sim∂e_wrôe_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

169 
Àn
;

171 
Àn
 = 
	`wrôe
(
fd
, 
TEST1
, 
	`°æí
(TEST1) + 1);

172 i‡(
Àn
 == -1)

173 
ã°_ok
 = 0;

175 
ã°_ok
 = 1;

176 
	}
}

179 
	$mu…ùÀ_wrôe_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

181 
evít
 *
ev
 = 
¨g
;

182 
Àn
;

184 
Àn
 = 128;

185 i‡(
woff
 + 
Àn
 >()(
wbuf
))

186 
Àn
 = (
wbuf
Ë- 
woff
;

188 
Àn
 = 
	`wrôe
(
fd
, 
wbuf
 + 
woff
,Üen);

189 i‡(
Àn
 == -1) {

190 
	`Ârötf
(
°dîr
, "%s: wrôe\n", 
__func__
);

191 i‡(
u£≥rsi°
)

192 
	`evít_dñ
(
ev
);

196 
woff
 +
Àn
;

198 i‡(
woff
 >()(
wbuf
)) {

199 
	`shutdown
(
fd
, 
SHUT_WR
);

200 i‡(
u£≥rsi°
)

201 
	`evít_dñ
(
ev
);

205 i‡(!
u£≥rsi°
) {

206 i‡(
	`evít_add
(
ev
, 
NULL
) == -1)

207 
	`exô
(1);

209 
	}
}

212 
	$mu…ùÀ_ªad_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

214 
evít
 *
ev
 = 
¨g
;

215 
Àn
;

217 
Àn
 = 
	`ªad
(
fd
, 
rbuf
 + 
roff
, (rbuf) -Ñoff);

218 i‡(
Àn
 == -1)

219 
	`Ârötf
(
°dîr
, "%s:Ñód\n", 
__func__
);

220 i‡(
Àn
 <= 0) {

221 i‡(
u£≥rsi°
)

222 
	`evít_dñ
(
ev
);

226 
roff
 +
Àn
;

227 i‡(!
u£≥rsi°
) {

228 i‡(
	`evít_add
(
ev
, 
NULL
) == -1)

229 
	`exô
(1);

231 
	}
}

234 
	$timeout_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

236 
timevÆ
 
tv
;

237 
diff
;

239 
	`evutû_gëtimeofday
(&
tˇŒed
, 
NULL
);

240 i‡(
	`evutû_timîcmp
(&
tˇŒed
, &
t£t
, >))

241 
	`evutû_timîsub
(&
tˇŒed
, &
t£t
, &
tv
);

243 
	`evutû_timîsub
(&
t£t
, &
tˇŒed
, &
tv
);

245 
diff
 = 
tv
.
tv_£c
*1000 +Åv.
tv_u£c
/1000 - 
SECONDS
 * 1000;

246 i‡(
diff
 < 0)

247 
diff
 = -diff;

249 i‡(
diff
 < 100)

250 
ã°_ok
 = 1;

251 
	}
}

253 
	sbŸh
 {

254 
evít
 
	mev
;

255 
	mƒód
;

259 
	$comböed_ªad_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

261 
bŸh
 *bŸh = 
¨g
;

262 
buf
[128];

263 
Àn
;

265 
Àn
 = 
	`ªad
(
fd
, 
buf
, (buf));

266 i‡(
Àn
 == -1)

267 
	`Ârötf
(
°dîr
, "%s:Ñód\n", 
__func__
);

268 i‡(
Àn
 <= 0)

271 
bŸh
->
ƒód
 +
Àn
;

272 i‡(
	`evít_add
(&
bŸh
->
ev
, 
NULL
) == -1)

273 
	`exô
(1);

274 
	}
}

277 
	$comböed_wrôe_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

279 
bŸh
 *bŸh = 
¨g
;

280 
buf
[128];

281 
Àn
;

283 
Àn
 = (
buf
);

284 i‡(
Àn
 > 
bŸh
->
ƒód
)

285 
Àn
 = 
bŸh
->
ƒód
;

287 
	`mem£t
(
buf
, 'q', 
Àn
);

289 
Àn
 = 
	`wrôe
(
fd
, 
buf
,Üen);

290 i‡(
Àn
 == -1)

291 
	`Ârötf
(
°dîr
, "%s: wrôe\n", 
__func__
);

292 i‡(
Àn
 <= 0) {

293 
	`shutdown
(
fd
, 
SHUT_WR
);

297 
bŸh
->
ƒód
 -
Àn
;

298 i‡(
	`evít_add
(&
bŸh
->
ev
, 
NULL
) == -1)

299 
	`exô
(1);

300 
	}
}

303 
	#£tup_ã°
(
x
) do { \

304 i‡(!
ö_Àgacy_ã°_wøµî
) { \

305 
	`TT_FAIL
(("LegacyÅe° %†nŸ wøµedÖr›îly", 
x
)); \

308 } 0)

	)

309 
	#˛ónup_ã°
(Ë
	`£tup_ã°
("˛ónup")

	)

312 
	$ã°_sim∂îód
()

314 
evít
 
ev
;

317 
	`£tup_ã°
("SimpleÑead: ");

319 i‡(
	`wrôe
(
∑ú
[0], 
TEST1
, 
	`°æí
(TEST1)+1) < 0) {

320 
	`â_Áû_≥º‹
("write");

323 
	`shutdown
(
∑ú
[0], 
SHUT_WR
);

325 
	`evít_£t
(&
ev
, 
∑ú
[1], 
EV_READ
, 
sim∂e_ªad_cb
, &ev);

326 i‡(
	`evít_add
(&
ev
, 
NULL
) == -1)

327 
	`exô
(1);

328 
	`evít_di•©ch
();

330 
	`˛ónup_ã°
();

331 
	}
}

334 
	$ã°_sim∂ewrôe
()

336 
evít
 
ev
;

339 
	`£tup_ã°
("Simple write: ");

341 
	`evít_£t
(&
ev
, 
∑ú
[0], 
EV_WRITE
, 
sim∂e_wrôe_cb
, &ev);

342 i‡(
	`evít_add
(&
ev
, 
NULL
) == -1)

343 
	`exô
(1);

344 
	`evít_di•©ch
();

346 
	`˛ónup_ã°
();

347 
	}
}

350 
	$sim∂îód_mu…ùÀ_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

352 i‡(++
ˇŒed
 == 2)

353 
ã°_ok
 = 1;

354 
	}
}

357 
	$ã°_sim∂îód_mu…ùÀ
()

359 
evít
 
⁄e
, 
two
;

362 
	`£tup_ã°
("SimpleÑeadÅo multipleÉvens: ");

364 i‡(
	`wrôe
(
∑ú
[0], 
TEST1
, 
	`°æí
(TEST1)+1) < 0) {

365 
	`â_Áû_≥º‹
("write");

368 
	`shutdown
(
∑ú
[0], 
SHUT_WR
);

370 
	`evít_£t
(&
⁄e
, 
∑ú
[1], 
EV_READ
, 
sim∂îód_mu…ùÀ_cb
, 
NULL
);

371 i‡(
	`evít_add
(&
⁄e
, 
NULL
) == -1)

372 
	`exô
(1);

373 
	`evít_£t
(&
two
, 
∑ú
[1], 
EV_READ
, 
sim∂îód_mu…ùÀ_cb
, 
NULL
);

374 i‡(
	`evít_add
(&
two
, 
NULL
) == -1)

375 
	`exô
(1);

376 
	`evít_di•©ch
();

378 
	`˛ónup_ã°
();

379 
	}
}

381 
	ghave_˛o£d
 = 0;

382 
	g¥em©uª_evít
 = 0;

384 
	$sim∂e˛o£_˛o£_fd_cb
(
evutû_sockë_t
 
s
, 
wh©
, *
±r
)

386 
evutû_sockë_t
 **
fds
 = 
±r
;

387 
	`TT_BLATHER
(("Closing"));

388 
	`evutû_˛o£sockë
(*
fds
[0]);

389 
	`evutû_˛o£sockë
(*
fds
[1]);

390 *
fds
[0] = -1;

391 *
fds
[1] = -1;

392 
have_˛o£d
 = 1;

393 
	}
}

396 
	$ªc‹d_evít_cb
(
evutû_sockë_t
 
s
, 
wh©
, *
±r
)

398 *
wh©p
 = 
±r
;

399 i‡(!
have_˛o£d
)

400 
¥em©uª_evít
 = 1;

401 *
wh©p
 = 
wh©
;

402 
	`TT_BLATHER
(("Rec‹ded %d o¿sockë %d", ()
wh©
, ()
s
));

403 
	}
}

406 
	$ã°_sim∂e˛o£
(*
±r
)

409 
evít_ba£
 *
ba£
 = 
	`evít_ba£_√w
();

410 
evutû_sockë_t
 
∑ú1
[2]={-1,-1}, 
∑ú2
[2] = {-1, -1};

411 
evutû_sockë_t
 *
to_˛o£
[2];

412 
evít
 *
ªv
=
NULL
, *
wev
=NULL, *
˛o£ev
=NULL;

413 
timevÆ
 
tv
;

414 
gŸ_ªad_⁄_˛o£
 = 0, 
gŸ_wrôe_⁄_˛o£
 = 0;

415 
buf
[1024];

416 
	`mem£t
(
buf
, 99, (buf));

417 #ifde‡
WIN32


418 
	#LOCAL_SOCKETPAIR_AF
 
AF_INET


	)

420 
	#LOCAL_SOCKETPAIR_AF
 
AF_UNIX


	)

422 i‡(
	`evutû_sockë∑ú
(
LOCAL_SOCKETPAIR_AF
, 
SOCK_STREAM
, 0, 
∑ú1
)<0)

423 
	`TT_DIE
(("sockë∑ú: %s", 
	`°ªº‹
(
î∫o
)));

424 i‡(
	`evutû_sockë∑ú
(
LOCAL_SOCKETPAIR_AF
, 
SOCK_STREAM
, 0, 
∑ú2
)<0)

425 
	`TT_DIE
(("sockë∑ú: %s", 
	`°ªº‹
(
î∫o
)));

426 i‡(
	`evutû_make_sockë_n⁄blockög
(
∑ú1
[1]) < 0)

427 
	`TT_DIE
(("make_socket_nonblocking"));

428 i‡(
	`evutû_make_sockë_n⁄blockög
(
∑ú2
[1]) < 0)

429 
	`TT_DIE
(("make_socket_nonblocking"));

433 
r
 = 
	`wrôe
(
∑ú2
[1], 
buf
, (buf));

434 i‡(
r
<0) {

435 
îr
 = 
	`evutû_sockë_gëîr‹
(
∑ú2
[1]);

436 i‡(! 
	`EVUTIL_ERR_RW_RETRIABLE
(
îr
))

437 
	`TT_DIE
(("write failed strangely: %s",

438 
	`evutû_sockë_îr‹_to_°rög
(
îr
)));

442 
to_˛o£
[0] = &
∑ú1
[0];

443 
to_˛o£
[1] = &
∑ú2
[0];

445 
˛o£ev
 = 
	`evít_√w
(
ba£
, -1, 
EV_TIMEOUT
, 
sim∂e˛o£_˛o£_fd_cb
,

446 
to_˛o£
);

447 
ªv
 = 
	`evít_√w
(
ba£
, 
∑ú1
[1], 
EV_READ
, 
ªc‹d_evít_cb
,

448 &
gŸ_ªad_⁄_˛o£
);

449 
	`TT_BLATHER
(("Waôög f‹Ñód o¿%d", ()
∑ú1
[1]));

450 
wev
 = 
	`evít_√w
(
ba£
, 
∑ú2
[1], 
EV_WRITE
, 
ªc‹d_evít_cb
,

451 &
gŸ_wrôe_⁄_˛o£
);

452 
	`TT_BLATHER
(("Waôög f‹ wrôê⁄ %d", ()
∑ú2
[1]));

453 
tv
.
tv_£c
 = 0;

454 
tv
.
tv_u£c
 = 100*1000;

456 
	`evít_add
(
˛o£ev
, &
tv
);

457 
	`evít_add
(
ªv
, 
NULL
);

458 
	`evít_add
(
wev
, 
NULL
);

460 
tv
.
tv_£c
 = 0;

461 
tv
.
tv_u£c
 = 200*1000;

462 
	`evít_ba£_lo›exô
(
ba£
, &
tv
);

463 
	`evít_ba£_lo›
(
ba£
, 0);

465 
	`â_öt_›
(
gŸ_ªad_⁄_˛o£
, ==, 
EV_READ
);

466 
	`â_öt_›
(
gŸ_wrôe_⁄_˛o£
, ==, 
EV_WRITE
);

467 
	`â_öt_›
(
¥em©uª_evít
, ==, 0);

469 
íd
:

470 i‡(
∑ú1
[0] >= 0)

471 
	`evutû_˛o£sockë
(
∑ú1
[0]);

472 i‡(
∑ú1
[1] >= 0)

473 
	`evutû_˛o£sockë
(
∑ú1
[1]);

474 i‡(
∑ú2
[0] >= 0)

475 
	`evutû_˛o£sockë
(
∑ú2
[0]);

476 i‡(
∑ú2
[1] >= 0)

477 
	`evutû_˛o£sockë
(
∑ú2
[1]);

478 i‡(
ªv
)

479 
	`evít_‰ì
(
ªv
);

480 i‡(
wev
)

481 
	`evít_‰ì
(
wev
);

482 i‡(
˛o£ev
)

483 
	`evít_‰ì
(
˛o£ev
);

484 i‡(
ba£
)

485 
	`evít_ba£_‰ì
(
ba£
);

486 
	}
}

490 
	$ã°_mu…ùÀ
()

492 
evít
 
ev
, 
ev2
;

493 
i
;

496 
	`£tup_ã°
("MultipleÑead/write: ");

497 
	`mem£t
(
rbuf
, 0, (rbuf));

498 
i
 = 0; i < ()(
wbuf
); i++)

499 
wbuf
[
i
] = i;

501 
roff
 = 
woff
 = 0;

502 
u£≥rsi°
 = 0;

504 
	`evít_£t
(&
ev
, 
∑ú
[0], 
EV_WRITE
, 
mu…ùÀ_wrôe_cb
, &ev);

505 i‡(
	`evít_add
(&
ev
, 
NULL
) == -1)

506 
	`exô
(1);

507 
	`evít_£t
(&
ev2
, 
∑ú
[1], 
EV_READ
, 
mu…ùÀ_ªad_cb
, &ev2);

508 i‡(
	`evít_add
(&
ev2
, 
NULL
) == -1)

509 
	`exô
(1);

510 
	`evít_di•©ch
();

512 i‡(
roff
 =
woff
)

513 
ã°_ok
 = 
	`memcmp
(
rbuf
, 
wbuf
, (wbuf)) == 0;

515 
	`˛ónup_ã°
();

516 
	}
}

519 
	$ã°_≥rsi°ít
()

521 
evít
 
ev
, 
ev2
;

522 
i
;

525 
	`£tup_ã°
("PersistÑead/write: ");

526 
	`mem£t
(
rbuf
, 0, (rbuf));

527 
i
 = 0; i < ()(
wbuf
); i++)

528 
wbuf
[
i
] = i;

530 
roff
 = 
woff
 = 0;

531 
u£≥rsi°
 = 1;

533 
	`evít_£t
(&
ev
, 
∑ú
[0], 
EV_WRITE
|
EV_PERSIST
, 
mu…ùÀ_wrôe_cb
, &ev);

534 i‡(
	`evít_add
(&
ev
, 
NULL
) == -1)

535 
	`exô
(1);

536 
	`evít_£t
(&
ev2
, 
∑ú
[1], 
EV_READ
|
EV_PERSIST
, 
mu…ùÀ_ªad_cb
, &ev2);

537 i‡(
	`evít_add
(&
ev2
, 
NULL
) == -1)

538 
	`exô
(1);

539 
	`evít_di•©ch
();

541 i‡(
roff
 =
woff
)

542 
ã°_ok
 = 
	`memcmp
(
rbuf
, 
wbuf
, (wbuf)) == 0;

544 
	`˛ónup_ã°
();

545 
	}
}

548 
	$ã°_comböed
()

550 
bŸh
 
r1
, 
r2
, 
w1
, 
w2
;

552 
	`£tup_ã°
("CombinedÑead/write: ");

553 
	`mem£t
(&
r1
, 0, (r1));

554 
	`mem£t
(&
r2
, 0, (r2));

555 
	`mem£t
(&
w1
, 0, (w1));

556 
	`mem£t
(&
w2
, 0, (w2));

558 
w1
.
ƒód
 = 4096;

559 
w2
.
ƒód
 = 8192;

561 
	`evít_£t
(&
r1
.
ev
, 
∑ú
[0], 
EV_READ
, 
comböed_ªad_cb
, &r1);

562 
	`evít_£t
(&
w1
.
ev
, 
∑ú
[0], 
EV_WRITE
, 
comböed_wrôe_cb
, &w1);

563 
	`evít_£t
(&
r2
.
ev
, 
∑ú
[1], 
EV_READ
, 
comböed_ªad_cb
, &r2);

564 
	`evít_£t
(&
w2
.
ev
, 
∑ú
[1], 
EV_WRITE
, 
comböed_wrôe_cb
, &w2);

565 
	`â_as£π
(
	`evít_add
(&
r1
.
ev
, 
NULL
) != -1);

566 
	`â_as£π
(!
	`evít_add
(&
w1
.
ev
, 
NULL
));

567 
	`â_as£π
(!
	`evít_add
(&
r2
.
ev
, 
NULL
));

568 
	`â_as£π
(!
	`evít_add
(&
w2
.
ev
, 
NULL
));

569 
	`evít_di•©ch
();

571 i‡(
r1
.
ƒód
 =8192 && 
r2
.nread == 4096)

572 
ã°_ok
 = 1;

574 
íd
:

575 
	`˛ónup_ã°
();

576 
	}
}

579 
	$ã°_sim∂ëimeout
()

581 
timevÆ
 
tv
;

582 
evít
 
ev
;

584 
	`£tup_ã°
("SimpleÅimeout: ");

586 
tv
.
tv_u£c
 = 0;

587 
tv
.
tv_£c
 = 
SECONDS
;

588 
	`evtimî_£t
(&
ev
, 
timeout_cb
, 
NULL
);

589 
	`evtimî_add
(&
ev
, &
tv
);

591 
	`evutû_gëtimeofday
(&
t£t
, 
NULL
);

592 
	`evít_di•©ch
();

594 
	`˛ónup_ã°
();

595 
	}
}

598 
	$≥riodic_timeout_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

600 *
cou¡
 = 
¨g
;

602 (*
cou¡
)++;

603 i‡(*
cou¡
 == 6) {

606 
ã°_ok
 = 1;

607 
	`evít_ba£_lo›exô
(
globÆ_ba£
, 
NULL
);

609 
	}
}

612 
	$ã°_≥rsi°ít_timeout
()

614 
timevÆ
 
tv
;

615 
evít
 
ev
;

616 
cou¡
 = 0;

618 
	`evutû_timî˛ór
(&
tv
);

619 
tv
.
tv_u£c
 = 10000;

621 
	`evít_assign
(&
ev
, 
globÆ_ba£
, -1, 
EV_TIMEOUT
|
EV_PERSIST
,

622 
≥riodic_timeout_cb
, &
cou¡
);

623 
	`evít_add
(&
ev
, &
tv
);

625 
	`evít_di•©ch
();

627 
	`evít_dñ
(&
ev
);

628 
	}
}

631 
	$ã°_≥rsi°ít_timeout_jump
(*
±r
)

633 
basic_ã°_d©a
 *
d©a
 = 
±r
;

634 
evít
 
ev
;

635 
cou¡
 = 0;

636 
timevÆ
 
m£c100
 = { 0, 100 * 1000 };

637 
timevÆ
 
m£c50
 = { 0, 50 * 1000 };

639 
	`evít_assign
(&
ev
, 
d©a
->
ba£
, -1, 
EV_PERSIST
, 
≥riodic_timeout_cb
, &
cou¡
);

640 
	`evít_add
(&
ev
, &
m£c100
);

642 #ifde‡
_WIN32


643 
	`SÀï
(1000);

645 
	`¶ìp
(1);

647 
	`evít_ba£_lo›exô
(
d©a
->
ba£
, &
m£c50
);

648 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

649 
	`â_öt_›
(
cou¡
, ==, 1);

651 
íd
:

652 
	`evít_dñ
(&
ev
);

653 
	}
}

655 
	s≥rsi°_a˘ive_timeout_ˇŒed
 {

656 
	mn
;

657 
	mevíts
[16];

658 
timevÆ
 
	mtvs
[16];

662 
	$a˘iv©e_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

664 
evít
 *
ev
 = 
¨g
;

665 
	`evít_a˘ive
(
ev
, 
EV_READ
, 1);

666 
	}
}

669 
	$≥rsi°_a˘ive_timeout_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

671 
≥rsi°_a˘ive_timeout_ˇŒed
 *
c
 = 
¨g
;

672 i‡(
c
->
n
 < 15) {

673 
c
->
evíts
[c->
n
] = 
evít
;

674 
	`evutû_gëtimeofday
(&
c
->
tvs
[c->
n
], 
NULL
);

675 ++
c
->
n
;

677 
	}
}

680 
	$ã°_≥rsi°ít_a˘ive_timeout
(*
±r
)

682 
timevÆ
 
tv
, 
tv2
, 
tv_exô
, 
°¨t
;

683 
evít
 
ev
;

684 
≥rsi°_a˘ive_timeout_ˇŒed
 
ªs
;

686 
basic_ã°_d©a
 *
d©a
 = 
±r
;

687 
evít_ba£
 *
ba£
 = 
d©a
->base;

689 
	`mem£t
(&
ªs
, 0, (res));

691 
tv
.
tv_£c
 = 0;

692 
tv
.
tv_u£c
 = 200 * 1000;

693 
	`evít_assign
(&
ev
, 
ba£
, -1, 
EV_TIMEOUT
|
EV_PERSIST
,

694 
≥rsi°_a˘ive_timeout_cb
, &
ªs
);

695 
	`evít_add
(&
ev
, &
tv
);

697 
tv2
.
tv_£c
 = 0;

698 
tv2
.
tv_u£c
 = 100 * 1000;

699 
	`evít_ba£_⁄˚
(
ba£
, -1, 
EV_TIMEOUT
, 
a˘iv©e_cb
, &
ev
, &
tv2
);

701 
tv_exô
.
tv_£c
 = 0;

702 
tv_exô
.
tv_u£c
 = 600 * 1000;

703 
	`evít_ba£_lo›exô
(
ba£
, &
tv_exô
);

705 
	`evít_ba£_as£π_ok
(
ba£
);

706 
	`evutû_gëtimeofday
(&
°¨t
, 
NULL
);

708 
	`evít_ba£_di•©ch
(
ba£
);

709 
	`evít_ba£_as£π_ok
(
ba£
);

711 
	`â_öt_›
(
ªs
.
n
, ==, 3);

712 
	`â_öt_›
(
ªs
.
evíts
[0], ==, 
EV_READ
);

713 
	`â_öt_›
(
ªs
.
evíts
[1], ==, 
EV_TIMEOUT
);

714 
	`â_öt_›
(
ªs
.
evíts
[2], ==, 
EV_TIMEOUT
);

715 
	`ã°_timevÆ_diff_eq
(&
°¨t
, &
ªs
.
tvs
[0], 100);

716 
	`ã°_timevÆ_diff_eq
(&
°¨t
, &
ªs
.
tvs
[1], 300);

717 
	`ã°_timevÆ_diff_eq
(&
°¨t
, &
ªs
.
tvs
[2], 500);

718 
íd
:

719 
	`evít_dñ
(&
ev
);

720 
	}
}

722 
	scomm⁄_timeout_öfo
 {

723 
evít
 
	mev
;

724 
timevÆ
 
	mˇŒed_©
;

725 
	mwhich
;

726 
	mcou¡
;

730 
	$comm⁄_timeout_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

732 
comm⁄_timeout_öfo
 *
ti
 = 
¨g
;

733 ++
ti
->
cou¡
;

734 
	`evutû_gëtimeofday
(&
ti
->
ˇŒed_©
, 
NULL
);

735 i‡(
ti
->
cou¡
 >= 6)

736 
	`evít_dñ
(&
ti
->
ev
);

737 
	}
}

740 
	$ã°_comm⁄_timeout
(*
±r
)

742 
basic_ã°_d©a
 *
d©a
 = 
±r
;

744 
evít_ba£
 *
ba£
 = 
d©a
->base;

745 
i
;

746 
comm⁄_timeout_öfo
 
öfo
[100];

748 
timevÆ
 
now
;

749 
timevÆ
 
tmp_100_ms
 = { 0, 100*1000 };

750 
timevÆ
 
tmp_200_ms
 = { 0, 200*1000 };

752 c⁄° 
timevÆ
 *
ms_100
, *
ms_200
;

754 
ms_100
 = 
	`evít_ba£_öô_comm⁄_timeout
(
ba£
, &
tmp_100_ms
);

755 
ms_200
 = 
	`evít_ba£_öô_comm⁄_timeout
(
ba£
, &
tmp_200_ms
);

756 
	`â_as£π
(
ms_100
);

757 
	`â_as£π
(
ms_200
);

758 
	`â_±r_›
(
	`evít_ba£_öô_comm⁄_timeout
(
ba£
, &
tmp_200_ms
),

759 ==, 
ms_200
);

760 
	`â_öt_›
(
ms_100
->
tv_£c
, ==, 0);

761 
	`â_öt_›
(
ms_200
->
tv_£c
, ==, 0);

762 
	`â_öt_›
(
ms_100
->
tv_u£c
, ==, 100000|0x50000000);

763 
	`â_öt_›
(
ms_200
->
tv_u£c
, ==, 200000|0x50100000);

765 
	`mem£t
(
öfo
, 0, (info));

767 
i
=0; i<100; ++i) {

768 
öfo
[
i
].
which
 = i;

769 
	`evít_assign
(&
öfo
[
i
].
ev
, 
ba£
, -1, 
EV_TIMEOUT
|
EV_PERSIST
,

770 
comm⁄_timeout_cb
, &
öfo
[
i
]);

771 i‡(
i
 % 2) {

772 
	`evít_add
(&
öfo
[
i
].
ev
, 
ms_100
);

774 
	`evít_add
(&
öfo
[
i
].
ev
, 
ms_200
);

778 
	`evít_ba£_as£π_ok
(
ba£
);

779 
	`evít_ba£_di•©ch
(
ba£
);

781 
	`evutû_gëtimeofday
(&
now
, 
NULL
);

782 
	`evít_ba£_as£π_ok
(
ba£
);

784 
i
=0; i<10; ++i) {

785 
timevÆ
 
tmp
;

786 
ms_diff
;

787 
	`â_öt_›
(
öfo
[
i
].
cou¡
, ==, 6);

788 
	`evutû_timîsub
(&
now
, &
öfo
[
i
].
ˇŒed_©
, &
tmp
);

789 
ms_diff
 = 
tmp
.
tv_u£c
/1000 +Åmp.
tv_£c
*1000;

790 i‡(
i
 % 2) {

791 
	`â_öt_›
(
ms_diff
, >, 500);

792 
	`â_öt_›
(
ms_diff
, <, 700);

794 
	`â_öt_›
(
ms_diff
, >, -100);

795 
	`â_öt_›
(
ms_diff
, <, 100);

800 
i
=0; i<100; ++i) {

801 i‡(
i
 % 2) {

802 
	`evít_add
(&
öfo
[
i
].
ev
, 
ms_100
);

804 
	`evít_add
(&
öfo
[
i
].
ev
, 
ms_200
);

808 
íd
:

809 
	`evít_ba£_‰ì
(
d©a
->
ba£
);

811 
d©a
->
ba£
 = 
NULL
;

812 
	}
}

814 #i‚de‡
WIN32


815 
sig«l_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
);

817 
	#cuºít_ba£
 
evít_globÆ_cuºít_ba£_


	)

818 
evít_ba£
 *
cuºít_ba£
;

821 
	$chûd_sig«l_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

823 
timevÆ
 
tv
;

824 *
pöt
 = 
¨g
;

826 *
pöt
 = 1;

828 
tv
.
tv_u£c
 = 500000;

829 
tv
.
tv_£c
 = 0;

830 
	`evít_lo›exô
(&
tv
);

831 
	}
}

834 
	$ã°_f‹k
()

836 
°©us
, 
gŸ_sigchld
 = 0;

837 
evít
 
ev
, 
sig_ev
;

838 
pid_t
 
pid
;

840 
	`£tup_ã°
("After fork: ");

842 
	`â_as£π
(
cuºít_ba£
);

843 
	`evthªad_make_ba£_nŸifübÀ
(
cuºít_ba£
);

845 i‡(
	`wrôe
(
∑ú
[0], 
TEST1
, 
	`°æí
(TEST1)+1) < 0) {

846 
	`â_Áû_≥º‹
("write");

849 
	`evít_£t
(&
ev
, 
∑ú
[1], 
EV_READ
, 
sim∂e_ªad_cb
, &ev);

850 i‡(
	`evít_add
(&
ev
, 
NULL
) == -1)

851 
	`exô
(1);

853 
	`evsig«l_£t
(&
sig_ev
, 
SIGCHLD
, 
chûd_sig«l_cb
, &
gŸ_sigchld
);

854 
	`evsig«l_add
(&
sig_ev
, 
NULL
);

856 
	`evít_ba£_as£π_ok
(
cuºít_ba£
);

857 
	`TT_BLATHER
(("Before fork"));

858 i‡((
pid
 = 
	`ªgªss_f‹k
()) == 0) {

860 
	`TT_BLATHER
(("In child, beforeÑeinit"));

861 
	`evít_ba£_as£π_ok
(
cuºít_ba£
);

862 i‡(
	`evít_ªöô
(
cuºít_ba£
) == -1) {

863 
	`Ârötf
(
°dout
, "FAILED (reinit)\n");

864 
	`exô
(1);

866 
	`TT_BLATHER
(("AfterÑeinit"));

867 
	`evít_ba£_as£π_ok
(
cuºít_ba£
);

868 
	`TT_BLATHER
(("Afterássert-ok"));

870 
	`evsig«l_dñ
(&
sig_ev
);

872 
ˇŒed
 = 0;

874 
	`evít_di•©ch
();

876 
	`evít_ba£_‰ì
(
cuºít_ba£
);

881 
	`exô
(
ã°_ok
 !0 || 
ˇŒed
 != 2 ? -2 : 76);

885 
	`¶ìp
(1);

887 i‡(
	`wrôe
(
∑ú
[0], 
TEST1
, 
	`°æí
(TEST1)+1) < 0) {

888 
	`â_Áû_≥º‹
("write");

891 
	`TT_BLATHER
(("Before waitpid"));

892 i‡(
	`waôpid
(
pid
, &
°©us
, 0) == -1) {

893 
	`Ârötf
(
°dout
, "FAILED (fork)\n");

894 
	`exô
(1);

896 
	`TT_BLATHER
(("After waitpid"));

898 i‡(
	`WEXITSTATUS
(
°©us
) != 76) {

899 
	`Ârötf
(
°dout
, "FAILED (exô): %d\n", 
	`WEXITSTATUS
(
°©us
));

900 
	`exô
(1);

904 i‡(
	`wrôe
(
∑ú
[0], 
TEST1
, 
	`°æí
(TEST1)+1) < 0) {

905 
	`Ârötf
(
°dîr
, "%s: wrôe\n", 
__func__
);

908 
	`shutdown
(
∑ú
[0], 
SHUT_WR
);

910 
	`evít_di•©ch
();

912 i‡(!
gŸ_sigchld
) {

913 
	`Ârötf
(
°dout
, "FAILED (sigchld)\n");

914 
	`exô
(1);

917 
	`evsig«l_dñ
(&
sig_ev
);

919 
íd
:

920 
	`˛ónup_ã°
();

921 
	}
}

924 
	$sig«l_cb_ß
(
sig
)

926 
ã°_ok
 = 2;

927 
	}
}

930 
	$sig«l_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

932 
evít
 *
ev
 = 
¨g
;

934 
	`evsig«l_dñ
(
ev
);

935 
ã°_ok
 = 1;

936 
	}
}

939 
	$ã°_sim∂esig«l
()

941 
evít
 
ev
;

942 
ôimîvÆ
 
ôv
;

944 
	`£tup_ã°
("Simple signal: ");

945 
	`evsig«l_£t
(&
ev
, 
SIGALRM
, 
sig«l_cb
, &ev);

946 
	`evsig«l_add
(&
ev
, 
NULL
);

948 
	`evsig«l_dñ
(&
ev
);

949 
	`evsig«l_add
(&
ev
, 
NULL
);

951 
	`mem£t
(&
ôv
, 0, (itv));

952 
ôv
.
ô_vÆue
.
tv_£c
 = 1;

953 i‡(
	`£tôimî
(
ITIMER_REAL
, &
ôv
, 
NULL
) == -1)

954 
skù_sim∂esig«l
;

956 
	`evít_di•©ch
();

957 
skù_sim∂esig«l
:

958 i‡(
	`evsig«l_dñ
(&
ev
) == -1)

959 
ã°_ok
 = 0;

961 
	`˛ónup_ã°
();

962 
	}
}

965 
	$ã°_mu…ùÀsig«l
()

967 
evít
 
ev_⁄e
, 
ev_two
;

968 
ôimîvÆ
 
ôv
;

970 
	`£tup_ã°
("Multiple signal: ");

972 
	`evsig«l_£t
(&
ev_⁄e
, 
SIGALRM
, 
sig«l_cb
, &ev_one);

973 
	`evsig«l_add
(&
ev_⁄e
, 
NULL
);

975 
	`evsig«l_£t
(&
ev_two
, 
SIGALRM
, 
sig«l_cb
, &ev_two);

976 
	`evsig«l_add
(&
ev_two
, 
NULL
);

978 
	`mem£t
(&
ôv
, 0, (itv));

979 
ôv
.
ô_vÆue
.
tv_£c
 = 1;

980 i‡(
	`£tôimî
(
ITIMER_REAL
, &
ôv
, 
NULL
) == -1)

981 
skù_sim∂esig«l
;

983 
	`evít_di•©ch
();

985 
skù_sim∂esig«l
:

986 i‡(
	`evsig«l_dñ
(&
ev_⁄e
) == -1)

987 
ã°_ok
 = 0;

988 i‡(
	`evsig«l_dñ
(&
ev_two
) == -1)

989 
ã°_ok
 = 0;

991 
	`˛ónup_ã°
();

992 
	}
}

995 
	$ã°_immedüãsig«l
()

997 
evít
 
ev
;

999 
ã°_ok
 = 0;

1000 
	`evsig«l_£t
(&
ev
, 
SIGUSR1
, 
sig«l_cb
, &ev);

1001 
	`evsig«l_add
(&
ev
, 
NULL
);

1002 
	`øi£
(
SIGUSR1
);

1003 
	`evít_lo›
(
EVLOOP_NONBLOCK
);

1004 
	`evsig«l_dñ
(&
ev
);

1005 
	`˛ónup_ã°
();

1006 
	}
}

1009 
	$ã°_sig«l_dóŒoc
()

1012 
evít
 
ev
;

1013 
evít_ba£
 *
ba£
 = 
	`evít_öô
();

1014 
	`evsig«l_£t
(&
ev
, 
SIGUSR1
, 
sig«l_cb
, &ev);

1015 
	`evsig«l_add
(&
ev
, 
NULL
);

1016 
	`evsig«l_dñ
(&
ev
);

1017 
	`evít_ba£_‰ì
(
ba£
);

1019 
ã°_ok
 = 1;

1020 
	`˛ónup_ã°
();

1021 
	}
}

1024 
	$ã°_sig«l_pùñoss
()

1027 
evít_ba£
 *
ba£1
, *
ba£2
;

1028 
pùe1
;

1029 
ã°_ok
 = 0;

1030 
ba£1
 = 
	`evít_öô
();

1031 
pùe1
 = 
ba£1
->
sig
.
ev_sig«l_∑ú
[0];

1032 
ba£2
 = 
	`evít_öô
();

1033 
	`evít_ba£_‰ì
(
ba£2
);

1034 
	`evít_ba£_‰ì
(
ba£1
);

1035 i‡(
	`˛o£
(
pùe1
Ë!-1 || 
î∫o
!=
EBADF
) {

1037 
	`¥ötf
("signalÖipeÇot closed. ");

1038 
ã°_ok
 = 0;

1040 
ã°_ok
 = 1;

1042 
	`˛ónup_ã°
();

1043 
	}
}

1051 
	$ã°_sig«l_swôchba£
()

1053 
evít
 
ev1
, 
ev2
;

1054 
evít_ba£
 *
ba£1
, *
ba£2
;

1055 
is_kqueue
;

1056 
ã°_ok
 = 0;

1057 
ba£1
 = 
	`evít_öô
();

1058 
ba£2
 = 
	`evít_öô
();

1059 
is_kqueue
 = !
	`°rcmp
(
	`evít_gë_mëhod
(),"kqueue");

1060 
	`evsig«l_£t
(&
ev1
, 
SIGUSR1
, 
sig«l_cb
, &ev1);

1061 
	`evsig«l_£t
(&
ev2
, 
SIGUSR1
, 
sig«l_cb
, &ev2);

1062 i‡(
	`evít_ba£_£t
(
ba£1
, &
ev1
) ||

1063 
	`evít_ba£_£t
(
ba£2
, &
ev2
) ||

1064 
	`evít_add
(&
ev1
, 
NULL
) ||

1065 
	`evít_add
(&
ev2
, 
NULL
)) {

1066 
	`Ârötf
(
°dîr
, "%s: c™nŸ së ba£,ádd\n", 
__func__
);

1067 
	`exô
(1);

1070 
	`â_±r_›
(
	`evít_gë_ba£
(&
ev1
), ==, 
ba£1
);

1071 
	`â_±r_›
(
	`evít_gë_ba£
(&
ev2
), ==, 
ba£2
);

1073 
ã°_ok
 = 0;

1075 
	`øi£
(
SIGUSR1
);

1076 
	`evít_ba£_lo›
(
ba£2
, 
EVLOOP_NONBLOCK
);

1077 i‡(
is_kqueue
) {

1078 i‡(!
ã°_ok
)

1079 
íd
;

1080 
ã°_ok
 = 0;

1082 
	`evít_ba£_lo›
(
ba£1
, 
EVLOOP_NONBLOCK
);

1083 i‡(
ã°_ok
 && !
is_kqueue
) {

1084 
ã°_ok
 = 0;

1087 
	`evít_ba£_lo›
(
ba£1
, 
EVLOOP_NONBLOCK
);

1088 
	`øi£
(
SIGUSR1
);

1089 
	`evít_ba£_lo›
(
ba£1
, 
EVLOOP_NONBLOCK
);

1090 
	`evít_ba£_lo›
(
ba£2
, 
EVLOOP_NONBLOCK
);

1092 
íd
:

1093 
	`evít_ba£_‰ì
(
ba£1
);

1094 
	`evít_ba£_‰ì
(
ba£2
);

1095 
	`˛ónup_ã°
();

1096 
	}
}

1103 
	$ã°_sig«l_as£π
()

1105 
evít
 
ev
;

1106 
evít_ba£
 *
ba£
 = 
	`evít_öô
();

1107 
ã°_ok
 = 0;

1109 
	`evsig«l_£t
(&
ev
, 
SIGCONT
, 
sig«l_cb
, &ev);

1110 
	`evsig«l_add
(&
ev
, 
NULL
);

1115 
	`evsig«l_dñ
(&
ev
);

1117 
	`øi£
(
SIGCONT
);

1121 i‡(
ba£
->
sig
.
evsig_ˇught
)

1122 
ã°_ok
 = 0;

1124 
ã°_ok
 = 1;

1126 
ã°_ok
 = 1;

1129 
	`evít_ba£_‰ì
(
ba£
);

1130 
	`˛ónup_ã°
();

1132 
	}
}

1138 
	$ã°_sig«l_ª°‹e
()

1140 
evít
 
ev
;

1141 
evít_ba£
 *
ba£
 = 
	`evít_öô
();

1142 #ifde‡
_EVENT_HAVE_SIGACTION


1143 
siga˘i⁄
 
ß
;

1146 
ã°_ok
 = 0;

1147 #ifde‡
_EVENT_HAVE_SIGACTION


1148 
ß
.
ß_h™dÀr
 = 
sig«l_cb_ß
;

1149 
ß
.
ß_Êags
 = 0x0;

1150 
	`sigem±y£t
(&
ß
.
ß_mask
);

1151 i‡(
	`siga˘i⁄
(
SIGUSR1
, &
ß
, 
NULL
) == -1)

1152 
out
;

1154 i‡(
	`sig«l
(
SIGUSR1
, 
sig«l_cb_ß
Ë=
SIG_ERR
)

1155 
out
;

1157 
	`evsig«l_£t
(&
ev
, 
SIGUSR1
, 
sig«l_cb
, &ev);

1158 
	`evsig«l_add
(&
ev
, 
NULL
);

1159 
	`evsig«l_dñ
(&
ev
);

1161 
	`øi£
(
SIGUSR1
);

1163 i‡(
ã°_ok
 != 2)

1164 
ã°_ok
 = 0;

1165 
out
:

1166 
	`evít_ba£_‰ì
(
ba£
);

1167 
	`˛ónup_ã°
();

1169 
	}
}

1172 
	$sig«l_cb_swp
(
sig
, 
evít
, *
¨g
)

1174 
ˇŒed
++;

1175 i‡(
ˇŒed
 < 5)

1176 
	`øi£
(
sig
);

1178 
	`evít_lo›exô
(
NULL
);

1179 
	}
}

1181 
	$timeout_cb_swp
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

1183 i‡(
ˇŒed
 == -1) {

1184 
timevÆ
 
tv
 = {5, 0};

1186 
ˇŒed
 = 0;

1187 
	`evtimî_add
((
evít
 *)
¨g
, &
tv
);

1188 
	`øi£
(
SIGUSR1
);

1191 
ã°_ok
 = 0;

1192 
	`evít_lo›exô
(
NULL
);

1193 
	}
}

1196 
	$ã°_sig«l_whûe_¥o˚ssög
()

1198 
evít_ba£
 *
ba£
 = 
	`evít_öô
();

1199 
evít
 
ev
, 
ev_timî
;

1200 
timevÆ
 
tv
 = {0, 0};

1202 
	`£tup_ã°
("Receivingá signal whileÖrocessing other signal: ");

1204 
ˇŒed
 = -1;

1205 
ã°_ok
 = 1;

1206 
	`sig«l_£t
(&
ev
, 
SIGUSR1
, 
sig«l_cb_swp
, 
NULL
);

1207 
	`sig«l_add
(&
ev
, 
NULL
);

1208 
	`evtimî_£t
(&
ev_timî
, 
timeout_cb_swp
, &ev_timer);

1209 
	`evtimî_add
(&
ev_timî
, &
tv
);

1210 
	`evít_di•©ch
();

1212 
	`evít_ba£_‰ì
(
ba£
);

1213 
	`˛ónup_ã°
();

1215 
	}
}

1219 
	$ã°_‰ì_a˘ive_ba£
(*
±r
)

1221 
basic_ã°_d©a
 *
d©a
 = 
±r
;

1222 
evít_ba£
 *
ba£1
;

1223 
evít
 
ev1
;

1225 
ba£1
 = 
	`evít_öô
();

1226 i‡(
ba£1
) {

1227 
	`evít_assign
(&
ev1
, 
ba£1
, 
d©a
->
∑ú
[1], 
EV_READ
,

1228 
dummy_ªad_cb
, 
NULL
);

1229 
	`evít_add
(&
ev1
, 
NULL
);

1230 
	`evít_ba£_‰ì
(
ba£1
);

1232 
	`â_Áû_msg
("failedÅo createÉvent_base forÅest");

1235 
ba£1
 = 
	`evít_öô
();

1236 
	`â_as£π
(
ba£1
);

1237 
	`evít_assign
(&
ev1
, 
ba£1
, 0, 0, 
dummy_ªad_cb
, 
NULL
);

1238 
	`evít_a˘ive
(&
ev1
, 
EV_READ
, 1);

1239 
	`evít_ba£_‰ì
(
ba£1
);

1240 
íd
:

1242 
	}
}

1245 
	$ã°_m™ùuœã_a˘ive_evíts
(*
±r
)

1247 
basic_ã°_d©a
 *
d©a
 = 
±r
;

1248 
evít_ba£
 *
ba£
 = 
d©a
->base;

1249 
evít
 
ev1
;

1251 
	`evít_assign
(&
ev1
, 
ba£
, -1, 
EV_TIMEOUT
, 
dummy_ªad_cb
, 
NULL
);

1254 
	`evít_a˘ive
(&
ev1
, 
EV_READ
, 1);

1255 
	`â_öt_›
(
	`evít_≥ndög
(&
ev1
, 
EV_READ
|
EV_TIMEOUT
|
EV_WRITE
, 
NULL
),

1256 ==, 
EV_READ
);

1259 
	`evít_a˘ive
(&
ev1
, 
EV_WRITE
, 1);

1260 
	`â_öt_›
(
	`evít_≥ndög
(&
ev1
, 
EV_READ
|
EV_TIMEOUT
|
EV_WRITE
, 
NULL
),

1261 ==, 
EV_READ
|
EV_WRITE
);

1263 
íd
:

1264 
	`evít_dñ
(&
ev1
);

1265 
	}
}

1268 
	$ã°_bad_assign
(*
±r
)

1270 
evít
 
ev
;

1271 
r
;

1273 
r
 = 
	`evít_assign
(&
ev
, 
NULL
, -1, 
EV_SIGNAL
|
EV_READ
, 
dummy_ªad_cb
, NULL);

1274 
	`â_öt_›
(
r
,==,-1);

1276 
íd
:

1278 
	}
}

1280 
	gªíå™t_cb_run
 = 0;

1283 
	$bad_ªíå™t_run_lo›_cb
(
evutû_sockë_t
 
fd
, 
wh©
, *
±r
)

1285 
evít_ba£
 *
ba£
 = 
±r
;

1286 
r
;

1287 
ªíå™t_cb_run
 = 1;

1290 
r
 = 
	`evít_ba£_lo›
(
ba£
, 0);

1291 
	`â_öt_›
(
r
, ==, -1);

1292 
íd
:

1294 
	}
}

1297 
	$ã°_bad_ªíå™t
(*
±r
)

1299 
basic_ã°_d©a
 *
d©a
 = 
±r
;

1300 
evít_ba£
 *
ba£
 = 
d©a
->base;

1301 
evít
 
ev
;

1302 
r
;

1303 
	`evít_assign
(&
ev
, 
ba£
, -1,

1304 0, 
bad_ªíå™t_run_lo›_cb
, 
ba£
);

1306 
	`evít_a˘ive
(&
ev
, 
EV_WRITE
, 1);

1307 
r
 = 
	`evít_ba£_lo›
(
ba£
, 0);

1308 
	`â_öt_›
(
r
, ==, 1);

1309 
	`â_öt_›
(
ªíå™t_cb_run
, ==, 1);

1310 
íd
:

1312 
	}
}

1315 
	$ã°_evít_ba£_√w
(*
±r
)

1317 
basic_ã°_d©a
 *
d©a
 = 
±r
;

1318 
evít_ba£
 *
ba£
 = 0;

1319 
evít
 
ev1
;

1320 
basic_cb_¨gs
 
¨gs
;

1322 
towrôe
 = ()
	`°æí
(
TEST1
)+1;

1323 
Àn
 = 
	`wrôe
(
d©a
->
∑ú
[0], 
TEST1
, 
towrôe
);

1325 i‡(
Àn
 < 0)

1326 
	`â_ab‹t_≥º‹
("initial write");

1327 i‡(
Àn
 !
towrôe
)

1328 
	`â_ab‹t_¥ötf
(("initial write fell short (%d of %d bytes)",

1329 
Àn
, 
towrôe
));

1331 i‡(
	`shutdown
(
d©a
->
∑ú
[0], 
SHUT_WR
))

1332 
	`â_ab‹t_≥º‹
("initial write shutdown");

1334 
ba£
 = 
	`evít_ba£_√w
();

1335 i‡(!
ba£
)

1336 
	`â_ab‹t_msg
("failedÅo createÉvent base");

1338 
¨gs
.
eb
 = 
ba£
;

1339 
¨gs
.
ev
 = &
ev1
;

1340 
¨gs
.
ˇŒcou¡
 = 0;

1341 
	`evít_assign
(&
ev1
, 
ba£
, 
d©a
->
∑ú
[1],

1342 
EV_READ
|
EV_PERSIST
, 
basic_ªad_cb
, &
¨gs
);

1344 i‡(
	`evít_add
(&
ev1
, 
NULL
))

1345 
	`â_ab‹t_≥º‹
("initialÉvent_add");

1347 i‡(
	`evít_ba£_lo›
(
ba£
, 0))

1348 
	`â_ab‹t_msg
("unsuccessfulÉxit fromÉventÜoop");

1350 
íd
:

1351 i‡(
ba£
)

1352 
	`evít_ba£_‰ì
(
ba£
);

1353 
	}
}

1356 
	$ã°_lo›exô
()

1358 
timevÆ
 
tv
, 
tv_°¨t
, 
tv_íd
;

1359 
evít
 
ev
;

1361 
	`£tup_ã°
("LoopÉxit: ");

1363 
tv
.
tv_u£c
 = 0;

1364 
tv
.
tv_£c
 = 60*60*24;

1365 
	`evtimî_£t
(&
ev
, 
timeout_cb
, 
NULL
);

1366 
	`evtimî_add
(&
ev
, &
tv
);

1368 
tv
.
tv_u£c
 = 0;

1369 
tv
.
tv_£c
 = 1;

1370 
	`evít_lo›exô
(&
tv
);

1372 
	`evutû_gëtimeofday
(&
tv_°¨t
, 
NULL
);

1373 
	`evít_di•©ch
();

1374 
	`evutû_gëtimeofday
(&
tv_íd
, 
NULL
);

1375 
	`evutû_timîsub
(&
tv_íd
, &
tv_°¨t
, &tv_end);

1377 
	`evtimî_dñ
(&
ev
);

1379 
	`â_as£π
(
	`evít_ba£_gŸ_exô
(
globÆ_ba£
));

1380 
	`â_as£π
(!
	`evít_ba£_gŸ_bªak
(
globÆ_ba£
));

1382 i‡(
tv
.
tv_£c
 < 2)

1383 
ã°_ok
 = 1;

1385 
íd
:

1386 
	`˛ónup_ã°
();

1387 
	}
}

1390 
	$ã°_lo›exô_mu…ùÀ
()

1392 
timevÆ
 
tv
;

1393 
evít_ba£
 *
ba£
;

1395 
	`£tup_ã°
("Loop MultipleÉxit: ");

1397 
ba£
 = 
	`evít_ba£_√w
();

1399 
tv
.
tv_u£c
 = 0;

1400 
tv
.
tv_£c
 = 1;

1401 
	`evít_ba£_lo›exô
(
ba£
, &
tv
);

1403 
tv
.
tv_u£c
 = 0;

1404 
tv
.
tv_£c
 = 2;

1405 
	`evít_ba£_lo›exô
(
ba£
, &
tv
);

1407 
	`evít_ba£_di•©ch
(
ba£
);

1409 
	`â_as£π
(
	`evít_ba£_gŸ_exô
(
ba£
));

1410 
	`â_as£π
(!
	`evít_ba£_gŸ_bªak
(
ba£
));

1412 
	`evít_ba£_‰ì
(
ba£
);

1414 
ã°_ok
 = 1;

1416 
íd
:

1417 
	`˛ónup_ã°
();

1418 
	}
}

1421 
	$bªak_cb
(
evutû_sockë_t
 
fd
, 
evíts
, *
¨g
)

1423 
ã°_ok
 = 1;

1424 
	`evít_lo›bªak
();

1425 
	}
}

1428 
	$Áû_cb
(
evutû_sockë_t
 
fd
, 
evíts
, *
¨g
)

1430 
ã°_ok
 = 0;

1431 
	}
}

1434 
	$ã°_lo›bªak
()

1436 
evít
 
ev1
, 
ev2
;

1437 
timevÆ
 
tv
;

1439 
	`£tup_ã°
("Loop break: ");

1441 
tv
.
tv_£c
 = 0;

1442 
tv
.
tv_u£c
 = 0;

1443 
	`evtimî_£t
(&
ev1
, 
bªak_cb
, 
NULL
);

1444 
	`evtimî_add
(&
ev1
, &
tv
);

1445 
	`evtimî_£t
(&
ev2
, 
Áû_cb
, 
NULL
);

1446 
	`evtimî_add
(&
ev2
, &
tv
);

1448 
	`evít_di•©ch
();

1450 
	`â_as£π
(!
	`evít_ba£_gŸ_exô
(
globÆ_ba£
));

1451 
	`â_as£π
(
	`evít_ba£_gŸ_bªak
(
globÆ_ba£
));

1453 
	`evtimî_dñ
(&
ev1
);

1454 
	`evtimî_dñ
(&
ev2
);

1456 
íd
:

1457 
	`˛ónup_ã°
();

1458 
	}
}

1460 
evít
 *
	gªadd_ã°_evít_œ°_added
 = 
NULL
;

1462 
	$ª_add_ªad_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

1464 
buf
[256];

1465 
evít
 *
ev_Ÿhî
 = 
¨g
;

1466 
ªadd_ã°_evít_œ°_added
 = 
ev_Ÿhî
;

1468 i‡(
	`ªad
(
fd
, 
buf
, (buf)) < 0) {

1469 
	`â_Áû_≥º‹
("read");

1472 
	`evít_add
(
ev_Ÿhî
, 
NULL
);

1473 ++
ã°_ok
;

1474 
	}
}

1477 
	$ã°_n⁄≥rsi°_ªadd
()

1479 
evít
 
ev1
, 
ev2
;

1481 
	`£tup_ã°
("Re-addÇonpersistentÉvents: ");

1482 
	`evít_£t
(&
ev1
, 
∑ú
[0], 
EV_READ
, 
ª_add_ªad_cb
, &
ev2
);

1483 
	`evít_£t
(&
ev2
, 
∑ú
[1], 
EV_READ
, 
ª_add_ªad_cb
, &
ev1
);

1485 i‡(
	`wrôe
(
∑ú
[0], "Hello", 5) < 0) {

1486 
	`â_Áû_≥º‹
("write(pair[0])");

1489 i‡(
	`wrôe
(
∑ú
[1], "Hello", 5) < 0) {

1490 
	`â_Áû_≥º‹
("write(pair[1])\n");

1493 i‡(
	`evít_add
(&
ev1
, 
NULL
) == -1 ||

1494 
	`evít_add
(&
ev2
, 
NULL
) == -1) {

1495 
ã°_ok
 = 0;

1497 i‡(
ã°_ok
 != 0)

1498 
	`exô
(1);

1499 
	`evít_lo›
(
EVLOOP_ONCE
);

1500 i‡(
ã°_ok
 != 2)

1501 
	`exô
(1);

1507 i‡(!
ªadd_ã°_evít_œ°_added
) {

1508 
ã°_ok
 = 0;

1509 } i‡(
ªadd_ã°_evít_œ°_added
 =&
ev1
) {

1510 i‡(!
	`evít_≥ndög
(&
ev1
, 
EV_READ
, 
NULL
) ||

1511 
	`evít_≥ndög
(&
ev2
, 
EV_READ
, 
NULL
))

1512 
ã°_ok
 = 0;

1514 i‡(
	`evít_≥ndög
(&
ev1
, 
EV_READ
, 
NULL
) ||

1515 !
	`evít_≥ndög
(&
ev2
, 
EV_READ
, 
NULL
))

1516 
ã°_ok
 = 0;

1519 
	`evít_dñ
(&
ev1
);

1520 
	`evít_dñ
(&
ev2
);

1522 
	`˛ónup_ã°
();

1523 
	}
}

1525 
	sã°_¥i_evít
 {

1526 
evít
 
	mev
;

1527 
	mcou¡
;

1531 
	$ã°_¥i‹ôõs_cb
(
evutû_sockë_t
 
fd
, 
wh©
, *
¨g
)

1533 
ã°_¥i_evít
 *
¥i
 = 
¨g
;

1534 
timevÆ
 
tv
;

1536 i‡(
¥i
->
cou¡
 == 3) {

1537 
	`evít_lo›exô
(
NULL
);

1541 
¥i
->
cou¡
++;

1543 
	`evutû_timî˛ór
(&
tv
);

1544 
	`evít_add
(&
¥i
->
ev
, &
tv
);

1545 
	}
}

1548 
	$ã°_¥i‹ôõs_im∂
(
≈ri‹ôõs
)

1550 
ã°_¥i_evít
 
⁄e
, 
two
;

1551 
timevÆ
 
tv
;

1553 
	`TT_BLATHER
(("Te°ög Pri‹ôõ†%d: ", 
≈ri‹ôõs
));

1555 
	`evít_ba£_¥i‹ôy_öô
(
globÆ_ba£
, 
≈ri‹ôõs
);

1557 
	`mem£t
(&
⁄e
, 0, (one));

1558 
	`mem£t
(&
two
, 0, (two));

1560 
	`timeout_£t
(&
⁄e
.
ev
, 
ã°_¥i‹ôõs_cb
, &one);

1561 i‡(
	`evít_¥i‹ôy_£t
(&
⁄e
.
ev
, 0) == -1) {

1562 
	`Ârötf
(
°dîr
, "%s: faûedÅÿ£à¥i‹ôy", 
__func__
);

1563 
	`exô
(1);

1566 
	`timeout_£t
(&
two
.
ev
, 
ã°_¥i‹ôõs_cb
, &two);

1567 i‡(
	`evít_¥i‹ôy_£t
(&
two
.
ev
, 
≈ri‹ôõs
 - 1) == -1) {

1568 
	`Ârötf
(
°dîr
, "%s: faûedÅÿ£à¥i‹ôy", 
__func__
);

1569 
	`exô
(1);

1572 
	`evutû_timî˛ór
(&
tv
);

1574 i‡(
	`evít_add
(&
⁄e
.
ev
, &
tv
) == -1)

1575 
	`exô
(1);

1576 i‡(
	`evít_add
(&
two
.
ev
, &
tv
) == -1)

1577 
	`exô
(1);

1579 
	`evít_di•©ch
();

1581 
	`evít_dñ
(&
⁄e
.
ev
);

1582 
	`evít_dñ
(&
two
.
ev
);

1584 i‡(
≈ri‹ôõs
 == 1) {

1585 i‡(
⁄e
.
cou¡
 =3 && 
two
.count == 3)

1586 
ã°_ok
 = 1;

1587 } i‡(
≈ri‹ôõs
 == 2) {

1589 i‡(
⁄e
.
cou¡
 =3 && 
two
.count == 1)

1590 
ã°_ok
 = 1;

1592 i‡(
⁄e
.
cou¡
 =3 && 
two
.count == 0)

1593 
ã°_ok
 = 1;

1595 
	}
}

1598 
	$ã°_¥i‹ôõs
()

1600 
	`ã°_¥i‹ôõs_im∂
(1);

1601 i‡(
ã°_ok
)

1602 
	`ã°_¥i‹ôõs_im∂
(2);

1603 i‡(
ã°_ok
)

1604 
	`ã°_¥i‹ôõs_im∂
(3);

1605 
	}
}

1609 
	gn_∑i_ˇŒs
 = 0;

1610 
evít
 
	g∑i_evíts
[3];

1613 
	$¥io_a˘ive_övîsi⁄_cb
(
evutû_sockë_t
 
fd
, 
wh©
, *
¨g
)

1615 *
ˇŒ_‹dî
 = 
¨g
;

1616 *
ˇŒ_‹dî
 = 
n_∑i_ˇŒs
++;

1617 i‡(
n_∑i_ˇŒs
 == 1) {

1620 
	`evít_a˘ive
(&
∑i_evíts
[1], 
EV_READ
, 1);

1623 
	`evít_a˘ive
(&
∑i_evíts
[2], 
EV_TIMEOUT
, 1);

1625 
	}
}

1628 
	$ã°_¥i‹ôy_a˘ive_övîsi⁄
(*
d©a_
)

1630 
basic_ã°_d©a
 *
d©a
 = 
d©a_
;

1631 
evít_ba£
 *
ba£
 = 
d©a
->base;

1632 
ˇŒ_‹dî
[3];

1633 
i
;

1634 
	`â_öt_›
(
	`evít_ba£_¥i‹ôy_öô
(
ba£
, 8), ==, 0);

1636 
n_∑i_ˇŒs
 = 0;

1637 
	`mem£t
(
ˇŒ_‹dî
, 0, (call_order));

1639 
i
=0;i<3;++i) {

1640 
	`evít_assign
(&
∑i_evíts
[
i
], 
d©a
->
ba£
, -1, 0,

1641 
¥io_a˘ive_övîsi⁄_cb
, &
ˇŒ_‹dî
[
i
]);

1644 
	`evít_¥i‹ôy_£t
(&
∑i_evíts
[0], 4);

1645 
	`evít_¥i‹ôy_£t
(&
∑i_evíts
[1], 4);

1646 
	`evít_¥i‹ôy_£t
(&
∑i_evíts
[2], 0);

1648 
	`evít_a˘ive
(&
∑i_evíts
[0], 
EV_WRITE
, 1);

1650 
	`evít_ba£_di•©ch
(
ba£
);

1651 
	`â_öt_›
(
n_∑i_ˇŒs
, ==, 3);

1652 
	`â_öt_›
(
ˇŒ_‹dî
[0], ==, 0);

1653 
	`â_öt_›
(
ˇŒ_‹dî
[1], ==, 2);

1654 
	`â_öt_›
(
ˇŒ_‹dî
[2], ==, 1);

1655 
íd
:

1657 
	}
}

1661 
	$ã°_mu…ùÀ_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

1663 i‡(
evít
 & 
EV_READ
)

1664 
ã°_ok
 |= 1;

1665 i‡(
evít
 & 
EV_WRITE
)

1666 
ã°_ok
 |= 2;

1667 
	}
}

1670 
	$ã°_mu…ùÀ_evíts_f‹_ßme_fd
()

1672 
evít
 
e1
, 
e2
;

1674 
	`£tup_ã°
("MultipleÉvents for same fd: ");

1676 
	`evít_£t
(&
e1
, 
∑ú
[0], 
EV_READ
, 
ã°_mu…ùÀ_cb
, 
NULL
);

1677 
	`evít_add
(&
e1
, 
NULL
);

1678 
	`evít_£t
(&
e2
, 
∑ú
[0], 
EV_WRITE
, 
ã°_mu…ùÀ_cb
, 
NULL
);

1679 
	`evít_add
(&
e2
, 
NULL
);

1680 
	`evít_lo›
(
EVLOOP_ONCE
);

1681 
	`evít_dñ
(&
e2
);

1683 i‡(
	`wrôe
(
∑ú
[1], 
TEST1
, 
	`°æí
(TEST1)+1) < 0) {

1684 
	`â_Áû_≥º‹
("write");

1687 
	`evít_lo›
(
EVLOOP_ONCE
);

1688 
	`evít_dñ
(&
e1
);

1690 i‡(
ã°_ok
 != 3)

1691 
ã°_ok
 = 0;

1693 
	`˛ónup_ã°
();

1694 
	}
}

1696 
evèg_decode_öt
(
ev_uöt32_t
 *
≤umbî
, 
evbuf„r
 *
evbuf
);

1697 
evèg_decode_öt64
(
ev_uöt64_t
 *
≤umbî
, 
evbuf„r
 *
evbuf
);

1698 
evèg_ícode_èg
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
numbî
);

1699 
evèg_decode_èg
(
ev_uöt32_t
 *
≤umbî
, 
evbuf„r
 *
evbuf
);

1702 
	$ªad_⁄˚_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

1704 
buf
[256];

1705 
Àn
;

1707 
Àn
 = 
	`ªad
(
fd
, 
buf
, (buf));

1709 i‡(
ˇŒed
) {

1710 
ã°_ok
 = 0;

1711 } i‡(
Àn
) {

1713 i‡(
	`wrôe
(
∑ú
[0], 
TEST1
, 
	`°æí
(TEST1)+1) < 0) {

1714 
	`â_Áû_≥º‹
("write");

1715 
ã°_ok
 = 0;

1717 
ã°_ok
 = 1;

1721 
ˇŒed
++;

1722 
	}
}

1725 
	$ã°_w™t_⁄ly_⁄˚
()

1727 
evít
 
ev
;

1728 
timevÆ
 
tv
;

1731 
	`£tup_ã°
("WantÑead only once: ");

1733 i‡(
	`wrôe
(
∑ú
[0], 
TEST1
, 
	`°æí
(TEST1)+1) < 0) {

1734 
	`â_Áû_≥º‹
("write");

1738 
	`evutû_timî˛ór
(&
tv
);

1739 
tv
.
tv_£c
 = 1;

1740 
	`evít_lo›exô
(&
tv
);

1742 
	`evít_£t
(&
ev
, 
∑ú
[1], 
EV_READ
, 
ªad_⁄˚_cb
, &ev);

1743 i‡(
	`evít_add
(&
ev
, 
NULL
) == -1)

1744 
	`exô
(1);

1745 
	`evít_di•©ch
();

1747 
	`˛ónup_ã°
();

1748 
	}
}

1750 
	#TEST_MAX_INT
 6

	)

1753 
	$evèg_öt_ã°
(*
±r
)

1755 
evbuf„r
 *
tmp
 = 
	`evbuf„r_√w
();

1756 
ev_uöt32_t
 
öãgîs
[
TEST_MAX_INT
] = {

1759 
ev_uöt32_t
 
öãgî
;

1760 
ev_uöt64_t
 
big_öt
;

1761 
i
;

1763 
	`evèg_öô
();

1765 
i
 = 0; i < 
TEST_MAX_INT
; i++) {

1766 
ﬁdÀn
, 
√wÀn
;

1767 
ﬁdÀn
 = ()
	`EVBUFFER_LENGTH
(
tmp
);

1768 
	`evèg_ícode_öt
(
tmp
, 
öãgîs
[
i
]);

1769 
√wÀn
 = ()
	`EVBUFFER_LENGTH
(
tmp
);

1770 
	`TT_BLATHER
(("encoded 0x%08x with %d bytes",

1771 ()
öãgîs
[
i
], 
√wÀn
 - 
ﬁdÀn
));

1772 
big_öt
 = 
öãgîs
[
i
];

1773 
big_öt
 *= 1000000000;

1774 
	`evèg_ícode_öt64
(
tmp
, 
big_öt
);

1777 
i
 = 0; i < 
TEST_MAX_INT
; i++) {

1778 
	`â_öt_›
(
	`evèg_decode_öt
(&
öãgî
, 
tmp
), !=, -1);

1779 
	`â_uöt_›
(
öãgî
, ==, 
öãgîs
[
i
]);

1780 
	`â_öt_›
(
	`evèg_decode_öt64
(&
big_öt
, 
tmp
), !=, -1);

1781 
	`â_as£π
((
big_öt
 / 1000000000Ë=
öãgîs
[
i
]);

1784 
	`â_uöt_›
(
	`EVBUFFER_LENGTH
(
tmp
), ==, 0);

1785 
íd
:

1786 
	`evbuf„r_‰ì
(
tmp
);

1787 
	}
}

1790 
	$evèg_fuzz
(*
±r
)

1792 
u_ch¨
 
buf„r
[4096];

1793 
evbuf„r
 *
tmp
 = 
	`evbuf„r_√w
();

1794 
timevÆ
 
tv
;

1795 
i
, 
j
;

1797 
nŸ_Áûed
 = 0;

1799 
	`evèg_öô
();

1801 
j
 = 0; j < 100; j++) {

1802 
i
 = 0; i < ()(
buf„r
); i++)

1803 
buf„r
[
i
] = 
	`ønd
();

1804 
	`evbuf„r_døö
(
tmp
, -1);

1805 
	`evbuf„r_add
(
tmp
, 
buf„r
, (buffer));

1807 i‡(
	`evèg_unm¨shÆ_timevÆ
(
tmp
, 0, &
tv
) != -1)

1808 
nŸ_Áûed
++;

1812 
	`â_öt_›
(
nŸ_Áûed
, <, 10);

1815 
	`evbuf„r_døö
(
tmp
, -1);

1816 
	`evutû_timî˛ór
(&
tv
);

1817 
tv
.
tv_£c
 = 1;

1818 
	`evèg_m¨shÆ_timevÆ
(
tmp
, 0, &
tv
);

1819 
	`evbuf„r_add
(
tmp
, 
buf„r
, (buffer));

1821 ((*)
	`EVBUFFER_DATA
(
tmp
))[1] = '\xff';

1822 i‡(
	`evèg_unm¨shÆ_timevÆ
(
tmp
, 0, &
tv
) != -1) {

1823 
	`â_ab‹t_msg
("evtag_unmarshal_timeval should have failed");

1826 
íd
:

1827 
	`evbuf„r_‰ì
(
tmp
);

1828 
	}
}

1831 
	$evèg_èg_ícodög
(*
±r
)

1833 
evbuf„r
 *
tmp
 = 
	`evbuf„r_√w
();

1834 
ev_uöt32_t
 
öãgîs
[
TEST_MAX_INT
] = {

1837 
ev_uöt32_t
 
öãgî
;

1838 
i
;

1840 
	`evèg_öô
();

1842 
i
 = 0; i < 
TEST_MAX_INT
; i++) {

1843 
ﬁdÀn
, 
√wÀn
;

1844 
ﬁdÀn
 = ()
	`EVBUFFER_LENGTH
(
tmp
);

1845 
	`evèg_ícode_èg
(
tmp
, 
öãgîs
[
i
]);

1846 
√wÀn
 = ()
	`EVBUFFER_LENGTH
(
tmp
);

1847 
	`TT_BLATHER
(("encoded 0x%08x with %d bytes",

1848 ()
öãgîs
[
i
], 
√wÀn
 - 
ﬁdÀn
));

1851 
i
 = 0; i < 
TEST_MAX_INT
; i++) {

1852 
	`â_öt_›
(
	`evèg_decode_èg
(&
öãgî
, 
tmp
), !=, -1);

1853 
	`â_uöt_›
(
öãgî
, ==, 
öãgîs
[
i
]);

1856 
	`â_uöt_›
(
	`EVBUFFER_LENGTH
(
tmp
), ==, 0);

1858 
íd
:

1859 
	`evbuf„r_‰ì
(
tmp
);

1860 
	}
}

1863 
	$evèg_ã°_≥ek
(*
±r
)

1865 
evbuf„r
 *
tmp
 = 
	`evbuf„r_√w
();

1866 
ev_uöt32_t
 
u32
;

1868 
	`evèg_m¨shÆ_öt
(
tmp
, 30, 0);

1869 
	`evèg_m¨shÆ_°rög
(
tmp
, 40, "Hello world");

1871 
	`â_öt_›
(
	`evèg_≥ek
(
tmp
, &
u32
), ==, 1);

1872 
	`â_öt_›
(
u32
, ==, 30);

1873 
	`â_öt_›
(
	`evèg_≥ek_Àngth
(
tmp
, &
u32
), ==, 0);

1874 
	`â_öt_›
(
u32
, ==, 1+1+1);

1875 
	`â_öt_›
(
	`evèg_c⁄sume
(
tmp
), ==, 0);

1877 
	`â_öt_›
(
	`evèg_≥ek
(
tmp
, &
u32
), ==, 1);

1878 
	`â_öt_›
(
u32
, ==, 40);

1879 
	`â_öt_›
(
	`evèg_≥ek_Àngth
(
tmp
, &
u32
), ==, 0);

1880 
	`â_öt_›
(
u32
, ==, 1+1+11);

1881 
	`â_öt_›
(
	`evèg_∑ylﬂd_Àngth
(
tmp
, &
u32
), ==, 0);

1882 
	`â_öt_›
(
u32
, ==, 11);

1884 
íd
:

1885 
	`evbuf„r_‰ì
(
tmp
);

1886 
	}
}

1890 
	$ã°_mëhods
(*
±r
)

1892 c⁄° **
mëhods
 = 
	`evít_gë_suµ‹ãd_mëhods
();

1893 
evít_c⁄fig
 *
cfg
 = 
NULL
;

1894 
evít_ba£
 *
ba£
 = 
NULL
;

1895 c⁄° *
backíd
;

1896 
n_mëhods
 = 0;

1898 
	`â_as£π
(
mëhods
);

1900 
backíd
 = 
mëhods
[0];

1901 *
mëhods
 !
NULL
) {

1902 
	`TT_BLATHER
(("Suµ‹àmëhod: %s", *
mëhods
));

1903 ++
mëhods
;

1904 ++
n_mëhods
;

1907 
cfg
 = 
	`evít_c⁄fig_√w
();

1908 
	`as£π
(
cfg
 !
NULL
);

1910 
	`â_öt_›
(
	`evít_c⁄fig_avoid_mëhod
(
cfg
, 
backíd
), ==, 0);

1911 
	`evít_c⁄fig_£t_Êag
(
cfg
, 
EVENT_BASE_FLAG_IGNORE_ENV
);

1913 
ba£
 = 
	`evít_ba£_√w_wôh_c⁄fig
(
cfg
);

1914 i‡(
n_mëhods
 > 1) {

1915 
	`â_as£π
(
ba£
);

1916 
	`â_°r_›
(
backíd
, !=, 
	`evít_ba£_gë_mëhod
(
ba£
));

1918 
	`â_as£π
(
ba£
 =
NULL
);

1921 
íd
:

1922 i‡(
ba£
)

1923 
	`evít_ba£_‰ì
(
ba£
);

1924 i‡(
cfg
)

1925 
	`evít_c⁄fig_‰ì
(
cfg
);

1926 
	}
}

1929 
	$ã°_vîsi⁄
(*
¨g
)

1931 c⁄° *
v°r
;

1932 
ev_uöt32_t
 
vöt
;

1933 
maj‹
, 
mö‹
, 
∑tch
, 
n
;

1935 
v°r
 = 
	`evít_gë_vîsi⁄
();

1936 
vöt
 = 
	`evít_gë_vîsi⁄_numbî
();

1938 
	`â_as£π
(
v°r
);

1939 
	`â_as£π
(
vöt
);

1941 
	`â_°r_›
(
v°r
, ==, 
LIBEVENT_VERSION
);

1942 
	`â_öt_›
(
vöt
, ==, 
LIBEVENT_VERSION_NUMBER
);

1944 
n
 = 
	`ssˇnf
(
v°r
, "%d.%d.%d", &
maj‹
, &
mö‹
, &
∑tch
);

1945 
	`â_as£π
(3 =
n
);

1946 
	`â_öt_›
((
vöt
&0xffffff00), ==, ((
maj‹
<<24)|(
mö‹
<<16)|(
∑tch
<<8)));

1947 
íd
:

1949 
	}
}

1952 
	$ã°_ba£_„©uªs
(*
¨g
)

1954 
evít_ba£
 *
ba£
 = 
NULL
;

1955 
evít_c⁄fig
 *
cfg
 = 
NULL
;

1957 
cfg
 = 
	`evít_c⁄fig_√w
();

1959 
	`â_as£π
(0 =
	`evít_c⁄fig_ªquúe_„©uªs
(
cfg
, 
EV_FEATURE_ET
));

1961 
ba£
 = 
	`evít_ba£_√w_wôh_c⁄fig
(
cfg
);

1962 i‡(
ba£
) {

1963 
	`â_öt_›
(
EV_FEATURE_ET
, ==,

1964 
	`evít_ba£_gë_„©uªs
(
ba£
Ë& 
EV_FEATURE_ET
);

1966 
ba£
 = 
	`evít_ba£_√w
();

1967 
	`â_öt_›
(0, ==, 
	`evít_ba£_gë_„©uªs
(
ba£
Ë& 
EV_FEATURE_ET
);

1970 
íd
:

1971 i‡(
ba£
)

1972 
	`evít_ba£_‰ì
(
ba£
);

1973 i‡(
cfg
)

1974 
	`evít_c⁄fig_‰ì
(
cfg
);

1975 
	}
}

1977 #ifde‡
_EVENT_HAVE_SETENV


1978 
	#SETENV_OK


	)

1979 #ñi‡!
deföed
(
_EVENT_HAVE_SETENV
Ë&& deföed(
_EVENT_HAVE_PUTENV
)

1980 
	$£ãnv
(c⁄° *
k
, c⁄° *
v
, 
_o
)

1982 
b
[256];

1983 
	`evutû_¢¥ötf
(
b
, (b), "%s=%s",
k
,
v
);

1984 
	`puãnv
(
b
);

1985 
	}
}

1986 
	#SETENV_OK


	)

1989 #ifde‡
_EVENT_HAVE_UNSETENV


1990 
	#UNSETENV_OK


	)

1991 #ñi‡!
deföed
(
_EVENT_HAVE_UNSETENV
Ë&& deföed(
_EVENT_HAVE_PUTENV
)

1992 
	$un£ãnv
(c⁄° *
k
)

1994 
b
[256];

1995 
	`evutû_¢¥ötf
(
b
, (b), "%s=",
k
);

1996 
	`puãnv
(
b
);

1997 
	}
}

1998 
	#UNSETENV_OK


	)

2001 #i‡
deföed
(
SETENV_OK
Ë&& deföed(
UNSETENV_OK
)

2003 
	$mëhod«me_to_ívv¨
(c⁄° *
m«me
, *
buf
, 
size_t
 
buÊí
)

2005 *
˝
;

2006 
	`evutû_¢¥ötf
(
buf
, 
buÊí
, "EVENT_NO%s", 
m«me
);

2007 
˝
 = 
buf
; *cp; ++cp) {

2008 *
˝
 = 
	`EVUTIL_TOUPPER
(*cp);

2010 
	}
}

2014 
	$ã°_ba£_ívú⁄
(*
¨g
)

2016 
evít_ba£
 *
ba£
 = 
NULL
;

2017 
evít_c⁄fig
 *
cfg
 = 
NULL
;

2019 #i‡
	`deföed
(
SETENV_OK
Ë&& deföed(
UNSETENV_OK
)

2020 c⁄° **
ba£«mes
;

2021 
i
, 
n_mëhods
=0;

2022 
v¨buf
[128];

2023 c⁄° *
deÁu…«me
, *
ign‹ìnv«me
;

2026 
	`£ãnv
("EVENT_NOWAFFLES", "1", 1);

2027 
	`un£ãnv
("EVENT_NOWAFFLES");

2028 i‡(
	`gëív
("EVENT_NOWAFFLES"Ë!
NULL
) {

2029 #i‚de‡
_EVENT_HAVE_UNSETENV


2030 
	`TT_DECLARE
("NOTE", ("Can't fake unsetenv; skippingÅest"));

2032 
	`TT_DECLARE
("NOTE", ("unsetenv doesn't work; skippingÅest"));

2034 
	`â_skù
();

2037 
ba£«mes
 = 
	`evít_gë_suµ‹ãd_mëhods
();

2038 
i
 = 0; 
ba£«mes
[i]; ++i) {

2039 
	`mëhod«me_to_ívv¨
(
ba£«mes
[
i
], 
v¨buf
, (varbuf));

2040 
	`un£ãnv
(
v¨buf
);

2041 ++
n_mëhods
;

2044 
ba£
 = 
	`evít_ba£_√w
();

2045 
	`â_as£π
(
ba£
);

2047 
deÁu…«me
 = 
	`evít_ba£_gë_mëhod
(
ba£
);

2048 
	`TT_BLATHER
(("deÁu… i†<%s>", 
deÁu…«me
));

2049 
	`evít_ba£_‰ì
(
ba£
);

2050 
ba£
 = 
NULL
;

2053 i‡(!
	`°rcmp
(
deÁu…«me
, "epoll (with changelist)")) {

2054 
	`£ãnv
("EVENT_NOEPOLL", "1", 1);

2055 
ign‹ìnv«me
 = "epoll";

2057 
	`mëhod«me_to_ívv¨
(
deÁu…«me
, 
v¨buf
, (varbuf));

2058 
	`£ãnv
(
v¨buf
, "1", 1);

2059 
ign‹ìnv«me
 = 
deÁu…«me
;

2063 
cfg
 = 
	`evít_c⁄fig_√w
();

2064 
ba£
 = 
	`evít_ba£_√w_wôh_c⁄fig
(
cfg
);

2065 
	`evít_c⁄fig_‰ì
(
cfg
);

2066 
cfg
 = 
NULL
;

2067 i‡(
n_mëhods
 == 1) {

2068 
	`â_as£π
(!
ba£
);

2070 
	`â_as£π
(
ba£
);

2071 
	`â_°r_›
(
deÁu…«me
, !=, 
	`evít_ba£_gë_mëhod
(
ba£
));

2072 
	`evít_ba£_‰ì
(
ba£
);

2073 
ba£
 = 
NULL
;

2077 
cfg
 = 
	`evít_c⁄fig_√w
();

2078 
	`evít_c⁄fig_£t_Êag
(
cfg
, 
EVENT_BASE_FLAG_IGNORE_ENV
);

2079 
ba£
 = 
	`evít_ba£_√w_wôh_c⁄fig
(
cfg
);

2080 
	`â_as£π
(
ba£
);

2081 
	`â_°r_›
(
ign‹ìnv«me
, ==, 
	`evít_ba£_gë_mëhod
(
ba£
));

2083 
	`â_skù
();

2086 
íd
:

2087 i‡(
ba£
)

2088 
	`evít_ba£_‰ì
(
ba£
);

2089 i‡(
cfg
)

2090 
	`evít_c⁄fig_‰ì
(
cfg
);

2091 
	}
}

2094 
	$ªad_ˇŒed_⁄˚_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

2096 
	`â_öt_›
(
evít
, ==, 
EV_READ
);

2097 
ˇŒed
 += 1;

2098 
íd
:

2100 
	}
}

2103 
	$timeout_ˇŒed_⁄˚_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

2105 
	`â_öt_›
(
evít
, ==, 
EV_TIMEOUT
);

2106 
ˇŒed
 += 100;

2107 
íd
:

2109 
	}
}

2112 
	$ã°_evít_⁄˚
(*
±r
)

2114 
basic_ã°_d©a
 *
d©a
 = 
±r
;

2115 
timevÆ
 
tv
;

2116 
r
;

2118 
tv
.
tv_£c
 = 0;

2119 
tv
.
tv_u£c
 = 50*1000;

2120 
ˇŒed
 = 0;

2121 
r
 = 
	`evít_ba£_⁄˚
(
d©a
->
ba£
, d©a->
∑ú
[0], 
EV_READ
,

2122 
ªad_ˇŒed_⁄˚_cb
, 
NULL
, NULL);

2123 
	`â_öt_›
(
r
, ==, 0);

2124 
r
 = 
	`evít_ba£_⁄˚
(
d©a
->
ba£
, -1, 
EV_TIMEOUT
,

2125 
timeout_ˇŒed_⁄˚_cb
, 
NULL
, &
tv
);

2126 
	`â_öt_›
(
r
, ==, 0);

2127 
r
 = 
	`evít_ba£_⁄˚
(
d©a
->
ba£
, -1, 0, 
NULL
, NULL, NULL);

2128 
	`â_öt_›
(
r
, <, 0);

2130 i‡(
	`wrôe
(
d©a
->
∑ú
[1], 
TEST1
, 
	`°æí
(TEST1)+1) < 0) {

2131 
	`â_Áû_≥º‹
("write");

2134 
	`shutdown
(
d©a
->
∑ú
[1], 
SHUT_WR
);

2136 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

2138 
	`â_öt_›
(
ˇŒed
, ==, 101);

2139 
íd
:

2141 
	}
}

2144 
	$ã°_evít_≥ndög
(*
±r
)

2146 
basic_ã°_d©a
 *
d©a
 = 
±r
;

2147 
evít
 *
r
=
NULL
, *
w
=NULL, *
t
=NULL;

2148 
timevÆ
 
tv
, 
now
, 
tv2
, 
diff
;

2150 
tv
.
tv_£c
 = 0;

2151 
tv
.
tv_u£c
 = 500 * 1000;

2152 
r
 = 
	`evít_√w
(
d©a
->
ba£
, d©a->
∑ú
[0], 
EV_READ
, 
sim∂e_ªad_cb
,

2153 
NULL
);

2154 
w
 = 
	`evít_√w
(
d©a
->
ba£
, d©a->
∑ú
[1], 
EV_WRITE
, 
sim∂e_wrôe_cb
,

2155 
NULL
);

2156 
t
 = 
	`evtimî_√w
(
d©a
->
ba£
, 
timeout_cb
, 
NULL
);

2158 
	`â_as£π
(
r
);

2159 
	`â_as£π
(
w
);

2160 
	`â_as£π
(
t
);

2162 
	`evutû_gëtimeofday
(&
now
, 
NULL
);

2163 
	`evít_add
(
r
, 
NULL
);

2164 
	`evít_add
(
t
, &
tv
);

2166 
	`â_as£π
–
	`evít_≥ndög
(
r
, 
EV_READ
, 
NULL
));

2167 
	`â_as£π
(!
	`evít_≥ndög
(
w
, 
EV_WRITE
, 
NULL
));

2168 
	`â_as£π
(!
	`evít_≥ndög
(
r
, 
EV_WRITE
, 
NULL
));

2169 
	`â_as£π
–
	`evít_≥ndög
(
r
, 
EV_READ
|
EV_WRITE
, 
NULL
));

2170 
	`â_as£π
(!
	`evít_≥ndög
(
r
, 
EV_TIMEOUT
, 
NULL
));

2171 
	`â_as£π
–
	`evít_≥ndög
(
t
, 
EV_TIMEOUT
, 
NULL
));

2172 
	`â_as£π
–
	`evít_≥ndög
(
t
, 
EV_TIMEOUT
, &
tv2
));

2174 
	`â_as£π
(
	`evutû_timîcmp
(&
tv2
, &
now
, >));

2175 
	`evutû_timîadd
(&
now
, &
tv
, &tv);

2176 
	`evutû_timîsub
(&
tv2
, &
tv
, &
diff
);

2177 
	`â_öt_›
(
diff
.
tv_£c
, ==, 0);

2178 
	`â_öt_›
(
	`œbs
(
diff
.
tv_u£c
), <, 1000);

2180 
íd
:

2181 i‡(
r
) {

2182 
	`evít_dñ
(
r
);

2183 
	`evít_‰ì
(
r
);

2185 i‡(
w
) {

2186 
	`evít_dñ
(
w
);

2187 
	`evít_‰ì
(
w
);

2189 i‡(
t
) {

2190 
	`evít_dñ
(
t
);

2191 
	`evít_‰ì
(
t
);

2193 
	}
}

2195 #i‚de‡
WIN32


2199 
	$dfd_cb
(
evutû_sockë_t
 
fd
, 
e
, *
d©a
)

2201 *(*)
d©a
 = ()
e
;

2202 
	}
}

2208 
	$ã°_dup_fd
(*
¨g
)

2210 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

2211 
evít_ba£
 *
ba£
 = 
d©a
->base;

2212 
evít
 *
ev1
=
NULL
, *
ev2
=NULL;

2213 
fd
, 
dfd
=-1;

2214 
ev1_gŸ
, 
ev2_gŸ
;

2216 
	`â_öt_›
(
	`wrôe
(
d©a
->
∑ú
[0], "Hello world",

2217 
	`°æí
("Hello world")), >, 0);

2218 
fd
 = 
d©a
->
∑ú
[1];

2220 
dfd
 = 
	`dup
(
fd
);

2221 
	`â_öt_›
(
dfd
, >=, 0);

2223 
ev1
 = 
	`evít_√w
(
ba£
, 
fd
, 
EV_READ
|
EV_PERSIST
, 
dfd_cb
, &
ev1_gŸ
);

2224 
ev2
 = 
	`evít_√w
(
ba£
, 
dfd
, 
EV_READ
|
EV_PERSIST
, 
dfd_cb
, &
ev2_gŸ
);

2225 
ev1_gŸ
 = 
ev2_gŸ
 = 0;

2226 
	`evít_add
(
ev1
, 
NULL
);

2227 
	`evít_add
(
ev2
, 
NULL
);

2228 
	`evít_ba£_lo›
(
ba£
, 
EVLOOP_ONCE
);

2229 
	`â_öt_›
(
ev1_gŸ
, ==, 
EV_READ
);

2230 
	`â_öt_›
(
ev2_gŸ
, ==, 
EV_READ
);

2235 
	`˛o£
(
dfd
);

2236 
	`evít_dñ
(
ev2
);

2237 
ev1_gŸ
 = 
ev2_gŸ
 = 0;

2238 
	`evít_ba£_lo›
(
ba£
, 
EVLOOP_ONCE
);

2239 
	`â_w™t_öt_›
(
ev1_gŸ
, ==, 
EV_READ
);

2240 
	`â_öt_›
(
ev2_gŸ
, ==, 0);

2247 
	`â_öt_›
(
	`dup2
(
fd
, 
dfd
), ==, dfd);

2248 
	`evít_‰ì
(
ev2
);

2249 
ev2
 = 
	`evít_√w
(
ba£
, 
dfd
, 
EV_WRITE
|
EV_PERSIST
, 
dfd_cb
, &
ev2_gŸ
);

2250 
	`evít_add
(
ev2
, 
NULL
);

2251 
ev1_gŸ
 = 
ev2_gŸ
 = 0;

2252 
	`evít_ba£_lo›
(
ba£
, 
EVLOOP_ONCE
);

2253 
	`â_w™t_öt_›
(
ev1_gŸ
, ==, 
EV_READ
);

2254 
	`â_öt_›
(
ev2_gŸ
, ==, 
EV_WRITE
);

2256 
íd
:

2257 i‡(
ev1
)

2258 
	`evít_‰ì
(
ev1
);

2259 i‡(
ev2
)

2260 
	`evít_‰ì
(
ev2
);

2261 i‡(
dfd
 >= 0)

2262 
	`˛o£
(
dfd
);

2263 
	}
}

2266 #ifde‡
_EVENT_DISABLE_MM_REPLACEMENT


2268 
	$ã°_mm_fun˘i⁄s
(*
¨g
)

2270 
	`_töyã°_£t_ã°_skù≥d
();

2271 
	}
}

2274 
	$check_dummy_mem_ok
(*
_mem
)

2276 *
mem
 = 
_mem
;

2277 
mem
 -= 16;

2278  !
	`memcmp
(
mem
, "{[<guardedram>]}", 16);

2279 
	}
}

2282 
	$dummy_mÆloc
(
size_t
 
Àn
)

2284 *
mem
 = 
	`mÆloc
(
Àn
+16);

2285 
	`mem˝y
(
mem
, "{[<guardedram>]}", 16);

2286  
mem
+16;

2287 
	}
}

2290 
	$dummy_ªÆloc
(*
_mem
, 
size_t
 
Àn
)

2292 *
mem
 = 
_mem
;

2293 i‡(!
mem
)

2294  
	`dummy_mÆloc
(
Àn
);

2295 
	`â_w™t
(
	`check_dummy_mem_ok
(
_mem
));

2296 
mem
 -= 16;

2297 
mem
 = 
	`ªÆloc
(mem, 
Àn
+16);

2298  
mem
+16;

2299 
	}
}

2302 
	$dummy_‰ì
(*
_mem
)

2304 *
mem
 = 
_mem
;

2305 
	`â_w™t
(
	`check_dummy_mem_ok
(
_mem
));

2306 
mem
 -= 16;

2307 
	`‰ì
(
mem
);

2308 
	}
}

2311 
	$ã°_mm_fun˘i⁄s
(*
¨g
)

2313 
evít_ba£
 *
b
 = 
NULL
;

2314 
evít_c⁄fig
 *
cfg
 = 
NULL
;

2315 
	`evít_£t_mem_fun˘i⁄s
(
dummy_mÆloc
, 
dummy_ªÆloc
, 
dummy_‰ì
);

2316 
cfg
 = 
	`evít_c⁄fig_√w
();

2317 
	`evít_c⁄fig_avoid_mëhod
(
cfg
, "Nonesuch");

2318 
b
 = 
	`evít_ba£_√w_wôh_c⁄fig
(
cfg
);

2319 
	`â_as£π
(
b
);

2320 
	`â_as£π
(
	`check_dummy_mem_ok
(
b
));

2321 
íd
:

2322 i‡(
cfg
)

2323 
	`evít_c⁄fig_‰ì
(
cfg
);

2324 i‡(
b
)

2325 
	`evít_ba£_‰ì
(
b
);

2326 
	}
}

2330 
	$m™y_evít_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

2332 *
ˇŒedp
 = 
¨g
;

2333 *
ˇŒedp
 += 1;

2334 
	}
}

2337 
	$ã°_m™y_evíts
(*
¨g
)

2343 
	#MANY
 70

	)

2345 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

2346 
evít_ba£
 *
ba£
 = 
d©a
->base;

2347 
⁄e_©_a_time
 = 
d©a
->
£tup_d©a
 !
NULL
;

2348 
evutû_sockë_t
 
sock
[
MANY
];

2349 
evít
 *
ev
[
MANY
];

2350 
ˇŒed
[
MANY
];

2351 
i
;

2352 
lo›Êags
 = 
EVLOOP_NONBLOCK
, 
evÊags
=0;

2353 c⁄° 
is_evp‹t
 = !
	`°rcmp
(
	`evít_ba£_gë_mëhod
(
ba£
),"evport");

2354 i‡(
⁄e_©_a_time
) {

2355 
lo›Êags
 |
EVLOOP_ONCE
;

2356 
evÊags
 = 
EV_PERSIST
;

2359 
	`mem£t
(
sock
, 0xff, (sock));

2360 
	`mem£t
(
ev
, 0, (ev));

2361 
	`mem£t
(
ˇŒed
, 0, (called));

2362 i‡(
is_evp‹t
 && 
⁄e_©_a_time
) {

2363 
	`TT_DECLARE
("NOTE", ("evport can'tÖassÅhis in 2.0; skipping\n"));

2364 
	`â_skù
();

2367 
i
 = 0; i < 
MANY
; ++i) {

2371 
sock
[
i
] = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

2372 
	`â_as£π
(
sock
[
i
] >= 0);

2373 
ˇŒed
[
i
] = 0;

2374 
ev
[
i
] = 
	`evít_√w
(
ba£
, 
sock
[i], 
EV_WRITE
|
evÊags
,

2375 
m™y_evít_cb
, &
ˇŒed
[
i
]);

2376 
	`evít_add
(
ev
[
i
], 
NULL
);

2377 i‡(
⁄e_©_a_time
)

2378 
	`evít_ba£_lo›
(
ba£
, 
EVLOOP_NONBLOCK
|
EVLOOP_ONCE
);

2381 
	`evít_ba£_lo›
(
ba£
, 
lo›Êags
);

2383 
i
 = 0; i < 
MANY
; ++i) {

2384 i‡(
⁄e_©_a_time
)

2385 
	`â_öt_›
(
ˇŒed
[
i
], ==, 
MANY
 - i + 1);

2387 
	`â_öt_›
(
ˇŒed
[
i
], ==, 1);

2390 
íd
:

2391 
i
 = 0; i < 
MANY
; ++i) {

2392 i‡(
ev
[
i
])

2393 
	`evít_‰ì
(
ev
[
i
]);

2394 i‡(
sock
[
i
] >= 0)

2395 
	`evutû_˛o£sockë
(
sock
[
i
]);

2397 #unde‡
MANY


2398 
	}
}

2401 
	$ã°_°ru˘_evít_size
(*
¨g
)

2403 
	`â_öt_›
(
	`evít_gë_°ru˘_evít_size
(), <=, (
evít
));

2404 
íd
:

2406 
	}
}

2408 
ã°ˇ£_t
 
	gmaö_ã°ˇ£s
[] = {

2410 { "mëhods", 
ã°_mëhods
, 
TT_FORK
, 
NULL
, NULL },

2411 { "vîsi⁄", 
ã°_vîsi⁄
, 0, 
NULL
, NULL },

2412 
BASIC
(
ba£_„©uªs
, 
TT_FORK
|
TT_NO_LOGS
),

2413 { "ba£_ívú⁄", 
ã°_ba£_ívú⁄
, 
TT_FORK
, 
NULL
, NULL },

2415 
BASIC
(
evít_ba£_√w
, 
TT_FORK
|
TT_NEED_SOCKETPAIR
),

2416 
BASIC
(
‰ì_a˘ive_ba£
, 
TT_FORK
|
TT_NEED_SOCKETPAIR
),

2418 
BASIC
(
m™ùuœã_a˘ive_evíts
, 
TT_FORK
|
TT_NEED_BASE
),

2420 
BASIC
(
bad_assign
, 
TT_FORK
|
TT_NEED_BASE
|
TT_NO_LOGS
),

2421 
BASIC
(
bad_ªíå™t
, 
TT_FORK
|
TT_NEED_BASE
|
TT_NO_LOGS
),

2423 
LEGACY
(
≥rsi°ít_timeout
, 
TT_FORK
|
TT_NEED_BASE
),

2424 { "≥rsi°ít_timeout_jump", 
ã°_≥rsi°ít_timeout_jump
, 
TT_FORK
|
TT_NEED_BASE
, &
basic_£tup
, 
NULL
 },

2425 { "≥rsi°ít_a˘ive_timeout", 
ã°_≥rsi°ít_a˘ive_timeout
,

2426 
TT_FORK
|
TT_NEED_BASE
, &
basic_£tup
, 
NULL
 },

2427 
LEGACY
(
¥i‹ôõs
, 
TT_FORK
|
TT_NEED_BASE
),

2428 
BASIC
(
¥i‹ôy_a˘ive_övîsi⁄
, 
TT_FORK
|
TT_NEED_BASE
),

2429 { "comm⁄_timeout", 
ã°_comm⁄_timeout
, 
TT_FORK
|
TT_NEED_BASE
,

2430 &
basic_£tup
, 
NULL
 },

2433 
LEGACY
(
sim∂îód
, 
TT_ISOLATED
),

2434 
LEGACY
(
sim∂îód_mu…ùÀ
, 
TT_ISOLATED
),

2435 
LEGACY
(
sim∂ewrôe
, 
TT_ISOLATED
),

2436 { "sim∂e˛o£", 
ã°_sim∂e˛o£
, 
TT_FORK
, &
basic_£tup
,

2437 
NULL
 },

2438 
LEGACY
(
mu…ùÀ
, 
TT_ISOLATED
),

2439 
LEGACY
(
≥rsi°ít
, 
TT_ISOLATED
),

2440 
LEGACY
(
comböed
, 
TT_ISOLATED
),

2441 
LEGACY
(
sim∂ëimeout
, 
TT_ISOLATED
),

2442 
LEGACY
(
lo›bªak
, 
TT_ISOLATED
),

2443 
LEGACY
(
lo›exô
, 
TT_ISOLATED
),

2444 
LEGACY
(
lo›exô_mu…ùÀ
, 
TT_ISOLATED
),

2445 
LEGACY
(
n⁄≥rsi°_ªadd
, 
TT_ISOLATED
),

2446 
LEGACY
(
mu…ùÀ_evíts_f‹_ßme_fd
, 
TT_ISOLATED
),

2447 
LEGACY
(
w™t_⁄ly_⁄˚
, 
TT_ISOLATED
),

2448 { "evít_⁄˚", 
ã°_evít_⁄˚
, 
TT_ISOLATED
, &
basic_£tup
, 
NULL
 },

2449 { "evít_≥ndög", 
ã°_evít_≥ndög
, 
TT_ISOLATED
, &
basic_£tup
,

2450 
NULL
 },

2451 #i‚de‡
WIN32


2452 { "dup_fd", 
ã°_dup_fd
, 
TT_ISOLATED
, &
basic_£tup
, 
NULL
 },

2454 { "mm_fun˘i⁄s", 
ã°_mm_fun˘i⁄s
, 
TT_FORK
, 
NULL
, NULL },

2455 { "m™y_evíts", 
ã°_m™y_evíts
, 
TT_ISOLATED
, &
basic_£tup
, 
NULL
 },

2456 { "m™y_evíts_¶ow_add", 
ã°_m™y_evíts
, 
TT_ISOLATED
, &
basic_£tup
, (*)1 },

2458 { "°ru˘_evít_size", 
ã°_°ru˘_evít_size
, 0, 
NULL
, NULL },

2460 #i‚de‡
WIN32


2461 
LEGACY
(
f‹k
, 
TT_ISOLATED
),

2463 
END_OF_TESTCASES


2466 
ã°ˇ£_t
 
	gevèg_ã°ˇ£s
[] = {

2467 { "öt", 
evèg_öt_ã°
, 
TT_FORK
, 
NULL
, NULL },

2468 { "fuzz", 
evèg_fuzz
, 
TT_FORK
, 
NULL
, NULL },

2469 { "ícodög", 
evèg_èg_ícodög
, 
TT_FORK
, 
NULL
, NULL },

2470 { "≥ek", 
evèg_ã°_≥ek
, 0, 
NULL
, NULL },

2472 
END_OF_TESTCASES


2475 
ã°ˇ£_t
 
	gsig«l_ã°ˇ£s
[] = {

2476 #i‚de‡
WIN32


2477 
LEGACY
(
sim∂esig«l
, 
TT_ISOLATED
),

2478 
LEGACY
(
mu…ùÀsig«l
, 
TT_ISOLATED
),

2479 
LEGACY
(
immedüãsig«l
, 
TT_ISOLATED
),

2480 
LEGACY
(
sig«l_dóŒoc
, 
TT_ISOLATED
),

2481 
LEGACY
(
sig«l_pùñoss
, 
TT_ISOLATED
),

2482 
LEGACY
(
sig«l_swôchba£
, 
TT_ISOLATED
|
TT_NO_LOGS
),

2483 
LEGACY
(
sig«l_ª°‹e
, 
TT_ISOLATED
),

2484 
LEGACY
(
sig«l_as£π
, 
TT_ISOLATED
),

2485 
LEGACY
(
sig«l_whûe_¥o˚ssög
, 
TT_ISOLATED
),

2487 
END_OF_TESTCASES


	@test/regress.gen.c

6 
	~<°dlib.h
>

7 
	~<°rög.h
>

8 
	~<as£π.h
>

9 
	~<evít2/evít-c⁄fig.h
>

10 
	~<evít2/evít.h
>

11 
	~<evít2/buf„r.h
>

12 
	~<evít2/èg.h
>

14 #ifde‡
_EVENT___func__


15 
	#__func__
 
_EVENT___func__


	)

19 
	~"ªgªss.gí.h
"

21 
evít_w¨n
(c⁄° *
fmt
, ...);

22 
evít_w¨nx
(c⁄° *
fmt
, ...);

29 
msg_ac˚ss_
 
	g__msg_ba£
 = {

30 
msg_‰om_«me_assign
,

31 
msg_‰om_«me_gë
,

32 
msg_to_«me_assign
,

33 
msg_to_«me_gë
,

34 
msg_©èck_assign
,

35 
msg_©èck_gë
,

36 
msg_run_assign
,

37 
msg_run_gë
,

38 
msg_run_add
,

41 
msg
 *

42 
	$msg_√w
()

44  
	`msg_√w_wôh_¨g
(
NULL
);

45 
	}
}

47 
msg
 *

48 
	$msg_√w_wôh_¨g
(*
unu£d
)

50 
msg
 *
tmp
;

51 i‡((
tmp
 = 
	`mÆloc
((
msg
))Ë=
NULL
) {

52 
	`evít_w¨n
("%s: mÆloc", 
__func__
);

53  (
NULL
);

55 
tmp
->
ba£
 = &
__msg_ba£
;

57 
tmp
->
‰om_«me_d©a
 = 
NULL
;

58 
tmp
->
‰om_«me_£t
 = 0;

60 
tmp
->
to_«me_d©a
 = 
NULL
;

61 
tmp
->
to_«me_£t
 = 0;

63 
tmp
->
©èck_d©a
 = 
NULL
;

64 
tmp
->
©èck_£t
 = 0;

66 
tmp
->
run_d©a
 = 
NULL
;

67 
tmp
->
run_Àngth
 = 0;

68 
tmp
->
run_num_Æloˇãd
 = 0;

69 
tmp
->
run_£t
 = 0;

71  (
tmp
);

72 
	}
}

78 
	$msg_run_ex∑nd_to_hﬁd_m‹e
(
msg
 *msg)

80 
tobe_Æloˇãd
 = 
msg
->
run_num_Æloˇãd
;

81 
run
** 
√w_d©a
 = 
NULL
;

82 
tobe_Æloˇãd
 = !tobe_allocated ? 1 :Åobe_allocated << 1;

83 
√w_d©a
 = (
run
**Ë
	`ªÆloc
(
msg
->
run_d©a
,

84 
tobe_Æloˇãd
 * (
run
*));

85 i‡(
√w_d©a
 =
NULL
)

87 
msg
->
run_d©a
 = 
√w_d©a
;

88 
msg
->
run_num_Æloˇãd
 = 
tobe_Æloˇãd
;

89  0;
	}
}

91 
run
*

92 
	$msg_run_add
(
msg
 *msg)

94 i‡(++
msg
->
run_Àngth
 >msg->
run_num_Æloˇãd
) {

95 i‡(
	`msg_run_ex∑nd_to_hﬁd_m‹e
(
msg
)<0)

96 
îr‹
;

98 
msg
->
run_d©a
[msg->
run_Àngth
 - 1] = 
	`run_√w
();

99 i‡(
msg
->
run_d©a
[msg->
run_Àngth
 - 1] =
NULL
)

100 
îr‹
;

101 
msg
->
run_£t
 = 1;

102  (
msg
->
run_d©a
[msg->
run_Àngth
 - 1]);

103 
îr‹
:

104 --
msg
->
run_Àngth
;

105  (
NULL
);

106 
	}
}

109 
	$msg_‰om_«me_assign
(
msg
 *msg,

110 c⁄° * 
vÆue
)

112 i‡(
msg
->
‰om_«me_d©a
 !
NULL
)

113 
	`‰ì
(
msg
->
‰om_«me_d©a
);

114 i‡((
msg
->
‰om_«me_d©a
 = 
	`°rdup
(
vÆue
)Ë=
NULL
)

116 
msg
->
‰om_«me_£t
 = 1;

118 
	}
}

121 
	$msg_to_«me_assign
(
msg
 *msg,

122 c⁄° * 
vÆue
)

124 i‡(
msg
->
to_«me_d©a
 !
NULL
)

125 
	`‰ì
(
msg
->
to_«me_d©a
);

126 i‡((
msg
->
to_«me_d©a
 = 
	`°rdup
(
vÆue
)Ë=
NULL
)

128 
msg
->
to_«me_£t
 = 1;

130 
	}
}

133 
	$msg_©èck_assign
(
msg
 *msg,

134 c⁄° 
kûl
* 
vÆue
)

136 
evbuf„r
 *
tmp
 = 
NULL
;

137 i‡(
msg
->
©èck_£t
) {

138 
	`kûl_˛ór
(
msg
->
©èck_d©a
);

139 
msg
->
©èck_£t
 = 0;

141 
msg
->
©èck_d©a
 = 
	`kûl_√w
();

142 i‡(
msg
->
©èck_d©a
 =
NULL
) {

143 
	`evít_w¨n
("%s: kûl_√w()", 
__func__
);

144 
îr‹
;

147 i‡((
tmp
 = 
	`evbuf„r_√w
()Ë=
NULL
) {

148 
	`evít_w¨n
("%s:Évbuf„r_√w()", 
__func__
);

149 
îr‹
;

151 
	`kûl_m¨shÆ
(
tmp
, 
vÆue
);

152 i‡(
	`kûl_unm¨shÆ
(
msg
->
©èck_d©a
, 
tmp
) == -1) {

153 
	`evít_w¨nx
("%s: kûl_unm¨shÆ", 
__func__
);

154 
îr‹
;

156 
msg
->
©èck_£t
 = 1;

157 
	`evbuf„r_‰ì
(
tmp
);

159 
îr‹
:

160 i‡(
tmp
 !
NULL
)

161 
	`evbuf„r_‰ì
(
tmp
);

162 i‡(
msg
->
©èck_d©a
 !
NULL
) {

163 
	`kûl_‰ì
(
msg
->
©èck_d©a
);

164 
msg
->
©èck_d©a
 = 
NULL
;

167 
	}
}

170 
	$msg_run_assign
(
msg
 *msg, 
off
,

171 c⁄° 
run
* 
vÆue
)

173 i‡(!
msg
->
run_£t
 || 
off
 < 0 || of‡>msg->
run_Àngth
)

177 
had_îr‹
 = 0;

178 
evbuf„r
 *
tmp
 = 
NULL
;

179 
	`run_˛ór
(
msg
->
run_d©a
[
off
]);

180 i‡((
tmp
 = 
	`evbuf„r_√w
()Ë=
NULL
) {

181 
	`evít_w¨n
("%s:Évbuf„r_√w()", 
__func__
);

182 
had_îr‹
 = 1;

183 
d⁄e
;

185 
	`run_m¨shÆ
(
tmp
, 
vÆue
);

186 i‡(
	`run_unm¨shÆ
(
msg
->
run_d©a
[
off
], 
tmp
) == -1) {

187 
	`evít_w¨nx
("%s:Ñun_unm¨shÆ", 
__func__
);

188 
had_îr‹
 = 1;

189 
d⁄e
;

191 
d⁄e
:i‡(
tmp
 !
NULL
)

192 
	`evbuf„r_‰ì
(
tmp
);

193 i‡(
had_îr‹
) {

194 
	`run_˛ór
(
msg
->
run_d©a
[
off
]);

199 
	}
}

202 
	$msg_‰om_«me_gë
(
msg
 *msg, * *
vÆue
)

204 i‡(
msg
->
‰om_«me_£t
 != 1)

206 *
vÆue
 = 
msg
->
‰om_«me_d©a
;

208 
	}
}

211 
	$msg_to_«me_gë
(
msg
 *msg, * *
vÆue
)

213 i‡(
msg
->
to_«me_£t
 != 1)

215 *
vÆue
 = 
msg
->
to_«me_d©a
;

217 
	}
}

220 
	$msg_©èck_gë
(
msg
 *msg, 
kûl
* *
vÆue
)

222 i‡(
msg
->
©èck_£t
 != 1) {

223 
msg
->
©èck_d©a
 = 
	`kûl_√w
();

224 i‡(
msg
->
©èck_d©a
 =
NULL
)

226 
msg
->
©èck_£t
 = 1;

228 *
vÆue
 = 
msg
->
©èck_d©a
;

230 
	}
}

233 
	$msg_run_gë
(
msg
 *msg, 
off£t
,

234 
run
* *
vÆue
)

236 i‡(!
msg
->
run_£t
 || 
off£t
 < 0 || off£à>msg->
run_Àngth
)

238 *
vÆue
 = 
msg
->
run_d©a
[
off£t
];

240 
	}
}

243 
	$msg_˛ór
(
msg
 *
tmp
)

245 i‡(
tmp
->
‰om_«me_£t
 == 1) {

246 
	`‰ì
(
tmp
->
‰om_«me_d©a
);

247 
tmp
->
‰om_«me_d©a
 = 
NULL
;

248 
tmp
->
‰om_«me_£t
 = 0;

250 i‡(
tmp
->
to_«me_£t
 == 1) {

251 
	`‰ì
(
tmp
->
to_«me_d©a
);

252 
tmp
->
to_«me_d©a
 = 
NULL
;

253 
tmp
->
to_«me_£t
 = 0;

255 i‡(
tmp
->
©èck_£t
 == 1) {

256 
	`kûl_‰ì
(
tmp
->
©èck_d©a
);

257 
tmp
->
©èck_d©a
 = 
NULL
;

258 
tmp
->
©èck_£t
 = 0;

260 i‡(
tmp
->
run_£t
 == 1) {

261 
i
;

262 
i
 = 0; i < 
tmp
->
run_Àngth
; ++i) {

263 
	`run_‰ì
(
tmp
->
run_d©a
[
i
]);

265 
	`‰ì
(
tmp
->
run_d©a
);

266 
tmp
->
run_d©a
 = 
NULL
;

267 
tmp
->
run_£t
 = 0;

268 
tmp
->
run_Àngth
 = 0;

269 
tmp
->
run_num_Æloˇãd
 = 0;

271 
	}
}

274 
	$msg_‰ì
(
msg
 *
tmp
)

276 i‡(
tmp
->
‰om_«me_d©a
 !
NULL
)

277 
	`‰ì
 (
tmp
->
‰om_«me_d©a
);

278 i‡(
tmp
->
to_«me_d©a
 !
NULL
)

279 
	`‰ì
 (
tmp
->
to_«me_d©a
);

280 i‡(
tmp
->
©èck_d©a
 !
NULL
)

281 
	`kûl_‰ì
(
tmp
->
©èck_d©a
);

282 i‡(
tmp
->
run_£t
 == 1) {

283 
i
;

284 
i
 = 0; i < 
tmp
->
run_Àngth
; ++i) {

285 
	`run_‰ì
(
tmp
->
run_d©a
[
i
]);

287 
	`‰ì
(
tmp
->
run_d©a
);

288 
tmp
->
run_d©a
 = 
NULL
;

289 
tmp
->
run_£t
 = 0;

290 
tmp
->
run_Àngth
 = 0;

291 
tmp
->
run_num_Æloˇãd
 = 0;

293 
	`‰ì
(
tmp
->
run_d©a
);

294 
	`‰ì
(
tmp
);

295 
	}
}

298 
	$msg_m¨shÆ
(
evbuf„r
 *
evbuf
, c⁄° 
msg
 *
tmp
){

299 
	`evèg_m¨shÆ_°rög
(
evbuf
, 
MSG_FROM_NAME
, 
tmp
->
‰om_«me_d©a
);

300 
	`evèg_m¨shÆ_°rög
(
evbuf
, 
MSG_TO_NAME
, 
tmp
->
to_«me_d©a
);

301 i‡(
tmp
->
©èck_£t
) {

302 
	`evèg_m¨shÆ_kûl
(
evbuf
, 
MSG_ATTACK
, 
tmp
->
©èck_d©a
);

304 i‡(
tmp
->
run_£t
) {

306 
i
;

307 
i
 = 0; i < 
tmp
->
run_Àngth
; ++i) {

308 
	`evèg_m¨shÆ_run
(
evbuf
, 
MSG_RUN
, 
tmp
->
run_d©a
[
i
]);

312 
	}
}

315 
	$msg_unm¨shÆ
(
msg
 *
tmp
, 
evbuf„r
 *
evbuf
)

317 
ev_uöt32_t
 
èg
;

318 
	`evbuf„r_gë_Àngth
(
evbuf
) > 0) {

319 i‡(
	`evèg_≥ek
(
evbuf
, &
èg
) == -1)

321 
èg
) {

323 
MSG_FROM_NAME
:

325 i‡(
tmp
->
‰om_«me_£t
)

327 i‡(
	`evèg_unm¨shÆ_°rög
(
evbuf
, 
MSG_FROM_NAME
, &
tmp
->
‰om_«me_d©a
) == -1) {

328 
	`evít_w¨nx
("%s: faûedÅÿunm¨shÆ from_«me", 
__func__
);

331 
tmp
->
‰om_«me_£t
 = 1;

334 
MSG_TO_NAME
:

336 i‡(
tmp
->
to_«me_£t
)

338 i‡(
	`evèg_unm¨shÆ_°rög
(
evbuf
, 
MSG_TO_NAME
, &
tmp
->
to_«me_d©a
) == -1) {

339 
	`evít_w¨nx
("%s: faûedÅÿunm¨shÆÅo_«me", 
__func__
);

342 
tmp
->
to_«me_£t
 = 1;

345 
MSG_ATTACK
:

347 i‡(
tmp
->
©èck_£t
)

349 
tmp
->
©èck_d©a
 = 
	`kûl_√w
();

350 i‡(
tmp
->
©èck_d©a
 =
NULL
)

352 i‡(
	`evèg_unm¨shÆ_kûl
(
evbuf
, 
MSG_ATTACK
, 
tmp
->
©èck_d©a
) == -1) {

353 
	`evít_w¨nx
("%s: faûedÅÿunm¨shÆáâack", 
__func__
);

356 
tmp
->
©èck_£t
 = 1;

359 
MSG_RUN
:

361 i‡(
tmp
->
run_Àngth
 >tmp->
run_num_Æloˇãd
 &&

362 
	`msg_run_ex∑nd_to_hﬁd_m‹e
(
tmp
) < 0) {

363 
	`puts
("HEY NOW");

366 
tmp
->
run_d©a
[tmp->
run_Àngth
] = 
	`run_√w
();

367 i‡(
tmp
->
run_d©a
[tmp->
run_Àngth
] =
NULL
)

369 i‡(
	`evèg_unm¨shÆ_run
(
evbuf
, 
MSG_RUN
, 
tmp
->
run_d©a
[tmp->
run_Àngth
]) == -1) {

370 
	`evít_w¨nx
("%s: faûedÅÿunm¨shÆÑun", 
__func__
);

373 ++
tmp
->
run_Àngth
;

374 
tmp
->
run_£t
 = 1;

382 i‡(
	`msg_com∂ëe
(
tmp
) == -1)

385 
	}
}

388 
	$msg_com∂ëe
(
msg
 *msg)

390 i‡(!
msg
->
‰om_«me_£t
)

392 i‡(!
msg
->
to_«me_£t
)

394 i‡(
msg
->
©èck_£t
 && 
	`kûl_com∂ëe
(msg->
©èck_d©a
) == -1)

397 
i
;

398 
i
 = 0; i < 
msg
->
run_Àngth
; ++i) {

399 i‡(
msg
->
run_£t
 && 
	`run_com∂ëe
(msg->
run_d©a
[
i
]) == -1)

404 
	}
}

407 
	$evèg_unm¨shÆ_msg
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
√ed_èg
, 
msg
 *msg)

409 
ev_uöt32_t
 
èg
;

410 
ªs
 = -1;

412 
evbuf„r
 *
tmp
 = 
	`evbuf„r_√w
();

414 i‡(
	`evèg_unm¨shÆ
(
evbuf
, &
èg
, 
tmp
Ë=-1 ||Åag !
√ed_èg
)

415 
îr‹
;

417 i‡(
	`msg_unm¨shÆ
(
msg
, 
tmp
) == -1)

418 
îr‹
;

420 
ªs
 = 0;

422 
îr‹
:

423 
	`evbuf„r_‰ì
(
tmp
);

424  (
ªs
);

425 
	}
}

428 
	$evèg_m¨shÆ_msg
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
èg
, c⁄° 
msg
 *msg)

430 
evbuf„r
 *
_buf
 = 
	`evbuf„r_√w
();

431 
	`as£π
(
_buf
 !
NULL
);

432 
	`msg_m¨shÆ
(
_buf
, 
msg
);

433 
	`evèg_m¨shÆ_buf„r
(
evbuf
, 
èg
, 
_buf
);

434 
	`evbuf„r_‰ì
(
_buf
);

435 
	}
}

441 
kûl_ac˚ss_
 
	g__kûl_ba£
 = {

442 
kûl_wóp⁄_assign
,

443 
kûl_wóp⁄_gë
,

444 
kûl_a˘i⁄_assign
,

445 
kûl_a˘i⁄_gë
,

446 
kûl_how_o·í_assign
,

447 
kûl_how_o·í_gë
,

448 
kûl_how_o·í_add
,

451 
kûl
 *

452 
	$kûl_√w
()

454  
	`kûl_√w_wôh_¨g
(
NULL
);

455 
	}
}

457 
kûl
 *

458 
	$kûl_√w_wôh_¨g
(*
unu£d
)

460 
kûl
 *
tmp
;

461 i‡((
tmp
 = 
	`mÆloc
((
kûl
))Ë=
NULL
) {

462 
	`evít_w¨n
("%s: mÆloc", 
__func__
);

463  (
NULL
);

465 
tmp
->
ba£
 = &
__kûl_ba£
;

467 
tmp
->
wóp⁄_d©a
 = 
NULL
;

468 
tmp
->
wóp⁄_£t
 = 0;

470 
tmp
->
a˘i⁄_d©a
 = 
NULL
;

471 
tmp
->
a˘i⁄_£t
 = 0;

473 
tmp
->
how_o·í_d©a
 = 
NULL
;

474 
tmp
->
how_o·í_Àngth
 = 0;

475 
tmp
->
how_o·í_num_Æloˇãd
 = 0;

476 
tmp
->
how_o·í_£t
 = 0;

478  (
tmp
);

479 
	}
}

484 
	$kûl_how_o·í_ex∑nd_to_hﬁd_m‹e
(
kûl
 *
msg
)

486 
tobe_Æloˇãd
 = 
msg
->
how_o·í_num_Æloˇãd
;

487 
ev_uöt32_t
* 
√w_d©a
 = 
NULL
;

488 
tobe_Æloˇãd
 = !tobe_allocated ? 1 :Åobe_allocated << 1;

489 
√w_d©a
 = (
ev_uöt32_t
*Ë
	`ªÆloc
(
msg
->
how_o·í_d©a
,

490 
tobe_Æloˇãd
 * (
ev_uöt32_t
));

491 i‡(
√w_d©a
 =
NULL
)

493 
msg
->
how_o·í_d©a
 = 
√w_d©a
;

494 
msg
->
how_o·í_num_Æloˇãd
 = 
tobe_Æloˇãd
;

495  0;
	}
}

497 
ev_uöt32_t
 *

498 
	$kûl_how_o·í_add
(
kûl
 *
msg
, c⁄° 
ev_uöt32_t
 
vÆue
)

500 i‡(++
msg
->
how_o·í_Àngth
 >msg->
how_o·í_num_Æloˇãd
) {

501 i‡(
	`kûl_how_o·í_ex∑nd_to_hﬁd_m‹e
(
msg
)<0)

502 
îr‹
;

504 
msg
->
how_o·í_d©a
[msg->
how_o·í_Àngth
 - 1] = 
vÆue
;

505 
msg
->
how_o·í_£t
 = 1;

506  &(
msg
->
how_o·í_d©a
[msg->
how_o·í_Àngth
 - 1]);

507 
îr‹
:

508 --
msg
->
how_o·í_Àngth
;

509  (
NULL
);

510 
	}
}

513 
	$kûl_wóp⁄_assign
(
kûl
 *
msg
,

514 c⁄° * 
vÆue
)

516 i‡(
msg
->
wóp⁄_d©a
 !
NULL
)

517 
	`‰ì
(
msg
->
wóp⁄_d©a
);

518 i‡((
msg
->
wóp⁄_d©a
 = 
	`°rdup
(
vÆue
)Ë=
NULL
)

520 
msg
->
wóp⁄_£t
 = 1;

522 
	}
}

525 
	$kûl_a˘i⁄_assign
(
kûl
 *
msg
,

526 c⁄° * 
vÆue
)

528 i‡(
msg
->
a˘i⁄_d©a
 !
NULL
)

529 
	`‰ì
(
msg
->
a˘i⁄_d©a
);

530 i‡((
msg
->
a˘i⁄_d©a
 = 
	`°rdup
(
vÆue
)Ë=
NULL
)

532 
msg
->
a˘i⁄_£t
 = 1;

534 
	}
}

537 
	$kûl_how_o·í_assign
(
kûl
 *
msg
, 
off
,

538 c⁄° 
ev_uöt32_t
 
vÆue
)

540 i‡(!
msg
->
how_o·í_£t
 || 
off
 < 0 || of‡>msg->
how_o·í_Àngth
)

544 
msg
->
how_o·í_d©a
[
off
] = 
vÆue
;

547 
	}
}

550 
	$kûl_wóp⁄_gë
(
kûl
 *
msg
, * *
vÆue
)

552 i‡(
msg
->
wóp⁄_£t
 != 1)

554 *
vÆue
 = 
msg
->
wóp⁄_d©a
;

556 
	}
}

559 
	$kûl_a˘i⁄_gë
(
kûl
 *
msg
, * *
vÆue
)

561 i‡(
msg
->
a˘i⁄_£t
 != 1)

563 *
vÆue
 = 
msg
->
a˘i⁄_d©a
;

565 
	}
}

568 
	$kûl_how_o·í_gë
(
kûl
 *
msg
, 
off£t
,

569 
ev_uöt32_t
 *
vÆue
)

571 i‡(!
msg
->
how_o·í_£t
 || 
off£t
 < 0 || off£à>msg->
how_o·í_Àngth
)

573 *
vÆue
 = 
msg
->
how_o·í_d©a
[
off£t
];

575 
	}
}

578 
	$kûl_˛ór
(
kûl
 *
tmp
)

580 i‡(
tmp
->
wóp⁄_£t
 == 1) {

581 
	`‰ì
(
tmp
->
wóp⁄_d©a
);

582 
tmp
->
wóp⁄_d©a
 = 
NULL
;

583 
tmp
->
wóp⁄_£t
 = 0;

585 i‡(
tmp
->
a˘i⁄_£t
 == 1) {

586 
	`‰ì
(
tmp
->
a˘i⁄_d©a
);

587 
tmp
->
a˘i⁄_d©a
 = 
NULL
;

588 
tmp
->
a˘i⁄_£t
 = 0;

590 i‡(
tmp
->
how_o·í_£t
 == 1) {

591 
	`‰ì
(
tmp
->
how_o·í_d©a
);

592 
tmp
->
how_o·í_d©a
 = 
NULL
;

593 
tmp
->
how_o·í_£t
 = 0;

594 
tmp
->
how_o·í_Àngth
 = 0;

595 
tmp
->
how_o·í_num_Æloˇãd
 = 0;

597 
	}
}

600 
	$kûl_‰ì
(
kûl
 *
tmp
)

602 i‡(
tmp
->
wóp⁄_d©a
 !
NULL
)

603 
	`‰ì
 (
tmp
->
wóp⁄_d©a
);

604 i‡(
tmp
->
a˘i⁄_d©a
 !
NULL
)

605 
	`‰ì
 (
tmp
->
a˘i⁄_d©a
);

606 i‡(
tmp
->
how_o·í_£t
 == 1) {

607 
	`‰ì
(
tmp
->
how_o·í_d©a
);

608 
tmp
->
how_o·í_d©a
 = 
NULL
;

609 
tmp
->
how_o·í_£t
 = 0;

610 
tmp
->
how_o·í_Àngth
 = 0;

611 
tmp
->
how_o·í_num_Æloˇãd
 = 0;

613 
	`‰ì
(
tmp
->
how_o·í_d©a
);

614 
	`‰ì
(
tmp
);

615 
	}
}

618 
	$kûl_m¨shÆ
(
evbuf„r
 *
evbuf
, c⁄° 
kûl
 *
tmp
){

619 
	`evèg_m¨shÆ_°rög
(
evbuf
, 
KILL_WEAPON
, 
tmp
->
wóp⁄_d©a
);

620 
	`evèg_m¨shÆ_°rög
(
evbuf
, 
KILL_ACTION
, 
tmp
->
a˘i⁄_d©a
);

621 i‡(
tmp
->
how_o·í_£t
) {

623 
i
;

624 
i
 = 0; i < 
tmp
->
how_o·í_Àngth
; ++i) {

625 
	`evèg_m¨shÆ_öt
(
evbuf
, 
KILL_HOW_OFTEN
, 
tmp
->
how_o·í_d©a
[
i
]);

629 
	}
}

632 
	$kûl_unm¨shÆ
(
kûl
 *
tmp
, 
evbuf„r
 *
evbuf
)

634 
ev_uöt32_t
 
èg
;

635 
	`evbuf„r_gë_Àngth
(
evbuf
) > 0) {

636 i‡(
	`evèg_≥ek
(
evbuf
, &
èg
) == -1)

638 
èg
) {

640 
KILL_WEAPON
:

642 i‡(
tmp
->
wóp⁄_£t
)

644 i‡(
	`evèg_unm¨shÆ_°rög
(
evbuf
, 
KILL_WEAPON
, &
tmp
->
wóp⁄_d©a
) == -1) {

645 
	`evít_w¨nx
("%s: faûedÅÿunm¨shÆ wóp⁄", 
__func__
);

648 
tmp
->
wóp⁄_£t
 = 1;

651 
KILL_ACTION
:

653 i‡(
tmp
->
a˘i⁄_£t
)

655 i‡(
	`evèg_unm¨shÆ_°rög
(
evbuf
, 
KILL_ACTION
, &
tmp
->
a˘i⁄_d©a
) == -1) {

656 
	`evít_w¨nx
("%s: faûedÅÿunm¨shÆá˘i⁄", 
__func__
);

659 
tmp
->
a˘i⁄_£t
 = 1;

662 
KILL_HOW_OFTEN
:

664 i‡(
tmp
->
how_o·í_Àngth
 >tmp->
how_o·í_num_Æloˇãd
 &&

665 
	`kûl_how_o·í_ex∑nd_to_hﬁd_m‹e
(
tmp
) < 0) {

666 
	`puts
("HEY NOW");

669 i‡(
	`evèg_unm¨shÆ_öt
(
evbuf
, 
KILL_HOW_OFTEN
, &
tmp
->
how_o·í_d©a
[tmp->
how_o·í_Àngth
]) == -1) {

670 
	`evít_w¨nx
("%s: faûedÅÿunm¨shÆ how_o·í", 
__func__
);

673 ++
tmp
->
how_o·í_Àngth
;

674 
tmp
->
how_o·í_£t
 = 1;

682 i‡(
	`kûl_com∂ëe
(
tmp
) == -1)

685 
	}
}

688 
	$kûl_com∂ëe
(
kûl
 *
msg
)

690 i‡(!
msg
->
wóp⁄_£t
)

692 i‡(!
msg
->
a˘i⁄_£t
)

695 
	}
}

698 
	$evèg_unm¨shÆ_kûl
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
√ed_èg
, 
kûl
 *
msg
)

700 
ev_uöt32_t
 
èg
;

701 
ªs
 = -1;

703 
evbuf„r
 *
tmp
 = 
	`evbuf„r_√w
();

705 i‡(
	`evèg_unm¨shÆ
(
evbuf
, &
èg
, 
tmp
Ë=-1 ||Åag !
√ed_èg
)

706 
îr‹
;

708 i‡(
	`kûl_unm¨shÆ
(
msg
, 
tmp
) == -1)

709 
îr‹
;

711 
ªs
 = 0;

713 
îr‹
:

714 
	`evbuf„r_‰ì
(
tmp
);

715  (
ªs
);

716 
	}
}

719 
	$evèg_m¨shÆ_kûl
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
èg
, c⁄° 
kûl
 *
msg
)

721 
evbuf„r
 *
_buf
 = 
	`evbuf„r_√w
();

722 
	`as£π
(
_buf
 !
NULL
);

723 
	`kûl_m¨shÆ
(
_buf
, 
msg
);

724 
	`evèg_m¨shÆ_buf„r
(
evbuf
, 
èg
, 
_buf
);

725 
	`evbuf„r_‰ì
(
_buf
);

726 
	}
}

732 
run_ac˚ss_
 
	g__run_ba£
 = {

733 
run_how_assign
,

734 
run_how_gë
,

735 
run_some_byãs_assign
,

736 
run_some_byãs_gë
,

737 
run_fixed_byãs_assign
,

738 
run_fixed_byãs_gë
,

739 
run_nŸes_assign
,

740 
run_nŸes_gë
,

741 
run_nŸes_add
,

742 
run_œrge_numbî_assign
,

743 
run_œrge_numbî_gë
,

744 
run_Ÿhî_numbîs_assign
,

745 
run_Ÿhî_numbîs_gë
,

746 
run_Ÿhî_numbîs_add
,

749 
run
 *

750 
	$run_√w
()

752  
	`run_√w_wôh_¨g
(
NULL
);

753 
	}
}

755 
run
 *

756 
	$run_√w_wôh_¨g
(*
unu£d
)

758 
run
 *
tmp
;

759 i‡((
tmp
 = 
	`mÆloc
((
run
))Ë=
NULL
) {

760 
	`evít_w¨n
("%s: mÆloc", 
__func__
);

761  (
NULL
);

763 
tmp
->
ba£
 = &
__run_ba£
;

765 
tmp
->
how_d©a
 = 
NULL
;

766 
tmp
->
how_£t
 = 0;

768 
tmp
->
some_byãs_d©a
 = 
NULL
;

769 
tmp
->
some_byãs_Àngth
 = 0;

770 
tmp
->
some_byãs_£t
 = 0;

772 
	`mem£t
(
tmp
->
fixed_byãs_d©a
, 0, (tmp->fixed_bytes_data));

773 
tmp
->
fixed_byãs_£t
 = 0;

775 
tmp
->
nŸes_d©a
 = 
NULL
;

776 
tmp
->
nŸes_Àngth
 = 0;

777 
tmp
->
nŸes_num_Æloˇãd
 = 0;

778 
tmp
->
nŸes_£t
 = 0;

780 
tmp
->
œrge_numbî_d©a
 = 0;

781 
tmp
->
œrge_numbî_£t
 = 0;

783 
tmp
->
Ÿhî_numbîs_d©a
 = 
NULL
;

784 
tmp
->
Ÿhî_numbîs_Àngth
 = 0;

785 
tmp
->
Ÿhî_numbîs_num_Æloˇãd
 = 0;

786 
tmp
->
Ÿhî_numbîs_£t
 = 0;

788  (
tmp
);

789 
	}
}

795 
	$run_nŸes_ex∑nd_to_hﬁd_m‹e
(
run
 *
msg
)

797 
tobe_Æloˇãd
 = 
msg
->
nŸes_num_Æloˇãd
;

798 ** 
√w_d©a
 = 
NULL
;

799 
tobe_Æloˇãd
 = !tobe_allocated ? 1 :Åobe_allocated << 1;

800 
√w_d©a
 = (**Ë
	`ªÆloc
(
msg
->
nŸes_d©a
,

801 
tobe_Æloˇãd
 * (*));

802 i‡(
√w_d©a
 =
NULL
)

804 
msg
->
nŸes_d©a
 = 
√w_d©a
;

805 
msg
->
nŸes_num_Æloˇãd
 = 
tobe_Æloˇãd
;

806  0;
	}
}

809 
	$run_nŸes_add
(
run
 *
msg
, c⁄° * 
vÆue
)

811 i‡(++
msg
->
nŸes_Àngth
 >msg->
nŸes_num_Æloˇãd
) {

812 i‡(
	`run_nŸes_ex∑nd_to_hﬁd_m‹e
(
msg
)<0)

813 
îr‹
;

815 i‡(
vÆue
 !
NULL
) {

816 
msg
->
nŸes_d©a
[msg->
nŸes_Àngth
 - 1] = 
	`°rdup
(
vÆue
);

817 i‡(
msg
->
nŸes_d©a
[msg->
nŸes_Àngth
 - 1] =
NULL
) {

818 
îr‹
;

821 
msg
->
nŸes_d©a
[msg->
nŸes_Àngth
 - 1] = 
NULL
;

823 
msg
->
nŸes_£t
 = 1;

824  &(
msg
->
nŸes_d©a
[msg->
nŸes_Àngth
 - 1]);

825 
îr‹
:

826 --
msg
->
nŸes_Àngth
;

827  (
NULL
);

828 
	}
}

832 
	$run_Ÿhî_numbîs_ex∑nd_to_hﬁd_m‹e
(
run
 *
msg
)

834 
tobe_Æloˇãd
 = 
msg
->
Ÿhî_numbîs_num_Æloˇãd
;

835 
ev_uöt32_t
* 
√w_d©a
 = 
NULL
;

836 
tobe_Æloˇãd
 = !tobe_allocated ? 1 :Åobe_allocated << 1;

837 
√w_d©a
 = (
ev_uöt32_t
*Ë
	`ªÆloc
(
msg
->
Ÿhî_numbîs_d©a
,

838 
tobe_Æloˇãd
 * (
ev_uöt32_t
));

839 i‡(
√w_d©a
 =
NULL
)

841 
msg
->
Ÿhî_numbîs_d©a
 = 
√w_d©a
;

842 
msg
->
Ÿhî_numbîs_num_Æloˇãd
 = 
tobe_Æloˇãd
;

843  0;
	}
}

845 
ev_uöt32_t
 *

846 
	$run_Ÿhî_numbîs_add
(
run
 *
msg
, c⁄° 
ev_uöt32_t
 
vÆue
)

848 i‡(++
msg
->
Ÿhî_numbîs_Àngth
 >msg->
Ÿhî_numbîs_num_Æloˇãd
) {

849 i‡(
	`run_Ÿhî_numbîs_ex∑nd_to_hﬁd_m‹e
(
msg
)<0)

850 
îr‹
;

852 
msg
->
Ÿhî_numbîs_d©a
[msg->
Ÿhî_numbîs_Àngth
 - 1] = 
vÆue
;

853 
msg
->
Ÿhî_numbîs_£t
 = 1;

854  &(
msg
->
Ÿhî_numbîs_d©a
[msg->
Ÿhî_numbîs_Àngth
 - 1]);

855 
îr‹
:

856 --
msg
->
Ÿhî_numbîs_Àngth
;

857  (
NULL
);

858 
	}
}

861 
	$run_how_assign
(
run
 *
msg
,

862 c⁄° * 
vÆue
)

864 i‡(
msg
->
how_d©a
 !
NULL
)

865 
	`‰ì
(
msg
->
how_d©a
);

866 i‡((
msg
->
how_d©a
 = 
	`°rdup
(
vÆue
)Ë=
NULL
)

868 
msg
->
how_£t
 = 1;

870 
	}
}

873 
	$run_some_byãs_assign
(
run
 *
msg
, c⁄° 
ev_uöt8_t
 * 
vÆue
, 
ev_uöt32_t
 
Àn
)

875 i‡(
msg
->
some_byãs_d©a
 !
NULL
)

876 
	`‰ì
 (
msg
->
some_byãs_d©a
);

877 
msg
->
some_byãs_d©a
 = 
	`mÆloc
(
Àn
);

878 i‡(
msg
->
some_byãs_d©a
 =
NULL
)

880 
msg
->
some_byãs_£t
 = 1;

881 
msg
->
some_byãs_Àngth
 = 
Àn
;

882 
	`mem˝y
(
msg
->
some_byãs_d©a
, 
vÆue
, 
Àn
);

884 
	}
}

887 
	$run_fixed_byãs_assign
(
run
 *
msg
, c⁄° 
ev_uöt8_t
 *
vÆue
)

889 
msg
->
fixed_byãs_£t
 = 1;

890 
	`mem˝y
(
msg
->
fixed_byãs_d©a
, 
vÆue
, 24);

892 
	}
}

895 
	$run_nŸes_assign
(
run
 *
msg
, 
off
,

896 c⁄° * 
vÆue
)

898 i‡(!
msg
->
nŸes_£t
 || 
off
 < 0 || of‡>msg->
nŸes_Àngth
)

902 i‡(
msg
->
nŸes_d©a
[
off
] !
NULL
)

903 
	`‰ì
(
msg
->
nŸes_d©a
[
off
]);

904 
msg
->
nŸes_d©a
[
off
] = 
	`°rdup
(
vÆue
);

905 i‡(
msg
->
nŸes_d©a
[
off
] =
NULL
) {

906 
	`evít_w¨nx
("%s: sådup", 
__func__
);

911 
	}
}

914 
	$run_œrge_numbî_assign
(
run
 *
msg
, c⁄° 
ev_uöt64_t
 
vÆue
)

916 
msg
->
œrge_numbî_£t
 = 1;

917 
msg
->
œrge_numbî_d©a
 = 
vÆue
;

919 
	}
}

922 
	$run_Ÿhî_numbîs_assign
(
run
 *
msg
, 
off
,

923 c⁄° 
ev_uöt32_t
 
vÆue
)

925 i‡(!
msg
->
Ÿhî_numbîs_£t
 || 
off
 < 0 || of‡>msg->
Ÿhî_numbîs_Àngth
)

929 
msg
->
Ÿhî_numbîs_d©a
[
off
] = 
vÆue
;

932 
	}
}

935 
	$run_how_gë
(
run
 *
msg
, * *
vÆue
)

937 i‡(
msg
->
how_£t
 != 1)

939 *
vÆue
 = 
msg
->
how_d©a
;

941 
	}
}

944 
	$run_some_byãs_gë
(
run
 *
msg
, 
ev_uöt8_t
 * *
vÆue
, 
ev_uöt32_t
 *
∂í
)

946 i‡(
msg
->
some_byãs_£t
 != 1)

948 *
vÆue
 = 
msg
->
some_byãs_d©a
;

949 *
∂í
 = 
msg
->
some_byãs_Àngth
;

951 
	}
}

954 
	$run_fixed_byãs_gë
(
run
 *
msg
, 
ev_uöt8_t
 **
vÆue
)

956 i‡(
msg
->
fixed_byãs_£t
 != 1)

958 *
vÆue
 = 
msg
->
fixed_byãs_d©a
;

960 
	}
}

963 
	$run_nŸes_gë
(
run
 *
msg
, 
off£t
,

964 * *
vÆue
)

966 i‡(!
msg
->
nŸes_£t
 || 
off£t
 < 0 || off£à>msg->
nŸes_Àngth
)

968 *
vÆue
 = 
msg
->
nŸes_d©a
[
off£t
];

970 
	}
}

973 
	$run_œrge_numbî_gë
(
run
 *
msg
, 
ev_uöt64_t
 *
vÆue
)

975 i‡(
msg
->
œrge_numbî_£t
 != 1)

977 *
vÆue
 = 
msg
->
œrge_numbî_d©a
;

979 
	}
}

982 
	$run_Ÿhî_numbîs_gë
(
run
 *
msg
, 
off£t
,

983 
ev_uöt32_t
 *
vÆue
)

985 i‡(!
msg
->
Ÿhî_numbîs_£t
 || 
off£t
 < 0 || off£à>msg->
Ÿhî_numbîs_Àngth
)

987 *
vÆue
 = 
msg
->
Ÿhî_numbîs_d©a
[
off£t
];

989 
	}
}

992 
	$run_˛ór
(
run
 *
tmp
)

994 i‡(
tmp
->
how_£t
 == 1) {

995 
	`‰ì
(
tmp
->
how_d©a
);

996 
tmp
->
how_d©a
 = 
NULL
;

997 
tmp
->
how_£t
 = 0;

999 i‡(
tmp
->
some_byãs_£t
 == 1) {

1000 
	`‰ì
 (
tmp
->
some_byãs_d©a
);

1001 
tmp
->
some_byãs_d©a
 = 
NULL
;

1002 
tmp
->
some_byãs_Àngth
 = 0;

1003 
tmp
->
some_byãs_£t
 = 0;

1005 
tmp
->
fixed_byãs_£t
 = 0;

1006 
	`mem£t
(
tmp
->
fixed_byãs_d©a
, 0, (tmp->fixed_bytes_data));

1007 i‡(
tmp
->
nŸes_£t
 == 1) {

1008 
i
;

1009 
i
 = 0; i < 
tmp
->
nŸes_Àngth
; ++i) {

1010 i‡(
tmp
->
nŸes_d©a
[
i
] !
NULL
Ë
	`‰ì
(tmp->notes_data[i]);

1012 
	`‰ì
(
tmp
->
nŸes_d©a
);

1013 
tmp
->
nŸes_d©a
 = 
NULL
;

1014 
tmp
->
nŸes_£t
 = 0;

1015 
tmp
->
nŸes_Àngth
 = 0;

1016 
tmp
->
nŸes_num_Æloˇãd
 = 0;

1018 
tmp
->
œrge_numbî_£t
 = 0;

1019 i‡(
tmp
->
Ÿhî_numbîs_£t
 == 1) {

1020 
	`‰ì
(
tmp
->
Ÿhî_numbîs_d©a
);

1021 
tmp
->
Ÿhî_numbîs_d©a
 = 
NULL
;

1022 
tmp
->
Ÿhî_numbîs_£t
 = 0;

1023 
tmp
->
Ÿhî_numbîs_Àngth
 = 0;

1024 
tmp
->
Ÿhî_numbîs_num_Æloˇãd
 = 0;

1026 
	}
}

1029 
	$run_‰ì
(
run
 *
tmp
)

1031 i‡(
tmp
->
how_d©a
 !
NULL
)

1032 
	`‰ì
 (
tmp
->
how_d©a
);

1033 i‡(
tmp
->
some_byãs_d©a
 !
NULL
)

1034 
	`‰ì
(
tmp
->
some_byãs_d©a
);

1035 i‡(
tmp
->
nŸes_£t
 == 1) {

1036 
i
;

1037 
i
 = 0; i < 
tmp
->
nŸes_Àngth
; ++i) {

1038 i‡(
tmp
->
nŸes_d©a
[
i
] !
NULL
Ë
	`‰ì
(tmp->notes_data[i]);

1040 
	`‰ì
(
tmp
->
nŸes_d©a
);

1041 
tmp
->
nŸes_d©a
 = 
NULL
;

1042 
tmp
->
nŸes_£t
 = 0;

1043 
tmp
->
nŸes_Àngth
 = 0;

1044 
tmp
->
nŸes_num_Æloˇãd
 = 0;

1046 
	`‰ì
(
tmp
->
nŸes_d©a
);

1047 i‡(
tmp
->
Ÿhî_numbîs_£t
 == 1) {

1048 
	`‰ì
(
tmp
->
Ÿhî_numbîs_d©a
);

1049 
tmp
->
Ÿhî_numbîs_d©a
 = 
NULL
;

1050 
tmp
->
Ÿhî_numbîs_£t
 = 0;

1051 
tmp
->
Ÿhî_numbîs_Àngth
 = 0;

1052 
tmp
->
Ÿhî_numbîs_num_Æloˇãd
 = 0;

1054 
	`‰ì
(
tmp
->
Ÿhî_numbîs_d©a
);

1055 
	`‰ì
(
tmp
);

1056 
	}
}

1059 
	$run_m¨shÆ
(
evbuf„r
 *
evbuf
, c⁄° 
run
 *
tmp
){

1060 
	`evèg_m¨shÆ_°rög
(
evbuf
, 
RUN_HOW
, 
tmp
->
how_d©a
);

1061 i‡(
tmp
->
some_byãs_£t
) {

1062 
	`evèg_m¨shÆ
(
evbuf
, 
RUN_SOME_BYTES
, 
tmp
->
some_byãs_d©a
,Åmp->
some_byãs_Àngth
);

1064 
	`evèg_m¨shÆ
(
evbuf
, 
RUN_FIXED_BYTES
, 
tmp
->
fixed_byãs_d©a
, (24));

1065 i‡(
tmp
->
nŸes_£t
) {

1067 
i
;

1068 
i
 = 0; i < 
tmp
->
nŸes_Àngth
; ++i) {

1069 
	`evèg_m¨shÆ_°rög
(
evbuf
, 
RUN_NOTES
, 
tmp
->
nŸes_d©a
[
i
]);

1073 i‡(
tmp
->
œrge_numbî_£t
) {

1074 
	`evèg_m¨shÆ_öt64
(
evbuf
, 
RUN_LARGE_NUMBER
, 
tmp
->
œrge_numbî_d©a
);

1076 i‡(
tmp
->
Ÿhî_numbîs_£t
) {

1078 
i
;

1079 
i
 = 0; i < 
tmp
->
Ÿhî_numbîs_Àngth
; ++i) {

1080 
	`evèg_m¨shÆ_öt
(
evbuf
, 
RUN_OTHER_NUMBERS
, 
tmp
->
Ÿhî_numbîs_d©a
[
i
]);

1084 
	}
}

1087 
	$run_unm¨shÆ
(
run
 *
tmp
, 
evbuf„r
 *
evbuf
)

1089 
ev_uöt32_t
 
èg
;

1090 
	`evbuf„r_gë_Àngth
(
evbuf
) > 0) {

1091 i‡(
	`evèg_≥ek
(
evbuf
, &
èg
) == -1)

1093 
èg
) {

1095 
RUN_HOW
:

1097 i‡(
tmp
->
how_£t
)

1099 i‡(
	`evèg_unm¨shÆ_°rög
(
evbuf
, 
RUN_HOW
, &
tmp
->
how_d©a
) == -1) {

1100 
	`evít_w¨nx
("%s: faûedÅÿunm¨shÆ how", 
__func__
);

1103 
tmp
->
how_£t
 = 1;

1106 
RUN_SOME_BYTES
:

1108 i‡(
tmp
->
some_byãs_£t
)

1110 i‡(
	`evèg_∑ylﬂd_Àngth
(
evbuf
, &
tmp
->
some_byãs_Àngth
) == -1)

1112 i‡(
tmp
->
some_byãs_Àngth
 > 
	`evbuf„r_gë_Àngth
(
evbuf
))

1114 i‡((
tmp
->
some_byãs_d©a
 = 
	`mÆloc
—mp->
some_byãs_Àngth
)Ë=
NULL
)

1116 i‡(
	`evèg_unm¨shÆ_fixed
(
evbuf
, 
RUN_SOME_BYTES
, 
tmp
->
some_byãs_d©a
,Åmp->
some_byãs_Àngth
) == -1) {

1117 
	`evít_w¨nx
("%s: faûedÅÿunm¨shÆ some_byãs", 
__func__
);

1120 
tmp
->
some_byãs_£t
 = 1;

1123 
RUN_FIXED_BYTES
:

1125 i‡(
tmp
->
fixed_byãs_£t
)

1127 i‡(
	`evèg_unm¨shÆ_fixed
(
evbuf
, 
RUN_FIXED_BYTES
, 
tmp
->
fixed_byãs_d©a
, (24)) == -1) {

1128 
	`evít_w¨nx
("%s: faûedÅÿunm¨shÆ fixed_byãs", 
__func__
);

1131 
tmp
->
fixed_byãs_£t
 = 1;

1134 
RUN_NOTES
:

1136 i‡(
tmp
->
nŸes_Àngth
 >tmp->
nŸes_num_Æloˇãd
 &&

1137 
	`run_nŸes_ex∑nd_to_hﬁd_m‹e
(
tmp
) < 0) {

1138 
	`puts
("HEY NOW");

1141 i‡(
	`evèg_unm¨shÆ_°rög
(
evbuf
, 
RUN_NOTES
, &
tmp
->
nŸes_d©a
[tmp->
nŸes_Àngth
]) == -1) {

1142 
	`evít_w¨nx
("%s: faûedÅÿunm¨shÆÇŸes", 
__func__
);

1145 ++
tmp
->
nŸes_Àngth
;

1146 
tmp
->
nŸes_£t
 = 1;

1149 
RUN_LARGE_NUMBER
:

1151 i‡(
tmp
->
œrge_numbî_£t
)

1153 i‡(
	`evèg_unm¨shÆ_öt64
(
evbuf
, 
RUN_LARGE_NUMBER
, &
tmp
->
œrge_numbî_d©a
) == -1) {

1154 
	`evít_w¨nx
("%s: faûedÅÿunm¨shÆÜ¨ge_numbî", 
__func__
);

1157 
tmp
->
œrge_numbî_£t
 = 1;

1160 
RUN_OTHER_NUMBERS
:

1162 i‡(
tmp
->
Ÿhî_numbîs_Àngth
 >tmp->
Ÿhî_numbîs_num_Æloˇãd
 &&

1163 
	`run_Ÿhî_numbîs_ex∑nd_to_hﬁd_m‹e
(
tmp
) < 0) {

1164 
	`puts
("HEY NOW");

1167 i‡(
	`evèg_unm¨shÆ_öt
(
evbuf
, 
RUN_OTHER_NUMBERS
, &
tmp
->
Ÿhî_numbîs_d©a
[tmp->
Ÿhî_numbîs_Àngth
]) == -1) {

1168 
	`evít_w¨nx
("%s: faûedÅÿunm¨shÆ othî_numbîs", 
__func__
);

1171 ++
tmp
->
Ÿhî_numbîs_Àngth
;

1172 
tmp
->
Ÿhî_numbîs_£t
 = 1;

1180 i‡(
	`run_com∂ëe
(
tmp
) == -1)

1183 
	}
}

1186 
	$run_com∂ëe
(
run
 *
msg
)

1188 i‡(!
msg
->
how_£t
)

1190 i‡(!
msg
->
fixed_byãs_£t
)

1193 
	}
}

1196 
	$evèg_unm¨shÆ_run
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
√ed_èg
, 
run
 *
msg
)

1198 
ev_uöt32_t
 
èg
;

1199 
ªs
 = -1;

1201 
evbuf„r
 *
tmp
 = 
	`evbuf„r_√w
();

1203 i‡(
	`evèg_unm¨shÆ
(
evbuf
, &
èg
, 
tmp
Ë=-1 ||Åag !
√ed_èg
)

1204 
îr‹
;

1206 i‡(
	`run_unm¨shÆ
(
msg
, 
tmp
) == -1)

1207 
îr‹
;

1209 
ªs
 = 0;

1211 
îr‹
:

1212 
	`evbuf„r_‰ì
(
tmp
);

1213  (
ªs
);

1214 
	}
}

1217 
	$evèg_m¨shÆ_run
(
evbuf„r
 *
evbuf
, 
ev_uöt32_t
 
èg
, c⁄° 
run
 *
msg
)

1219 
evbuf„r
 *
_buf
 = 
	`evbuf„r_√w
();

1220 
	`as£π
(
_buf
 !
NULL
);

1221 
	`run_m¨shÆ
(
_buf
, 
msg
);

1222 
	`evèg_m¨shÆ_buf„r
(
evbuf
, 
èg
, 
_buf
);

1223 
	`evbuf„r_‰ì
(
_buf
);

1224 
	}
}

	@test/regress.gen.h

5 #i‚de‡
___REGRESS_RPC_


6 
	#___REGRESS_RPC_


	)

8 
	~<evít2/utû.h
>

9 
	~<evít2/Ωc.h
>

11 
	gmsg
;

12 
	gkûl
;

13 
	grun
;

16 
	emsg_
 {

17 
	mMSG_FROM_NAME
=1,

18 
	mMSG_TO_NAME
=2,

19 
	mMSG_ATTACK
=3,

20 
	mMSG_RUN
=4,

21 
	mMSG_MAX_TAGS


25 
	smsg_ac˚ss_
 {

26 (*
	m‰om_«me_assign
)(
	mmsg
 *, const *);

27 (*
	m‰om_«me_gë
)(
	mmsg
 *, * *);

28 (*
	mto_«me_assign
)(
	mmsg
 *, const *);

29 (*
	mto_«me_gë
)(
	mmsg
 *, * *);

30 (*
	m©èck_assign
)(
	mmsg
 *, c⁄° 
	mkûl
*);

31 (*
	m©èck_gë
)(
	mmsg
 *, 
	mkûl
* *);

32 (*
	mrun_assign
)(
	mmsg
 *, , c⁄° 
	mrun
*);

33 (*
	mrun_gë
)(
	mmsg
 *, , 
	mrun
* *);

34 
	mrun
* (*
	mrun_add
)(
msg
 *
	mmsg
);

37 
	smsg
 {

38 
msg_ac˚ss_
 *
	mba£
;

40 *
	m‰om_«me_d©a
;

41 *
	mto_«me_d©a
;

42 
kûl
* 
	m©èck_d©a
;

43 
run
* *
	mrun_d©a
;

44 
	mrun_Àngth
;

45 
	mrun_num_Æloˇãd
;

47 
ev_uöt8_t
 
	m‰om_«me_£t
;

48 
ev_uöt8_t
 
	mto_«me_£t
;

49 
ev_uöt8_t
 
	m©èck_£t
;

50 
ev_uöt8_t
 
	mrun_£t
;

53 
msg
 *
msg_√w
();

54 
msg
 *
msg_√w_wôh_¨g
(*);

55 
msg_‰ì
(
msg
 *);

56 
msg_˛ór
(
msg
 *);

57 
msg_m¨shÆ
(
evbuf„r
 *, c⁄° 
msg
 *);

58 
msg_unm¨shÆ
(
msg
 *, 
evbuf„r
 *);

59 
msg_com∂ëe
(
msg
 *);

60 
evèg_m¨shÆ_msg
(
evbuf„r
 *, 
ev_uöt32_t
,

61 c⁄° 
msg
 *);

62 
evèg_unm¨shÆ_msg
(
evbuf„r
 *, 
ev_uöt32_t
,

63 
msg
 *);

64 
msg_‰om_«me_assign
(
msg
 *, const *);

65 
msg_‰om_«me_gë
(
msg
 *, * *);

66 
msg_to_«me_assign
(
msg
 *, const *);

67 
msg_to_«me_gë
(
msg
 *, * *);

68 
msg_©èck_assign
(
msg
 *, c⁄° 
kûl
*);

69 
msg_©èck_gë
(
msg
 *, 
kûl
* *);

70 
msg_run_assign
(
msg
 *, , c⁄° 
run
*);

71 
msg_run_gë
(
msg
 *, , 
run
* *);

72 
run
* 
msg_run_add
(
msg
 *msg);

76 
	ekûl_
 {

77 
	mKILL_WEAPON
=65825,

78 
	mKILL_ACTION
=2,

79 
	mKILL_HOW_OFTEN
=3,

80 
	mKILL_MAX_TAGS


84 
	skûl_ac˚ss_
 {

85 (*
	mwóp⁄_assign
)(
	mkûl
 *, const *);

86 (*
	mwóp⁄_gë
)(
	mkûl
 *, * *);

87 (*
	ma˘i⁄_assign
)(
	mkûl
 *, const *);

88 (*
	ma˘i⁄_gë
)(
	mkûl
 *, * *);

89 (*
	mhow_o·í_assign
)(
	mkûl
 *, , c⁄° 
	mev_uöt32_t
);

90 (*
	mhow_o·í_gë
)(
	mkûl
 *, , 
	mev_uöt32_t
 *);

91 
	mev_uöt32_t
 * (*
	mhow_o·í_add
)(
kûl
 *
	mmsg
, c⁄° 
ev_uöt32_t
 
	mvÆue
);

94 
	skûl
 {

95 
kûl_ac˚ss_
 *
	mba£
;

97 *
	mwóp⁄_d©a
;

98 *
	ma˘i⁄_d©a
;

99 
ev_uöt32_t
 *
	mhow_o·í_d©a
;

100 
	mhow_o·í_Àngth
;

101 
	mhow_o·í_num_Æloˇãd
;

103 
ev_uöt8_t
 
	mwóp⁄_£t
;

104 
ev_uöt8_t
 
	ma˘i⁄_£t
;

105 
ev_uöt8_t
 
	mhow_o·í_£t
;

108 
kûl
 *
kûl_√w
();

109 
kûl
 *
kûl_√w_wôh_¨g
(*);

110 
kûl_‰ì
(
kûl
 *);

111 
kûl_˛ór
(
kûl
 *);

112 
kûl_m¨shÆ
(
evbuf„r
 *, c⁄° 
kûl
 *);

113 
kûl_unm¨shÆ
(
kûl
 *, 
evbuf„r
 *);

114 
kûl_com∂ëe
(
kûl
 *);

115 
evèg_m¨shÆ_kûl
(
evbuf„r
 *, 
ev_uöt32_t
,

116 c⁄° 
kûl
 *);

117 
evèg_unm¨shÆ_kûl
(
evbuf„r
 *, 
ev_uöt32_t
,

118 
kûl
 *);

119 
kûl_wóp⁄_assign
(
kûl
 *, const *);

120 
kûl_wóp⁄_gë
(
kûl
 *, * *);

121 
kûl_a˘i⁄_assign
(
kûl
 *, const *);

122 
kûl_a˘i⁄_gë
(
kûl
 *, * *);

123 
kûl_how_o·í_assign
(
kûl
 *, , c⁄° 
ev_uöt32_t
);

124 
kûl_how_o·í_gë
(
kûl
 *, , 
ev_uöt32_t
 *);

125 
ev_uöt32_t
 * 
kûl_how_o·í_add
(
kûl
 *
msg
, c⁄°Év_uöt32_à
vÆue
);

129 
	erun_
 {

130 
	mRUN_HOW
=1,

131 
	mRUN_SOME_BYTES
=2,

132 
	mRUN_FIXED_BYTES
=3,

133 
	mRUN_NOTES
=4,

134 
	mRUN_LARGE_NUMBER
=5,

135 
	mRUN_OTHER_NUMBERS
=6,

136 
	mRUN_MAX_TAGS


140 
	srun_ac˚ss_
 {

141 (*
	mhow_assign
)(
	mrun
 *, const *);

142 (*
	mhow_gë
)(
	mrun
 *, * *);

143 (*
	msome_byãs_assign
)(
	mrun
 *, c⁄° 
	mev_uöt8_t
 *, 
	mev_uöt32_t
);

144 (*
	msome_byãs_gë
)(
	mrun
 *, 
	mev_uöt8_t
 * *, 
	mev_uöt32_t
 *);

145 (*
	mfixed_byãs_assign
)(
	mrun
 *, c⁄° 
	mev_uöt8_t
 *);

146 (*
	mfixed_byãs_gë
)(
	mrun
 *, 
	mev_uöt8_t
 **);

147 (*
	mnŸes_assign
)(
	mrun
 *, , const *);

148 (*
	mnŸes_gë
)(
	mrun
 *, , * *);

149 * * (*
	mnŸes_add
)(
run
 *
	mmsg
, c⁄° * 
	mvÆue
);

150 (*
	mœrge_numbî_assign
)(
	mrun
 *, c⁄° 
	mev_uöt64_t
);

151 (*
	mœrge_numbî_gë
)(
	mrun
 *, 
	mev_uöt64_t
 *);

152 (*
	mŸhî_numbîs_assign
)(
	mrun
 *, , c⁄° 
	mev_uöt32_t
);

153 (*
	mŸhî_numbîs_gë
)(
	mrun
 *, , 
	mev_uöt32_t
 *);

154 
	mev_uöt32_t
 * (*
	mŸhî_numbîs_add
)(
run
 *
	mmsg
, c⁄° 
ev_uöt32_t
 
	mvÆue
);

157 
	srun
 {

158 
run_ac˚ss_
 *
	mba£
;

160 *
	mhow_d©a
;

161 
ev_uöt8_t
 *
	msome_byãs_d©a
;

162 
ev_uöt32_t
 
	msome_byãs_Àngth
;

163 
ev_uöt8_t
 
	mfixed_byãs_d©a
[24];

164 * *
	mnŸes_d©a
;

165 
	mnŸes_Àngth
;

166 
	mnŸes_num_Æloˇãd
;

167 
ev_uöt64_t
 
	mœrge_numbî_d©a
;

168 
ev_uöt32_t
 *
	mŸhî_numbîs_d©a
;

169 
	mŸhî_numbîs_Àngth
;

170 
	mŸhî_numbîs_num_Æloˇãd
;

172 
ev_uöt8_t
 
	mhow_£t
;

173 
ev_uöt8_t
 
	msome_byãs_£t
;

174 
ev_uöt8_t
 
	mfixed_byãs_£t
;

175 
ev_uöt8_t
 
	mnŸes_£t
;

176 
ev_uöt8_t
 
	mœrge_numbî_£t
;

177 
ev_uöt8_t
 
	mŸhî_numbîs_£t
;

180 
run
 *
run_√w
();

181 
run
 *
run_√w_wôh_¨g
(*);

182 
run_‰ì
(
run
 *);

183 
run_˛ór
(
run
 *);

184 
run_m¨shÆ
(
evbuf„r
 *, c⁄° 
run
 *);

185 
run_unm¨shÆ
(
run
 *, 
evbuf„r
 *);

186 
run_com∂ëe
(
run
 *);

187 
evèg_m¨shÆ_run
(
evbuf„r
 *, 
ev_uöt32_t
,

188 c⁄° 
run
 *);

189 
evèg_unm¨shÆ_run
(
evbuf„r
 *, 
ev_uöt32_t
,

190 
run
 *);

191 
run_how_assign
(
run
 *, const *);

192 
run_how_gë
(
run
 *, * *);

193 
run_some_byãs_assign
(
run
 *, c⁄° 
ev_uöt8_t
 *, 
ev_uöt32_t
);

194 
run_some_byãs_gë
(
run
 *, 
ev_uöt8_t
 * *, 
ev_uöt32_t
 *);

195 
run_fixed_byãs_assign
(
run
 *, c⁄° 
ev_uöt8_t
 *);

196 
run_fixed_byãs_gë
(
run
 *, 
ev_uöt8_t
 **);

197 
run_nŸes_assign
(
run
 *, , const *);

198 
run_nŸes_gë
(
run
 *, , * *);

199 * * 
run_nŸes_add
(
run
 *
msg
, c⁄° * 
vÆue
);

200 
run_œrge_numbî_assign
(
run
 *, c⁄° 
ev_uöt64_t
);

201 
run_œrge_numbî_gë
(
run
 *, 
ev_uöt64_t
 *);

202 
run_Ÿhî_numbîs_assign
(
run
 *, , c⁄° 
ev_uöt32_t
);

203 
run_Ÿhî_numbîs_gë
(
run
 *, , 
ev_uöt32_t
 *);

204 
ev_uöt32_t
 * 
run_Ÿhî_numbîs_add
(
run
 *
msg
, c⁄°Év_uöt32_à
vÆue
);

	@test/regress.h

27 #i‚de‡
_REGRESS_H_


28 
	#_REGRESS_H_


	)

30 #ifde‡
__˝lu•lus


34 
	~"töyã°.h
"

35 
	~"töyã°_ma¸os.h
"

37 
ã°ˇ£_t
 
maö_ã°ˇ£s
[];

38 
ã°ˇ£_t
 
evèg_ã°ˇ£s
[];

39 
ã°ˇ£_t
 
evbuf„r_ã°ˇ£s
[];

40 
ã°ˇ£_t
 
buf„ªvít_ã°ˇ£s
[];

41 
ã°ˇ£_t
 
buf„ªvít_io˝_ã°ˇ£s
[];

42 
ã°ˇ£_t
 
utû_ã°ˇ£s
[];

43 
ã°ˇ£_t
 
sig«l_ã°ˇ£s
[];

44 
ã°ˇ£_t
 
hâp_ã°ˇ£s
[];

45 
ã°ˇ£_t
 
dns_ã°ˇ£s
[];

46 
ã°ˇ£_t
 
Ωc_ã°ˇ£s
[];

47 
ã°ˇ£_t
 
edgëriggîed_ã°ˇ£s
[];

48 
ã°ˇ£_t
 
möhóp_ã°ˇ£s
[];

49 
ã°ˇ£_t
 
io˝_ã°ˇ£s
[];

50 
ã°ˇ£_t
 
s¶_ã°ˇ£s
[];

51 
ã°ˇ£_t
 
li°íî_ã°ˇ£s
[];

52 
ã°ˇ£_t
 
li°íî_io˝_ã°ˇ£s
[];

53 
ã°ˇ£_t
 
thªad_ã°ˇ£s
[];

55 
ªgªss_thªads
(*);

56 
ã°_buf„ªvít_zlib
(*);

59 
evutû_sockë_t
 
∑ú
[2];

60 
ã°_ok
;

61 
ˇŒed
;

62 
evít_ba£
 *
globÆ_ba£
;

63 
ö_Àgacy_ã°_wøµî
;

65 
ªgªss_make_tmpfûe
(c⁄° *
d©a
, 
size_t
 
d©Æí
);

67 
	sbasic_ã°_d©a
 {

68 
evít_ba£
 *
	gba£
;

69 
evutû_sockë_t
 
	g∑ú
[2];

71 (*
	gÀgacy_ã°_‚
)();

73 *
	g£tup_d©a
;

75 c⁄° 
ã°ˇ£_£tup_t
 
basic_£tup
;

78 c⁄° 
ã°ˇ£_£tup_t
 
Àgacy_£tup
;

79 
run_Àgacy_ã°_‚
(*
±r
);

82 
	#TT_NEED_SOCKETPAIR
 
TT_FIRST_USER_FLAG


	)

83 
	#TT_NEED_BASE
 (
TT_FIRST_USER_FLAG
<<1)

	)

84 
	#TT_NEED_DNS
 (
TT_FIRST_USER_FLAG
<<2)

	)

85 
	#TT_LEGACY
 (
TT_FIRST_USER_FLAG
<<3)

	)

86 
	#TT_NEED_THREADS
 (
TT_FIRST_USER_FLAG
<<4)

	)

87 
	#TT_NO_LOGS
 (
TT_FIRST_USER_FLAG
<<5)

	)

88 
	#TT_ENABLE_IOCP_FLAG
 (
TT_FIRST_USER_FLAG
<<6)

	)

89 
	#TT_ENABLE_IOCP
 (
TT_ENABLE_IOCP_FLAG
|
TT_NEED_THREADS
)

	)

92 
	#TT_ISOLATED
 
TT_FORK
|
TT_NEED_SOCKETPAIR
|
TT_NEED_BASE


	)

95 
	#BASIC
(
«me
,
Êags
) \

96 { #«me, 
ã°_
## 
«me
, 
Êags
, &
basic_£tup
, 
NULL
 }

	)

98 
	#LEGACY
(
«me
,
Êags
) \

99 { #«me, 
run_Àgacy_ã°_‚
, 
Êags
|
TT_LEGACY
, &
Àgacy_£tup
, \

100 
ã°_
## 
«me
 }

	)

102 
	gevutû_addröfo
;

103 
evutû_addröfo
 *
ai_föd_by_Ámûy
(evutû_addröfÿ*
ai
, 
f
);

104 
evutû_addröfo
 *
ai_föd_by_¥Ÿocﬁ
(evutû_addröfÿ*
ai
, 
p
);

105 
_ã°_ai_eq
(c⁄° 
evutû_addröfo
 *
ai
, c⁄° *
sockaddr_p‹t
,

106 
sockty≥
, 
¥Ÿocﬁ
, 
löe
);

108 
	#ã°_ai_eq
(
ai
, 
°r
, 
s
, 
p
) do { \

109 i‡(
	`_ã°_ai_eq
((
ai
), (
°r
), (
s
), (
p
), 
__LINE__
)<0) \

110 
íd
; \

111 } 0)

	)

113 
	#ã°_timevÆ_diff_Àq
(
tv1
, 
tv2
, 
diff
, 
tﬁî™˚
) \

114 
	`â_öt_›
(
	`abs
(
	`timevÆ_m£c_diff
((
tv1
), (
tv2
)Ë- 
diff
), <=, 
tﬁî™˚
)

	)

116 
	#ã°_timevÆ_diff_eq
(
tv1
, 
tv2
, 
diff
) \

117 
	`ã°_timevÆ_diff_Àq
((
tv1
), (
tv2
), (
diff
), 50)

	)

119 
timevÆ_m£c_diff
(c⁄° 
timevÆ
 *
°¨t
, c⁄° timevÆ *
íd
);

121 #i‚de‡
_WIN32


122 
pid_t
 
ªgªss_f‹k
();

125 #ifde‡
__˝lu•lus


	@test/regress_buffer.c

28 #ifde‡
WIN32


29 
	~<wösock2.h
>

30 
	~<wödows.h
>

33 
	~"evít2/evít-c⁄fig.h
"

35 
	~<sys/ty≥s.h
>

36 
	~<sys/°©.h
>

37 #ifde‡
_EVENT_HAVE_SYS_TIME_H


38 
	~<sys/time.h
>

40 
	~<sys/queue.h
>

41 #i‚de‡
WIN32


42 
	~<sys/sockë.h
>

43 
	~<sys/waô.h
>

44 
	~<sig«l.h
>

45 
	~<uni°d.h
>

46 
	~<√tdb.h
>

48 
	~<°dlib.h
>

49 
	~<°dio.h
>

50 
	~<°rög.h
>

51 
	~<î∫o.h
>

52 
	~<as£π.h
>

54 
	~"evít2/evít.h
"

55 
	~"evít2/buf„r.h
"

56 
	~"evít2/buf„r_com∑t.h
"

57 
	~"evít2/utû.h
"

59 
	~"evbuf„r-öã∫Æ.h
"

60 
	~"log-öã∫Æ.h
"

62 
	~"ªgªss.h
"

67 
	$_evbuf„r_vÆid©e
(
evbuf„r
 *
buf
)

69 
evbuf„r_chaö
 *
chaö
;

70 
size_t
 
sum
 = 0;

71 
found_œ°_wôh_d©≠
 = 0;

73 i‡(
buf
->
fú°
 =
NULL
) {

74 
	`â_as£π
(
buf
->
œ°
 =
NULL
);

75 
	`â_as£π
(
buf
->
tŸÆ_Àn
 == 0);

78 
chaö
 = 
buf
->
fú°
;

80 
	`â_as£π
(
buf
->
œ°_wôh_d©≠
);

81 i‡(
buf
->
œ°_wôh_d©≠
 =&buf->
fú°
)

82 
found_œ°_wôh_d©≠
 = 1;

84 
chaö
 !
NULL
) {

85 i‡(&
chaö
->
√xt
 =
buf
->
œ°_wôh_d©≠
)

86 
found_œ°_wôh_d©≠
 = 1;

87 
sum
 +
chaö
->
off
;

88 i‡(
chaö
->
√xt
 =
NULL
) {

89 
	`â_as£π
(
buf
->
œ°
 =
chaö
);

91 
	`â_as£π
(
chaö
->
buf„r_Àn
 >chaö->
mißlign
 + chaö->
off
);

92 
chaö
 = chaö->
√xt
;

95 i‡(
buf
->
fú°
)

96 
	`â_as£π
(*
buf
->
œ°_wôh_d©≠
);

98 i‡(*
buf
->
œ°_wôh_d©≠
) {

99 
chaö
 = *
buf
->
œ°_wôh_d©≠
;

100 i‡(
chaö
->
off
 =0 || 
buf
->
tŸÆ_Àn
 == 0) {

101 
	`â_as£π
(
chaö
->
off
 == 0)

102 
	`â_as£π
(
chaö
 =
buf
->
fú°
);

103 
	`â_as£π
(
buf
->
tŸÆ_Àn
 == 0);

105 
chaö
 = chaö->
√xt
;

106 
chaö
 !
NULL
) {

107 
	`â_as£π
(
chaö
->
off
 == 0);

108 
chaö
 = chaö->
√xt
;

111 
	`â_as£π
(
buf
->
œ°_wôh_d©≠
 =&buf->
fú°
);

113 
	`â_as£π
(
found_œ°_wôh_d©≠
);

115 
	`â_as£π
(
sum
 =
buf
->
tŸÆ_Àn
);

117 
íd
:

119 
	}
}

122 
	$evbuf„r_gë_wa°e
(
evbuf„r
 *
buf
, 
size_t
 *
Æloˇãdp
, size_à*
wa°edp
, size_à*
u£dp
)

124 
evbuf„r_chaö
 *
chaö
;

125 
size_t
 
a
, 
w
, 
u
;

126 
n
 = 0;

127 
u
 = 
a
 = 
w
 = 0;

129 
chaö
 = 
buf
->
fú°
;

131 
chaö
 && chaö->
off
==0) {

132 ++
n
;

133 
a
 +
chaö
->
buf„r_Àn
;

134 
chaö
 = chaö->
√xt
;

137 i‡(
chaö
) {

138 ++
n
;

139 
a
 +
chaö
->
buf„r_Àn
;

140 
u
 +
chaö
->
off
;

141 i‡(
chaö
->
√xt
 && chaö->√xt->
off
)

142 
w
 +(
size_t
)(
chaö
->
buf„r_Àn
 - (chaö->
mißlign
 + chaö->
off
));

143 
chaö
 = chaö->
√xt
;

146 
chaö
 && chaö->
off
) {

147 ++
n
;

148 
a
 +
chaö
->
buf„r_Àn
;

149 
w
 +(
size_t
)
chaö
->
mißlign
;

150 
u
 +
chaö
->
off
;

151 i‡(
chaö
->
√xt
 && chaö->√xt->
off
)

152 
w
 +(
size_t
Ë(
chaö
->
buf„r_Àn
 - (chaö->
mißlign
 + chaö->
off
));

153 
chaö
 = chaö->
√xt
;

156 
chaö
) {

157 ++
n
;

158 
a
 +
chaö
->
buf„r_Àn
;

160 *
Æloˇãdp
 = 
a
;

161 *
wa°edp
 = 
w
;

162 *
u£dp
 = 
u
;

163 
	}
}

165 
	#evbuf„r_vÆid©e
(
buf
) \

166 
TT_STMT_BEGIN
 i‡(!
	`_evbuf„r_vÆid©e
(
buf
)Ë
	`TT_DIE
(("Buf„∏f‹m© invÆid")); 
TT_STMT_END


	)

169 
	$ã°_evbuf„r
(*
±r
)

171 
buf„r
[512], *
tmp
;

172 
evbuf„r
 *
evb
 = 
	`evbuf„r_√w
();

173 
evbuf„r
 *
evb_two
 = 
	`evbuf„r_√w
();

174 
size_t
 
sz_tmp
;

175 
i
;

177 
	`evbuf„r_vÆid©e
(
evb
);

178 
	`evbuf„r_add_¥ötf
(
evb
, "%s/%d", "hello", 1);

179 
	`evbuf„r_vÆid©e
(
evb
);

181 
	`â_as£π
(
	`evbuf„r_gë_Àngth
(
evb
) == 7);

182 
	`â_as£π
(!
	`memcmp
((*)
	`EVBUFFER_DATA
(
evb
), "hello/1", 1));

184 
	`evbuf„r_add_buf„r
(
evb
, 
evb_two
);

185 
	`evbuf„r_vÆid©e
(
evb
);

187 
	`evbuf„r_døö
(
evb
, 
	`°æí
("hello/"));

188 
	`evbuf„r_vÆid©e
(
evb
);

189 
	`â_as£π
(
	`evbuf„r_gë_Àngth
(
evb
) == 1);

190 
	`â_as£π
(!
	`memcmp
((*)
	`EVBUFFER_DATA
(
evb
), "1", 1));

192 
	`evbuf„r_add_¥ötf
(
evb_two
, "%s", "/hello");

193 
	`evbuf„r_vÆid©e
(
evb
);

194 
	`evbuf„r_add_buf„r
(
evb
, 
evb_two
);

195 
	`evbuf„r_vÆid©e
(
evb
);

197 
	`â_as£π
(
	`evbuf„r_gë_Àngth
(
evb_two
) == 0);

198 
	`â_as£π
(
	`evbuf„r_gë_Àngth
(
evb
) == 7);

199 
	`â_as£π
(!
	`memcmp
((*)
	`EVBUFFER_DATA
(
evb
), "1/hello", 7) != 0);

201 
	`mem£t
(
buf„r
, 0, (buffer));

202 
	`evbuf„r_add
(
evb
, 
buf„r
, (buffer));

203 
	`evbuf„r_vÆid©e
(
evb
);

204 
	`â_as£π
(
	`evbuf„r_gë_Àngth
(
evb
) == 7 + 512);

206 
tmp
 = (*)
	`evbuf„r_puŒup
(
evb
, 7 + 512);

207 
	`â_as£π
(
tmp
);

208 
	`â_as£π
(!
	`°∫cmp
(
tmp
, "1/hello", 7));

209 
	`â_as£π
(!
	`memcmp
(
tmp
 + 7, 
buf„r
, (buffer)));

210 
	`evbuf„r_vÆid©e
(
evb
);

212 
	`evbuf„r_¥ïíd
(
evb
, "something", 9);

213 
	`evbuf„r_vÆid©e
(
evb
);

214 
	`evbuf„r_¥ïíd
(
evb
, "else", 4);

215 
	`evbuf„r_vÆid©e
(
evb
);

217 
tmp
 = (*)
	`evbuf„r_puŒup
(
evb
, 4 + 9 + 7);

218 
	`â_as£π
(!
	`°∫cmp
(
tmp
, "elsesomething1/hello", 4 + 9 + 7));

219 
	`evbuf„r_vÆid©e
(
evb
);

221 
	`evbuf„r_døö
(
evb
, -1);

222 
	`evbuf„r_vÆid©e
(
evb
);

223 
	`evbuf„r_døö
(
evb_two
, -1);

224 
	`evbuf„r_vÆid©e
(
evb
);

226 
i
 = 0; i < 3; ++i) {

227 
	`evbuf„r_add
(
evb_two
, 
buf„r
, (buffer));

228 
	`evbuf„r_vÆid©e
(
evb_two
);

229 
	`evbuf„r_add_buf„r
(
evb
, 
evb_two
);

230 
	`evbuf„r_vÆid©e
(
evb
);

231 
	`evbuf„r_vÆid©e
(
evb_two
);

234 
	`â_as£π
(
	`evbuf„r_gë_Àngth
(
evb_two
) == 0);

235 
	`â_as£π
(
	`evbuf„r_gë_Àngth
(
evb
Ë=
i
 * (
buf„r
));

238 
sz_tmp
 = (
size_t
)((
buf„r
)*2.5);

239 
	`evbuf„r_ªmove_buf„r
(
evb
, 
evb_two
, 
sz_tmp
);

240 
	`â_as£π
(
	`evbuf„r_gë_Àngth
(
evb_two
Ë=
sz_tmp
);

241 
	`â_as£π
(
	`evbuf„r_gë_Àngth
(
evb
Ë=(
buf„r
) / 2);

242 
	`evbuf„r_vÆid©e
(
evb
);

244 i‡(
	`memcmp
(
	`evbuf„r_puŒup
(

245 
evb
, -1), 
buf„r
, (buffer) / 2) != 0 ||

246 
	`memcmp
(
	`evbuf„r_puŒup
(

247 
evb_two
, -1), 
buf„r
, (buffer) != 0))

248 
	`â_ab‹t_msg
("Pullup didÇotÖreserve content");

250 
	`evbuf„r_vÆid©e
(
evb
);

255 
evbuf„r_iovec
 
v
[1];

256 *
buf
;

257 
i
, 
j
, 
r
;

259 
i
 = 0; i < 3; ++i) {

260 
r
 = 
	`evbuf„r_ª£rve_•a˚
(
evb
, 10000, 
v
, 1);

261 
	`â_öt_›
(
r
, ==, 1);

262 
	`â_as£π
(
v
[0].
iov_Àn
 >= 10000);

263 
	`â_as£π
(
v
[0].
iov_ba£
 !
NULL
);

265 
	`evbuf„r_vÆid©e
(
evb
);

266 
buf
 = 
v
[0].
iov_ba£
;

267 
j
 = 0; j < 10000; ++j) {

268 
buf
[
j
] = j;

270 
	`evbuf„r_vÆid©e
(
evb
);

272 
	`â_öt_›
(
	`evbuf„r_commô_•a˚
(
evb
, 
v
, 1), ==, 0);

273 
	`evbuf„r_vÆid©e
(
evb
);

275 
	`â_as£π
(
	`evbuf„r_gë_Àngth
(
evb
) >= 10000);

277 
	`evbuf„r_døö
(
evb
, 
j
 * 5000);

278 
	`evbuf„r_vÆid©e
(
evb
);

282 
íd
:

283 
	`evbuf„r_‰ì
(
evb
);

284 
	`evbuf„r_‰ì
(
evb_two
);

285 
	}
}

288 
	$no_˛ónup
(c⁄° *
d©a
, 
size_t
 
d©Æí
, *
exåa
)

290 
	}
}

293 
	$ã°_evbuf„r_ªmove_buf„r_wôh_em±y
(*
±r
)

295 
evbuf„r
 *
§c
 = 
	`evbuf„r_√w
();

296 
evbuf„r
 *
d°
 = 
	`evbuf„r_√w
();

297 
buf
[2];

299 
	`evbuf„r_vÆid©e
(
§c
);

300 
	`evbuf„r_vÆid©e
(
d°
);

304 
	`evbuf„r_add_ª„ªn˚
(
§c
, 
buf
, (buf), 
no_˛ónup
, 
NULL
);

305 
	`evbuf„r_add_ª„ªn˚
(
§c
, 
buf
, (buf), 
no_˛ónup
, 
NULL
);

307 
	`evbuf„r_add
(
d°
, 
buf
, (buf));

308 
	`evbuf„r_add_ª„ªn˚
(
d°
, 
buf
, 0, 
no_˛ónup
, 
NULL
);

310 
	`evbuf„r_vÆid©e
(
§c
);

311 
	`evbuf„r_vÆid©e
(
d°
);

314 
	`evbuf„r_ªmove_buf„r
(
§c
, 
d°
, 3);

316 
	`evbuf„r_vÆid©e
(
§c
);

317 
	`evbuf„r_vÆid©e
(
d°
);

319 
íd
:

320 
	`evbuf„r_‰ì
(
§c
);

321 
	`evbuf„r_‰ì
(
d°
);

322 
	}
}

325 
	$ã°_evbuf„r_ª£rve2
(*
±r
)

328 
evbuf„r
 *
buf
 = 
	`evbuf„r_√w
();

329 
n
, 
i
;

330 
evbuf„r_iovec
 
v
[2];

331 
size_t
 
ªmaöög
;

332 *
˝
, *
˝2
;

335 
n
 = 
	`evbuf„r_ª£rve_•a˚
(
buf
, 1024, 
v
, 2);

336 
	`â_öt_›
(
n
, ==, 1);

337 
	`â_öt_›
(
	`evbuf„r_gë_Àngth
(
buf
), ==, 0);

338 
	`â_as£π
(
v
[0].
iov_ba£
 !
NULL
);

339 
	`â_öt_›
(
v
[0].
iov_Àn
, >=, 1024);

340 
	`mem£t
(
v
[0].
iov_ba£
, 'X', 512);

341 
˝
 = 
v
[0].
iov_ba£
;

342 
ªmaöög
 = 
v
[0].
iov_Àn
 - 512;

343 
v
[0].
iov_Àn
 = 512;

344 
	`evbuf„r_vÆid©e
(
buf
);

345 
	`â_öt_›
(0, ==, 
	`evbuf„r_commô_•a˚
(
buf
, 
v
, 1));

346 
	`â_öt_›
(
	`evbuf„r_gë_Àngth
(
buf
), ==, 512);

347 
	`evbuf„r_vÆid©e
(
buf
);

351 
n
 = 
	`evbuf„r_ª£rve_•a˚
(
buf
, 32, 
v
, 2);

352 
	`â_öt_›
(
n
, ==, 1);

353 
	`â_as£π
(
˝
 + 512 =
v
[0].
iov_ba£
);

354 
	`â_öt_›
(
ªmaöög
, ==, 
v
[0].
iov_Àn
);

355 
	`mem£t
(
v
[0].
iov_ba£
, 'Y', 8);

356 
v
[0].
iov_Àn
 = 8;

357 
	`â_öt_›
(0, ==, 
	`evbuf„r_commô_•a˚
(
buf
, 
v
, 1));

358 
	`â_öt_›
(
	`evbuf„r_gë_Àngth
(
buf
), ==, 520);

359 
ªmaöög
 -= 8;

360 
	`evbuf„r_vÆid©e
(
buf
);

364 
n
 = 
	`evbuf„r_ª£rve_•a˚
(
buf
, 
ªmaöög
+64, 
v
, 2);

365 
	`â_öt_›
(
n
, ==, 2);

366 
	`â_as£π
(
˝
 + 520 =
v
[0].
iov_ba£
);

367 
	`â_öt_›
(
ªmaöög
, ==, 
v
[0].
iov_Àn
);

368 
	`â_as£π
(
v
[1].
iov_ba£
);

369 
	`â_as£π
(
v
[1].
iov_Àn
 >= 64);

370 
˝2
 = 
v
[1].
iov_ba£
;

371 
	`mem£t
(
v
[0].
iov_ba£
, 'Z', 1);

372 
v
[0].
iov_Àn
 = 1;

373 
	`â_öt_›
(0, ==, 
	`evbuf„r_commô_•a˚
(
buf
, 
v
, 1));

374 
	`â_öt_›
(
	`evbuf„r_gë_Àngth
(
buf
), ==, 521);

375 
ªmaöög
 -= 1;

376 
	`evbuf„r_vÆid©e
(
buf
);

380 
n
 = 
	`evbuf„r_ª£rve_•a˚
(
buf
, 
ªmaöög
+64, 
v
, 2);

381 
	`evbuf„r_vÆid©e
(
buf
);

382 
	`â_öt_›
(
n
, ==, 2);

383 
	`â_as£π
(
˝
 + 521 =
v
[0].
iov_ba£
);

384 
	`â_öt_›
(
ªmaöög
, ==, 
v
[0].
iov_Àn
);

385 
	`â_as£π
(
v
[1].
iov_ba£
 =
˝2
);

386 
	`â_as£π
(
v
[1].
iov_Àn
 >= 64);

387 
	`mem£t
(
v
[0].
iov_ba£
, 'W', 400);

388 
v
[0].
iov_Àn
 = 400;

389 
	`mem£t
(
v
[1].
iov_ba£
, 'x', 60);

390 
v
[1].
iov_Àn
 = 60;

391 
	`â_öt_›
(0, ==, 
	`evbuf„r_commô_•a˚
(
buf
, 
v
, 2));

392 
	`â_öt_›
(
	`evbuf„r_gë_Àngth
(
buf
), ==, 981);

393 
	`evbuf„r_vÆid©e
(
buf
);

396 
	`mem£t
(
v
,0,(v));

397 
n
 = 
	`evbuf„r_≥ek
(
buf
, -1, 
NULL
, 
v
, 2);

398 
	`â_öt_›
(
n
, ==, 2);

399 
	`â_öt_›
(
v
[0].
iov_Àn
, ==, 921);

400 
	`â_öt_›
(
v
[1].
iov_Àn
, ==, 60);

402 
˝
 = 
v
[0].
iov_ba£
;

403 
i
=0; i<512; ++i)

404 
	`â_öt_›
(
˝
[
i
], ==, 'X');

405 
i
=512; i<520; ++i)

406 
	`â_öt_›
(
˝
[
i
], ==, 'Y');

407 
i
=520; i<521; ++i)

408 
	`â_öt_›
(
˝
[
i
], ==, 'Z');

409 
i
=521; i<921; ++i)

410 
	`â_öt_›
(
˝
[
i
], ==, 'W');

412 
˝
 = 
v
[1].
iov_ba£
;

413 
i
=0; i<60; ++i)

414 
	`â_öt_›
(
˝
[
i
], ==, 'x');

416 
íd
:

417 
	`evbuf„r_‰ì
(
buf
);

418 
	}
}

421 
	$ã°_evbuf„r_ª£rve_m™y
(*
±r
)

425 
evbuf„r
 *
buf
 = 
	`evbuf„r_√w
();

426 
evbuf„r_iovec
 
v
[8];

427 
n
;

428 
size_t
 
sz
;

429 
add_d©a
 = 
±r
 && !
	`°rcmp
(ptr, "add");

430 
fûl_fú°
 = 
±r
 && !
	`°rcmp
(ptr, "fill");

431 *
˝1
, *
˝2
;

434 
n
 = 
	`evbuf„r_ª£rve_•a˚
(
buf
, 128, 
v
, 2);

435 
	`evbuf„r_vÆid©e
(
buf
);

436 
	`â_öt_›
(
n
, ==, 1);

437 
	`â_as£π
(
v
[0].
iov_Àn
 >= 128);

438 
sz
 = 
v
[0].
iov_Àn
;

439 
˝1
 = 
v
[0].
iov_ba£
;

440 i‡(
add_d©a
) {

441 *(*)
v
[0].
iov_ba£
 = 'X';

442 
v
[0].
iov_Àn
 = 1;

443 
n
 = 
	`evbuf„r_commô_•a˚
(
buf
, 
v
, 1);

444 
	`â_öt_›
(
n
, ==, 0);

445 } i‡(
fûl_fú°
) {

446 
	`mem£t
(
v
[0].
iov_ba£
, 'X', v[0].
iov_Àn
);

447 
n
 = 
	`evbuf„r_commô_•a˚
(
buf
, 
v
, 1);

448 
	`â_öt_›
(
n
, ==, 0);

449 
n
 = 
	`evbuf„r_ª£rve_•a˚
(
buf
, 128, 
v
, 2);

450 
	`â_öt_›
(
n
, ==, 1);

451 
sz
 = 
v
[0].
iov_Àn
;

452 
	`â_as£π
(
v
[0].
iov_ba£
 !
˝1
);

453 
˝1
 = 
v
[0].
iov_ba£
;

457 
n
 = 
	`evbuf„r_ª£rve_•a˚
(
buf
, 
sz
+128, 
v
, 2);

458 
	`evbuf„r_vÆid©e
(
buf
);

459 
	`â_öt_›
(
n
, ==, 2);

460 
sz
 = 
v
[0].
iov_Àn
 + v[1].iov_len;

461 
	`â_öt_›
(
sz
, >=, 
v
[0].
iov_Àn
+128);

462 i‡(
add_d©a
) {

463 
	`â_as£π
(
v
[0].
iov_ba£
 =
˝1
 + 1);

465 
	`â_as£π
(
v
[0].
iov_ba£
 =
˝1
);

467 
˝1
 = 
v
[0].
iov_ba£
;

468 
˝2
 = 
v
[1].
iov_ba£
;

471 
n
 = 
	`evbuf„r_ª£rve_•a˚
(
buf
, 
sz
+128, 
v
, 3);

472 
	`evbuf„r_vÆid©e
(
buf
);

473 
	`â_öt_›
(
n
, ==, 3);

474 
	`â_as£π
(
˝1
 =
v
[0].
iov_ba£
);

475 
	`â_as£π
(
˝2
 =
v
[1].
iov_ba£
);

476 
sz
 = 
v
[0].
iov_Àn
 + v[1].iov_len + v[2].iov_len;

480 
n
 = 
	`evbuf„r_ª£rve_•a˚
(
buf
, 
sz
+128, 
v
, 2);

481 
	`evbuf„r_vÆid©e
(
buf
);

482 i‡(
add_d©a
) {

483 
	`â_öt_›
(
n
, ==, 2);

484 
	`â_as£π
(
˝1
 =
v
[0].
iov_ba£
);

486 
	`â_öt_›
(
n
, ==, 1);

489 
íd
:

490 
	`evbuf„r_‰ì
(
buf
);

491 
	}
}

494 
	$ã°_evbuf„r_ex∑nd
(*
±r
)

496 
d©a
[4096];

497 
evbuf„r
 *
buf
;

498 
size_t
 
a
,
w
,
u
;

499 *
buf„r
;

501 
	`mem£t
(
d©a
, 'X', (data));

504 
buf
 = 
	`evbuf„r_√w
();

505 
	`â_öt_›
(
	`evbuf„r_ex∑nd
(
buf
, 20000), ==, 0);

506 
	`evbuf„r_vÆid©e
(
buf
);

507 
a
=
w
=
u
=0;

508 
	`evbuf„r_gë_wa°e
(
buf
, &
a
,&
w
,&
u
);

509 
	`â_as£π
(
w
 == 0);

510 
	`â_as£π
(
u
 == 0);

511 
	`â_as£π
(
a
 >= 20000);

512 
	`â_as£π
(
buf
->
fú°
);

513 
	`â_as£π
(
buf
->
fú°
 =buf->
œ°
);

514 
	`â_as£π
(
buf
->
fú°
->
off
 == 0);

515 
	`â_as£π
(
buf
->
fú°
->
buf„r_Àn
 >= 20000);

519 
buf„r
 = 
buf
->
fú°
->buffer;

520 
	`evbuf„r_add
(
buf
, 
d©a
, 1024);

521 
	`â_öt_›
(
	`evbuf„r_ex∑nd
(
buf
, 1024), ==, 0);

522 
	`â_as£π
(
buf
->
fú°
->
buf„r
 == buffer);

523 
	`evbuf„r_vÆid©e
(
buf
);

524 
	`evbuf„r_‰ì
(
buf
);

528 
buf
 = 
	`evbuf„r_√w
();

529 
	`evbuf„r_add
(
buf
, 
d©a
, 400);

531 
n
 = ()(
buf
->
fú°
->
buf„r_Àn
 - buf->fú°->
off
 - 1);

532 
	`â_as£π
(
n
 < ()(
d©a
));

533 
	`evbuf„r_add
(
buf
, 
d©a
, 
n
);

535 
	`â_as£π
(
buf
->
fú°
 =buf->
œ°
);

536 
	`â_as£π
(
buf
->
fú°
->
off
 =buf->fú°->
buf„r_Àn
 - 1);

537 
	`evbuf„r_døö
(
buf
, buf->
fú°
->
off
 - 1);

538 
	`â_as£π
(1 =
	`evbuf„r_gë_Àngth
(
buf
));

539 
	`â_as£π
(
buf
->
fú°
->
mißlign
 > 0);

540 
	`â_as£π
(
buf
->
fú°
->
off
 == 1);

541 
buf„r
 = 
buf
->
fú°
->buffer;

542 
	`â_as£π
(
	`evbuf„r_ex∑nd
(
buf
, 40) == 0);

543 
	`â_as£π
(
buf
->
fú°
 =buf->
œ°
);

544 
	`â_as£π
(
buf
->
fú°
->
off
 == 1);

545 
	`â_as£π
(
buf
->
fú°
->
buf„r
 == buffer);

546 
	`â_as£π
(
buf
->
fú°
->
mißlign
 == 0);

547 
	`evbuf„r_vÆid©e
(
buf
);

548 
	`evbuf„r_‰ì
(
buf
);

551 
buf
 = 
	`evbuf„r_√w
();

553 
	`evbuf„r_add
(
buf
, 
d©a
, (data));

554 
	`evbuf„r_add
(
buf
, 
d©a
, (data));

555 
	`evbuf„r_add
(
buf
, 
d©a
, (data));

557 
	`evbuf„r_vÆid©e
(
buf
);

558 
	`evbuf„r_ex∑nd
(
buf
, 1024);

559 
	`evbuf„r_vÆid©e
(
buf
);

560 
	`evbuf„r_puŒup
(
buf
, -1);

561 
	`evbuf„r_vÆid©e
(
buf
);

563 
íd
:

564 
	`evbuf„r_‰ì
(
buf
);

565 
	}
}

568 
	gª„ªn˚_cb_ˇŒed
;

570 
	$ª„ªn˚_cb
(c⁄° *
d©a
, 
size_t
 
Àn
, *
exåa
)

572 
	`â_°r_›
(
d©a
, ==, "this is what weáddásÑead-only memory.");

573 
	`â_öt_›
(
Àn
, ==, 
	`°æí
(
d©a
));

574 
	`â_w™t
(
exåa
 == (*)0xdeadaffe);

575 ++
ª„ªn˚_cb_ˇŒed
;

576 
íd
:

578 
	}
}

581 
	$ã°_evbuf„r_ª„ªn˚
(*
±r
)

583 
evbuf„r
 *
§c
 = 
	`evbuf„r_√w
();

584 
evbuf„r
 *
d°
 = 
	`evbuf„r_√w
();

585 
evbuf„r_iovec
 
v
[1];

586 c⁄° *
d©a
 = "this is what weáddásÑead-only memory.";

587 
ª„ªn˚_cb_ˇŒed
 = 0;

589 
	`â_as£π
(
	`evbuf„r_add_ª„ªn˚
(
§c
, 
d©a
, 
	`°æí
(data),

590 
ª„ªn˚_cb
, (*)0xdeadaffe) != -1);

592 
	`evbuf„r_ª£rve_•a˚
(
d°
, 
	`°æí
(
d©a
), 
v
, 1);

593 
	`â_as£π
(
	`evbuf„r_ªmove
(
§c
, 
v
[0].
iov_ba£
, 10) != -1);

595 
	`evbuf„r_vÆid©e
(
§c
);

596 
	`evbuf„r_vÆid©e
(
d°
);

599 
	`evbuf„r_¥ïíd
(
§c
, "aaaaa", 5);

600 
	`evbuf„r_vÆid©e
(
§c
);

601 
	`evbuf„r_døö
(
§c
, 5);

603 
	`â_as£π
(
	`evbuf„r_ªmove
(
§c
, ((*)(
v
[0].
iov_ba£
)) + 10,

604 
	`°æí
(
d©a
) - 10) != -1);

606 
v
[0].
iov_Àn
 = 
	`°æí
(
d©a
);

608 
	`evbuf„r_commô_•a˚
(
d°
, 
v
, 1);

609 
	`evbuf„r_vÆid©e
(
§c
);

610 
	`evbuf„r_vÆid©e
(
d°
);

612 
	`â_öt_›
(
ª„ªn˚_cb_ˇŒed
, ==, 1);

614 
	`â_as£π
(!
	`memcmp
(
	`evbuf„r_puŒup
(
d°
, 
	`°æí
(
d©a
)),

615 
d©a
, 
	`°æí
(data)));

616 
	`evbuf„r_vÆid©e
(
d°
);

618 
íd
:

619 
	`evbuf„r_‰ì
(
d°
);

620 
	`evbuf„r_‰ì
(
§c
);

621 
	}
}

623 
_evbuf„r_ã°ög_u£_£ndfûe
();

624 
_evbuf„r_ã°ög_u£_mm≠
();

625 
_evbuf„r_ã°ög_u£_löór_fûe_ac˚ss
();

628 
	$ã°_evbuf„r_add_fûe
(*
±r
)

630 c⁄° *
im∂
 = 
±r
;

631 
evbuf„r
 *
§c
 = 
	`evbuf„r_√w
();

632 c⁄° *
d©a
 = "this is what weáddás file system data.";

633 
size_t
 
d©Æí
;

634 c⁄° *
com∑ª
;

635 
fd
 = -1;

636 
evutû_sockë_t
 
∑ú
[2] = {-1, -1};

637 
r
=0, 
n_wrôãn
=0;

641 
	`â_as£π
(
im∂
);

642 i‡(!
	`°rcmp
(
im∂
, "sendfile")) {

643 i‡(!
	`_evbuf„r_ã°ög_u£_£ndfûe
())

644 
	`â_skù
();

645 
	`TT_BLATHER
(("Using sendfile-based implementaion"));

646 } i‡(!
	`°rcmp
(
im∂
, "mmap")) {

647 i‡(!
	`_evbuf„r_ã°ög_u£_mm≠
())

648 
	`â_skù
();

649 
	`TT_BLATHER
(("Using mmap-based implementaion"));

650 } i‡(!
	`°rcmp
(
im∂
, "linear")) {

651 i‡(!
	`_evbuf„r_ã°ög_u£_löór_fûe_ac˚ss
())

652 
	`â_skù
();

653 
	`TT_BLATHER
(("UsingÑead-based implementaion"));

655 
	`TT_DIE
(("Didn'tÑecognizeÅhe implementation"));

659 
	`evbuf„r_£t_Êags
(
§c
, 
EVBUFFER_FLAG_DRAINS_TO_FD
);

661 #i‡
	`deföed
(
_EVENT_HAVE_SENDFILE
Ë&& deföed(
__sun__
Ë&& deföed(
__svr4__
)

664 i‡(
	`evutû_îßtz_sockë∑ú
(
AF_INET
, 
SOCK_STREAM
, 0, 
∑ú
) == -1)

665 
	`â_ab‹t_msg
("ersatz_socketpair failed");

667 i‡(
	`evutû_sockë∑ú
(
AF_UNIX
, 
SOCK_STREAM
, 0, 
∑ú
) == -1)

668 
	`â_ab‹t_msg
("socketpair failed");

671 
d©Æí
 = 
	`°æí
(
d©a
);

672 
fd
 = 
	`ªgªss_make_tmpfûe
(
d©a
, 
d©Æí
);

674 
	`â_as£π
(
fd
 != -1);

676 
	`â_as£π
(
	`evbuf„r_add_fûe
(
§c
, 
fd
, 0, 
d©Æí
) != -1);

678 
	`evbuf„r_vÆid©e
(
§c
);

680 
	`evbuf„r_gë_Àngth
(
§c
) &&

681 (
r
 = 
	`evbuf„r_wrôe
(
§c
, 
∑ú
[0])) > 0) {

682 
	`evbuf„r_vÆid©e
(
§c
);

683 
n_wrôãn
 +
r
;

685 
	`â_öt_›
(
r
, !=, -1);

686 
	`â_öt_›
(
n_wrôãn
, ==, 
d©Æí
);

688 
	`evbuf„r_vÆid©e
(
§c
);

689 
	`â_öt_›
(
	`evbuf„r_ªad
(
§c
, 
∑ú
[1], ()
	`°æí
(
d©a
)), ==, 
d©Æí
);

690 
	`evbuf„r_vÆid©e
(
§c
);

691 
com∑ª
 = (*)
	`evbuf„r_puŒup
(
§c
, 
d©Æí
);

692 
	`â_as£π
(
com∑ª
 !
NULL
);

693 i‡(
	`memcmp
(
com∑ª
, 
d©a
, 
d©Æí
))

694 
	`â_ab‹t_msg
("Data fromádd_file differs.");

696 
	`evbuf„r_vÆid©e
(
§c
);

697 
íd
:

698 i‡(
∑ú
[0] >= 0)

699 
	`evutû_˛o£sockë
(
∑ú
[0]);

700 i‡(
∑ú
[1] >= 0)

701 
	`evutû_˛o£sockë
(
∑ú
[1]);

702 
	`evbuf„r_‰ì
(
§c
);

703 
	}
}

705 #i‚de‡
_EVENT_DISABLE_MM_REPLACEMENT


707 
	$Áûög_mÆloc
(
size_t
 
how_much
)

709 
î∫o
 = 
ENOMEM
;

710  
NULL
;

711 
	}
}

715 
	$ã°_evbuf„r_ªad 
(*
±r
)

717 
evbuf„r
 *
evb
 = 
	`evbuf„r_√w
();

718 
evbuf„r
 *
evb_tmp
 = 
	`evbuf„r_√w
();

719 c⁄° *
s
;

720 *
˝
 = 
NULL
;

721 
size_t
 
sz
;

723 
	#â_löe_eq
(
c⁄ã¡
) \

724 
TT_STMT_BEGIN
 \

725 i‡(!
˝
 || 
sz
 !
	`°æí
(
c⁄ã¡
Ë|| 
	`°rcmp
(cp, content)) { \

726 
	`TT_DIE
(("W™ãd %s; gŸ %†[%d]", 
c⁄ã¡
, 
˝
, ()
sz
)); \

728 
TT_STMT_END


	)

731 
s
 = "complex sillyÇewline\r\n\n\r\n\n\rmore\0\n";

732 
	`evbuf„r_add
(
evb
, 
s
, 
	`°æí
(s)+2);

733 
	`evbuf„r_vÆid©e
(
evb
);

734 
˝
 = 
	`evbuf„r_ªad 
(
evb
, &
sz
, 
EVBUFFER_EOL_ANY
);

735 
	`â_löe_eq
("complex sillyÇewline");

736 
	`‰ì
(
˝
);

737 
	`evbuf„r_vÆid©e
(
evb
);

738 
˝
 = 
	`evbuf„r_ªad 
(
evb
, &
sz
, 
EVBUFFER_EOL_ANY
);

739 i‡(!
˝
 || 
sz
 !5 || 
	`memcmp
(cp, "more\0\0", 6))

740 
	`â_ab‹t_msg
("NotásÉxpected");

741 
	`â_uöt_›
(
	`evbuf„r_gë_Àngth
(
evb
), ==, 0);

742 
	`evbuf„r_vÆid©e
(
evb
);

743 
s
 = "\nnoÇewline";

744 
	`evbuf„r_add
(
evb
, 
s
, 
	`°æí
(s));

745 
	`‰ì
(
˝
);

746 
	`evbuf„r_vÆid©e
(
evb
);

747 
˝
 = 
	`evbuf„r_ªad 
(
evb
, &
sz
, 
EVBUFFER_EOL_ANY
);

748 
	`â_löe_eq
("");

749 
	`‰ì
(
˝
);

750 
	`evbuf„r_vÆid©e
(
evb
);

751 
˝
 = 
	`evbuf„r_ªad 
(
evb
, &
sz
, 
EVBUFFER_EOL_ANY
);

752 
	`â_as£π
(!
˝
);

753 
	`evbuf„r_vÆid©e
(
evb
);

754 
	`evbuf„r_døö
(
evb
, 
	`evbuf„r_gë_Àngth
(evb));

755 
	`â_as£π
(
	`evbuf„r_gë_Àngth
(
evb
) == 0);

756 
	`evbuf„r_vÆid©e
(
evb
);

759 
s
 = "Line with\rinÅhe middle\nLine with good crlf\r\n\nfinal\n";

760 
	`evbuf„r_add
(
evb
, 
s
, 
	`°æí
(s));

761 
	`evbuf„r_vÆid©e
(
evb
);

762 
˝
 = 
	`evbuf„r_ªad 
(
evb
, &
sz
, 
EVBUFFER_EOL_CRLF
);

763 
	`â_löe_eq
("Line with\rinÅhe middle");

764 
	`‰ì
(
˝
);

765 
	`evbuf„r_vÆid©e
(
evb
);

767 
˝
 = 
	`evbuf„r_ªad 
(
evb
, &
sz
, 
EVBUFFER_EOL_CRLF
);

768 
	`â_löe_eq
("Line with good crlf");

769 
	`‰ì
(
˝
);

770 
	`evbuf„r_vÆid©e
(
evb
);

772 
˝
 = 
	`evbuf„r_ªad 
(
evb
, &
sz
, 
EVBUFFER_EOL_CRLF
);

773 
	`â_löe_eq
("");

774 
	`‰ì
(
˝
);

775 
	`evbuf„r_vÆid©e
(
evb
);

777 
˝
 = 
	`evbuf„r_ªad 
(
evb
, &
sz
, 
EVBUFFER_EOL_CRLF
);

778 
	`â_löe_eq
("final");

779 
s
 = "x";

780 
	`evbuf„r_vÆid©e
(
evb
);

781 
	`evbuf„r_add
(
evb
, 
s
, 1);

782 
	`evbuf„r_vÆid©e
(
evb
);

783 
	`‰ì
(
˝
);

784 
˝
 = 
	`evbuf„r_ªad 
(
evb
, &
sz
, 
EVBUFFER_EOL_CRLF
);

785 
	`â_as£π
(!
˝
);

786 
	`evbuf„r_vÆid©e
(
evb
);

789 
s
 = "ándá bad crlf\nandá good one\r\n\r\nMore\r";

790 
	`evbuf„r_add
(
evb
, 
s
, 
	`°æí
(s));

791 
	`evbuf„r_vÆid©e
(
evb
);

792 
˝
 = 
	`evbuf„r_ªad 
(
evb
, &
sz
, 
EVBUFFER_EOL_CRLF_STRICT
);

793 
	`â_löe_eq
("xándá bad crlf\nandá good one");

794 
	`‰ì
(
˝
);

795 
	`evbuf„r_vÆid©e
(
evb
);

797 
˝
 = 
	`evbuf„r_ªad 
(
evb
, &
sz
, 
EVBUFFER_EOL_CRLF_STRICT
);

798 
	`â_löe_eq
("");

799 
	`‰ì
(
˝
);

800 
	`evbuf„r_vÆid©e
(
evb
);

802 
˝
 = 
	`evbuf„r_ªad 
(
evb
, &
sz
, 
EVBUFFER_EOL_CRLF_STRICT
);

803 
	`â_as£π
(!
˝
);

804 
	`evbuf„r_vÆid©e
(
evb
);

805 
	`evbuf„r_add
(
evb
, "\n", 1);

806 
	`evbuf„r_vÆid©e
(
evb
);

808 
˝
 = 
	`evbuf„r_ªad 
(
evb
, &
sz
, 
EVBUFFER_EOL_CRLF_STRICT
);

809 
	`â_löe_eq
("More");

810 
	`‰ì
(
˝
);

811 
	`â_as£π
(
	`evbuf„r_gë_Àngth
(
evb
) == 0);

812 
	`evbuf„r_vÆid©e
(
evb
);

814 
s
 = "An internal CR\r isÇotánÉol\r\nNor isáÜack of one";

815 
	`evbuf„r_add
(
evb
, 
s
, 
	`°æí
(s));

816 
˝
 = 
	`evbuf„r_ªad 
(
evb
, &
sz
, 
EVBUFFER_EOL_CRLF_STRICT
);

817 
	`â_löe_eq
("An internal CR\r isÇotánÉol");

818 
	`‰ì
(
˝
);

819 
	`evbuf„r_vÆid©e
(
evb
);

821 
˝
 = 
	`evbuf„r_ªad 
(
evb
, &
sz
, 
EVBUFFER_EOL_CRLF_STRICT
);

822 
	`â_as£π
(!
˝
);

823 
	`evbuf„r_vÆid©e
(
evb
);

825 
	`evbuf„r_add
(
evb
, "\r\n", 2);

826 
	`evbuf„r_vÆid©e
(
evb
);

827 
˝
 = 
	`evbuf„r_ªad 
(
evb
, &
sz
, 
EVBUFFER_EOL_CRLF_STRICT
);

828 
	`â_löe_eq
("Nor isáÜack of one");

829 
	`‰ì
(
˝
);

830 
	`â_as£π
(
	`evbuf„r_gë_Àngth
(
evb
) == 0);

831 
	`evbuf„r_vÆid©e
(
evb
);

834 
s
 = "An\randáÇl\n\nText";

835 
	`evbuf„r_add
(
evb
, 
s
, 
	`°æí
(s));

836 
	`evbuf„r_vÆid©e
(
evb
);

838 
˝
 = 
	`evbuf„r_ªad 
(
evb
, &
sz
, 
EVBUFFER_EOL_LF
);

839 
	`â_löe_eq
("An\randáÇl");

840 
	`‰ì
(
˝
);

841 
	`evbuf„r_vÆid©e
(
evb
);

843 
˝
 = 
	`evbuf„r_ªad 
(
evb
, &
sz
, 
EVBUFFER_EOL_LF
);

844 
	`â_löe_eq
("");

845 
	`‰ì
(
˝
);

846 
	`evbuf„r_vÆid©e
(
evb
);

848 
˝
 = 
	`evbuf„r_ªad 
(
evb
, &
sz
, 
EVBUFFER_EOL_LF
);

849 
	`â_as£π
(!
˝
);

850 
	`‰ì
(
˝
);

851 
	`evbuf„r_add
(
evb
, "\n", 1);

852 
	`evbuf„r_vÆid©e
(
evb
);

853 
˝
 = 
	`evbuf„r_ªad 
(
evb
, &
sz
, 
EVBUFFER_EOL_LF
);

854 
	`â_löe_eq
("Text");

855 
	`‰ì
(
˝
);

856 
	`evbuf„r_vÆid©e
(
evb
);

859 
s
 = "ándá bad crlf\nandá good one\r";

860 
	`evbuf„r_add
(
evb_tmp
, 
s
, 
	`°æí
(s));

861 
	`evbuf„r_vÆid©e
(
evb
);

862 
	`evbuf„r_add_buf„r
(
evb
, 
evb_tmp
);

863 
	`evbuf„r_vÆid©e
(
evb
);

864 
s
 = "\n\r";

865 
	`evbuf„r_add
(
evb_tmp
, 
s
, 
	`°æí
(s));

866 
	`evbuf„r_vÆid©e
(
evb
);

867 
	`evbuf„r_add_buf„r
(
evb
, 
evb_tmp
);

868 
	`evbuf„r_vÆid©e
(
evb
);

869 
s
 = "\nMore\r";

870 
	`evbuf„r_add
(
evb_tmp
, 
s
, 
	`°æí
(s));

871 
	`evbuf„r_vÆid©e
(
evb
);

872 
	`evbuf„r_add_buf„r
(
evb
, 
evb_tmp
);

873 
	`evbuf„r_vÆid©e
(
evb
);

875 
˝
 = 
	`evbuf„r_ªad 
(
evb
, &
sz
, 
EVBUFFER_EOL_CRLF_STRICT
);

876 
	`â_löe_eq
("ándá bad crlf\nandá good one");

877 
	`‰ì
(
˝
);

878 
	`evbuf„r_vÆid©e
(
evb
);

880 
˝
 = 
	`evbuf„r_ªad 
(
evb
, &
sz
, 
EVBUFFER_EOL_CRLF_STRICT
);

881 
	`â_löe_eq
("");

882 
	`‰ì
(
˝
);

883 
	`evbuf„r_vÆid©e
(
evb
);

885 
˝
 = 
	`evbuf„r_ªad 
(
evb
, &
sz
, 
EVBUFFER_EOL_CRLF_STRICT
);

886 
	`â_as£π
(!
˝
);

887 
	`‰ì
(
˝
);

888 
	`evbuf„r_vÆid©e
(
evb
);

889 
	`evbuf„r_add
(
evb
, "\n", 1);

890 
	`evbuf„r_vÆid©e
(
evb
);

891 
˝
 = 
	`evbuf„r_ªad 
(
evb
, &
sz
, 
EVBUFFER_EOL_CRLF_STRICT
);

892 
	`â_löe_eq
("More");

893 
	`‰ì
(
˝
); c∞
NULL
;

894 
	`evbuf„r_vÆid©e
(
evb
);

895 
	`â_as£π
(
	`evbuf„r_gë_Àngth
(
evb
) == 0);

898 
s
 = "oneÜine\ntwoÜine\nblueÜine";

899 
	`evbuf„r_add
(
evb_tmp
, 
s
, 
	`°æí
(s));

900 
	`evbuf„r_vÆid©e
(
evb
);

901 
	`evbuf„r_add_buf„r
(
evb
, 
evb_tmp
);

902 
	`evbuf„r_vÆid©e
(
evb
);

904 
˝
 = 
	`evbuf„r_ªad 
(
evb
, &
sz
, 
EVBUFFER_EOL_LF
);

905 
	`â_löe_eq
("oneÜine");

906 
	`‰ì
(
˝
); c∞
NULL
;

907 
	`evbuf„r_vÆid©e
(
evb
);

910 #i‚de‡
_EVENT_DISABLE_MM_REPLACEMENT


911 
	`evít_£t_mem_fun˘i⁄s
(
Áûög_mÆloc
, 
ªÆloc
, 
‰ì
);

912 
˝
 = 
	`evbuf„r_ªad 
(
evb
, &
sz
, 
EVBUFFER_EOL_LF
);

913 
	`â_as£π
(
˝
 =
NULL
);

914 
	`evbuf„r_vÆid©e
(
evb
);

917 
	`evít_£t_mem_fun˘i⁄s
(
mÆloc
, 
ªÆloc
, 
‰ì
);

919 
˝
 = 
	`evbuf„r_ªad 
(
evb
, &
sz
, 
EVBUFFER_EOL_LF
);

920 
	`â_löe_eq
("twoÜine");

921 
	`‰ì
(
˝
); c∞
NULL
;

922 
	`evbuf„r_vÆid©e
(
evb
);

924 
íd
:

925 
	`evbuf„r_‰ì
(
evb
);

926 
	`evbuf„r_‰ì
(
evb_tmp
);

927 i‡(
˝
Ë
	`‰ì
(cp);

928 
	}
}

931 
	$ã°_evbuf„r_£¨ch_eﬁ
(*
±r
)

933 
evbuf„r
 *
buf
 = 
	`evbuf„r_√w
();

934 
evbuf„r_±r
 
±r1
, 
±r2
;

935 c⁄° *
s
;

936 
size_t
 
eﬁ_Àn
;

938 
s
 = "string! \r\n\r\nx\n";

939 
	`evbuf„r_add
(
buf
, 
s
, 
	`°æí
(s));

940 
eﬁ_Àn
 = -1;

941 
±r1
 = 
	`evbuf„r_£¨ch_eﬁ
(
buf
, 
NULL
, &
eﬁ_Àn
, 
EVBUFFER_EOL_CRLF
);

942 
	`â_öt_›
(
±r1
.
pos
, ==, 8);

943 
	`â_öt_›
(
eﬁ_Àn
, ==, 2);

945 
eﬁ_Àn
 = -1;

946 
±r2
 = 
	`evbuf„r_£¨ch_eﬁ
(
buf
, &
±r1
, &
eﬁ_Àn
, 
EVBUFFER_EOL_CRLF
);

947 
	`â_öt_›
(
±r2
.
pos
, ==, 8);

948 
	`â_öt_›
(
eﬁ_Àn
, ==, 2);

950 
	`evbuf„r_±r_£t
(
buf
, &
±r1
, 1, 
EVBUFFER_PTR_ADD
);

951 
eﬁ_Àn
 = -1;

952 
±r2
 = 
	`evbuf„r_£¨ch_eﬁ
(
buf
, &
±r1
, &
eﬁ_Àn
, 
EVBUFFER_EOL_CRLF
);

953 
	`â_öt_›
(
±r2
.
pos
, ==, 9);

954 
	`â_öt_›
(
eﬁ_Àn
, ==, 1);

956 
eﬁ_Àn
 = -1;

957 
±r2
 = 
	`evbuf„r_£¨ch_eﬁ
(
buf
, &
±r1
, &
eﬁ_Àn
, 
EVBUFFER_EOL_CRLF_STRICT
);

958 
	`â_öt_›
(
±r2
.
pos
, ==, 10);

959 
	`â_öt_›
(
eﬁ_Àn
, ==, 2);

961 
eﬁ_Àn
 = -1;

962 
±r1
 = 
	`evbuf„r_£¨ch_eﬁ
(
buf
, 
NULL
, &
eﬁ_Àn
, 
EVBUFFER_EOL_LF
);

963 
	`â_öt_›
(
±r1
.
pos
, ==, 9);

964 
	`â_öt_›
(
eﬁ_Àn
, ==, 1);

966 
eﬁ_Àn
 = -1;

967 
±r2
 = 
	`evbuf„r_£¨ch_eﬁ
(
buf
, &
±r1
, &
eﬁ_Àn
, 
EVBUFFER_EOL_LF
);

968 
	`â_öt_›
(
±r2
.
pos
, ==, 9);

969 
	`â_öt_›
(
eﬁ_Àn
, ==, 1);

971 
	`evbuf„r_±r_£t
(
buf
, &
±r1
, 1, 
EVBUFFER_PTR_ADD
);

972 
eﬁ_Àn
 = -1;

973 
±r2
 = 
	`evbuf„r_£¨ch_eﬁ
(
buf
, &
±r1
, &
eﬁ_Àn
, 
EVBUFFER_EOL_LF
);

974 
	`â_öt_›
(
±r2
.
pos
, ==, 11);

975 
	`â_öt_›
(
eﬁ_Àn
, ==, 1);

977 
íd
:

978 
	`evbuf„r_‰ì
(
buf
);

979 
	}
}

982 
	$ã°_evbuf„r_ôî©ive
(*
±r
)

984 
evbuf„r
 *
buf
 = 
	`evbuf„r_√w
();

985 c⁄° *
abc
 = "abcdefghijklmnopqrstvuwxyzabcdefghijklmnopqrstvuwxyzabcdefghijklmnopqrstvuwxyzabcdefghijklmnopqrstvuwxyz";

986 
i
, 
j
, 
sum
, 
n
;

988 
sum
 = 0;

989 
n
 = 0;

990 
i
 = 0; i < 1000; ++i) {

991 
j
 = 1; j < 
	`°æí
(
abc
); ++j) {

992 
f‹m©
[32];

993 
	`evutû_¢¥ötf
(
f‹m©
, (f‹m©), "%%%u.%us", 
j
, j);

994 
	`evbuf„r_add_¥ötf
(
buf
, 
f‹m©
, 
abc
);

1000 i‡((
n
 % 337) == 0)

1001 
	`evbuf„r_vÆid©e
(
buf
);

1003 
sum
 +
j
;

1004 
n
++;

1007 
	`evbuf„r_vÆid©e
(
buf
);

1009 
	`â_uöt_›
(
sum
, ==, 
	`evbuf„r_gë_Àngth
(
buf
));

1012 
size_t
 
a
,
w
,
u
;

1013 
a
=
w
=
u
=0;

1014 
	`evbuf„r_gë_wa°e
(
buf
, &
a
, &
w
, &
u
);

1016 
	`¥ötf
("Allocated: %u.\nWasted: %u.\nUsed: %u.",

1017 ()
a
, ()
w
, ()
u
);

1018 
	`â_as£π
–(()
w
)/
a
 < .125);

1020 
íd
:

1021 
	`evbuf„r_‰ì
(
buf
);

1023 
	}
}

1026 
	$ã°_evbuf„r_föd
(*
±r
)

1028 
u_ch¨
* 
p
;

1029 c⁄° * 
ã°1
 = "1234567890\r\n";

1030 c⁄° * 
ã°2
 = "1234567890\r";

1031 
	#EVBUFFER_INITIAL_LENGTH
 256

	)

1032 
ã°3
[
EVBUFFER_INITIAL_LENGTH
];

1033 
i
;

1034 
evbuf„r
 * 
buf
 = 
	`evbuf„r_√w
();

1036 
	`â_as£π
(
buf
);

1039 
	`evbuf„r_add
(
buf
, (
u_ch¨
*)
ã°1
, 
	`°æí
(test1));

1040 
	`evbuf„r_vÆid©e
(
buf
);

1041 
	`evbuf„r_døö
(
buf
, 
	`°æí
(
ã°1
));

1042 
	`evbuf„r_vÆid©e
(
buf
);

1043 
	`evbuf„r_add
(
buf
, (
u_ch¨
*)
ã°2
, 
	`°æí
(test2));

1044 
	`evbuf„r_vÆid©e
(
buf
);

1045 
p
 = 
	`evbuf„r_föd
(
buf
, (
u_ch¨
*)"\r\n", 2);

1046 
	`â_w™t
(
p
 =
NULL
);

1052 
	`evbuf„r_døö
(
buf
, 
	`°æí
(
ã°2
));

1053 
	`evbuf„r_vÆid©e
(
buf
);

1054 
i
 = 0; i < 
EVBUFFER_INITIAL_LENGTH
; ++i)

1055 
ã°3
[
i
] = 'a';

1056 
ã°3
[
EVBUFFER_INITIAL_LENGTH
 - 1] = 'x';

1057 
	`evbuf„r_add
(
buf
, (
u_ch¨
 *)
ã°3
, 
EVBUFFER_INITIAL_LENGTH
);

1058 
	`evbuf„r_vÆid©e
(
buf
);

1059 
p
 = 
	`evbuf„r_föd
(
buf
, (
u_ch¨
 *)"xy", 2);

1060 
	`â_w™t
(
p
 =
NULL
);

1063 
p
 = 
	`evbuf„r_föd
(
buf
, (
u_ch¨
 *)"ax", 2);

1064 
	`â_as£π
(
p
 !
NULL
);

1065 
	`â_w™t
(
	`°∫cmp
((*)
p
, "ax", 2) == 0);

1067 
íd
:

1068 i‡(
buf
)

1069 
	`evbuf„r_‰ì
(
buf
);

1070 
	}
}

1073 
	$ã°_evbuf„r_±r_£t
(*
±r
)

1075 
evbuf„r
 *
buf
 = 
	`evbuf„r_√w
();

1076 
evbuf„r_±r
 
pos
;

1077 
evbuf„r_iovec
 
v
[1];

1079 
	`â_as£π
(
buf
);

1082 
	`evbuf„r_ª£rve_•a˚
(
buf
, 5000, 
v
, 1);

1083 
v
[0].
iov_Àn
 = 5000;

1084 
	`mem£t
(
v
[0].
iov_ba£
, 1, v[0].
iov_Àn
);

1085 
	`evbuf„r_commô_•a˚
(
buf
, 
v
, 1);

1086 
	`evbuf„r_vÆid©e
(
buf
);

1088 
	`evbuf„r_ª£rve_•a˚
(
buf
, 4000, 
v
, 1);

1089 
v
[0].
iov_Àn
 = 4000;

1090 
	`mem£t
(
v
[0].
iov_ba£
, 2, v[0].
iov_Àn
);

1091 
	`evbuf„r_commô_•a˚
(
buf
, 
v
, 1);

1093 
	`evbuf„r_ª£rve_•a˚
(
buf
, 3000, 
v
, 1);

1094 
v
[0].
iov_Àn
 = 3000;

1095 
	`mem£t
(
v
[0].
iov_ba£
, 3, v[0].
iov_Àn
);

1096 
	`evbuf„r_commô_•a˚
(
buf
, 
v
, 1);

1097 
	`evbuf„r_vÆid©e
(
buf
);

1099 
	`â_öt_›
(
	`evbuf„r_gë_Àngth
(
buf
), ==, 12000);

1101 
	`â_as£π
(
	`evbuf„r_±r_£t
(
buf
, &
pos
, 13000, 
EVBUFFER_PTR_SET
) == -1);

1102 
	`â_as£π
(
pos
.pos == -1);

1103 
	`â_as£π
(
	`evbuf„r_±r_£t
(
buf
, &
pos
, 0, 
EVBUFFER_PTR_SET
) == 0);

1104 
	`â_as£π
(
pos
.pos == 0);

1105 
	`â_as£π
(
	`evbuf„r_±r_£t
(
buf
, &
pos
, 13000, 
EVBUFFER_PTR_ADD
) == -1);

1107 
	`â_as£π
(
	`evbuf„r_±r_£t
(
buf
, &
pos
, 0, 
EVBUFFER_PTR_SET
) == 0);

1108 
	`â_as£π
(
pos
.pos == 0);

1109 
	`â_as£π
(
	`evbuf„r_±r_£t
(
buf
, &
pos
, 10000, 
EVBUFFER_PTR_ADD
) == 0);

1110 
	`â_as£π
(
pos
.pos == 10000);

1111 
	`â_as£π
(
	`evbuf„r_±r_£t
(
buf
, &
pos
, 1000, 
EVBUFFER_PTR_ADD
) == 0);

1112 
	`â_as£π
(
pos
.pos == 11000);

1113 
	`â_as£π
(
	`evbuf„r_±r_£t
(
buf
, &
pos
, 1000, 
EVBUFFER_PTR_ADD
) == -1);

1114 
	`â_as£π
(
pos
.pos == -1);

1116 
íd
:

1117 i‡(
buf
)

1118 
	`evbuf„r_‰ì
(
buf
);

1119 
	}
}

1122 
	$ã°_evbuf„r_£¨ch
(*
±r
)

1124 
evbuf„r
 *
buf
 = 
	`evbuf„r_√w
();

1125 
evbuf„r
 *
tmp
 = 
	`evbuf„r_√w
();

1126 
evbuf„r_±r
 
pos
, 
íd
;

1128 
	`â_as£π
(
buf
);

1129 
	`â_as£π
(
tmp
);

1132 
	`evbuf„r_add_¥ötf
(
tmp
, "hello");

1133 
	`evbuf„r_add_buf„r
(
buf
, 
tmp
);

1134 
	`evbuf„r_add_¥ötf
(
tmp
, "foo");

1135 
	`evbuf„r_add_buf„r
(
buf
, 
tmp
);

1136 
	`evbuf„r_add_¥ötf
(
tmp
, "cat");

1137 
	`evbuf„r_add_buf„r
(
buf
, 
tmp
);

1138 
	`evbuf„r_add_¥ötf
(
tmp
, "attack");

1139 
	`evbuf„r_add_buf„r
(
buf
, 
tmp
);

1141 
pos
 = 
	`evbuf„r_£¨ch
(
buf
, "©èck", 6, 
NULL
);

1142 
	`â_öt_›
(
pos
.pos, ==, 11);

1143 
pos
 = 
	`evbuf„r_£¨ch
(
buf
, "©èckî", 8, 
NULL
);

1144 
	`â_öt_›
(
pos
.pos, ==, -1);

1147 
pos
 = 
	`evbuf„r_£¨ch
(
buf
, "oc", 2, 
NULL
);

1148 
	`â_öt_›
(
pos
.pos, ==, 7);

1149 
pos
 = 
	`evbuf„r_£¨ch
(
buf
, "cat", 3, &pos);

1150 
	`â_öt_›
(
pos
.pos, ==, 8);

1151 
pos
 = 
	`evbuf„r_£¨ch
(
buf
, "tacking", 7, &pos);

1152 
	`â_öt_›
(
pos
.pos, ==, -1);

1154 
	`evbuf„r_±r_£t
(
buf
, &
pos
, 5, 
EVBUFFER_PTR_SET
);

1155 
pos
 = 
	`evbuf„r_£¨ch
(
buf
, "foo", 3, &pos);

1156 
	`â_öt_›
(
pos
.pos, ==, 5);

1158 
	`evbuf„r_±r_£t
(
buf
, &
pos
, 2, 
EVBUFFER_PTR_ADD
);

1159 
pos
 = 
	`evbuf„r_£¨ch
(
buf
, "tat", 3, &pos);

1160 
	`â_öt_›
(
pos
.pos, ==, 10);

1164 
	`evbuf„r_±r_£t
(
buf
, &
íd
, 12, 
EVBUFFER_PTR_SET
);

1165 
pos
 = 
	`evbuf„r_£¨ch_ønge
(
buf
, "foo", 3, 
NULL
, &
íd
);

1166 
	`â_öt_›
(
pos
.pos, ==, 5);

1167 
pos
 = 
	`evbuf„r_£¨ch_ønge
(
buf
, "fooˇè", 7, 
NULL
, &
íd
);

1168 
	`â_öt_›
(
pos
.pos, ==, 5);

1169 
pos
 = 
	`evbuf„r_£¨ch_ønge
(
buf
, "fooˇèt", 8, 
NULL
, &
íd
);

1170 
	`â_öt_›
(
pos
.pos, ==, -1);

1171 
pos
 = 
	`evbuf„r_£¨ch_ønge
(
buf
, "ack", 3, 
NULL
, &
íd
);

1172 
	`â_öt_›
(
pos
.pos, ==, -1);

1175 
íd
:

1176 i‡(
buf
)

1177 
	`evbuf„r_‰ì
(
buf
);

1178 i‡(
tmp
)

1179 
	`evbuf„r_‰ì
(
tmp
);

1180 
	}
}

1183 
	$log_ch™ge_ˇŒback
(
evbuf„r
 *
buf„r
,

1184 c⁄° 
evbuf„r_cb_öfo
 *
cböfo
,

1185 *
¨g
)

1188 
size_t
 
ﬁd_Àn
 = 
cböfo
->
‹ig_size
;

1189 
size_t
 
√w_Àn
 = 
ﬁd_Àn
 + 
cböfo
->
n_added
 - cböfo->
n_dñëed
;

1190 
evbuf„r
 *
out
 = 
¨g
;

1191 
	`evbuf„r_add_¥ötf
(
out
, "%lu->%lu; ", ()
ﬁd_Àn
,

1192 ()
√w_Àn
);

1193 
	}
}

1195 
	$£lf_døöög_ˇŒback
(
evbuf„r
 *evbuf„r, 
size_t
 
ﬁd_Àn
,

1196 
size_t
 
√w_Àn
, *
¨g
)

1198 i‡(
√w_Àn
 > 
ﬁd_Àn
)

1199 
	`evbuf„r_døö
(
evbuf„r
, 
√w_Àn
);

1200 
	}
}

1203 
	$ã°_evbuf„r_ˇŒbacks
(*
±r
)

1205 
evbuf„r
 *
buf
 = 
	`evbuf„r_√w
();

1206 
evbuf„r
 *
buf_out1
 = 
	`evbuf„r_√w
();

1207 
evbuf„r
 *
buf_out2
 = 
	`evbuf„r_√w
();

1208 
evbuf„r_cb_íåy
 *
cb1
, *
cb2
;

1210 
	`â_as£π
(
buf
);

1211 
	`â_as£π
(
buf_out1
);

1212 
	`â_as£π
(
buf_out2
);

1214 
cb1
 = 
	`evbuf„r_add_cb
(
buf
, 
log_ch™ge_ˇŒback
, 
buf_out1
);

1215 
cb2
 = 
	`evbuf„r_add_cb
(
buf
, 
log_ch™ge_ˇŒback
, 
buf_out2
);

1221 
	`evbuf„r_add_¥ötf
(
buf
, "The %d magic wordsáre spottyÖudding", 2);

1222 
	`evbuf„r_vÆid©e
(
buf
);

1223 
	`evbuf„r_cb_˛ór_Êags
(
buf
, 
cb2
, 
EVBUFFER_CB_ENABLED
);

1224 
	`evbuf„r_døö
(
buf
, 10);

1225 
	`evbuf„r_vÆid©e
(
buf
);

1226 
	`evbuf„r_¥ïíd
(
buf
, "Hello", 5);

1227 
	`evbuf„r_cb_£t_Êags
(
buf
, 
cb2
, 
EVBUFFER_CB_ENABLED
);

1228 
	`evbuf„r_add_ª„ªn˚
(
buf
, "Goodbye", 7, 
NULL
, NULL);

1229 
	`evbuf„r_ªmove_cb_íåy
(
buf
, 
cb1
);

1230 
	`evbuf„r_vÆid©e
(
buf
);

1231 
	`evbuf„r_døö
(
buf
, 
	`evbuf„r_gë_Àngth
(buf)); ;

1232 
	`â_as£π
(-1 =
	`evbuf„r_ªmove_cb
(
buf
, 
log_ch™ge_ˇŒback
, 
NULL
));

1233 
	`evbuf„r_add
(
buf
, "X", 1);

1234 
	`â_as£π
(!
	`evbuf„r_ªmove_cb
(
buf
, 
log_ch™ge_ˇŒback
, 
buf_out2
));

1235 
	`evbuf„r_vÆid©e
(
buf
);

1237 
	`â_°r_›
(
	`evbuf„r_puŒup
(
buf_out1
, -1), ==,

1239 
	`â_°r_›
(
	`evbuf„r_puŒup
(
buf_out2
, -1), ==,

1241 
	`evbuf„r_døö
(
buf_out1
, 
	`evbuf„r_gë_Àngth
(buf_out1));

1242 
	`evbuf„r_døö
(
buf_out2
, 
	`evbuf„r_gë_Àngth
(buf_out2));

1244 
cb1
 = 
	`evbuf„r_add_cb
(
buf
, 
log_ch™ge_ˇŒback
, 
buf_out1
);

1245 
	`â_as£π
(
cb1
 !
NULL
);

1246 
cb2
 = 
	`evbuf„r_add_cb
(
buf
, 
log_ch™ge_ˇŒback
, 
buf_out2
);

1247 
	`â_as£π
(
cb2
 !
NULL
);

1248 
	`evbuf„r_£tcb
(
buf
, 
£lf_døöög_ˇŒback
, 
NULL
);

1249 
	`evbuf„r_add_¥ötf
(
buf
, "This should get drainedÑightáway.");

1250 
	`â_uöt_›
(
	`evbuf„r_gë_Àngth
(
buf
), ==, 0);

1251 
	`â_uöt_›
(
	`evbuf„r_gë_Àngth
(
buf_out1
), ==, 0);

1252 
	`â_uöt_›
(
	`evbuf„r_gë_Àngth
(
buf_out2
), ==, 0);

1253 
	`evbuf„r_£tcb
(
buf
, 
NULL
, NULL);

1254 
	`evbuf„r_add_¥ötf
(
buf
, "This willÇot.");

1255 
	`â_°r_›
(
	`evbuf„r_puŒup
(
buf
, -1), ==, "This willÇot.");

1256 
	`evbuf„r_vÆid©e
(
buf
);

1257 
	`evbuf„r_døö
(
buf
, 
	`evbuf„r_gë_Àngth
(buf));

1258 
	`evbuf„r_vÆid©e
(
buf
);

1261 
cb1
 = 
	`evbuf„r_add_cb
(
buf
, 
log_ch™ge_ˇŒback
, 
buf_out1
);

1262 
cb2
 = 
	`evbuf„r_add_cb
(
buf
, 
log_ch™ge_ˇŒback
, 
buf_out2
);

1263 
	`evbuf„r_cb_su•íd
(
buf
,
cb2
);

1264 
	`evbuf„r_¥ïíd
(
buf
,"Hello world",11);

1265 
	`evbuf„r_vÆid©e
(
buf
);

1266 
	`evbuf„r_cb_su•íd
(
buf
,
cb1
);

1267 
	`evbuf„r_add
(
buf
,"more",4);

1268 
	`evbuf„r_cb_unsu•íd
(
buf
,
cb2
);

1269 
	`evbuf„r_døö
(
buf
, 4);

1270 
	`evbuf„r_cb_unsu•íd
(
buf
,
cb1
);

1271 
	`evbuf„r_døö
(
buf
, 
	`evbuf„r_gë_Àngth
(buf));

1273 
	`â_°r_›
(
	`evbuf„r_puŒup
(
buf_out1
, -1), ==,

1275 
	`â_°r_›
(
	`evbuf„r_puŒup
(
buf_out2
, -1), ==,

1279 
íd
:

1280 i‡(
buf
)

1281 
	`evbuf„r_‰ì
(
buf
);

1282 i‡(
buf_out1
)

1283 
	`evbuf„r_‰ì
(
buf_out1
);

1284 i‡(
buf_out2
)

1285 
	`evbuf„r_‰ì
(
buf_out2
);

1286 
	}
}

1288 
	gªf_d⁄e_cb_ˇŒed_cou¡
 = 0;

1289 *
	gªf_d⁄e_cb_ˇŒed_wôh
 = 
NULL
;

1290 c⁄° *
	gªf_d⁄e_cb_ˇŒed_wôh_d©a
 = 
NULL
;

1291 
size_t
 
	gªf_d⁄e_cb_ˇŒed_wôh_Àn
 = 0;

1292 
	$ªf_d⁄e_cb
(c⁄° *
d©a
, 
size_t
 
Àn
, *
öfo
)

1294 ++
ªf_d⁄e_cb_ˇŒed_cou¡
;

1295 
ªf_d⁄e_cb_ˇŒed_wôh
 = 
öfo
;

1296 
ªf_d⁄e_cb_ˇŒed_wôh_d©a
 = 
d©a
;

1297 
ªf_d⁄e_cb_ˇŒed_wôh_Àn
 = 
Àn
;

1298 
	}
}

1301 
	$ã°_evbuf„r_add_ª„ªn˚
(*
±r
)

1303 c⁄° 
chunk1
[] = "If you have foundÅheánswerÅo sucháÖroblem";

1304 c⁄° 
chunk2
[] = "you oughtÅo write it up forÖublication";

1306 
tmp
[16];

1307 
size_t
 
Àn1
 = 
	`°æí
(
chunk1
), 
Àn2
=°æí(
chunk2
);

1309 
evbuf„r
 *
buf1
 = 
NULL
, *
buf2
 = NULL;

1311 
buf1
 = 
	`evbuf„r_√w
();

1312 
	`â_as£π
(
buf1
);

1314 
	`evbuf„r_add_ª„ªn˚
(
buf1
, 
chunk1
, 
Àn1
, 
ªf_d⁄e_cb
, (*)111);

1315 
	`evbuf„r_add
(
buf1
, ", ", 2);

1316 
	`evbuf„r_add_ª„ªn˚
(
buf1
, 
chunk2
, 
Àn2
, 
ªf_d⁄e_cb
, (*)222);

1317 
	`â_öt_›
(
	`evbuf„r_gë_Àngth
(
buf1
), ==, 
Àn1
+
Àn2
+2);

1320 
	`â_öt_›
(
	`evbuf„r_ªmove
(
buf1
, 
tmp
, 6), ==, 6);

1321 
	`â_öt_›
(
	`memcmp
(
tmp
, "If you", 6), ==, 0);

1322 
	`â_öt_›
(
	`evbuf„r_ªmove
(
buf1
, 
tmp
, 5), ==, 5);

1323 
	`â_öt_›
(
	`memcmp
(
tmp
, " have", 5), ==, 0);

1326 
	`â_öt_›
(
	`evbuf„r_¥ïíd
(
buf1
, "I have ", 7), ==, 0);

1327 
	`â_öt_›
(
	`memcmp
(
chunk1
, "If you", 6), ==, 0);

1328 
	`evbuf„r_vÆid©e
(
buf1
);

1331 
	`evbuf„r_døö
(
buf1
, 7);

1332 
	`evbuf„r_døö
(
buf1
, 
Àn1
-11-1);

1333 
	`â_öt_›
(
ªf_d⁄e_cb_ˇŒed_cou¡
, ==, 0);

1334 
	`evbuf„r_ªmove
(
buf1
, 
tmp
, 1);

1335 
	`â_öt_›
(
tmp
[0], ==, 'm');

1336 
	`â_as£π
(
ªf_d⁄e_cb_ˇŒed_wôh
 == (*)111);

1337 
	`â_as£π
(
ªf_d⁄e_cb_ˇŒed_wôh_d©a
 =
chunk1
);

1338 
	`â_as£π
(
ªf_d⁄e_cb_ˇŒed_wôh_Àn
 =
Àn1
);

1339 
	`â_öt_›
(
ªf_d⁄e_cb_ˇŒed_cou¡
, ==, 1);

1340 
	`evbuf„r_vÆid©e
(
buf1
);

1343 
	`evbuf„r_døö
(
buf1
, 6);

1344 
buf2
 = 
	`evbuf„r_√w
();

1345 
	`â_as£π
(
buf2
);

1346 
	`â_öt_›
(
ªf_d⁄e_cb_ˇŒed_cou¡
, ==, 1);

1347 
	`evbuf„r_add
(
buf2
, "I ", 2);

1349 
	`evbuf„r_add_buf„r
(
buf2
, 
buf1
);

1350 
	`â_öt_›
(
ªf_d⁄e_cb_ˇŒed_cou¡
, ==, 1);

1351 
	`evbuf„r_ªmove
(
buf2
, 
tmp
, 16);

1352 
	`â_öt_›
(
	`memcmp
("I oughàtÿwrôe", 
tmp
, 16), ==, 0);

1353 
	`evbuf„r_døö
(
buf2
, 
	`evbuf„r_gë_Àngth
(buf2));

1354 
	`â_öt_›
(
ªf_d⁄e_cb_ˇŒed_cou¡
, ==, 2);

1355 
	`â_as£π
(
ªf_d⁄e_cb_ˇŒed_wôh
 == (*)222);

1356 
	`evbuf„r_vÆid©e
(
buf2
);

1360 
	`evbuf„r_add
(
buf1
, "You shakeánd shakeÅhe ", 24);

1361 
	`evbuf„r_add_ª„ªn˚
(
buf1
, "këchu∞bŸée", 14, 
ªf_d⁄e_cb
,

1363 
	`evbuf„r_add
(
buf1
, ". Nothing comesándÅhenáÜot'll.", 42);

1364 
	`evbuf„r_‰ì
(
buf1
);

1365 
buf1
 = 
NULL
;

1366 
	`â_öt_›
(
ªf_d⁄e_cb_ˇŒed_cou¡
, ==, 3);

1367 
	`â_as£π
(
ªf_d⁄e_cb_ˇŒed_wôh
 == (*)3333);

1369 
íd
:

1370 i‡(
buf1
)

1371 
	`evbuf„r_‰ì
(
buf1
);

1372 i‡(
buf2
)

1373 
	`evbuf„r_‰ì
(
buf2
);

1374 
	}
}

1378 
	$ã°_evbuf„r_¥ïíd
(*
±r
)

1380 
evbuf„r
 *
buf1
 = 
NULL
, *
buf2
 = NULL;

1381 
tmp
[128];

1382 
n
;

1384 
buf1
 = 
	`evbuf„r_√w
();

1385 
	`â_as£π
(
buf1
);

1388 
	`evbuf„r_¥ïíd
(
buf1
, "This string has 29 characters", 29);

1389 
	`evbuf„r_vÆid©e
(
buf1
);

1392 
	`evbuf„r_¥ïíd
(
buf1
, "Short.", 6);

1393 
	`evbuf„r_vÆid©e
(
buf1
);

1396 
	`evbuf„r_døö
(
buf1
, 6+11);

1397 
	`evbuf„r_¥ïíd
(
buf1
, "it", 2);

1398 
	`evbuf„r_vÆid©e
(
buf1
);

1399 
	`â_as£π
(!
	`memcmp
(
buf1
->
fú°
->
buf„r
+buf1->fú°->
mißlign
,

1403 
	`evbuf„r_¥ïíd
(
buf1
, "It isÇoÜongerÅrueÅo say ", 28);

1404 
	`evbuf„r_vÆid©e
(
buf1
);

1405 
n
 = 
	`evbuf„r_ªmove
(
buf1
, 
tmp
, (tmp)-1);

1406 
tmp
[
n
]='\0';

1407 
	`â_°r_›
(
tmp
,==,"It isÇoÜongerÅrueÅo say it has 29 characters");

1409 
buf2
 = 
	`evbuf„r_√w
();

1410 
	`â_as£π
(
buf2
);

1413 
n
 = 999;

1414 
	`evbuf„r_add_¥ötf
(
buf1
, "Hîêi†°rög %d. ", 
n
++);

1415 
	`evbuf„r_¥ïíd_buf„r
(
buf2
, 
buf1
);

1416 
	`evbuf„r_vÆid©e
(
buf2
);

1419 
	`evbuf„r_add_¥ötf
(
buf1
, "Hîêi†°rög %d. ", 
n
++);

1420 
	`evbuf„r_¥ïíd_buf„r
(
buf2
, 
buf1
);

1421 
	`evbuf„r_vÆid©e
(
buf2
);

1422 
	`evbuf„r_vÆid©e
(
buf1
);

1423 
n
 = 
	`evbuf„r_ªmove
(
buf2
, 
tmp
, (tmp)-1);

1424 
tmp
[
n
]='\0';

1425 
	`â_°r_›
(
tmp
,==,"Here is string 1000. Here is string 999. ");

1427 
íd
:

1428 i‡(
buf1
)

1429 
	`evbuf„r_‰ì
(
buf1
);

1430 i‡(
buf2
)

1431 
	`evbuf„r_‰ì
(
buf2
);

1433 
	}
}

1436 
	$ã°_evbuf„r_≥ek
(*
öfo
)

1438 
evbuf„r
 *
buf
 = 
NULL
, *
tmp_buf
 = NULL;

1439 
i
;

1440 
evbuf„r_iovec
 
v
[20];

1441 
evbuf„r_±r
 
±r
;

1443 
	#â_iov_eq
(
v
, 
s
) \

1444 
	`â_öt_›
((
v
)->
iov_Àn
, ==, 
	`°æí
(
s
)); \

1445 
	`â_as£π
(!
	`memcmp
((
v
)->
iov_ba£
, (
s
), 
	`°æí
(s)))

	)

1448 
buf
 = 
	`evbuf„r_√w
();

1449 
tmp_buf
 = 
	`evbuf„r_√w
();

1450 
i
 = 0; i < 16; ++i) {

1451 
	`evbuf„r_add_¥ötf
(
tmp_buf
, "C⁄ã¡†o‡chunk [%d]\n", 
i
);

1452 
	`evbuf„r_add_buf„r
(
buf
, 
tmp_buf
);

1456 
i
 = 
	`evbuf„r_≥ek
(
buf
, -1, 
NULL
, NULL, 0);

1457 
	`â_öt_›
(
i
, ==, 16);

1460 
i
 = 
	`evbuf„r_≥ek
(
buf
, -1, 
NULL
, 
v
, 20);

1461 
	`â_öt_›
(
i
, ==, 16);

1462 
	`â_iov_eq
(&
v
[0], "Contents of chunk [0]\n");

1463 
	`â_iov_eq
(&
v
[3], "Contents of chunk [3]\n");

1464 
	`â_iov_eq
(&
v
[12], "Contents of chunk [12]\n");

1465 
	`â_iov_eq
(&
v
[15], "Contents of chunk [15]\n");

1468 
	`mem£t
(
v
, 0, (v));

1469 
i
 = 
	`evbuf„r_≥ek
(
buf
, -1, 
NULL
, 
v
, 1);

1470 
	`â_öt_›
(
i
, ==, 1);

1471 
	`â_iov_eq
(&
v
[0], "Contents of chunk [0]\n");

1472 
	`â_as£π
(
v
[1].
iov_ba£
 =
NULL
);

1475 
	`mem£t
(
v
, 0, (v));

1476 
i
 = 
	`evbuf„r_≥ek
(
buf
, 40, 
NULL
, 
v
, 16);

1477 
	`â_öt_›
(
i
, ==, 2);

1478 
	`â_iov_eq
(&
v
[0], "Contents of chunk [0]\n");

1479 
	`â_iov_eq
(&
v
[1], "Contents of chunk [1]\n");

1480 
	`â_as£π
(
v
[2].
iov_ba£
 =
NULL
);

1483 
	`mem£t
(
v
, 0, (v));

1484 
i
 = 
	`evbuf„r_≥ek
(
buf
, 100, 
NULL
, NULL, 0);

1485 
	`â_öt_›
(
i
, ==, 5);

1486 
	`â_as£π
(
v
[0].
iov_ba£
 =
NULL
);

1489 
	`mem£t
(
v
, 0, (v));

1490 
i
 = 
	`evbuf„r_≥ek
(
buf
, 60, 
NULL
, 
v
, 1);

1491 
	`â_öt_›
(
i
, ==, 3);

1492 
	`â_iov_eq
(&
v
[0], "Contents of chunk [0]\n");

1493 
	`â_as£π
(
v
[1].
iov_ba£
 =
NULL
);

1496 
	`mem£t
(
v
, 0, (v));

1497 
i
 = 
	`evbuf„r_≥ek
(
buf
, 65536, 
NULL
, 
v
, 20);

1498 
	`â_öt_›
(
i
, ==, 16);

1499 
	`â_iov_eq
(&
v
[0], "Contents of chunk [0]\n");

1500 
	`â_iov_eq
(&
v
[3], "Contents of chunk [3]\n");

1501 
	`â_iov_eq
(&
v
[12], "Contents of chunk [12]\n");

1502 
	`â_iov_eq
(&
v
[15], "Contents of chunk [15]\n");

1503 
	`â_as£π
(
v
[16].
iov_ba£
 =
NULL
);

1506 
	`mem£t
(
v
, 0, (v));

1507 
i
 = 
	`evbuf„r_≥ek
(
tmp_buf
, -1, 
NULL
, 
v
, 20);

1508 
	`â_öt_›
(
i
, ==, 0);

1509 
	`â_as£π
(
v
[0].
iov_ba£
 =
NULL
);

1510 
	`mem£t
(
v
, 0, (v));

1511 
i
 = 
	`evbuf„r_≥ek
(
tmp_buf
, 50, 
NULL
, 
v
, 20);

1512 
	`â_öt_›
(
i
, ==, 0);

1513 
	`â_as£π
(
v
[0].
iov_ba£
 =
NULL
);

1516 
	`mem£t
(
v
, 0, (v));

1517 
	`evbuf„r_±r_£t
(
buf
, &
±r
, 30, 
EVBUFFER_PTR_SET
);

1518 
i
 = 
	`evbuf„r_≥ek
(
buf
, 50, &
±r
, 
v
, 20);

1519 
	`â_öt_›
(
i
, ==, 3);

1520 
	`â_iov_eq
(&
v
[0], " of chunk [1]\n");

1521 
	`â_iov_eq
(&
v
[1], "Contents of chunk [2]\n");

1522 
	`â_iov_eq
(&
v
[2], "Contents of chunk [3]\n");

1525 
	`mem£t
(
v
, 0, (v));

1526 
	`evbuf„r_±r_£t
(
buf
, &
±r
, 14, 
EVBUFFER_PTR_ADD
);

1527 
i
 = 
	`evbuf„r_≥ek
(
buf
, 44, &
±r
, 
v
, 20);

1528 
	`â_öt_›
(
i
, ==, 2);

1529 
	`â_iov_eq
(&
v
[0], "Contents of chunk [2]\n");

1530 
	`â_iov_eq
(&
v
[1], "Contents of chunk [3]\n");

1532 
íd
:

1533 i‡(
buf
)

1534 
	`evbuf„r_‰ì
(
buf
);

1535 i‡(
tmp_buf
)

1536 
	`evbuf„r_‰ì
(
tmp_buf
);

1537 
	}
}

1547 
	$ã°_evbuf„r_‰ìze
(*
±r
)

1549 
evbuf„r
 *
buf
 = 
NULL
, *
tmp_buf
=NULL;

1550 c⁄° 
°rög
[] =

1555 c⁄° 
°¨t
 = !
	`°rcmp
(
±r
, "start");

1556 *
˝
;

1557 
ch¨buf
[128];

1558 
r
;

1559 
size_t
 
‹ig_Àngth
;

1560 
evbuf„r_iovec
 
v
[1];

1562 i‡(!
°¨t
)

1563 
	`â_°r_›
(
±r
, ==, "end");

1565 
buf
 = 
	`evbuf„r_√w
();

1566 
tmp_buf
 = 
	`evbuf„r_√w
();

1567 
	`â_as£π
(
tmp_buf
);

1569 
	`evbuf„r_add
(
buf
, 
°rög
, 
	`°æí
(string));

1570 
	`evbuf„r_‰ìze
(
buf
, 
°¨t
);

1572 
	#FREEZE_EQ
(
a
, 
°¨tˇ£
, 
ídˇ£
) \

1574 i‡(
°¨t
) { \

1575 
	`â_öt_›
((
a
), ==, (
°¨tˇ£
)); \

1577 
	`â_öt_›
((
a
), ==, (
ídˇ£
)); \

1579 } 0)

	)

1582 
‹ig_Àngth
 = 
	`evbuf„r_gë_Àngth
(
buf
);

1585 
r
 = 
	`evbuf„r_add
(
buf
, "abc", 0);

1586 
	`FREEZE_EQ
(
r
, 0, -1);

1587 
r
 = 
	`evbuf„r_ª£rve_•a˚
(
buf
, 10, 
v
, 1);

1588 
	`FREEZE_EQ
(
r
, 1, -1);

1589 i‡(
r
 == 0) {

1590 
	`mem£t
(
v
[0].
iov_ba£
, 'X', 10);

1591 
v
[0].
iov_Àn
 = 10;

1593 
r
 = 
	`evbuf„r_commô_•a˚
(
buf
, 
v
, 1);

1594 
	`FREEZE_EQ
(
r
, 0, -1);

1595 
r
 = 
	`evbuf„r_add_ª„ªn˚
(
buf
, 
°rög
, 5, 
NULL
, NULL);

1596 
	`FREEZE_EQ
(
r
, 0, -1);

1597 
r
 = 
	`evbuf„r_add_¥ötf
(
buf
, "Hello %s", "world");

1598 
	`FREEZE_EQ
(
r
, 11, -1);

1601 i‡(!
°¨t
)

1602 
	`â_öt_›
(
‹ig_Àngth
, ==, 
	`evbuf„r_gë_Àngth
(
buf
));

1604 
‹ig_Àngth
 = 
	`evbuf„r_gë_Àngth
(
buf
);

1607 
r
 = 
	`evbuf„r_ªmove
(
buf
, 
ch¨buf
, 1);

1608 
	`FREEZE_EQ
(
r
, -1, 1);

1609 
r
 = 
	`evbuf„r_døö
(
buf
, 3);

1610 
	`FREEZE_EQ
(
r
, -1, 0);

1611 
r
 = 
	`evbuf„r_¥ïíd
(
buf
, "dummy", 5);

1612 
	`FREEZE_EQ
(
r
, -1, 0);

1613 
˝
 = 
	`evbuf„r_ªad 
(
buf
, 
NULL
, 
EVBUFFER_EOL_LF
);

1614 
	`FREEZE_EQ
(
˝
==
NULL
, 1, 0);

1615 i‡(
˝
)

1616 
	`‰ì
(
˝
);

1619 i‡(
°¨t
)

1620 
	`â_öt_›
(
‹ig_Àngth
, ==, 
	`evbuf„r_gë_Àngth
(
buf
));

1622 
íd
:

1623 i‡(
buf
)

1624 
	`evbuf„r_‰ì
(
buf
);

1626 i‡(
tmp_buf
)

1627 
	`evbuf„r_‰ì
(
tmp_buf
);

1628 
	}
}

1631 
	$£tup_∑s°hrough
(c⁄° 
ã°ˇ£_t
 *
ã°ˇ£
)

1633  
ã°ˇ£
->
£tup_d©a
;

1634 
	}
}

1636 
	$˛ónup_∑s°hrough
(c⁄° 
ã°ˇ£_t
 *
ã°ˇ£
, *
±r
)

1638 (Ë
±r
;

1640 
	}
}

1642 c⁄° 
ã°ˇ£_£tup_t
 
	gnû_£tup
 = {

1643 
£tup_∑s°hrough
,

1644 
˛ónup_∑s°hrough


1647 
ã°ˇ£_t
 
	gevbuf„r_ã°ˇ£s
[] = {

1648 { "evbuf„r", 
ã°_evbuf„r
, 0, 
NULL
, NULL },

1649 { "ªmove_buf„r_wôh_em±y", 
ã°_evbuf„r_ªmove_buf„r_wôh_em±y
, 0, 
NULL
, NULL },

1650 { "ª£rve2", 
ã°_evbuf„r_ª£rve2
, 0, 
NULL
, NULL },

1651 { "ª£rve_m™y", 
ã°_evbuf„r_ª£rve_m™y
, 0, 
NULL
, NULL },

1652 { "ª£rve_m™y2", 
ã°_evbuf„r_ª£rve_m™y
, 0, &
nû_£tup
, (*)"add" },

1653 { "ª£rve_m™y3", 
ã°_evbuf„r_ª£rve_m™y
, 0, &
nû_£tup
, (*)"fill" },

1654 { "ex∑nd", 
ã°_evbuf„r_ex∑nd
, 0, 
NULL
, NULL },

1655 { "ª„ªn˚", 
ã°_evbuf„r_ª„ªn˚
, 0, 
NULL
, NULL },

1656 { "ôî©ive", 
ã°_evbuf„r_ôî©ive
, 0, 
NULL
, NULL },

1657 { "ªad ", 
ã°_evbuf„r_ªad 
, 
TT_NO_LOGS
, &
basic_£tup
, 
NULL
 },

1658 { "£¨ch_eﬁ", 
ã°_evbuf„r_£¨ch_eﬁ
, 0, 
NULL
, NULL },

1659 { "föd", 
ã°_evbuf„r_föd
, 0, 
NULL
, NULL },

1660 { "±r_£t", 
ã°_evbuf„r_±r_£t
, 0, 
NULL
, NULL },

1661 { "£¨ch", 
ã°_evbuf„r_£¨ch
, 0, 
NULL
, NULL },

1662 { "ˇŒbacks", 
ã°_evbuf„r_ˇŒbacks
, 0, 
NULL
, NULL },

1663 { "add_ª„ªn˚", 
ã°_evbuf„r_add_ª„ªn˚
, 0, 
NULL
, NULL },

1664 { "¥ïíd", 
ã°_evbuf„r_¥ïíd
, 
TT_FORK
, 
NULL
, NULL },

1665 { "≥ek", 
ã°_evbuf„r_≥ek
, 0, 
NULL
, NULL },

1666 { "‰ìze_°¨t", 
ã°_evbuf„r_‰ìze
, 0, &
nû_£tup
, (*)"start" },

1667 { "‰ìze_íd", 
ã°_evbuf„r_‰ìze
, 0, &
nû_£tup
, (*)"end" },

1669 { "add_fûe_£ndfûe", 
ã°_evbuf„r_add_fûe
, 
TT_FORK
, &
nû_£tup
,

1671 { "add_fûe_mm≠", 
ã°_evbuf„r_add_fûe
, 
TT_FORK
, &
nû_£tup
,

1673 { "add_fûe_löór", 
ã°_evbuf„r_add_fûe
, 
TT_FORK
, &
nû_£tup
,

1676 
END_OF_TESTCASES


	@test/regress_bufferevent.c

29 #unde‡
NDEBUG


31 #ifde‡
WIN32


32 
	~<wösock2.h
>

33 
	~<wödows.h
>

36 
	~"evít2/evít-c⁄fig.h
"

38 
	~<sys/ty≥s.h
>

39 
	~<sys/°©.h
>

40 #ifde‡
_EVENT_HAVE_SYS_TIME_H


41 
	~<sys/time.h
>

43 
	~<sys/queue.h
>

44 #i‚de‡
WIN32


45 
	~<sys/sockë.h
>

46 
	~<sys/waô.h
>

47 
	~<sig«l.h
>

48 
	~<uni°d.h
>

49 
	~<√tdb.h
>

50 
	~<√töë/ö.h
>

52 
	~<f˙é.h
>

53 
	~<sig«l.h
>

54 
	~<°dlib.h
>

55 
	~<°dio.h
>

56 
	~<°rög.h
>

57 
	~<î∫o.h
>

58 
	~<as£π.h
>

60 #ifde‡
_EVENT_HAVE_ARPA_INET_H


61 
	~<¨∑/öë.h
>

64 
	~"evít2/evít-c⁄fig.h
"

65 
	~"evít2/evít.h
"

66 
	~"evít2/evít_°ru˘.h
"

67 
	~"evít2/evít_com∑t.h
"

68 
	~"evít2/èg.h
"

69 
	~"evít2/buf„r.h
"

70 
	~"evít2/buf„ªvít.h
"

71 
	~"evít2/buf„ªvít_com∑t.h
"

72 
	~"evít2/buf„ªvít_°ru˘.h
"

73 
	~"evít2/li°íî.h
"

74 
	~"evít2/utû.h
"

76 
	~"buf„ªvít-öã∫Æ.h
"

77 
	~"utû-öã∫Æ.h
"

78 #ifde‡
WIN32


79 
	~"io˝-öã∫Æ.h
"

82 
	~"ªgªss.h
"

83 
	~"ªgªss_ã°utûs.h
"

90 
	$ªadcb
(
buf„ªvít
 *
bev
, *
¨g
)

92 i‡(
	`evbuf„r_gë_Àngth
(
bev
->
öput
) == 8333) {

93 
evbuf„r
 *
evbuf
 = 
	`evbuf„r_√w
();

94 
	`as£π
(
evbuf
 !
NULL
);

97 
	`buf„ªvít_ªad_buf„r
(
bev
, 
evbuf
);

99 
	`buf„ªvít_dißbÀ
(
bev
, 
EV_READ
);

101 i‡(
	`evbuf„r_gë_Àngth
(
evbuf
) == 8333) {

102 
ã°_ok
++;

105 
	`evbuf„r_‰ì
(
evbuf
);

107 
	}
}

110 
	$wrôecb
(
buf„ªvít
 *
bev
, *
¨g
)

112 i‡(
	`evbuf„r_gë_Àngth
(
bev
->
ouçut
) == 0) {

113 
ã°_ok
++;

115 
	}
}

118 
	$îr‹cb
(
buf„ªvít
 *
bev
, 
wh©
, *
¨g
)

120 
ã°_ok
 = -2;

121 
	}
}

124 
	$ã°_buf„ªvít_im∂
(
u£_∑ú
)

126 
buf„ªvít
 *
bev1
 = 
NULL
, *
bev2
 = NULL;

127 
buf„r
[8333];

128 
i
;

130 i‡(
u£_∑ú
) {

131 
buf„ªvít
 *
∑ú
[2];

132 
	`â_as£π
(0 =
	`buf„ªvít_∑ú_√w
(
NULL
, 0, 
∑ú
));

133 
bev1
 = 
∑ú
[0];

134 
bev2
 = 
∑ú
[1];

135 
	`buf„ªvít_£tcb
(
bev1
, 
ªadcb
, 
wrôecb
, 
îr‹cb
, 
NULL
);

136 
	`buf„ªvít_£tcb
(
bev2
, 
ªadcb
, 
wrôecb
, 
îr‹cb
, 
NULL
);

137 
	`â_öt_›
(
	`buf„ªvít_gëfd
(
bev1
), ==, -1);

138 
	`â_±r_›
(
	`buf„ªvít_gë_undîlyög
(
bev1
), ==, 
NULL
);

139 
	`â_±r_›
(
	`buf„ªvít_∑ú_gë_∑π√r
(
bev1
), ==, 
bev2
);

140 
	`â_±r_›
(
	`buf„ªvít_∑ú_gë_∑π√r
(
bev2
), ==, 
bev1
);

142 
bev1
 = 
	`buf„ªvít_√w
(
∑ú
[0], 
ªadcb
, 
wrôecb
, 
îr‹cb
, 
NULL
);

143 
bev2
 = 
	`buf„ªvít_√w
(
∑ú
[1], 
ªadcb
, 
wrôecb
, 
îr‹cb
, 
NULL
);

144 
	`â_öt_›
(
	`buf„ªvít_gëfd
(
bev1
), ==, 
∑ú
[0]);

145 
	`â_±r_›
(
	`buf„ªvít_gë_undîlyög
(
bev1
), ==, 
NULL
);

146 
	`â_±r_›
(
	`buf„ªvít_∑ú_gë_∑π√r
(
bev1
), ==, 
NULL
);

147 
	`â_±r_›
(
	`buf„ªvít_∑ú_gë_∑π√r
(
bev2
), ==, 
NULL
);

150 
	`buf„ªvít_dißbÀ
(
bev1
, 
EV_READ
);

151 
	`buf„ªvít_íabÀ
(
bev2
, 
EV_READ
);

153 
	`â_öt_›
(
	`buf„ªvít_gë_íabÀd
(
bev1
), ==, 
EV_WRITE
);

154 
	`â_öt_›
(
	`buf„ªvít_gë_íabÀd
(
bev2
), ==, 
EV_WRITE
|
EV_READ
);

156 
i
 = 0; i < ()(
buf„r
); i++)

157 
buf„r
[
i
] = i;

159 
	`buf„ªvít_wrôe
(
bev1
, 
buf„r
, (buffer));

161 
	`evít_di•©ch
();

163 
	`buf„ªvít_‰ì
(
bev1
);

164 
	`â_±r_›
(
	`buf„ªvít_∑ú_gë_∑π√r
(
bev2
), ==, 
NULL
);

165 
	`buf„ªvít_‰ì
(
bev2
);

167 i‡(
ã°_ok
 != 2)

168 
ã°_ok
 = 0;

169 
íd
:

171 
	}
}

174 
	$ã°_buf„ªvít
()

176 
	`ã°_buf„ªvít_im∂
(0);

177 
	}
}

180 
	$ã°_buf„ªvít_∑ú
()

182 
	`ã°_buf„ªvít_im∂
(1);

183 
	}
}

190 
	$wm_ªadcb
(
buf„ªvít
 *
bev
, *
¨g
)

192 
evbuf„r
 *
evbuf
 = 
	`evbuf„r_√w
();

193 
Àn
 = ()
	`evbuf„r_gë_Àngth
(
bev
->
öput
);

194 
ƒód
;

196 
	`as£π
(
Àn
 >= 10 &&Üen <= 20);

198 
	`as£π
(
evbuf
 !
NULL
);

201 
	`buf„ªvít_ªad_buf„r
(
bev
, 
evbuf
);

203 
ƒód
 +
Àn
;

204 i‡(
ƒód
 == 65000) {

205 
	`buf„ªvít_dißbÀ
(
bev
, 
EV_READ
);

206 
ã°_ok
++;

209 
	`evbuf„r_‰ì
(
evbuf
);

210 
	}
}

213 
	$wm_wrôecb
(
buf„ªvít
 *
bev
, *
¨g
)

215 
	`as£π
(
	`evbuf„r_gë_Àngth
(
bev
->
ouçut
) <= 100);

216 i‡(
	`evbuf„r_gë_Àngth
(
bev
->
ouçut
) == 0) {

217 
	`evbuf„r_døö
(
bev
->
ouçut
, 
	`evbuf„r_gë_Àngth
(bev->output));

218 
ã°_ok
++;

220 
	}
}

223 
	$wm_îr‹cb
(
buf„ªvít
 *
bev
, 
wh©
, *
¨g
)

225 
ã°_ok
 = -2;

226 
	}
}

229 
	$ã°_buf„ªvít_w©îm¨ks_im∂
(
u£_∑ú
)

231 
buf„ªvít
 *
bev1
 = 
NULL
, *
bev2
 = NULL;

232 
buf„r
[65000];

233 
i
;

234 
ã°_ok
 = 0;

236 i‡(
u£_∑ú
) {

237 
buf„ªvít
 *
∑ú
[2];

238 
	`â_as£π
(0 =
	`buf„ªvít_∑ú_√w
(
NULL
, 0, 
∑ú
));

239 
bev1
 = 
∑ú
[0];

240 
bev2
 = 
∑ú
[1];

241 
	`buf„ªvít_£tcb
(
bev1
, 
NULL
, 
wm_wrôecb
, 
îr‹cb
, NULL);

242 
	`buf„ªvít_£tcb
(
bev2
, 
wm_ªadcb
, 
NULL
, 
îr‹cb
, NULL);

244 
bev1
 = 
	`buf„ªvít_√w
(
∑ú
[0], 
NULL
, 
wm_wrôecb
, 
wm_îr‹cb
, NULL);

245 
bev2
 = 
	`buf„ªvít_√w
(
∑ú
[1], 
wm_ªadcb
, 
NULL
, 
wm_îr‹cb
, NULL);

247 
	`â_as£π
(
bev1
);

248 
	`â_as£π
(
bev2
);

249 
	`buf„ªvít_dißbÀ
(
bev1
, 
EV_READ
);

250 
	`buf„ªvít_íabÀ
(
bev2
, 
EV_READ
);

252 
i
 = 0; i < ()(
buf„r
); i++)

253 
buf„r
[
i
] = ()i;

256 
	`buf„ªvít_£tw©îm¨k
(
bev2
, 
EV_READ
, 10, 20);

260 
	`buf„ªvít_£tw©îm¨k
(
bev1
, 
EV_WRITE
, 100, 2000);

262 
	`buf„ªvít_wrôe
(
bev1
, 
buf„r
, (buffer));

264 
	`evít_di•©ch
();

266 
	`â_öt_›
(
ã°_ok
, ==, 2);

270 
	`â_as£π
(!
	`evít_≥ndög
(&
bev2
->
ev_wrôe
, 
EV_WRITE
, 
NULL
));

272 
íd
:

273 i‡(
bev1
)

274 
	`buf„ªvít_‰ì
(
bev1
);

275 i‡(
bev2
)

276 
	`buf„ªvít_‰ì
(
bev2
);

277 
	}
}

280 
	$ã°_buf„ªvít_w©îm¨ks
()

282 
	`ã°_buf„ªvít_w©îm¨ks_im∂
(0);

283 
	}
}

286 
	$ã°_buf„ªvít_∑ú_w©îm¨ks
()

288 
	`ã°_buf„ªvít_w©îm¨ks_im∂
(1);

289 
	}
}

297 
buf„ªvít_fûãr_ªsu…


298 
	$buf„ªvít_öput_fûãr
(
evbuf„r
 *
§c
, evbuf„∏*
d°
,

299 
ev_ssize_t
 
lim
, 
buf„ªvít_Êush_mode
 
°©e
, *
˘x
)

301 c⁄° *
buf„r
;

302 
i
;

304 
buf„r
 = 
	`evbuf„r_puŒup
(
§c
, 
	`evbuf„r_gë_Àngth
(src));

305 
i
 = 0; i < 
	`evbuf„r_gë_Àngth
(
§c
); i += 2) {

306 
	`as£π
(
buf„r
[
i
] == 'x');

307 
	`evbuf„r_add
(
d°
, 
buf„r
 + 
i
 + 1, 1);

309 i‡(
i
 + 2 > 
	`evbuf„r_gë_Àngth
(
§c
))

313 
	`evbuf„r_døö
(
§c
, 
i
);

314  (
BEV_OK
);

315 
	}
}

319 
buf„ªvít_fûãr_ªsu…


320 
	$buf„ªvít_ouçut_fûãr
(
evbuf„r
 *
§c
, evbuf„∏*
d°
,

321 
ev_ssize_t
 
lim
, 
buf„ªvít_Êush_mode
 
°©e
, *
˘x
)

323 c⁄° *
buf„r
;

324 
i
;

326 
buf„r
 = 
	`evbuf„r_puŒup
(
§c
, 
	`evbuf„r_gë_Àngth
(src));

327 
i
 = 0; i < 
	`evbuf„r_gë_Àngth
(
§c
); ++i) {

328 
	`evbuf„r_add
(
d°
, "x", 1);

329 
	`evbuf„r_add
(
d°
, 
buf„r
 + 
i
, 1);

332 
	`evbuf„r_døö
(
§c
, 
	`evbuf„r_gë_Àngth
(src));

333  (
BEV_OK
);

334 
	}
}

337 
	$ã°_buf„ªvít_fûãrs_im∂
(
u£_∑ú
)

339 
buf„ªvít
 *
bev1
 = 
NULL
, *
bev2
 = NULL;

340 
buf„ªvít
 *
bev1_ba£
 = 
NULL
, *
bev2_ba£
 = NULL;

341 
buf„r
[8333];

342 
i
;

344 
ã°_ok
 = 0;

346 i‡(
u£_∑ú
) {

347 
buf„ªvít
 *
∑ú
[2];

348 
	`â_as£π
(0 =
	`buf„ªvít_∑ú_√w
(
NULL
, 0, 
∑ú
));

349 
bev1
 = 
∑ú
[0];

350 
bev2
 = 
∑ú
[1];

352 
bev1
 = 
	`buf„ªvít_sockë_√w
(
NULL
, 
∑ú
[0], 0);

353 
bev2
 = 
	`buf„ªvít_sockë_√w
(
NULL
, 
∑ú
[1], 0);

355 
bev1_ba£
 = 
bev1
;

356 
bev2_ba£
 = 
bev2
;

358 
i
 = 0; i < ()(
buf„r
); i++)

359 
buf„r
[
i
] = i;

361 
bev1
 = 
	`buf„ªvít_fûãr_√w
(bev1, 
NULL
, 
buf„ªvít_ouçut_fûãr
,

362 
BEV_OPT_CLOSE_ON_FREE
, 
NULL
, NULL);

364 
bev2
 = 
	`buf„ªvít_fûãr_√w
(bev2, 
buf„ªvít_öput_fûãr
,

365 
NULL
, 
BEV_OPT_CLOSE_ON_FREE
, NULL, NULL);

366 
	`buf„ªvít_£tcb
(
bev1
, 
NULL
, 
wrôecb
, 
îr‹cb
, NULL);

367 
	`buf„ªvít_£tcb
(
bev2
, 
ªadcb
, 
NULL
, 
îr‹cb
, NULL);

369 
	`â_±r_›
(
	`buf„ªvít_gë_undîlyög
(
bev1
), ==, 
bev1_ba£
);

370 
	`â_±r_›
(
	`buf„ªvít_gë_undîlyög
(
bev2
), ==, 
bev2_ba£
);

371 
	`â_öt_›
(
	`buf„ªvít_gëfd
(
bev1
), ==, -1);

372 
	`â_öt_›
(
	`buf„ªvít_gëfd
(
bev2
), ==, -1);

374 
	`buf„ªvít_dißbÀ
(
bev1
, 
EV_READ
);

375 
	`buf„ªvít_íabÀ
(
bev2
, 
EV_READ
);

377 
	`buf„ªvít_wrôe
(
bev1
, 
buf„r
, (buffer));

379 
	`evít_di•©ch
();

381 i‡(
ã°_ok
 != 2)

382 
ã°_ok
 = 0;

384 
íd
:

385 i‡(
bev1
)

386 
	`buf„ªvít_‰ì
(
bev1
);

387 i‡(
bev2
)

388 
	`buf„ªvít_‰ì
(
bev2
);

390 
	}
}

393 
	$ã°_buf„ªvít_fûãrs
()

395 
	`ã°_buf„ªvít_fûãrs_im∂
(0);

396 
	}
}

399 
	$ã°_buf„ªvít_∑ú_fûãrs
()

401 
	`ã°_buf„ªvít_fûãrs_im∂
(1);

402 
	}
}

406 
	$£ndî_wrôecb
(
buf„ªvít
 *
bev
, *
˘x
)

408 i‡(
	`evbuf„r_gë_Àngth
(
	`buf„ªvít_gë_ouçut
(
bev
)) == 0) {

409 
	`buf„ªvít_dißbÀ
(
bev
,
EV_READ
|
EV_WRITE
);

410 
	`buf„ªvít_‰ì
(
bev
);

412 
	}
}

415 
	$£ndî_îr‹cb
(
buf„ªvít
 *
bev
, 
wh©
, *
˘x
)

417 
	`TT_FAIL
(("GŸ sídîÉº‹ %d",()
wh©
));

418 
	}
}

420 
	gbuf„ªvít_c⁄√˘_ã°_Êags
 = 0;

421 
	gn_°rögs_ªad
 = 0;

422 
	gn_ªads_övoked
 = 0;

424 
	#TEST_STR
 "Now isÅheÅime foráll goodÉventsÅo signal for " \

425 "thêgood o‡theúÖrŸocﬁ"

	)

427 
	$li°í_cb
(
evc⁄∆i°íî
 *
li°íî
, 
evutû_sockë_t
 
fd
,

428 
sockaddr
 *
ß
, 
sockÀn
, *
¨g
)

430 
evít_ba£
 *
ba£
 = 
¨g
;

431 
buf„ªvít
 *
bev
;

432 c⁄° 
s
[] = 
TEST_STR
;

433 
	`TT_BLATHER
(("GŸáÑeque° o¿sockë %d", ()
fd
 ));

434 
bev
 = 
	`buf„ªvít_sockë_√w
(
ba£
, 
fd
, 
buf„ªvít_c⁄√˘_ã°_Êags
);

435 
	`â_as£π
(
bev
);

436 
	`buf„ªvít_£tcb
(
bev
, 
NULL
, 
£ndî_wrôecb
, 
£ndî_îr‹cb
, NULL);

437 
	`buf„ªvít_wrôe
(
bev
, 
s
, (s));

438 
íd
:

440 
	}
}

443 
	$ªadî_evítcb
(
buf„ªvít
 *
bev
, 
wh©
, *
˘x
)

445 
evít_ba£
 *
ba£
 = 
˘x
;

446 i‡(
wh©
 & 
BEV_EVENT_ERROR
) {

447 
	`≥º‹
("foobar");

448 
	`TT_FAIL
(("gŸ c⁄√˘‹Éº‹ %d", ()
wh©
));

451 i‡(
wh©
 & 
BEV_EVENT_CONNECTED
) {

452 
	`buf„ªvít_íabÀ
(
bev
, 
EV_READ
);

454 i‡(
wh©
 & 
BEV_EVENT_EOF
) {

455 
buf
[512];

456 
size_t
 
n
;

457 
n
 = 
	`buf„ªvít_ªad
(
bev
, 
buf
, (buf)-1);

458 
buf
[
n
] = '\0';

459 
	`â_°r_›
(
buf
, ==, 
TEST_STR
);

460 i‡(++
n_°rögs_ªad
 == 2)

461 
	`evít_ba£_lo›exô
(
ba£
, 
NULL
);

463 
íd
:

465 
	}
}

468 
	$ªadî_ªadcb
(
buf„ªvít
 *
bev
, *
˘x
)

470 
n_ªads_övoked
++;

471 
	}
}

474 
	$ã°_buf„ªvít_c⁄√˘
(*
¨g
)

476 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

477 
evc⁄∆i°íî
 *
Àv
=
NULL
;

478 
buf„ªvít
 *
bev1
=
NULL
, *
bev2
=NULL;

479 
sockaddr_ö
 
loˇlho°
;

480 
sockaddr_°‹age
 
ss
;

481 
sockaddr
 *
ß
;

482 
ev_sockÀn_t
 
¶í
;

484 
be_Êags
=
BEV_OPT_CLOSE_ON_FREE
;

486 i‡(
	`°r°r
((*)
d©a
->
£tup_d©a
, "defer")) {

487 
be_Êags
 |
BEV_OPT_DEFER_CALLBACKS
;

489 i‡(
	`°r°r
((*)
d©a
->
£tup_d©a
, "unlocked")) {

490 
be_Êags
 |
BEV_OPT_UNLOCK_CALLBACKS
;

492 i‡(
	`°r°r
((*)
d©a
->
£tup_d©a
, "lock")) {

493 
be_Êags
 |
BEV_OPT_THREADSAFE
;

495 
buf„ªvít_c⁄√˘_ã°_Êags
 = 
be_Êags
;

496 #ifde‡
WIN32


497 i‡(!
	`°rcmp
((*)
d©a
->
£tup_d©a
, "unset_connectex")) {

498 
wö32_exãnsi⁄_‚s
 *
ext
 =

499 (
wö32_exãnsi⁄_‚s
 *)

500 
	`evít_gë_wö32_exãnsi⁄_‚s
();

501 
ext
->
C⁄√˘Ex
 = 
NULL
;

505 
	`mem£t
(&
loˇlho°
, 0, (localhost));

507 
loˇlho°
.
sö_p‹t
 = 0;

508 
loˇlho°
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(0x7f000001L);

509 
loˇlho°
.
sö_Ámûy
 = 
AF_INET
;

510 
ß
 = (
sockaddr
 *)&
loˇlho°
;

511 
Àv
 = 
	`evc⁄∆i°íî_√w_böd
(
d©a
->
ba£
, 
li°í_cb
, data->base,

512 
LEV_OPT_CLOSE_ON_FREE
|
LEV_OPT_REUSEABLE
,

513 16, 
ß
, (
loˇlho°
));

514 
	`â_as£π
(
Àv
);

516 
ß
 = (
sockaddr
 *)&
ss
;

517 
¶í
 = (
ss
);

518 i‡(
	`ªgªss_gë_li°íî_addr
(
Àv
, 
ß
, &
¶í
) < 0) {

519 
	`â_ab‹t_≥º‹
("getsockname");

522 
	`â_as£π
(!
	`evc⁄∆i°íî_íabÀ
(
Àv
));

523 
bev1
 = 
	`buf„ªvít_sockë_√w
(
d©a
->
ba£
, -1, 
be_Êags
);

524 
bev2
 = 
	`buf„ªvít_sockë_√w
(
d©a
->
ba£
, -1, 
be_Êags
);

525 
	`â_as£π
(
bev1
);

526 
	`â_as£π
(
bev2
);

527 
	`buf„ªvít_£tcb
(
bev1
, 
ªadî_ªadcb
,
NULL
, 
ªadî_evítcb
, 
d©a
->
ba£
);

528 
	`buf„ªvít_£tcb
(
bev2
, 
ªadî_ªadcb
,
NULL
, 
ªadî_evítcb
, 
d©a
->
ba£
);

530 
	`buf„ªvít_íabÀ
(
bev1
, 
EV_READ
);

531 
	`buf„ªvít_íabÀ
(
bev2
, 
EV_READ
);

533 
	`â_w™t
(!
	`buf„ªvít_sockë_c⁄√˘
(
bev1
, 
ß
, (
loˇlho°
)));

534 
	`â_w™t
(!
	`buf„ªvít_sockë_c⁄√˘
(
bev2
, 
ß
, (
loˇlho°
)));

536 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

538 
	`â_öt_›
(
n_°rögs_ªad
, ==, 2);

539 
	`â_öt_›
(
n_ªads_övoked
, >=, 2);

540 
íd
:

541 i‡(
Àv
)

542 
	`evc⁄∆i°íî_‰ì
(
Àv
);

544 i‡(
bev1
)

545 
	`buf„ªvít_‰ì
(
bev1
);

547 i‡(
bev2
)

548 
	`buf„ªvít_‰ì
(
bev2
);

549 
	}
}

552 
	$w™t_Áû_evítcb
(
buf„ªvít
 *
bev
, 
wh©
, *
˘x
)

554 
evít_ba£
 *
ba£
 = 
˘x
;

555 c⁄° *
îr
;

556 
evutû_sockë_t
 
s
;

558 i‡(
wh©
 & 
BEV_EVENT_ERROR
) {

559 
s
 = 
	`buf„ªvít_gëfd
(
bev
);

560 
îr
 = 
	`evutû_sockë_îr‹_to_°rög
(
	`evutû_sockë_gëîr‹
(
s
));

561 
	`TT_BLATHER
(("c⁄√˘i⁄ faûuª o¿"
EV_SOCK_FMT
": %s",

562 
	`EV_SOCK_ARG
(
s
), 
îr
));

563 
ã°_ok
 = 1;

565 
	`TT_FAIL
(("didn'àÁû? wh© %hd", 
wh©
));

568 
	`evít_ba£_lo›exô
(
ba£
, 
NULL
);

569 
	}
}

572 
	$˛o£_sockë_cb
(
evutû_sockë_t
 
fd
, 
wh©
, *
¨g
)

574 
evutû_sockë_t
 *
fdp
 = 
¨g
;

575 i‡(*
fdp
 >= 0) {

576 
	`evutû_˛o£sockë
(*
fdp
);

577 *
fdp
 = -1;

579 
	}
}

582 
	$ã°_buf„ªvít_c⁄√˘_Áû
(*
¨g
)

584 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

585 
buf„ªvít
 *
bev
=
NULL
;

586 
sockaddr_ö
 
loˇlho°
;

587 
sockaddr
 *
ß
 = (sockaddr*)&
loˇlho°
;

588 
evutû_sockë_t
 
Áke_li°íî
 = -1;

589 
ev_sockÀn_t
 
¶í
 = (
loˇlho°
);

590 
evít
 
˛o£_li°íî_evít
;

591 
˛o£_li°íî_evít_added
 = 0;

592 
timevÆ
 
⁄e_£c⁄d
 = { 1, 0 };

593 
r
;

595 
ã°_ok
 = 0;

597 
	`mem£t
(&
loˇlho°
, 0, (localhost));

598 
loˇlho°
.
sö_p‹t
 = 0;

599 
loˇlho°
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(0x7f000001L);

600 
loˇlho°
.
sö_Ámûy
 = 
AF_INET
;

604 
Áke_li°íî
 = 
	`sockë
(
loˇlho°
.
sö_Ámûy
, 
SOCK_STREAM
, 0);

605 
	`â_as£π
(
Áke_li°íî
 >= 0);

606 
	`â_as£π
(
	`böd
(
Áke_li°íî
, 
ß
, 
¶í
) == 0);

607 
	`â_as£π
(
	`gësock«me
(
Áke_li°íî
, 
ß
, &
¶í
) == 0);

608 
bev
 = 
	`buf„ªvít_sockë_√w
(
d©a
->
ba£
, -1,

609 
BEV_OPT_CLOSE_ON_FREE
 | 
BEV_OPT_DEFER_CALLBACKS
);

610 
	`â_as£π
(
bev
);

611 
	`buf„ªvít_£tcb
(
bev
, 
NULL
, NULL, 
w™t_Áû_evítcb
, 
d©a
->
ba£
);

613 
r
 = 
	`buf„ªvít_sockë_c⁄√˘
(
bev
, 
ß
, 
¶í
);

616 
	`â_w™t
(
r
 == 0 ||Ñ == -1);

620 
	`evtimî_assign
(&
˛o£_li°íî_evít
, 
d©a
->
ba£
, 
˛o£_sockë_cb
,

621 &
Áke_li°íî
);

622 
	`evít_add
(&
˛o£_li°íî_evít
, &
⁄e_£c⁄d
);

623 
˛o£_li°íî_evít_added
 = 1;

625 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

627 
	`â_öt_›
(
ã°_ok
, ==, 1);

629 
íd
:

630 i‡(
Áke_li°íî
 >= 0)

631 
	`evutû_˛o£sockë
(
Áke_li°íî
);

633 i‡(
bev
)

634 
	`buf„ªvít_‰ì
(
bev
);

636 i‡(
˛o£_li°íî_evít_added
)

637 
	`evít_dñ
(&
˛o£_li°íî_evít
);

638 
	}
}

640 
	stimeout_cb_ªsu…
 {

641 
timevÆ
 
	mªad_timeout_©
;

642 
timevÆ
 
	mwrôe_timeout_©
;

643 
timevÆ
 
	mœ°_wrŸe_©
;

644 
	mn_ªad_timeouts
;

645 
	mn_wrôe_timeouts
;

646 
	mtŸÆ_ˇŒs
;

650 
	$bev_timeout_wrôe_cb
(
buf„ªvít
 *
bev
, *
¨g
)

652 
timeout_cb_ªsu…
 *
ªs
 = 
¨g
;

653 
	`evutû_gëtimeofday
(&
ªs
->
œ°_wrŸe_©
, 
NULL
);

654 
	}
}

657 
	$bev_timeout_evít_cb
(
buf„ªvít
 *
bev
, 
wh©
, *
¨g
)

659 
timeout_cb_ªsu…
 *
ªs
 = 
¨g
;

660 ++
ªs
->
tŸÆ_ˇŒs
;

662 i‡((
wh©
 & (
BEV_EVENT_READING
|
BEV_EVENT_TIMEOUT
))

663 =(
BEV_EVENT_READING
|
BEV_EVENT_TIMEOUT
)) {

664 
	`evutû_gëtimeofday
(&
ªs
->
ªad_timeout_©
, 
NULL
);

665 ++
ªs
->
n_ªad_timeouts
;

667 i‡((
wh©
 & (
BEV_EVENT_WRITING
|
BEV_EVENT_TIMEOUT
))

668 =(
BEV_EVENT_WRITING
|
BEV_EVENT_TIMEOUT
)) {

669 
	`evutû_gëtimeofday
(&
ªs
->
wrôe_timeout_©
, 
NULL
);

670 ++
ªs
->
n_wrôe_timeouts
;

672 
	}
}

675 
	$ã°_buf„ªvít_timeouts
(*
¨g
)

678 
buf„ªvít
 *
bev1
 = 
NULL
, *
bev2
 = NULL;

679 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

680 
u£_∑ú
 = 0, 
u£_fûãr
 = 0;

681 
timevÆ
 
tv_w
, 
tv_r
, 
°¨ãd_©
;

682 
timeout_cb_ªsu…
 
ªs1
, 
ªs2
;

683 
buf
[1024];

685 
	`mem£t
(&
ªs1
, 0, (res1));

686 
	`mem£t
(&
ªs2
, 0, (res2));

688 i‡(
	`°r°r
((*)
d©a
->
£tup_d©a
, "pair"))

689 
u£_∑ú
 = 1;

690 i‡(
	`°r°r
((*)
d©a
->
£tup_d©a
, "filter"))

691 
u£_fûãr
 = 1;

693 i‡(
u£_∑ú
) {

694 
buf„ªvít
 *
p
[2];

695 
	`â_öt_›
(0, ==, 
	`buf„ªvít_∑ú_√w
(
d©a
->
ba£
, 0, 
p
));

696 
bev1
 = 
p
[0];

697 
bev2
 = 
p
[1];

699 
bev1
 = 
	`buf„ªvít_sockë_√w
(
d©a
->
ba£
, d©a->
∑ú
[0], 0);

700 
bev2
 = 
	`buf„ªvít_sockë_√w
(
d©a
->
ba£
, d©a->
∑ú
[1], 0);

703 
	`â_as£π
(
bev1
);

704 
	`â_as£π
(
bev2
);

706 i‡(
u£_fûãr
) {

707 
buf„ªvít
 *
bevf1
, *
bevf2
;

708 
bevf1
 = 
	`buf„ªvít_fûãr_√w
(
bev1
, 
NULL
, NULL,

709 
BEV_OPT_CLOSE_ON_FREE
, 
NULL
, NULL);

710 
bevf2
 = 
	`buf„ªvít_fûãr_√w
(
bev2
, 
NULL
, NULL,

711 
BEV_OPT_CLOSE_ON_FREE
, 
NULL
, NULL);

712 
	`â_as£π
(
bevf1
);

713 
	`â_as£π
(
bevf2
);

714 
bev1
 = 
bevf1
;

715 
bev2
 = 
bevf2
;

719 
	`buf„ªvít_dißbÀ
(
bev2
, 
EV_READ
);

722 
	`evutû_gëtimeofday
(&
°¨ãd_©
, 
NULL
);

723 
tv_w
.
tv_£c
 = 
tv_r
.tv_sec = 0;

724 
tv_w
.
tv_u£c
 = 100*1000;

725 
tv_r
.
tv_u£c
 = 150*1000;

726 
	`buf„ªvít_£tcb
(
bev1
, 
NULL
, 
bev_timeout_wrôe_cb
,

727 
bev_timeout_evít_cb
, &
ªs1
);

728 
	`buf„ªvít_£tw©îm¨k
(
bev1
, 
EV_WRITE
, 1024*1024+10, 0);

729 
	`buf„ªvít_£t_timeouts
(
bev1
, &
tv_r
, &
tv_w
);

730 i‡(
u£_∑ú
) {

733 
	`buf„ªvít_wrôe
(
bev1
, "ABCDEFG", 7);

738 
evbuf„r
 *
ouçut
 = 
	`buf„ªvít_gë_ouçut
(
bev1
);

739 
i
;

740 
	`mem£t
(
buf
, 0xbb, (buf));

741 
i
=0;i<1024;++i) {

742 
	`evbuf„r_add_ª„ªn˚
(
ouçut
, 
buf
, (buf),

743 
NULL
, NULL);

746 
	`buf„ªvít_íabÀ
(
bev1
, 
EV_READ
|
EV_WRITE
);

749 
	`buf„ªvít_£tcb
(
bev2
, 
NULL
, 
bev_timeout_wrôe_cb
,

750 
bev_timeout_evít_cb
, &
ªs2
);

751 
tv_w
.
tv_£c
 = 
tv_r
.tv_sec = 0;

752 
tv_w
.
tv_u£c
 = 200*1000;

753 
tv_r
.
tv_u£c
 = 100*1000;

754 
	`buf„ªvít_£t_timeouts
(
bev2
, &
tv_r
, &
tv_w
);

755 
	`buf„ªvít_íabÀ
(
bev2
, 
EV_WRITE
);

757 
tv_r
.
tv_£c
 = 1;

758 
tv_r
.
tv_u£c
 = 0;

760 
	`evít_ba£_lo›exô
(
d©a
->
ba£
, &
tv_r
);

761 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

767 
	`â_w™t
(
ªs1
.
n_ªad_timeouts
);

768 
	`â_w™t
(
ªs1
.
n_wrôe_timeouts
);

769 
	`â_w™t
(
ªs1
.
n_ªad_timeouts
 == 1);

770 
	`â_w™t
(
ªs1
.
n_wrôe_timeouts
 == 1);

772 
	`ã°_timevÆ_diff_eq
(&
°¨ãd_©
, &
ªs1
.
ªad_timeout_©
, 150);

773 
	`ã°_timevÆ_diff_eq
(&
°¨ãd_©
, &
ªs1
.
wrôe_timeout_©
, 100);

775 
íd
:

776 i‡(
bev1
)

777 
	`buf„ªvít_‰ì
(
bev1
);

778 i‡(
bev2
)

779 
	`buf„ªvít_‰ì
(
bev2
);

780 
	}
}

782 
ã°ˇ£_t
 
	gbuf„ªvít_ã°ˇ£s
[] = {

784 
LEGACY
(
buf„ªvít
, 
TT_ISOLATED
),

785 
LEGACY
(
buf„ªvít_∑ú
, 
TT_ISOLATED
),

786 
LEGACY
(
buf„ªvít_w©îm¨ks
, 
TT_ISOLATED
),

787 
LEGACY
(
buf„ªvít_∑ú_w©îm¨ks
, 
TT_ISOLATED
),

788 
LEGACY
(
buf„ªvít_fûãrs
, 
TT_ISOLATED
),

789 
LEGACY
(
buf„ªvít_∑ú_fûãrs
, 
TT_ISOLATED
),

790 { "buf„ªvít_c⁄√˘", 
ã°_buf„ªvít_c⁄√˘
, 
TT_FORK
|
TT_NEED_BASE
,

791 &
basic_£tup
, (*)"" },

792 { "buf„ªvít_c⁄√˘_de„r", 
ã°_buf„ªvít_c⁄√˘
,

793 
TT_FORK
|
TT_NEED_BASE
, &
basic_£tup
, (*)"defer" },

794 { "buf„ªvít_c⁄√˘_lock", 
ã°_buf„ªvít_c⁄√˘
,

795 
TT_FORK
|
TT_NEED_BASE
|
TT_NEED_THREADS
, &
basic_£tup
, (*)"lock" },

796 { "buf„ªvít_c⁄√˘_lock_de„r", 
ã°_buf„ªvít_c⁄√˘
,

797 
TT_FORK
|
TT_NEED_BASE
|
TT_NEED_THREADS
, &
basic_£tup
,

799 { "buf„ªvít_c⁄√˘_u∆ocked_cbs", 
ã°_buf„ªvít_c⁄√˘
,

800 
TT_FORK
|
TT_NEED_BASE
|
TT_NEED_THREADS
, &
basic_£tup
,

802 { "buf„ªvít_c⁄√˘_Áû", 
ã°_buf„ªvít_c⁄√˘_Áû
,

803 
TT_FORK
|
TT_NEED_BASE
, &
basic_£tup
, 
NULL
 },

804 { "buf„ªvít_timeout", 
ã°_buf„ªvít_timeouts
,

805 
TT_FORK
|
TT_NEED_BASE
|
TT_NEED_SOCKETPAIR
, &
basic_£tup
, (*)"" },

806 { "buf„ªvít_timeout_∑ú", 
ã°_buf„ªvít_timeouts
,

807 
TT_FORK
|
TT_NEED_BASE
, &
basic_£tup
, (*)"pair" },

808 { "buf„ªvít_timeout_fûãr", 
ã°_buf„ªvít_timeouts
,

809 
TT_FORK
|
TT_NEED_BASE
, &
basic_£tup
, (*)"filter" },

810 { "buf„ªvít_timeout_fûãr_∑ú", 
ã°_buf„ªvít_timeouts
,

811 
TT_FORK
|
TT_NEED_BASE
, &
basic_£tup
, (*)"filterÖair" },

812 #ifde‡
_EVENT_HAVE_LIBZ


813 
LEGACY
(
buf„ªvít_zlib
, 
TT_ISOLATED
),

815 { "buf„ªvít_zlib", 
NULL
, 
TT_SKIP
, NULL, NULL },

818 
END_OF_TESTCASES
,

821 
ã°ˇ£_t
 
	gbuf„ªvít_io˝_ã°ˇ£s
[] = {

823 
LEGACY
(
buf„ªvít
, 
TT_ISOLATED
|
TT_ENABLE_IOCP
),

824 
LEGACY
(
buf„ªvít_w©îm¨ks
, 
TT_ISOLATED
|
TT_ENABLE_IOCP
),

825 
LEGACY
(
buf„ªvít_fûãrs
, 
TT_ISOLATED
|
TT_ENABLE_IOCP
),

826 { "buf„ªvít_c⁄√˘", 
ã°_buf„ªvít_c⁄√˘
,

827 
TT_FORK
|
TT_NEED_BASE
|
TT_ENABLE_IOCP
, &
basic_£tup
, (*)"" },

828 { "buf„ªvít_c⁄√˘_de„r", 
ã°_buf„ªvít_c⁄√˘
,

829 
TT_FORK
|
TT_NEED_BASE
|
TT_ENABLE_IOCP
, &
basic_£tup
, (*)"defer" },

830 { "buf„ªvít_c⁄√˘_lock", 
ã°_buf„ªvít_c⁄√˘
,

831 
TT_FORK
|
TT_NEED_BASE
|
TT_NEED_THREADS
|
TT_ENABLE_IOCP
, &
basic_£tup
,

833 { "buf„ªvít_c⁄√˘_lock_de„r", 
ã°_buf„ªvít_c⁄√˘
,

834 
TT_FORK
|
TT_NEED_BASE
|
TT_NEED_THREADS
|
TT_ENABLE_IOCP
, &
basic_£tup
,

836 { "buf„ªvít_c⁄√˘_Áû", 
ã°_buf„ªvít_c⁄√˘_Áû
,

837 
TT_FORK
|
TT_NEED_BASE
|
TT_ENABLE_IOCP
, &
basic_£tup
, 
NULL
 },

838 { "buf„ªvít_c⁄√˘_n⁄blockög", 
ã°_buf„ªvít_c⁄√˘
,

839 
TT_FORK
|
TT_NEED_BASE
|
TT_ENABLE_IOCP
, &
basic_£tup
,

842 
END_OF_TESTCASES
,

	@test/regress_dns.c

28 #ifde‡
WIN32


29 
	~<wösock2.h
>

30 
	~<wödows.h
>

31 
	~<ws2t˝ù.h
>

34 
	~"evít2/evít-c⁄fig.h
"

36 
	~<sys/ty≥s.h
>

37 
	~<sys/°©.h
>

38 #ifde‡
_EVENT_HAVE_SYS_TIME_H


39 
	~<sys/time.h
>

41 
	~<sys/queue.h
>

42 #i‚de‡
WIN32


43 
	~<sys/sockë.h
>

44 
	~<sig«l.h
>

45 
	~<√töë/ö.h
>

46 
	~<¨∑/öë.h
>

47 
	~<uni°d.h
>

49 #ifde‡
_EVENT_HAVE_NETINET_IN6_H


50 
	~<√töë/ö6.h
>

52 #ifde‡
HAVE_NETDB_H


53 
	~<√tdb.h
>

55 
	~<f˙é.h
>

56 
	~<°dlib.h
>

57 
	~<°dio.h
>

58 
	~<°rög.h
>

59 
	~<î∫o.h
>

61 
	~"evít2/dns.h
"

62 
	~"evít2/dns_com∑t.h
"

63 
	~"evít2/dns_°ru˘.h
"

64 
	~"evít2/evít.h
"

65 
	~"evít2/evít_com∑t.h
"

66 
	~"evít2/evít_°ru˘.h
"

67 
	~"evít2/utû.h
"

68 
	~"evít2/li°íî.h
"

69 
	~"evít2/buf„ªvít.h
"

70 
	~"log-öã∫Æ.h
"

71 
	~"ªgªss.h
"

72 
	~"ªgªss_ã°utûs.h
"

74 
	~"../utû-öã∫Æ.h
"

76 
	gdns_ok
 = 0;

77 
	gdns_gŸ_ˇn˚l
 = 0;

78 
	gdns_îr
 = 0;

82 
	$dns_gëho°by«me_cb
(
ªsu…
, 
ty≥
, 
cou¡
, 
âl
,

83 *
addªs£s
, *
¨g
)

85 
dns_ok
 = 
dns_îr
 = 0;

87 i‡(
ªsu…
 =
DNS_ERR_TIMEOUT
) {

88 
	`¥ötf
("[Timed out] ");

89 
dns_îr
 = 
ªsu…
;

90 
out
;

93 i‡(
ªsu…
 !
DNS_ERR_NONE
) {

94 
	`¥ötf
("[Eº‹ codê%d] ", 
ªsu…
);

95 
out
;

98 
	`TT_BLATHER
(("ty≥: %d, cou¡: %d,Åé: %d: ", 
ty≥
, 
cou¡
, 
âl
));

100 
ty≥
) {

101 
DNS_IPv6_AAAA
: {

102 #i‡
	`deföed
(
_EVENT_HAVE_STRUCT_IN6_ADDR
Ë&& deföed(
_EVENT_HAVE_INET_NTOP
Ë&& deföed(
INET6_ADDRSTRLEN
)

103 
ö6_addr
 *
ö6_addrs
 = 
addªs£s
;

104 
buf
[
INET6_ADDRSTRLEN
+1];

105 
i
;

107 i‡(
âl
 < 0)

108 
out
;

109 
i
 = 0; i < 
cou¡
; ++i) {

110 c⁄° *
b
 = 
	`evutû_öë_¡›
(
AF_INET6
, &
ö6_addrs
[
i
], 
buf
,(buf));

111 i‡(
b
)

112 
	`TT_BLATHER
(("%†", 
b
));

114 
	`TT_BLATHER
(("%†", 
	`°ªº‹
(
î∫o
)));

119 
DNS_IPv4_A
: {

120 
ö_addr
 *
ö_addrs
 = 
addªs£s
;

121 
i
;

123 i‡(
âl
 < 0)

124 
out
;

125 
i
 = 0; i < 
cou¡
; ++i)

126 
	`TT_BLATHER
(("%†", 
	`öë_¡ﬂ
(
ö_addrs
[
i
])));

129 
DNS_PTR
:

131 i‡(
cou¡
 != 1)

132 
out
;

134 
	`TT_BLATHER
(("%†", *(**)
addªs£s
));

137 
out
;

140 
dns_ok
 = 
ty≥
;

142 
out
:

143 i‡(
¨g
 =
NULL
)

144 
	`evít_lo›exô
(
NULL
);

146 
	`evít_ba£_lo›exô
((
evít_ba£
 *)
¨g
, 
NULL
);

147 
	}
}

150 
	$dns_gëho°by«me
()

152 
dns_ok
 = 0;

153 
	`evdns_ªsﬁve_ùv4
("www.m⁄key.‹g", 0, 
dns_gëho°by«me_cb
, 
NULL
);

154 
	`evít_di•©ch
();

156 
	`â_öt_›
(
dns_ok
, ==, 
DNS_IPv4_A
);

157 
ã°_ok
 = 
dns_ok
;

158 
íd
:

160 
	}
}

163 
	$dns_gëho°by«me6
()

165 
dns_ok
 = 0;

166 
	`evdns_ªsﬁve_ùv6
("www.õtf.‹g", 0, 
dns_gëho°by«me_cb
, 
NULL
);

167 
	`evít_di•©ch
();

169 i‡(!
dns_ok
 && 
dns_îr
 =
DNS_ERR_TIMEOUT
) {

170 
	`â_skù
();

173 
	`â_öt_›
(
dns_ok
, ==, 
DNS_IPv6_AAAA
);

174 
ã°_ok
 = 1;

175 
íd
:

177 
	}
}

180 
	$dns_gëho°byaddr
()

182 
ö_addr
 
ö
;

183 
ö
.
s_addr
 = 
	`ht⁄l
(0x7f000001ul);

184 
dns_ok
 = 0;

185 
	`evdns_ªsﬁve_ªvî£
(&
ö
, 0, 
dns_gëho°by«me_cb
, 
NULL
);

186 
	`evít_di•©ch
();

188 
	`â_öt_›
(
dns_ok
, ==, 
DNS_PTR
);

189 
ã°_ok
 = 
dns_ok
;

190 
íd
:

192 
	}
}

195 
	$dns_ªsﬁve_ªvî£
(*
±r
)

197 
ö_addr
 
ö
;

198 
evít_ba£
 *
ba£
 = 
	`evít_ba£_√w
();

199 
evdns_ba£
 *
dns
 = 
	`evdns_ba£_√w
(
ba£
, 1 );

200 
evdns_ªque°
 *
ªq
 = 
NULL
;

202 
	`â_as£π
(
ba£
);

203 
	`â_as£π
(
dns
);

204 
ö
.
s_addr
 = 
	`ht⁄l
(0x7f000001ul);

205 
dns_ok
 = 0;

207 
ªq
 = 
	`evdns_ba£_ªsﬁve_ªvî£
(

208 
dns
, &
ö
, 0, 
dns_gëho°by«me_cb
, 
ba£
);

209 
	`â_as£π
(
ªq
);

211 
	`evít_ba£_di•©ch
(
ba£
);

213 
	`â_öt_›
(
dns_ok
, ==, 
DNS_PTR
);

215 
íd
:

216 i‡(
dns
)

217 
	`evdns_ba£_‰ì
(
dns
, 0);

218 i‡(
ba£
)

219 
	`evít_ba£_‰ì
(
ba£
);

220 
	}
}

222 
	gn_£rvî_ª•⁄£s
 = 0;

225 
	$dns_£rvî_ªque°_cb
(
evdns_£rvî_ªque°
 *
ªq
, *
d©a
)

227 
i
, 
r
;

228 c⁄° 
TEST_ARPA
[] = "11.11.168.192.in-addr.arpa";

229 c⁄° 
TEST_IN6
[] =

233 
i
 = 0; i < 
ªq
->
nque°i⁄s
; ++i) {

234 c⁄° 
qty≥
 = 
ªq
->
que°i⁄s
[
i
]->
ty≥
;

235 c⁄° 
q˛ass
 = 
ªq
->
que°i⁄s
[
i
]->
dns_que°i⁄_˛ass
;

236 c⁄° *
q«me
 = 
ªq
->
que°i⁄s
[
i
]->
«me
;

238 
ö_addr
 
™s
;

239 
™s
.
s_addr
 = 
	`ht⁄l
(0xc0a80b0bUL);

240 i‡(
qty≥
 =
EVDNS_TYPE_A
 &&

241 
q˛ass
 =
EVDNS_CLASS_INET
 &&

242 !
	`evutû_ascii_°rˇ£cmp
(
q«me
, "zz.example.com")) {

243 
r
 = 
	`evdns_£rvî_ªque°_add_a_ª∂y
(
ªq
, 
q«me
,

244 1, &
™s
.
s_addr
, 12345);

245 i‡(
r
<0)

246 
dns_ok
 = 0;

247 } i‡(
qty≥
 =
EVDNS_TYPE_AAAA
 &&

248 
q˛ass
 =
EVDNS_CLASS_INET
 &&

249 !
	`evutû_ascii_°rˇ£cmp
(
q«me
, "zz.example.com")) {

250 
addr6
[17] = "abcdefghijklmnop";

251 
r
 = 
	`evdns_£rvî_ªque°_add_ØØ_ª∂y
(
ªq
,

252 
q«me
, 1, 
addr6
, 123);

253 i‡(
r
<0)

254 
dns_ok
 = 0;

255 } i‡(
qty≥
 =
EVDNS_TYPE_PTR
 &&

256 
q˛ass
 =
EVDNS_CLASS_INET
 &&

257 !
	`evutû_ascii_°rˇ£cmp
(
q«me
, 
TEST_ARPA
)) {

258 
r
 = 
	`evdns_£rvî_ªque°_add_±r_ª∂y
(
ªq
, 
NULL
,

259 
q«me
, "ZZ.EXAMPLE.COM", 54321);

260 i‡(
r
<0)

261 
dns_ok
 = 0;

262 } i‡(
qty≥
 =
EVDNS_TYPE_PTR
 &&

263 
q˛ass
 =
EVDNS_CLASS_INET
 &&

264 !
	`evutû_ascii_°rˇ£cmp
(
q«me
, 
TEST_IN6
)){

265 
r
 = 
	`evdns_£rvî_ªque°_add_±r_ª∂y
(
ªq
, 
NULL
,

266 
q«me
,

268 i‡(
r
<0)

269 
dns_ok
 = 0;

270 } i‡(
qty≥
 =
EVDNS_TYPE_A
 &&

271 
q˛ass
 =
EVDNS_CLASS_INET
 &&

272 !
	`evutû_ascii_°rˇ£cmp
(
q«me
, "drop.example.com")) {

273 i‡(
	`evdns_£rvî_ªque°_dr›
(
ªq
)<0)

274 
dns_ok
 = 0;

277 
	`¥ötf
("Unexpected question %d %d \"%s\" ",

278 
qty≥
, 
q˛ass
, 
q«me
);

279 
dns_ok
 = 0;

282 
r
 = 
	`evdns_£rvî_ªque°_ª•⁄d
(
ªq
, 0);

283 i‡(
r
<0) {

284 
	`¥ötf
("Couldn't sendÑeply. ");

285 
dns_ok
 = 0;

287 
	}
}

290 
	$dns_£rvî_gëho°by«me_cb
(
ªsu…
, 
ty≥
, 
cou¡
, 
âl
,

291 *
addªs£s
, *
¨g
)

293 i‡(
ªsu…
 =
DNS_ERR_CANCEL
) {

294 i‡(
¨g
 != (*)(*)90909) {

295 
	`¥ötf
("Unexpected cancelation");

296 
dns_ok
 = 0;

298 
dns_gŸ_ˇn˚l
 = 1;

299 
out
;

301 i‡(
ªsu…
 !
DNS_ERR_NONE
) {

302 
	`¥ötf
("U√x≥˘edÑesu… %d. ", 
ªsu…
);

303 
dns_ok
 = 0;

304 
out
;

306 i‡(
cou¡
 != 1) {

307 
	`¥ötf
("U√x≥˘edánswî cou¡ %d. ", 
cou¡
);

308 
dns_ok
 = 0;

309 
out
;

311 
ty≥
) {

312 
DNS_IPv4_A
: {

313 
ö_addr
 *
ö_addrs
 = 
addªs£s
;

314 i‡(
ö_addrs
[0].
s_addr
 !
	`ht⁄l
(0xc0a80b0bULË|| 
âl
 != 12345) {

315 
	`¥ötf
("Bad IPv4Ñesponse \"%s\" %d. ",

316 
	`öë_¡ﬂ
(
ö_addrs
[0]), 
âl
);

317 
dns_ok
 = 0;

318 
out
;

322 
DNS_IPv6_AAAA
: {

323 #i‡
	`deföed
 (
_EVENT_HAVE_STRUCT_IN6_ADDR
Ë&& deföed(
_EVENT_HAVE_INET_NTOP
Ë&& deföed(
INET6_ADDRSTRLEN
)

324 
ö6_addr
 *
ö6_addrs
 = 
addªs£s
;

325 
buf
[
INET6_ADDRSTRLEN
+1];

326 i‡(
	`memcmp
(&
ö6_addrs
[0].
s6_addr
, "abcdefghijklmnop", 16)

327 || 
âl
 != 123) {

328 c⁄° *
b
 = 
	`evutû_öë_¡›
(
AF_INET6
, &
ö6_addrs
[0],
buf
,(buf));

329 
	`¥ötf
("Bad IPv6Ñe•⁄£ \"%s\" %d. ", 
b
, 
âl
);

330 
dns_ok
 = 0;

331 
out
;

336 
DNS_PTR
: {

337 **
addrs
 = 
addªs£s
;

338 i‡(
¨g
 != (*)6) {

339 i‡(
	`°rcmp
(
addrs
[0], "ZZ.EXAMPLE.COM") ||

340 
âl
 != 54321) {

341 
	`¥ötf
("Bad PTRÑesponse \"%s\" %d. ",

342 
addrs
[0], 
âl
);

343 
dns_ok
 = 0;

344 
out
;

347 i‡(
	`°rcmp
(
addrs
[0], "ZZ-INET6.EXAMPLE.COM") ||

348 
âl
 != 54322) {

349 
	`¥ötf
("Bad ipv6 PTRÑesponse \"%s\" %d. ",

350 
addrs
[0], 
âl
);

351 
dns_ok
 = 0;

352 
out
;

358 
	`¥ötf
("BadÑe•⁄£Åy≥ %d. ", 
ty≥
);

359 
dns_ok
 = 0;

361 
out
:

362 i‡(++
n_£rvî_ª•⁄£s
 == 3) {

363 
	`evít_lo›exô
(
NULL
);

365 
	}
}

368 
	$dns_£rvî
()

370 
evutû_sockë_t
 
sock
=-1;

371 
sockaddr_ö
 
my_addr
;

372 
sockaddr_°‹age
 
ss
;

373 
ev_sockÀn_t
 
¶í
;

374 
evdns_£rvî_p‹t
 *
p‹t
=
NULL
;

375 
ö_addr
 
ªsﬁve_addr
;

376 
ö6_addr
 
ªsﬁve_addr6
;

377 
evdns_ba£
 *
ba£
=
NULL
;

378 
evdns_ªque°
 *
ªq
=
NULL
;

380 
dns_ok
 = 1;

382 
ba£
 = 
	`evdns_ba£_√w
(
NULL
, 0);

385 
sock
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

386 i‡(
sock
<0) {

387 
	`â_ab‹t_≥º‹
("socket");

390 
	`evutû_make_sockë_n⁄blockög
(
sock
);

392 
	`mem£t
(&
my_addr
, 0, (my_addr));

393 
my_addr
.
sö_Ámûy
 = 
AF_INET
;

394 
my_addr
.
sö_p‹t
 = 0;

395 
my_addr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(0x7f000001UL);

396 i‡(
	`böd
(
sock
, (
sockaddr
*)&
my_addr
, (my_addr)) < 0) {

397 
	`â_ab‹t_≥º‹
("bind");

399 
¶í
 = (
ss
);

400 i‡(
	`gësock«me
(
sock
, (
sockaddr
*)&
ss
, &
¶í
) < 0) {

401 
	`â_ab‹t_≥º‹
("getsockname");

404 
p‹t
 = 
	`evdns_add_£rvî_p‹t
(
sock
, 0, 
dns_£rvî_ªque°_cb
, 
NULL
);

408 
	`evdns_ba£_«me£rvî_sockaddr_add
(
ba£
, (
sockaddr
*)&
ss
, 
¶í
, 0);

409 
	`â_öt_›
(
	`evdns_ba£_cou¡_«me£rvîs
(
ba£
), ==, 1);

412 
	`evdns_ba£_ªsﬁve_ùv4
(
ba£
, "zz.exam∂e.com", 
DNS_QUERY_NO_SEARCH
,

413 
dns_£rvî_gëho°by«me_cb
, 
NULL
);

414 
	`evdns_ba£_ªsﬁve_ùv6
(
ba£
, "zz.exam∂e.com", 
DNS_QUERY_NO_SEARCH
,

415 
dns_£rvî_gëho°by«me_cb
, 
NULL
);

416 
ªsﬁve_addr
.
s_addr
 = 
	`ht⁄l
(0xc0a80b0bUL);

417 
	`evdns_ba£_ªsﬁve_ªvî£
(
ba£
, &
ªsﬁve_addr
, 0,

418 
dns_£rvî_gëho°by«me_cb
, 
NULL
);

419 
	`mem˝y
(
ªsﬁve_addr6
.
s6_addr
,

422 
	`evdns_ba£_ªsﬁve_ªvî£_ùv6
(
ba£
, &
ªsﬁve_addr6
, 0,

423 
dns_£rvî_gëho°by«me_cb
, (*)6);

425 
ªq
 = 
	`evdns_ba£_ªsﬁve_ùv4
(
ba£
,

426 "dr›.exam∂e.com", 
DNS_QUERY_NO_SEARCH
,

427 
dns_£rvî_gëho°by«me_cb
, (*)(*)90909);

429 
	`evdns_ˇn˚l_ªque°
(
ba£
, 
ªq
);

431 
	`evít_di•©ch
();

433 
	`â_as£π
(
dns_gŸ_ˇn˚l
);

434 
ã°_ok
 = 
dns_ok
;

436 
íd
:

437 i‡(
p‹t
)

438 
	`evdns_˛o£_£rvî_p‹t
(
p‹t
);

439 i‡(
sock
 >= 0)

440 
	`evutû_˛o£sockë
(
sock
);

441 i‡(
ba£
)

442 
	`evdns_ba£_‰ì
(
ba£
, 0);

443 
	}
}

445 
	gn_ª∂õs_À·
;

446 
evít_ba£
 *
	gexô_ba£
;

448 
	sgíîic_dns_ˇŒback_ªsu…
 {

449 
	mªsu…
;

450 
	mty≥
;

451 
	mcou¡
;

452 
	mâl
;

453 
size_t
 
	maddrs_Àn
;

454 *
	maddrs
;

455 
	maddrs_buf
[256];

459 
	$gíîic_dns_ˇŒback
(
ªsu…
, 
ty≥
, 
cou¡
, 
âl
, *
addªs£s
,

460 *
¨g
)

462 
size_t
 
Àn
;

463 
gíîic_dns_ˇŒback_ªsu…
 *
ªs
 = 
¨g
;

464 
ªs
->
ªsu…
 =Ñesult;

465 
ªs
->
ty≥
 =Åype;

466 
ªs
->
cou¡
 = count;

467 
ªs
->
âl
 =Åtl;

469 i‡(
ty≥
 =
DNS_IPv4_A
)

470 
Àn
 = 
cou¡
 * 4;

471 i‡(
ty≥
 =
DNS_IPv6_AAAA
)

472 
Àn
 = 
cou¡
 * 16;

473 i‡(
ty≥
 =
DNS_PTR
)

474 
Àn
 = 
	`°æí
(
addªs£s
)+1;

476 
ªs
->
addrs_Àn
 = 
Àn
 = 0;

477 
ªs
->
addrs
 = 
NULL
;

479 i‡(
Àn
) {

480 
ªs
->
addrs_Àn
 = 
Àn
;

481 i‡(
Àn
 > 256)

482 
Àn
 = 256;

483 
	`mem˝y
(
ªs
->
addrs_buf
, 
addªs£s
, 
Àn
);

484 
ªs
->
addrs
 =Ñes->
addrs_buf
;

487 i‡(--
n_ª∂õs_À·
 == 0)

488 
	`evít_ba£_lo›exô
(
exô_ba£
, 
NULL
);

489 
	}
}

491 
ªgªss_dns_£rvî_èbÀ
 
	g£¨ch_èbÀ
[] = {

505 { 
NULL
, NULL, NULL, 0 }

509 
	$dns_£¨ch_ã°
(*
¨g
)

511 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

512 
evít_ba£
 *
ba£
 = 
d©a
->base;

513 
evdns_ba£
 *
dns
 = 
NULL
;

514 
ev_uöt16_t
 
p‹äum
 = 0;

515 
buf
[64];

517 
gíîic_dns_ˇŒback_ªsu…
 
r
[8];

519 
	`â_as£π
(
	`ªgªss_dns£rvî
(
ba£
, &
p‹äum
, 
£¨ch_èbÀ
));

520 
	`evutû_¢¥ötf
(
buf
, (buf), "127.0.0.1:%d", ()
p‹äum
);

522 
dns
 = 
	`evdns_ba£_√w
(
ba£
, 0);

523 
	`â_as£π
(!
	`evdns_ba£_«me£rvî_ù_add
(
dns
, 
buf
));

525 
	`evdns_ba£_£¨ch_add
(
dns
, "a.example.com");

526 
	`evdns_ba£_£¨ch_add
(
dns
, "b.example.com");

527 
	`evdns_ba£_£¨ch_add
(
dns
, "c.example.com");

529 
n_ª∂õs_À·
 = (
r
)/(r[0]);

530 
exô_ba£
 = 
ba£
;

532 
	`evdns_ba£_ªsﬁve_ùv4
(
dns
, "ho°", 0, 
gíîic_dns_ˇŒback
, &
r
[0]);

533 
	`evdns_ba£_ªsﬁve_ùv4
(
dns
, "ho°2", 0, 
gíîic_dns_ˇŒback
, &
r
[1]);

534 
	`evdns_ba£_ªsﬁve_ùv4
(
dns
, "ho°", 
DNS_NO_SEARCH
, 
gíîic_dns_ˇŒback
, &
r
[2]);

535 
	`evdns_ba£_ªsﬁve_ùv4
(
dns
, "ho°2", 
DNS_NO_SEARCH
, 
gíîic_dns_ˇŒback
, &
r
[3]);

536 
	`evdns_ba£_ªsﬁve_ùv4
(
dns
, "ho°3", 0, 
gíîic_dns_ˇŒback
, &
r
[4]);

537 
	`evdns_ba£_ªsﬁve_ùv4
(
dns
, "ho°n.a.exam∂e.com", 
DNS_NO_SEARCH
, 
gíîic_dns_ˇŒback
, &
r
[5]);

538 
	`evdns_ba£_ªsﬁve_ùv4
(
dns
, "ho°n.b.exam∂e.com", 
DNS_NO_SEARCH
, 
gíîic_dns_ˇŒback
, &
r
[6]);

539 
	`evdns_ba£_ªsﬁve_ùv4
(
dns
, "ho°n.c.exam∂e.com", 
DNS_NO_SEARCH
, 
gíîic_dns_ˇŒback
, &
r
[7]);

541 
	`evít_ba£_di•©ch
(
ba£
);

543 
	`â_öt_›
(
r
[0].
ty≥
, ==, 
DNS_IPv4_A
);

544 
	`â_öt_›
(
r
[0].
cou¡
, ==, 1);

545 
	`â_öt_›
(((
ev_uöt32_t
*)
r
[0].
addrs
)[0], ==, 
	`ht⁄l
(0x0b16212c));

546 
	`â_öt_›
(
r
[1].
ty≥
, ==, 
DNS_IPv4_A
);

547 
	`â_öt_›
(
r
[1].
cou¡
, ==, 1);

548 
	`â_öt_›
(((
ev_uöt32_t
*)
r
[1].
addrs
)[0], ==, 
	`ht⁄l
(0xc8640064));

549 
	`â_öt_›
(
r
[2].
ªsu…
, ==, 
DNS_ERR_NOTEXIST
);

550 
	`â_öt_›
(
r
[3].
ªsu…
, ==, 
DNS_ERR_NOTEXIST
);

551 
	`â_öt_›
(
r
[4].
ªsu…
, ==, 
DNS_ERR_NOTEXIST
);

552 
	`â_öt_›
(
r
[5].
ªsu…
, ==, 
DNS_ERR_NODATA
);

553 
	`â_öt_›
(
r
[5].
âl
, ==, 42);

554 
	`â_öt_›
(
r
[6].
ªsu…
, ==, 
DNS_ERR_NOTEXIST
);

555 
	`â_öt_›
(
r
[6].
âl
, ==, 42);

556 
	`â_öt_›
(
r
[7].
ªsu…
, ==, 
DNS_ERR_NODATA
);

557 
	`â_öt_›
(
r
[7].
âl
, ==, 0);

559 
íd
:

560 i‡(
dns
)

561 
	`evdns_ba£_‰ì
(
dns
, 0);

563 
	`ªgªss_˛ón_dns£rvî
();

564 
	}
}

566 
	gªque°_cou¡
 = 0;

567 
evdns_ªque°
 *
	gcuºít_ªq
 = 
NULL
;

570 
	$£¨ch_ˇn˚l_£rvî_cb
(
evdns_£rvî_ªque°
 *
ªq
, *
d©a
)

572 c⁄° *
que°i⁄
;

574 i‡(
ªq
->
nque°i⁄s
 != 1)

575 
	`TT_DIE
(("Only handling one questionátáÅime; got %d",

576 
ªq
->
nque°i⁄s
));

578 
que°i⁄
 = 
ªq
->
que°i⁄s
[0]->
«me
;

580 
	`TT_BLATHER
(("gŸ que°i⁄, %s", 
que°i⁄
));

582 
	`â_as£π
(
ªque°_cou¡
 > 0);

583 
	`â_as£π
(!
	`evdns_£rvî_ªque°_ª•⁄d
(
ªq
, 3));

585 i‡(!--
ªque°_cou¡
)

586 
	`evdns_ˇn˚l_ªque°
(
NULL
, 
cuºít_ªq
);

588 
íd
:

590 
	}
}

593 
	$dns_£¨ch_ˇn˚l_ã°
(*
¨g
)

595 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

596 
evít_ba£
 *
ba£
 = 
d©a
->base;

597 
evdns_ba£
 *
dns
 = 
NULL
;

598 
evdns_£rvî_p‹t
 *
p‹t
 = 
NULL
;

599 
ev_uöt16_t
 
p‹äum
 = 0;

600 
gíîic_dns_ˇŒback_ªsu…
 
r1
;

601 
buf
[64];

603 
p‹t
 = 
	`ªgªss_gë_dns£rvî
(
ba£
, &
p‹äum
, 
NULL
,

604 
£¨ch_ˇn˚l_£rvî_cb
, 
NULL
);

605 
	`â_as£π
(
p‹t
);

606 
	`evutû_¢¥ötf
(
buf
, (buf), "127.0.0.1:%d", ()
p‹äum
);

608 
dns
 = 
	`evdns_ba£_√w
(
ba£
, 0);

609 
	`â_as£π
(!
	`evdns_ba£_«me£rvî_ù_add
(
dns
, 
buf
));

611 
	`evdns_ba£_£¨ch_add
(
dns
, "a.example.com");

612 
	`evdns_ba£_£¨ch_add
(
dns
, "b.example.com");

613 
	`evdns_ba£_£¨ch_add
(
dns
, "c.example.com");

614 
	`evdns_ba£_£¨ch_add
(
dns
, "d.example.com");

616 
exô_ba£
 = 
ba£
;

617 
ªque°_cou¡
 = 3;

618 
n_ª∂õs_À·
 = 1;

620 
cuºít_ªq
 = 
	`evdns_ba£_ªsﬁve_ùv4
(
dns
, "host", 0,

621 
gíîic_dns_ˇŒback
, &
r1
);

622 
	`evít_ba£_di•©ch
(
ba£
);

624 
	`â_öt_›
(
r1
.
ªsu…
, ==, 
DNS_ERR_CANCEL
);

626 
íd
:

627 i‡(
p‹t
)

628 
	`evdns_˛o£_£rvî_p‹t
(
p‹t
);

629 i‡(
dns
)

630 
	`evdns_ba£_‰ì
(
dns
, 0);

631 
	}
}

634 
	$Áû_£rvî_cb
(
evdns_£rvî_ªque°
 *
ªq
, *
d©a
)

636 c⁄° *
que°i⁄
;

637 *
cou¡
 = 
d©a
;

638 
ö_addr
 
ö
;

641 i‡(*
cou¡
 > 0) {

642 --*
cou¡
;

643 
	`â_w™t
(! 
	`evdns_£rvî_ªque°_dr›
(
ªq
));

647 i‡(
ªq
->
nque°i⁄s
 != 1)

648 
	`TT_DIE
(("Only handling one questionátáÅime; got %d",

649 
ªq
->
nque°i⁄s
));

651 
que°i⁄
 = 
ªq
->
que°i⁄s
[0]->
«me
;

653 i‡(!
	`evutû_ascii_°rˇ£cmp
(
que°i⁄
, "google.com")) {

655 
	`evít_ba£_lo›exô
(
exô_ba£
, 
NULL
);

658 
	`evutû_öë_±⁄
(
AF_INET
, "16.32.64.128", &
ö
);

659 
	`evdns_£rvî_ªque°_add_a_ª∂y
(
ªq
, 
que°i⁄
, 1, &
ö
.
s_addr
,

661 
	`â_as£π
(! 
	`evdns_£rvî_ªque°_ª•⁄d
(
ªq
, 0))

663 
íd
:

664 
	`â_w™t
(! 
	`evdns_£rvî_ªque°_dr›
(
ªq
));

665 
	}
}

668 
	$dns_ªåy_ã°
(*
¨g
)

670 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

671 
evít_ba£
 *
ba£
 = 
d©a
->base;

672 
evdns_£rvî_p‹t
 *
p‹t
 = 
NULL
;

673 
evdns_ba£
 *
dns
 = 
NULL
;

674 
dr›_cou¡
 = 2;

675 
ev_uöt16_t
 
p‹äum
 = 0;

676 
buf
[64];

678 
gíîic_dns_ˇŒback_ªsu…
 
r1
;

680 
p‹t
 = 
	`ªgªss_gë_dns£rvî
(
ba£
, &
p‹äum
, 
NULL
,

681 
Áû_£rvî_cb
, &
dr›_cou¡
);

682 
	`â_as£π
(
p‹t
);

683 
	`evutû_¢¥ötf
(
buf
, (buf), "127.0.0.1:%d", ()
p‹äum
);

685 
dns
 = 
	`evdns_ba£_√w
(
ba£
, 0);

686 
	`â_as£π
(!
	`evdns_ba£_«me£rvî_ù_add
(
dns
, 
buf
));

687 
	`â_as£π
(! 
	`evdns_ba£_£t_›ti⁄
(
dns
, "timeout", "0.3"));

688 
	`â_as£π
(! 
	`evdns_ba£_£t_›ti⁄
(
dns
, "max-timeouts:", "10"));

689 
	`â_as£π
(! 
	`evdns_ba£_£t_›ti⁄
(
dns
, "initial-probe-timeout", "0.5"));

691 
	`evdns_ba£_ªsﬁve_ùv4
(
dns
, "host.example.com", 0,

692 
gíîic_dns_ˇŒback
, &
r1
);

694 
n_ª∂õs_À·
 = 1;

695 
exô_ba£
 = 
ba£
;

697 
	`evít_ba£_di•©ch
(
ba£
);

699 
	`â_öt_›
(
dr›_cou¡
, ==, 0);

701 
	`â_öt_›
(
r1
.
ty≥
, ==, 
DNS_IPv4_A
);

702 
	`â_öt_›
(
r1
.
cou¡
, ==, 1);

703 
	`â_öt_›
(((
ev_uöt32_t
*)
r1
.
addrs
)[0], ==, 
	`ht⁄l
(0x10204080));

707 
dr›_cou¡
 = 4;

708 
	`â_as£π
(! 
	`evdns_ba£_£t_›ti⁄
(
dns
, "max-timeouts:", "3"));

709 
	`â_as£π
(! 
	`evdns_ba£_£t_›ti⁄
(
dns
, "attempts:", "4"));

710 
	`mem£t
(&
r1
, 0, (r1));

712 
	`evdns_ba£_ªsﬁve_ùv4
(
dns
, "host.example.com", 0,

713 
gíîic_dns_ˇŒback
, &
r1
);

715 
n_ª∂õs_À·
 = 2;

718 
	`evít_ba£_di•©ch
(
ba£
);

721 
	`â_öt_›
(
r1
.
ªsu…
, ==, 
DNS_ERR_TIMEOUT
);

724 
	`â_öt_›
(
dr›_cou¡
, ==, 0);

725 
	`evdns_ba£_ªsﬁve_ùv4
(
dns
, "host.example.com", 0,

726 
gíîic_dns_ˇŒback
, &
r1
);

728 
	`evít_ba£_di•©ch
(
ba£
);

729 
	`â_öt_›
(
r1
.
ªsu…
, ==, 
DNS_ERR_NONE
);

730 
	`â_öt_›
(
r1
.
ty≥
, ==, 
DNS_IPv4_A
);

731 
	`â_öt_›
(
r1
.
cou¡
, ==, 1);

732 
	`â_öt_›
(((
ev_uöt32_t
*)
r1
.
addrs
)[0], ==, 
	`ht⁄l
(0x10204080));

734 
íd
:

735 i‡(
dns
)

736 
	`evdns_ba£_‰ì
(
dns
, 0);

737 i‡(
p‹t
)

738 
	`evdns_˛o£_£rvî_p‹t
(
p‹t
);

739 
	}
}

741 
ªgªss_dns_£rvî_èbÀ
 
	göã∫Æ_îr‹_èbÀ
[] = {

748 { 
NULL
, NULL, NULL, 0 }

751 
ªgªss_dns_£rvî_èbÀ
 
	gªissue_èbÀ
[] = {

753 { 
NULL
, NULL, NULL, 0 }

757 
	$dns_ªissue_ã°
(*
¨g
)

759 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

760 
evít_ba£
 *
ba£
 = 
d©a
->base;

761 
evdns_£rvî_p‹t
 *
p‹t1
 = 
NULL
, *
p‹t2
 = NULL;

762 
evdns_ba£
 *
dns
 = 
NULL
;

763 
gíîic_dns_ˇŒback_ªsu…
 
r1
;

764 
ev_uöt16_t
 
p‹äum1
 = 0, 
p‹äum2
=0;

765 
buf1
[64], 
buf2
[64];

767 
p‹t1
 = 
	`ªgªss_gë_dns£rvî
(
ba£
, &
p‹äum1
, 
NULL
,

768 
ªgªss_dns_£rvî_cb
, 
öã∫Æ_îr‹_èbÀ
);

769 
	`â_as£π
(
p‹t1
);

770 
p‹t2
 = 
	`ªgªss_gë_dns£rvî
(
ba£
, &
p‹äum2
, 
NULL
,

771 
ªgªss_dns_£rvî_cb
, 
ªissue_èbÀ
);

772 
	`â_as£π
(
p‹t2
);

773 
	`evutû_¢¥ötf
(
buf1
, (buf1), "127.0.0.1:%d", ()
p‹äum1
);

774 
	`evutû_¢¥ötf
(
buf2
, (buf2), "127.0.0.1:%d", ()
p‹äum2
);

776 
dns
 = 
	`evdns_ba£_√w
(
ba£
, 0);

777 
	`â_as£π
(!
	`evdns_ba£_«me£rvî_ù_add
(
dns
, 
buf1
));

778 
	`â_as£π
(! 
	`evdns_ba£_£t_›ti⁄
(
dns
, "timeout:", "0.3"));

779 
	`â_as£π
(! 
	`evdns_ba£_£t_›ti⁄
(
dns
, "max-timeouts:", "2"));

780 
	`â_as£π
(! 
	`evdns_ba£_£t_›ti⁄
(
dns
, "attempts:", "5"));

782 
	`mem£t
(&
r1
, 0, (r1));

783 
	`evdns_ba£_ªsﬁve_ùv4
(
dns
, "foof.example.com", 0,

784 
gíîic_dns_ˇŒback
, &
r1
);

787 
	`â_as£π
(!
	`evdns_ba£_«me£rvî_ù_add
(
dns
, 
buf2
));

789 
n_ª∂õs_À·
 = 1;

790 
exô_ba£
 = 
ba£
;

792 
	`evít_ba£_di•©ch
(
ba£
);

793 
	`â_öt_›
(
r1
.
ªsu…
, ==, 
DNS_ERR_NONE
);

794 
	`â_öt_›
(
r1
.
ty≥
, ==, 
DNS_IPv4_A
);

795 
	`â_öt_›
(
r1
.
cou¡
, ==, 1);

796 
	`â_öt_›
(((
ev_uöt32_t
*)
r1
.
addrs
)[0], ==, 
	`ht⁄l
(0xf00ff00f));

799 
	`â_öt_›
(
öã∫Æ_îr‹_èbÀ
[0].
£í
, >, 0);

801 
íd
:

802 i‡(
dns
)

803 
	`evdns_ba£_‰ì
(
dns
, 0);

804 i‡(
p‹t1
)

805 
	`evdns_˛o£_£rvî_p‹t
(
p‹t1
);

806 i‡(
p‹t2
)

807 
	`evdns_˛o£_£rvî_p‹t
(
p‹t2
);

808 
	}
}

812 
	$dumb_byãs_‚
(*
p
, 
size_t
 
n
)

814 
i
;

817 
i
=0;i<
n
;++i)

818 
p
[
i
] = ()(
	`ønd
() & 7);

819 
	}
}

823 
	$dns_öÊight_ã°
(*
¨g
)

825 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

826 
evít_ba£
 *
ba£
 = 
d©a
->base;

827 
evdns_ba£
 *
dns
 = 
NULL
;

828 
ev_uöt16_t
 
p‹äum
 = 0;

829 
buf
[64];

831 
gíîic_dns_ˇŒback_ªsu…
 
r
[20];

832 
i
;

834 
	`â_as£π
(
	`ªgªss_dns£rvî
(
ba£
, &
p‹äum
, 
ªissue_èbÀ
));

835 
	`evutû_¢¥ötf
(
buf
, (buf), "127.0.0.1:%d", ()
p‹äum
);

837 
dns
 = 
	`evdns_ba£_√w
(
ba£
, 0);

838 
	`â_as£π
(!
	`evdns_ba£_«me£rvî_ù_add
(
dns
, 
buf
));

839 
	`â_as£π
(! 
	`evdns_ba£_£t_›ti⁄
(
dns
, "max-inflight:", "3"));

840 
	`â_as£π
(! 
	`evdns_ba£_£t_›ti⁄
(
dns
, "randomize-case:", "0"));

842 
i
=0;i<20;++i)

843 
	`evdns_ba£_ªsﬁve_ùv4
(
dns
, "foof.exam∂e.com", 0, 
gíîic_dns_ˇŒback
, &
r
[
i
]);

845 
n_ª∂õs_À·
 = 20;

846 
exô_ba£
 = 
ba£
;

848 
	`evít_ba£_di•©ch
(
ba£
);

850 
i
=0;i<20;++i) {

851 
	`â_öt_›
(
r
[
i
].
ty≥
, ==, 
DNS_IPv4_A
);

852 
	`â_öt_›
(
r
[
i
].
cou¡
, ==, 1);

853 
	`â_öt_›
(((
ev_uöt32_t
*)
r
[
i
].
addrs
)[0], ==, 
	`ht⁄l
(0xf00ff00f));

856 
íd
:

857 i‡(
dns
)

858 
	`evdns_ba£_‰ì
(
dns
, 0);

859 
	`ªgªss_˛ón_dns£rvî
();

860 
	}
}

864 
	gtŸÆ_c⁄√˘ed_‹_Áûed
 = 0;

865 
	gtŸÆ_n_ac˚±ed
 = 0;

866 
evít_ba£
 *
	gbe_c⁄√˘_ho°«me_ba£
 = 
NULL
;

871 
	$be_gëaddröfo_£rvî_cb
(
evdns_£rvî_ªque°
 *
ªq
, *
d©a
)

873 
i
;

874 *
n_gŸ_p
=
d©a
;

875 
added_™y
=0;

876 ++*
n_gŸ_p
;

878 
i
=0;i<
ªq
->
nque°i⁄s
;++i) {

879 c⁄° 
qty≥
 = 
ªq
->
que°i⁄s
[
i
]->
ty≥
;

880 c⁄° 
q˛ass
 = 
ªq
->
que°i⁄s
[
i
]->
dns_que°i⁄_˛ass
;

881 c⁄° *
q«me
 = 
ªq
->
que°i⁄s
[
i
]->
«me
;

882 
ö_addr
 
™s
;

883 
ö6_addr
 
™s6
;

884 
	`mem£t
(&
™s6
, 0, (ans6));

886 i‡(
qty≥
 =
EVDNS_TYPE_A
 &&

887 
q˛ass
 =
EVDNS_CLASS_INET
 &&

888 !
	`evutû_ascii_°rˇ£cmp
(
q«me
, "nobodaddy.example.com")) {

889 
™s
.
s_addr
 = 
	`ht⁄l
(0x7f000001);

890 
	`evdns_£rvî_ªque°_add_a_ª∂y
(
ªq
, 
q«me
,

891 1, &
™s
.
s_addr
, 2000);

892 
added_™y
 = 1;

893 } i‡(!
	`evutû_ascii_°rˇ£cmp
(
q«me
,

896 } i‡(!
	`evutû_ascii_°rˇ£cmp
(
q«me
,

898 i‡(
qty≥
 =
EVDNS_TYPE_A
) {

899 
™s
.
s_addr
 = 
	`ht⁄l
(0x50502020);

900 
	`evdns_£rvî_ªque°_add_a_ª∂y
(
ªq
, 
q«me
,

901 1, &
™s
.
s_addr
, 2000);

902 
added_™y
 = 1;

903 } i‡(
qty≥
 =
EVDNS_TYPE_AAAA
) {

904 
™s6
.
s6_addr
[0] = 0x80;

905 
™s6
.
s6_addr
[1] = 0xff;

906 
™s6
.
s6_addr
[14] = 0xbb;

907 
™s6
.
s6_addr
[15] = 0xbb;

908 
	`evdns_£rvî_ªque°_add_ØØ_ª∂y
(
ªq
, 
q«me
,

909 1, &
™s6
.
s6_addr
, 2000);

910 
added_™y
 = 1;

912 
	`evdns_£rvî_ªque°_add_˙ame_ª∂y
(
ªq
, 
q«me
,

914 } i‡(!
	`evutû_ascii_°rˇ£cmp
(
q«me
,

916 !
	`evutû_ascii_°rˇ£cmp
(
q«me
, "v4assert.example.com")) {

917 i‡(
qty≥
 =
EVDNS_TYPE_A
) {

918 
™s
.
s_addr
 = 
	`ht⁄l
(0x12345678);

919 
	`evdns_£rvî_ªque°_add_a_ª∂y
(
ªq
, 
q«me
,

920 1, &
™s
.
s_addr
, 2000);

921 
added_™y
 = 1;

922 } i‡(!
	`evutû_ascii_°rˇ£cmp
(
q«me
,

924 
	`TT_FAIL
(("Gotán AAAAÑequest for v4assert"));

926 } i‡(!
	`evutû_ascii_°rˇ£cmp
(
q«me
,

928 !
	`evutû_ascii_°rˇ£cmp
(
q«me
, "v6assert.example.com")) {

929 i‡(
qty≥
 =
EVDNS_TYPE_AAAA
) {

930 
™s6
.
s6_addr
[0] = 0x0b;

931 
™s6
.
s6_addr
[1] = 0x0b;

932 
™s6
.
s6_addr
[14] = 0xf0;

933 
™s6
.
s6_addr
[15] = 0x0d;

934 
	`evdns_£rvî_ªque°_add_ØØ_ª∂y
(
ªq
, 
q«me
,

935 1, &
™s6
.
s6_addr
, 2000);

936 
added_™y
 = 1;

937 } i‡(!
	`evutû_ascii_°rˇ£cmp
(
q«me
,

939 
	`TT_FAIL
(("Gotá AÑequest for v6assert"));

941 } i‡(!
	`evutû_ascii_°rˇ£cmp
(
q«me
,

943 i‡(
qty≥
 =
EVDNS_TYPE_A
) {

944 
™s
.
s_addr
 = 
	`ht⁄l
(0xabcdef01);

945 
	`evdns_£rvî_ªque°_add_a_ª∂y
(
ªq
, 
q«me
,

946 1, &
™s
.
s_addr
, 2000);

947 
added_™y
 = 1;

948 } i‡(
qty≥
 =
EVDNS_TYPE_AAAA
) {

950 
	`evdns_£rvî_ªque°_dr›
(
ªq
);

953 } i‡(!
	`evutû_ascii_°rˇ£cmp
(
q«me
,

955 i‡(
qty≥
 =
EVDNS_TYPE_AAAA
) {

956 
™s6
.
s6_addr
[0] = 0x0a;

957 
™s6
.
s6_addr
[1] = 0x0a;

958 
™s6
.
s6_addr
[14] = 0xff;

959 
™s6
.
s6_addr
[15] = 0x01;

960 
	`evdns_£rvî_ªque°_add_ØØ_ª∂y
(
ªq
, 
q«me
,

961 1, &
™s6
.
s6_addr
, 2000);

962 
added_™y
 = 1;

963 } i‡(
qty≥
 =
EVDNS_TYPE_A
) {

965 
	`evdns_£rvî_ªque°_dr›
(
ªq
);

968 } i‡(!
	`evutû_ascii_°rˇ£cmp
(
q«me
,

970 i‡(
qty≥
 =
EVDNS_TYPE_A
) {

972 } i‡(
qty≥
 =
EVDNS_TYPE_AAAA
) {

974 
	`evdns_£rvî_ªque°_dr›
(
ªq
);

977 } i‡(!
	`evutû_ascii_°rˇ£cmp
(
q«me
,

980 
	`evdns_£rvî_ªque°_dr›
(
ªq
);

983 
	`TT_GRIPE
(("GŸ weúdÑeque° f‹ %s",
q«me
));

986 i‡(
added_™y
)

987 
	`evdns_£rvî_ªque°_ª•⁄d
(
ªq
, 0);

989 
	`evdns_£rvî_ªque°_ª•⁄d
(
ªq
, 3);

990 
	}
}

994 
	$nû_ac˚±_cb
(
evc⁄∆i°íî
 *
l
, 
evutû_sockë_t
 
fd
, 
sockaddr
 *
s
,

995 
sockÀn
, *
¨g
)

997 *
p
 = 
¨g
;

998 (*
p
)++;

999 ++
tŸÆ_n_ac˚±ed
;

1001 i‡(
tŸÆ_n_ac˚±ed
 >3 && 
tŸÆ_c⁄√˘ed_‹_Áûed
 >= 5)

1002 
	`evít_ba£_lo›exô
(
be_c⁄√˘_ho°«me_ba£
,

1003 
NULL
);

1004 
	}
}

1006 
	sbe_c⁄n_ho°«me_ªsu…
 {

1007 
	mdn£º
;

1008 
	mwh©
;

1014 
	$be_c⁄√˘_ho°«me_evít_cb
(
buf„ªvít
 *
bev
, 
wh©
, *
˘x
)

1016 
be_c⁄n_ho°«me_ªsu…
 *
gŸ
 = 
˘x
;

1017 i‡(!
gŸ
->
wh©
) {

1018 
	`TT_BLATHER
(("GŸá buf„ªvíàevíà%d", 
wh©
));

1019 
gŸ
->
wh©
 = what;

1021 i‡((
wh©
 & 
BEV_EVENT_CONNECTED
Ë|| (wh© & 
BEV_EVENT_ERROR
)) {

1022 
r
;

1023 i‡((
r
 = 
	`buf„ªvít_sockë_gë_dns_îr‹
(
bev
))) {

1024 
gŸ
->
dn£º
 = 
r
;

1025 
	`TT_BLATHER
(("DNSÉº‹ %d: %s", 
r
,

1026 
	`evutû_gai_°ªº‹
(
r
)));

1027 } ++
tŸÆ_c⁄√˘ed_‹_Áûed
;

1028 
	`TT_BLATHER
(("GŸ %d c⁄√˘i⁄†‹Éº‹s.", 
tŸÆ_c⁄√˘ed_‹_Áûed
));

1030 i‡(
tŸÆ_n_ac˚±ed
 >3 && 
tŸÆ_c⁄√˘ed_‹_Áûed
 >= 5)

1031 
	`evít_ba£_lo›exô
(
be_c⁄√˘_ho°«me_ba£
,

1032 
NULL
);

1035 
	`TT_FAIL
(("TwoÉvents on one bufferevent. %d,%d",

1036 
gŸ
->
wh©
, ()what));

1038 
	}
}

1041 
	$ã°_buf„ªvít_c⁄√˘_ho°«me
(*
¨g
)

1043 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

1044 
evc⁄∆i°íî
 *
li°íî
 = 
NULL
;

1045 
buf„ªvít
 *
be1
=
NULL
, *
be2
=NULL, *
be3
=NULL, *
be4
=NULL, *
be5
=NULL;

1046 
be_c⁄n_ho°«me_ªsu…
 
be1_outcome
={0,0}, 
be2_outcome
={0,0},

1047 
be3_outcome
={0,0}, 
be4_outcome
={0,0}, 
be5_outcome
={0,0};

1048 
ex≥˘_îr5
;

1049 
evdns_ba£
 *
dns
=
NULL
;

1050 
evdns_£rvî_p‹t
 *
p‹t
=
NULL
;

1051 
sockaddr_ö
 
sö
;

1052 
li°íî_p‹t
=-1;

1053 
ev_uöt16_t
 
dns_p‹t
=0;

1054 
n_ac˚±
=0, 
n_dns
=0;

1055 
buf
[128];

1057 
be_c⁄√˘_ho°«me_ba£
 = 
d©a
->
ba£
;

1060 
	`mem£t
(&
sö
, 0, (sin));

1061 
sö
.
sö_Ámûy
 = 
AF_INET
;

1062 
sö
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(0x7f000001);

1063 
sö
.
sö_p‹t
 = 0;

1064 
li°íî
 = 
	`evc⁄∆i°íî_√w_böd
(
d©a
->
ba£
, 
nû_ac˚±_cb
,

1065 &
n_ac˚±
,

1066 
LEV_OPT_REUSEABLE
|
LEV_OPT_CLOSE_ON_EXEC
,

1067 -1, (
sockaddr
 *)&
sö
, (sin));

1068 
	`â_as£π
(
li°íî
);

1069 
li°íî_p‹t
 = 
	`ªgªss_gë_sockë_p‹t
(

1070 
	`evc⁄∆i°íî_gë_fd
(
li°íî
));

1072 
p‹t
 = 
	`ªgªss_gë_dns£rvî
(
d©a
->
ba£
, &
dns_p‹t
, 
NULL
,

1073 
be_gëaddröfo_£rvî_cb
, &
n_dns
);

1074 
	`â_as£π
(
p‹t
);

1075 
	`â_öt_›
(
dns_p‹t
, >=, 0);

1078 
dns
 = 
	`evdns_ba£_√w
(
d©a
->
ba£
, 0);

1079 
	`evutû_¢¥ötf
(
buf
, (buf), "127.0.0.1:%d", ()
dns_p‹t
);

1080 
	`evdns_ba£_«me£rvî_ù_add
(
dns
, 
buf
);

1085 
be1
 = 
	`buf„ªvít_sockë_√w
(
d©a
->
ba£
, -1, 
BEV_OPT_CLOSE_ON_FREE
);

1086 
be2
 = 
	`buf„ªvít_sockë_√w
(
d©a
->
ba£
, -1, 
BEV_OPT_CLOSE_ON_FREE
);

1087 
be3
 = 
	`buf„ªvít_sockë_√w
(
d©a
->
ba£
, -1, 
BEV_OPT_CLOSE_ON_FREE
);

1088 
be4
 = 
	`buf„ªvít_sockë_√w
(
d©a
->
ba£
, -1, 
BEV_OPT_CLOSE_ON_FREE
);

1089 
be5
 = 
	`buf„ªvít_sockë_√w
(
d©a
->
ba£
, -1, 
BEV_OPT_CLOSE_ON_FREE
);

1091 
	`buf„ªvít_£tcb
(
be1
, 
NULL
, NULL, 
be_c⁄√˘_ho°«me_evít_cb
,

1092 &
be1_outcome
);

1093 
	`buf„ªvít_£tcb
(
be2
, 
NULL
, NULL, 
be_c⁄√˘_ho°«me_evít_cb
,

1094 &
be2_outcome
);

1095 
	`buf„ªvít_£tcb
(
be3
, 
NULL
, NULL, 
be_c⁄√˘_ho°«me_evít_cb
,

1096 &
be3_outcome
);

1097 
	`buf„ªvít_£tcb
(
be4
, 
NULL
, NULL, 
be_c⁄√˘_ho°«me_evít_cb
,

1098 &
be4_outcome
);

1099 
	`buf„ªvít_£tcb
(
be5
, 
NULL
, NULL, 
be_c⁄√˘_ho°«me_evít_cb
,

1100 &
be5_outcome
);

1103 
	`â_as£π
(!
	`buf„ªvít_sockë_c⁄√˘_ho°«me
(
be1
, 
dns
, 
AF_INET
,

1104 "nosuch∂a˚.exam∂e.com", 
li°íî_p‹t
));

1106 
	`â_as£π
(!
	`buf„ªvít_sockë_c⁄√˘_ho°«me
(
be2
, 
dns
, 
AF_INET
,

1107 "127.0.0.1", 
li°íî_p‹t
));

1109 
	`â_as£π
(!
	`buf„ªvít_sockë_c⁄√˘_ho°«me
(
be3
, 
dns
, 
AF_INET
,

1110 "nobodaddy.exam∂e.com", 
li°íî_p‹t
));

1113 
	`â_as£π
(!
	`buf„ªvít_sockë_c⁄√˘_ho°«me
(
be4
, 
NULL
, 
AF_INET
,

1114 "loˇlho°", 
li°íî_p‹t
));

1116 
	`â_as£π
(!
	`buf„ªvít_sockë_c⁄√˘_ho°«me
(
be5
, 
NULL
, 
AF_INET
,

1122 
evutû_addröfo
 
höts
, *
ai
 = 
NULL
;

1123 
	`mem£t
(&
höts
, 0, (hints));

1124 
höts
.
ai_Ámûy
 = 
AF_INET
;

1125 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

1126 
höts
.
ai_¥Ÿocﬁ
 = 
IPPROTO_TCP
;

1127 
ex≥˘_îr5
 = 
	`evutû_gëaddröfo
(

1128 "n⁄esuch.nowhîe.exam∂e.com", "80", &
höts
, &
ai
);

1131 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

1133 
	`â_öt_›
(
be1_outcome
.
wh©
, ==, 
BEV_EVENT_ERROR
);

1134 
	`â_öt_›
(
be1_outcome
.
dn£º
, ==, 
EVUTIL_EAI_NONAME
);

1135 
	`â_öt_›
(
be2_outcome
.
wh©
, ==, 
BEV_EVENT_CONNECTED
);

1136 
	`â_öt_›
(
be2_outcome
.
dn£º
, ==, 0);

1137 
	`â_öt_›
(
be3_outcome
.
wh©
, ==, 
BEV_EVENT_CONNECTED
);

1138 
	`â_öt_›
(
be3_outcome
.
dn£º
, ==, 0);

1139 
	`â_öt_›
(
be4_outcome
.
wh©
, ==, 
BEV_EVENT_CONNECTED
);

1140 
	`â_öt_›
(
be4_outcome
.
dn£º
, ==, 0);

1141 i‡(
ex≥˘_îr5
) {

1142 
	`â_öt_›
(
be5_outcome
.
wh©
, ==, 
BEV_EVENT_ERROR
);

1143 
	`â_öt_›
(
be5_outcome
.
dn£º
, ==, 
ex≥˘_îr5
);

1146 
	`â_öt_›
(
n_ac˚±
, ==, 3);

1147 
	`â_öt_›
(
n_dns
, ==, 2);

1149 
íd
:

1150 i‡(
li°íî
)

1151 
	`evc⁄∆i°íî_‰ì
(
li°íî
);

1152 i‡(
p‹t
)

1153 
	`evdns_˛o£_£rvî_p‹t
(
p‹t
);

1154 i‡(
dns
)

1155 
	`evdns_ba£_‰ì
(
dns
, 0);

1156 i‡(
be1
)

1157 
	`buf„ªvít_‰ì
(
be1
);

1158 i‡(
be2
)

1159 
	`buf„ªvít_‰ì
(
be2
);

1160 i‡(
be3
)

1161 
	`buf„ªvít_‰ì
(
be3
);

1162 i‡(
be4
)

1163 
	`buf„ªvít_‰ì
(
be4
);

1164 i‡(
be5
)

1165 
	`buf„ªvít_‰ì
(
be5
);

1166 
	}
}

1169 
	sgai_outcome
 {

1170 
	mîr
;

1171 
evutû_addröfo
 *
	mai
;

1174 
	gn_gai_ªsu…s_≥ndög
 = 0;

1175 
evít_ba£
 *
	gexô_ba£_⁄_no_≥ndög_ªsu…s
 = 
NULL
;

1178 
	$gai_cb
(
îr
, 
evutû_addröfo
 *
ªs
, *
±r
)

1180 
gai_outcome
 *
go
 = 
±r
;

1181 
go
->
îr
 =Érr;

1182 
go
->
ai
 = 
ªs
;

1183 i‡(--
n_gai_ªsu…s_≥ndög
 <0 && 
exô_ba£_⁄_no_≥ndög_ªsu…s
)

1184 
	`evít_ba£_lo›exô
(
exô_ba£_⁄_no_≥ndög_ªsu…s
, 
NULL
);

1185 i‡(
n_gai_ªsu…s_≥ndög
 < 900)

1186 
	`TT_BLATHER
(("Gotánánswer;Éxpecting %d more.",

1187 
n_gai_ªsu…s_≥ndög
));

1188 
	}
}

1191 
	$ˇn˚l_gai_cb
(
evutû_sockë_t
 
fd
, 
wh©
, *
±r
)

1193 
evdns_gëaddröfo_ªque°
 *
r
 = 
±r
;

1194 
	`evdns_gëaddröfo_ˇn˚l
(
r
);

1195 
	}
}

1198 
	$ã°_gëaddröfo_async
(*
¨g
)

1200 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

1201 
evutû_addröfo
 
höts
, *
a
;

1202 
gai_outcome
 
loˇl_outcome
;

1203 
gai_outcome
 
a_out
[12];

1204 
i
;

1205 
evdns_gëaddröfo_ªque°
 *
r
;

1206 
buf
[128];

1207 
evdns_£rvî_p‹t
 *
p‹t
 = 
NULL
;

1208 
ev_uöt16_t
 
dns_p‹t
 = 0;

1209 
n_dns_que°i⁄s
 = 0;

1211 
evdns_ba£
 *
dns_ba£
 = 
	`evdns_ba£_√w
(
d©a
->
ba£
, 0);

1212 
	`â_as£π
(
dns_ba£
);

1215 
	`evdns_ba£_lﬂd_ho°s
(
dns_ba£
, 
NULL
);

1217 
	`mem£t
(
a_out
, 0, (a_out));

1218 
	`mem£t
(&
loˇl_outcome
, 0, (local_outcome));

1220 
n_gai_ªsu…s_≥ndög
 = 10000;

1224 
	`mem£t
(&
höts
, 0, (hints));

1225 
höts
.
ai_Ámûy
 = 
PF_UNSPEC
;

1226 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

1227 
	`mem£t
(&
loˇl_outcome
, 0, (local_outcome));

1228 
r
 = 
	`evdns_gëaddröfo
(
dns_ba£
, "1.2.3.4", "http",

1229 &
höts
, 
gai_cb
, &
loˇl_outcome
);

1230 
	`â_as£π
(! 
r
);

1231 i‡(!
loˇl_outcome
.
îr
) {

1232 
	`â_±r_›
(
loˇl_outcome
.
ai
,!=,
NULL
);

1233 
	`ã°_ai_eq
(
loˇl_outcome
.
ai
, "1.2.3.4:80", 
SOCK_STREAM
, 
IPPROTO_TCP
);

1234 
	`evutû_‰ìaddröfo
(
loˇl_outcome
.
ai
);

1235 
loˇl_outcome
.
ai
 = 
NULL
;

1237 
	`TT_BLATHER
(("Apparently we haveÇo getservbyname."));

1241 
	`mem£t
(&
höts
, 0, (hints));

1242 
höts
.
ai_Ámûy
 = 
PF_UNSPEC
;

1243 
höts
.
ai_Êags
 = 
EVUTIL_AI_NUMERICHOST
;

1244 
	`mem£t
(&
loˇl_outcome
, 0, (local_outcome));

1245 
r
 = 
	`evdns_gëaddröfo
(
dns_ba£
, "www.google.com", "80",

1246 &
höts
, 
gai_cb
, &
loˇl_outcome
);

1247 
	`â_±r_›
(
r
,==,
NULL
);

1248 
	`â_öt_›
(
loˇl_outcome
.
îr
,==,
EVUTIL_EAI_NONAME
);

1249 
	`â_±r_›
(
loˇl_outcome
.
ai
,==,
NULL
);

1252 
	`mem£t
(&
höts
, 0, (hints));

1253 
	`mem£t
(&
loˇl_outcome
, 0, (local_outcome));

1254 
höts
.
ai_Ámûy
 = 
PF_UNSPEC
;

1255 
höts
.
ai_¥Ÿocﬁ
 = 
IPPROTO_TCP
;

1256 
r
 = 
	`evdns_gëaddröfo
(
dns_ba£
, "f::f", "8008",

1257 &
höts
, 
gai_cb
, &
loˇl_outcome
);

1258 
	`â_as£π
(!
r
);

1259 
	`â_öt_›
(
loˇl_outcome
.
îr
,==,0);

1260 
	`â_as£π
(
loˇl_outcome
.
ai
);

1261 
	`â_±r_›
(
loˇl_outcome
.
ai
->
ai_√xt
,==,
NULL
);

1262 
	`ã°_ai_eq
(
loˇl_outcome
.
ai
, "[f::f]:8008", 
SOCK_STREAM
, 
IPPROTO_TCP
);

1263 
	`evutû_‰ìaddröfo
(
loˇl_outcome
.
ai
);

1264 
loˇl_outcome
.
ai
 = 
NULL
;

1267 
	`mem£t
(&
höts
, 0, (hints));

1268 
	`mem£t
(&
loˇl_outcome
, 0, (local_outcome));

1269 
höts
.
ai_Ámûy
 = 
PF_UNSPEC
;

1270 
r
 = 
	`evdns_gëaddröfo
(
dns_ba£
, "5.6.7.8", 
NULL
,

1271 &
höts
, 
gai_cb
, &
loˇl_outcome
);

1272 
	`â_as£π
(!
r
);

1273 
	`â_öt_›
(
loˇl_outcome
.
îr
,==,0);

1274 
	`â_as£π
(
loˇl_outcome
.
ai
);

1275 
a
 = 
	`ai_föd_by_¥Ÿocﬁ
(
loˇl_outcome
.
ai
, 
IPPROTO_TCP
);

1276 
	`â_as£π
(
a
);

1277 
	`ã°_ai_eq
(
a
, "5.6.7.8", 
SOCK_STREAM
, 
IPPROTO_TCP
);

1278 
a
 = 
	`ai_föd_by_¥Ÿocﬁ
(
loˇl_outcome
.
ai
, 
IPPROTO_UDP
);

1279 
	`â_as£π
(
a
);

1280 
	`ã°_ai_eq
(
a
, "5.6.7.8", 
SOCK_DGRAM
, 
IPPROTO_UDP
);

1281 
	`evutû_‰ìaddröfo
(
loˇl_outcome
.
ai
);

1282 
loˇl_outcome
.
ai
 = 
NULL
;

1285 
	`mem£t
(&
höts
, 0, (hints));

1286 
	`mem£t
(&
loˇl_outcome
, 0, (local_outcome));

1287 
höts
.
ai_Ámûy
 = 
PF_UNSPEC
;

1288 
höts
.
ai_sockty≥
 = 
SOCK_DGRAM
;

1289 
höts
.
ai_Êags
 = 
EVUTIL_AI_PASSIVE
;

1290 
r
 = 
	`evdns_gëaddröfo
(
dns_ba£
, 
NULL
, "9090",

1291 &
höts
, 
gai_cb
, &
loˇl_outcome
);

1292 
	`â_as£π
(!
r
);

1293 
	`â_öt_›
(
loˇl_outcome
.
îr
,==,0);

1294 
	`â_as£π
(
loˇl_outcome
.
ai
);

1296 
a
 = 
	`ai_föd_by_Ámûy
(
loˇl_outcome
.
ai
, 
PF_INET
);

1297 
	`â_as£π
(
a
);

1298 
	`ã°_ai_eq
(
a
, "0.0.0.0:9090", 
SOCK_DGRAM
, 
IPPROTO_UDP
);

1300 
a
 = 
	`ai_föd_by_Ámûy
(
loˇl_outcome
.
ai
, 
PF_INET6
);

1301 
	`â_as£π
(
a
);

1302 
	`ã°_ai_eq
(
a
, "[::]:9090", 
SOCK_DGRAM
, 
IPPROTO_UDP
);

1303 
	`evutû_‰ìaddröfo
(
loˇl_outcome
.
ai
);

1304 
loˇl_outcome
.
ai
 = 
NULL
;

1307 
	`mem£t
(&
höts
, 0, (hints));

1308 
	`mem£t
(&
loˇl_outcome
, 0, (local_outcome));

1309 
höts
.
ai_Ámûy
 = 
PF_UNSPEC
;

1310 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

1311 
r
 = 
	`evdns_gëaddröfo
(
dns_ba£
, 
NULL
, "2",

1312 &
höts
, 
gai_cb
, &
loˇl_outcome
);

1313 
	`â_as£π
(!
r
);

1314 
	`â_öt_›
(
loˇl_outcome
.
îr
,==,0);

1315 
	`â_as£π
(
loˇl_outcome
.
ai
);

1317 
a
 = 
	`ai_föd_by_Ámûy
(
loˇl_outcome
.
ai
, 
PF_INET
);

1318 
	`â_as£π
(
a
);

1319 
	`ã°_ai_eq
(
a
, "127.0.0.1:2", 
SOCK_STREAM
, 
IPPROTO_TCP
);

1321 
a
 = 
	`ai_föd_by_Ámûy
(
loˇl_outcome
.
ai
, 
PF_INET6
);

1322 
	`â_as£π
(
a
);

1323 
	`ã°_ai_eq
(
a
, "[::1]:2", 
SOCK_STREAM
, 
IPPROTO_TCP
);

1324 
	`evutû_‰ìaddröfo
(
loˇl_outcome
.
ai
);

1325 
loˇl_outcome
.
ai
 = 
NULL
;

1328 
	`mem£t
(&
höts
, 0, (hints));

1329 
	`mem£t
(&
loˇl_outcome
, 0, (local_outcome));

1330 
höts
.
ai_Ámûy
 = 
PF_UNSPEC
;

1331 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

1332 
r
 = 
	`evdns_gëaddröfo
(
dns_ba£
, "LOCALHOST", "80",

1333 &
höts
, 
gai_cb
, &
loˇl_outcome
);

1334 
	`â_as£π
(!
r
);

1335 
	`â_öt_›
(
loˇl_outcome
.
îr
,==,0);

1336 
	`â_as£π
(
loˇl_outcome
.
ai
);

1338 
a
 = 
	`ai_föd_by_Ámûy
(
loˇl_outcome
.
ai
, 
PF_INET
);

1339 
	`â_as£π
(
a
);

1340 
	`ã°_ai_eq
(
a
, "127.0.0.1:80", 
SOCK_STREAM
, 
IPPROTO_TCP
);

1342 
a
 = 
	`ai_föd_by_Ámûy
(
loˇl_outcome
.
ai
, 
PF_INET6
);

1343 
	`â_as£π
(
a
);

1344 
	`ã°_ai_eq
(
a
, "[::1]:80", 
SOCK_STREAM
, 
IPPROTO_TCP
);

1345 
	`evutû_‰ìaddröfo
(
loˇl_outcome
.
ai
);

1346 
loˇl_outcome
.
ai
 = 
NULL
;

1349 
	`mem£t
(&
höts
, 0, (hints));

1350 
	`mem£t
(&
loˇl_outcome
, 0, (local_outcome));

1351 
höts
.
ai_Ámûy
 = 
PF_INET6
;

1352 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

1353 
r
 = 
	`evdns_gëaddröfo
(
dns_ba£
, "LOCALHOST", "9999",

1354 &
höts
, 
gai_cb
, &
loˇl_outcome
);

1355 
	`â_as£π
(! 
r
);

1356 
	`â_öt_›
(
loˇl_outcome
.
îr
,==,0);

1357 
	`â_as£π
(
loˇl_outcome
.
ai
);

1358 
a
 = 
loˇl_outcome
.
ai
;

1359 
	`ã°_ai_eq
(
a
, "[::1]:9999", 
SOCK_STREAM
, 
IPPROTO_TCP
);

1360 
	`â_±r_›
(
a
->
ai_√xt
, ==, 
NULL
);

1361 
	`evutû_‰ìaddröfo
(
loˇl_outcome
.
ai
);

1362 
loˇl_outcome
.
ai
 = 
NULL
;

1366 
p‹t
 = 
	`ªgªss_gë_dns£rvî
(
d©a
->
ba£
, &
dns_p‹t
, 
NULL
,

1367 
be_gëaddröfo_£rvî_cb
, &
n_dns_que°i⁄s
);

1368 
	`â_as£π
(
p‹t
);

1369 
	`â_öt_›
(
dns_p‹t
, >=, 0);

1371 
	`evutû_¢¥ötf
(
buf
, (buf), "127.0.0.1:%d", 
dns_p‹t
);

1372 
	`evdns_ba£_«me£rvî_ù_add
(
dns_ba£
, 
buf
);

1374 
	`mem£t
(&
höts
, 0, (hints));

1375 
höts
.
ai_Ámûy
 = 
PF_UNSPEC
;

1376 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

1377 
höts
.
ai_Êags
 = 
EVUTIL_AI_CANONNAME
;

1379 
r
 = 
	`evdns_gëaddröfo
(
dns_ba£
, "both.example.com", "8000",

1380 &
höts
, 
gai_cb
, &
a_out
[0]);

1381 
	`â_as£π
(
r
);

1384 
r
 = 
	`evdns_gëaddröfo
(
dns_ba£
, "v4only.example.com", "8001",

1385 &
höts
, 
gai_cb
, &
a_out
[1]);

1386 
	`â_as£π
(
r
);

1389 
höts
.
ai_Êags
 = 0;

1390 
r
 = 
	`evdns_gëaddröfo
(
dns_ba£
, "v6only.example.com", "8002",

1391 &
höts
, 
gai_cb
, &
a_out
[2]);

1392 
	`â_as£π
(
r
);

1396 
höts
.
ai_Ámûy
 = 
PF_INET
;

1397 
r
 = 
	`evdns_gëaddröfo
(
dns_ba£
, "v4assert.example.com", "8003",

1398 &
höts
, 
gai_cb
, &
a_out
[3]);

1399 
	`â_as£π
(
r
);

1403 
höts
.
ai_Ámûy
 = 
PF_INET6
;

1404 
r
 = 
	`evdns_gëaddröfo
(
dns_ba£
, "v6assert.example.com", "8004",

1405 &
höts
, 
gai_cb
, &
a_out
[4]);

1406 
	`â_as£π
(
r
);

1409 
höts
.
ai_Ámûy
 = 
PF_INET
;

1410 
r
 = 
	`evdns_gëaddröfo
(
dns_ba£
, "nosuchplace.example.com", "8005",

1411 &
höts
, 
gai_cb
, &
a_out
[5]);

1412 
	`â_as£π
(
r
);

1416 
höts
.
ai_Ámûy
 = 
PF_UNSPEC
;

1417 
r
 = 
	`evdns_gëaddröfo
(
dns_ba£
, "nosuchplace.example.com", "8006",

1418 &
höts
, 
gai_cb
, &
a_out
[6]);

1419 
	`â_as£π
(
r
);

1423 
höts
.
ai_Ámûy
 = 
PF_UNSPEC
;

1424 
r
 = 
	`evdns_gëaddröfo
(
dns_ba£
, "v6timeout.example.com", "8007",

1425 &
höts
, 
gai_cb
, &
a_out
[7]);

1426 
	`â_as£π
(
r
);

1430 
höts
.
ai_Ámûy
 = 
PF_UNSPEC
;

1431 
r
 = 
	`evdns_gëaddröfo
(
dns_ba£
, "v6timeout-nonexist.example.com",

1432 "8008", &
höts
, 
gai_cb
, &
a_out
[8]);

1433 
	`â_as£π
(
r
);

1437 
höts
.
ai_Êags
 |
EVUTIL_AI_ADDRCONFIG
;

1438 
r
 = 
	`evdns_gëaddröfo
(
dns_ba£
, "both.example.com",

1439 "8009", &
höts
, 
gai_cb
, &
a_out
[9]);

1440 
	`â_as£π
(
r
);

1444 
höts
.
ai_Ámûy
 = 
PF_UNSPEC
;

1445 
höts
.
ai_Êags
 = 0;

1446 
r
 = 
	`evdns_gëaddröfo
(
dns_ba£
, "v4timeout.example.com", "8010",

1447 &
höts
, 
gai_cb
, &
a_out
[10]);

1448 
	`â_as£π
(
r
);

1451 
r
 = 
	`evdns_gëaddröfo
(
dns_ba£
, "all-timeout.example.com", "8011",

1452 &
höts
, 
gai_cb
, &
a_out
[11]);

1453 
	`â_as£π
(
r
);

1455 
timevÆ
 
tv
;

1456 
tv
.
tv_£c
 = 0;

1457 
tv
.
tv_u£c
 = 100*1000;

1458 
	`evít_ba£_⁄˚
(
d©a
->
ba£
, -1, 
EV_TIMEOUT
, 
ˇn˚l_gai_cb
,

1459 
r
, &
tv
);

1468 
n_gai_ªsu…s_≥ndög
 = 12;

1469 
exô_ba£_⁄_no_≥ndög_ªsu…s
 = 
d©a
->
ba£
;

1471 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

1474 
	`â_öt_›
(
a_out
[0].
îr
, ==, 0);

1475 
	`â_as£π
(
a_out
[0].
ai
);

1476 
	`â_as£π
(
a_out
[0].
ai
->
ai_√xt
);

1477 
	`â_as£π
(!
a_out
[0].
ai
->
ai_√xt
->ai_next);

1478 
a
 = 
	`ai_föd_by_Ámûy
(
a_out
[0].
ai
, 
PF_INET
);

1479 
	`â_as£π
(
a
);

1480 
	`ã°_ai_eq
(
a
, "80.80.32.32:8000", 
SOCK_STREAM
, 
IPPROTO_TCP
);

1481 
a
 = 
	`ai_föd_by_Ámûy
(
a_out
[0].
ai
, 
PF_INET6
);

1482 
	`â_as£π
(
a
);

1483 
	`ã°_ai_eq
(
a
, "[80ff::bbbb]:8000", 
SOCK_STREAM
, 
IPPROTO_TCP
);

1484 
	`â_as£π
(
a_out
[0].
ai
->
ai_ˇn⁄«me
);

1485 
	`â_°r_›
(
a_out
[0].
ai
->
ai_ˇn⁄«me
, ==, "both-canonical.example.com");

1488 
	`â_öt_›
(
a_out
[1].
îr
, ==, 0);

1489 
	`â_as£π
(
a_out
[1].
ai
);

1490 
	`â_as£π
(! 
a_out
[1].
ai
->
ai_√xt
);

1491 
	`ã°_ai_eq
(
a_out
[1].
ai
, "18.52.86.120:8001", 
SOCK_STREAM
, 
IPPROTO_TCP
);

1492 
	`â_as£π
(
a_out
[1].
ai
->
ai_ˇn⁄«me
 =
NULL
);

1496 
	`â_öt_›
(
a_out
[2].
îr
, ==, 0);

1497 
	`â_as£π
(
a_out
[2].
ai
);

1498 
	`â_as£π
(! 
a_out
[2].
ai
->
ai_√xt
);

1499 
	`ã°_ai_eq
(
a_out
[2].
ai
, "[b0b::f00d]:8002", 
SOCK_STREAM
, 
IPPROTO_TCP
);

1502 
	`â_öt_›
(
a_out
[3].
îr
, ==, 0);

1503 
	`â_as£π
(
a_out
[3].
ai
);

1504 
	`â_as£π
(! 
a_out
[3].
ai
->
ai_√xt
);

1505 
	`ã°_ai_eq
(
a_out
[3].
ai
, "18.52.86.120:8003", 
SOCK_STREAM
, 
IPPROTO_TCP
);

1508 
	`â_öt_›
(
a_out
[4].
îr
, ==, 0);

1509 
	`â_as£π
(
a_out
[4].
ai
);

1510 
	`â_as£π
(! 
a_out
[4].
ai
->
ai_√xt
);

1511 
	`ã°_ai_eq
(
a_out
[4].
ai
, "[b0b::f00d]:8004", 
SOCK_STREAM
, 
IPPROTO_TCP
);

1514 
	`â_öt_›
(
a_out
[5].
îr
, ==, 
EVUTIL_EAI_NONAME
);

1515 
	`â_as£π
(! 
a_out
[5].
ai
);

1518 
	`â_öt_›
(
a_out
[6].
îr
, ==, 
EVUTIL_EAI_NONAME
);

1519 
	`â_as£π
(! 
a_out
[6].
ai
);

1522 
	`â_öt_›
(
a_out
[7].
îr
, ==, 0);

1523 
	`â_as£π
(
a_out
[7].
ai
);

1524 
	`â_as£π
(! 
a_out
[7].
ai
->
ai_√xt
);

1525 
	`ã°_ai_eq
(
a_out
[7].
ai
, "171.205.239.1:8007", 
SOCK_STREAM
, 
IPPROTO_TCP
);

1528 
	`â_öt_›
(
a_out
[8].
îr
, ==, 
EVUTIL_EAI_NONAME
);

1529 
	`â_as£π
(! 
a_out
[8].
ai
);

1532 
	`â_öt_›
(
a_out
[9].
îr
, ==, 0);

1533 
	`â_as£π
(
a_out
[9].
ai
);

1534 
a
 = 
	`ai_föd_by_Ámûy
(
a_out
[9].
ai
, 
PF_INET
);

1535 i‡(
a
)

1536 
	`ã°_ai_eq
(
a
, "80.80.32.32:8009", 
SOCK_STREAM
, 
IPPROTO_TCP
);

1538 
	`â_as£π
(
	`ai_föd_by_Ámûy
(
a_out
[9].
ai
, 
PF_INET6
));

1539 
a
 = 
	`ai_föd_by_Ámûy
(
a_out
[9].
ai
, 
PF_INET6
);

1540 i‡(
a
)

1541 
	`ã°_ai_eq
(
a
, "[80ff::bbbb]:8009", 
SOCK_STREAM
, 
IPPROTO_TCP
);

1543 
	`â_as£π
(
	`ai_föd_by_Ámûy
(
a_out
[9].
ai
, 
PF_INET
));

1546 
	`â_öt_›
(
a_out
[10].
îr
, ==, 0);

1547 
	`â_as£π
(
a_out
[10].
ai
);

1548 
	`â_as£π
(! 
a_out
[10].
ai
->
ai_√xt
);

1549 
	`ã°_ai_eq
(
a_out
[10].
ai
, "[a0a::ff01]:8010", 
SOCK_STREAM
, 
IPPROTO_TCP
);

1552 
	`â_öt_›
(
a_out
[11].
îr
, ==, 
EVUTIL_EAI_CANCEL
);

1553 
	`â_as£π
(
a_out
[11].
ai
 =
NULL
);

1555 
íd
:

1556 i‡(
loˇl_outcome
.
ai
)

1557 
	`evutû_‰ìaddröfo
(
loˇl_outcome
.
ai
);

1558 
i
=0;i<10;++i) {

1559 i‡(
a_out
[
i
].
ai
)

1560 
	`evutû_‰ìaddröfo
(
a_out
[
i
].
ai
);

1562 i‡(
p‹t
)

1563 
	`evdns_˛o£_£rvî_p‹t
(
p‹t
);

1564 i‡(
dns_ba£
)

1565 
	`evdns_ba£_‰ì
(
dns_ba£
, 0);

1566 
	}
}

1568 
	sgaic_ªque°_°©us
 {

1569 
	mmagic
;

1570 
evít_ba£
 *
	mba£
;

1571 
evdns_ba£
 *
	mdns_ba£
;

1572 
evdns_gëaddröfo_ªque°
 *
	mªque°
;

1573 
evít
 
	mˇn˚l_evít
;

1574 
	mˇn˚Àd
;

1577 
	#GAIC_MAGIC
 0x1234abcd

	)

1579 
	g≥ndög
 = 0;

1582 
	$gaic_ˇn˚l_ªque°_cb
(
evutû_sockë_t
 
fd
, 
wh©
, *
¨g
)

1584 
gaic_ªque°_°©us
 *
°©us
 = 
¨g
;

1586 
	`â_as£π
(
°©us
->
magic
 =
GAIC_MAGIC
);

1587 
°©us
->
ˇn˚Àd
 = 1;

1588 
	`evdns_gëaddröfo_ˇn˚l
(
°©us
->
ªque°
);

1590 
íd
:

1591 
	`evít_ba£_lo›exô
(
°©us
->
ba£
, 
NULL
);

1592 
	}
}

1595 
	$gaic_£rvî_cb
(
evdns_£rvî_ªque°
 *
ªq
, *
¨g
)

1597 
ev_uöt32_t
 
™swî
 = 0x7f000001;

1598 
	`â_as£π
(
ªq
->
nque°i⁄s
);

1599 
	`evdns_£rvî_ªque°_add_a_ª∂y
(
ªq
,Ñeq->
que°i⁄s
[0]->
«me
, 1,

1600 &
™swî
, 100);

1601 
	`evdns_£rvî_ªque°_ª•⁄d
(
ªq
, 0);

1603 
íd
:

1604 
	`evdns_£rvî_ªque°_ª•⁄d
(
ªq
, 
DNS_ERR_REFUSED
);

1605 
	}
}

1609 
	$gaic_gëaddröfo_cb
(
ªsu…
, 
evutû_addröfo
 *
ªs
, *
¨g
)

1611 
gaic_ªque°_°©us
 *
°©us
 = 
¨g
;

1612 
evít_ba£
 *
ba£
 = 
°©us
->base;

1613 
	`â_as£π
(
°©us
->
magic
 =
GAIC_MAGIC
);

1615 i‡(
ªsu…
 =
EVUTIL_EAI_CANCEL
) {

1616 
	`â_as£π
(
°©us
->
ˇn˚Àd
);

1618 
	`evít_dñ
(&
°©us
->
ˇn˚l_evít
);

1620 
	`mem£t
(
°©us
, 0xf0, (*status));

1621 
	`‰ì
(
°©us
);

1623 
íd
:

1624 i‡(--
≥ndög
 <= 0)

1625 
	`evít_ba£_lo›exô
(
ba£
, 
NULL
);

1626 
	}
}

1629 
	$gaic_œunch
(
evít_ba£
 *
ba£
, 
evdns_ba£
 *
dns_ba£
)

1631 
gaic_ªque°_°©us
 *
°©us
 = 
	`ˇŒoc
(1,(*status));

1632 
timevÆ
 
tv
 = { 0, 10000 };

1633 
°©us
->
magic
 = 
GAIC_MAGIC
;

1634 
°©us
->
ba£
 = base;

1635 
°©us
->
dns_ba£
 = dns_base;

1636 
	`evít_assign
(&
°©us
->
ˇn˚l_evít
, 
ba£
, -1, 0, 
gaic_ˇn˚l_ªque°_cb
,

1637 
°©us
);

1638 
°©us
->
ªque°
 = 
	`evdns_gëaddröfo
(
dns_ba£
,

1639 "foob¨.bazquux.exam∂e.com", "80", 
NULL
, 
gaic_gëaddröfo_cb
,

1640 
°©us
);

1641 
	`evít_add
(&
°©us
->
ˇn˚l_evít
, &
tv
);

1642 ++
≥ndög
;

1643 
	}
}

1645 #ifde‡
EVENT_SET_MEM_FUNCTIONS_IMPLEMENTED


1650 
	gÆloˇãd_chunks
 = 0;

1653 
	$˙t_mÆloc
(
size_t
 
sz
)

1655 
Æloˇãd_chunks
 += 1;

1656  
	`mÆloc
(
sz
);

1657 
	}
}

1660 
	$˙t_ªÆloc
(*
ﬁd
, 
size_t
 
sz
)

1662 i‡(!
ﬁd
)

1663 
Æloˇãd_chunks
 += 1;

1664 i‡(!
sz
)

1665 
Æloˇãd_chunks
 -= 1;

1666  
	`ªÆloc
(
ﬁd
, 
sz
);

1667 
	}
}

1670 
	$˙t_‰ì
(*
±r
)

1672 
Æloˇãd_chunks
 -= 1;

1673 
	`‰ì
(
±r
);

1674 
	}
}

1676 
	sã°Àak_ív_t
 {

1677 
evít_ba£
 *
	mba£
;

1678 
evdns_ba£
 *
	mdns_ba£
;

1679 
evdns_ªque°
 *
	mªq
;

1680 
gíîic_dns_ˇŒback_ªsu…
 
	mr
;

1684 
	$ã°Àak_£tup
(c⁄° 
ã°ˇ£_t
 *
ã°ˇ£
)

1686 
ã°Àak_ív_t
 *
ív
;

1688 
Æloˇãd_chunks
 = 0;

1689 
	`evít_£t_mem_fun˘i⁄s
(
˙t_mÆloc
, 
˙t_ªÆloc
, 
˙t_‰ì
);

1690 
	`evít_íabÀ_debug_mode
();

1693 
ív
 = 
	`ˇŒoc
(1, (
ã°Àak_ív_t
));

1694 
ív
->
ba£
 = 
	`evít_ba£_√w
();

1695 
ív
->
dns_ba£
 = 
	`evdns_ba£_√w
”nv->
ba£
, 0);

1696 
ív
->
ªq
 = 
	`evdns_ba£_ªsﬁve_ùv4
(

1697 
ív
->
dns_ba£
, "exam∂e.com", 
DNS_QUERY_NO_SEARCH
,

1698 
gíîic_dns_ˇŒback
, &
ív
->
r
);

1699  
ív
;

1700 
	}
}

1703 
	$ã°Àak_˛ónup
(c⁄° 
ã°ˇ£_t
 *
ã°ˇ£
, *
ív_
)

1705 
ok
 = 0;

1706 
ã°Àak_ív_t
 *
ív
 = 
ív_
;

1707 
	`â_as£π
(
ív
);

1708 #ifde‡
_EVENT_DISABLE_DEBUG_MODE


1709 
	`â_öt_›
(
Æloˇãd_chunks
, ==, 0);

1712 
	`â_öt_›
(
Æloˇãd_chunks
, ==, 1);

1714 
ok
 = 1;

1715 
íd
:

1716 i‡(
ív
) {

1717 i‡(
ív
->
dns_ba£
)

1718 
	`evdns_ba£_‰ì
(
ív
->
dns_ba£
, 0);

1719 i‡(
ív
->
ba£
)

1720 
	`evít_ba£_‰ì
(
ív
->
ba£
);

1721 
	`‰ì
(
ív
);

1723  
ok
;

1724 
	}
}

1726 
ã°ˇ£_£tup_t
 
	gã°Àak_funcs
 = {

1727 
ã°Àak_£tup
, 
ã°Àak_˛ónup


1731 
	$ã°_dbg_Àak_ˇn˚l
(*
ív_
)

1734 
ã°Àak_ív_t
 *
ív
 = 
ív_
;

1735 
£nd_îr_shutdown
 = 1;

1736 
	`evdns_ˇn˚l_ªque°
(
ív
->
dns_ba£
,Énv->
ªq
);

1737 
ív
->
ªq
 = 0;

1740 
	`evít_ba£_lo›
(
ív
->
ba£
, 
EVLOOP_NONBLOCK
);

1744 
	`evdns_ba£_‰ì
(
ív
->
dns_ba£
, 
£nd_îr_shutdown
);

1745 
ív
->
dns_ba£
 = 0;

1746 
	`evít_ba£_‰ì
(
ív
->
ba£
);

1747 
ív
->
ba£
 = 0;

1748 
	}
}

1751 
	$ã°_dbg_Àak_shutdown
(*
ív_
)

1754 
ã°Àak_ív_t
 *
ív
 = 
ív_
;

1755 
£nd_îr_shutdown
 = 1;

1759 
ív
->
ªq
 = 0;

1761 
	`evdns_ba£_‰ì
(
ív
->
dns_ba£
, 
£nd_îr_shutdown
);

1762 
ív
->
dns_ba£
 = 0;

1765 
	`evít_ba£_lo›
(
ív
->
ba£
, 
EVLOOP_NONBLOCK
);

1766 
	`evít_ba£_‰ì
(
ív
->
ba£
);

1767 
ív
->
ba£
 = 0;

1768 
	}
}

1772 
	$ã°_gëaddröfo_async_ˇn˚l_°ªss
(*
±r
)

1774 
evít_ba£
 *
ba£
;

1775 
evdns_ba£
 *
dns_ba£
 = 
NULL
;

1776 
evdns_£rvî_p‹t
 *
£rvî
 = 
NULL
;

1777 
evutû_sockë_t
 
fd
 = -1;

1778 
sockaddr_ö
 
sö
;

1779 
sockaddr_°‹age
 
ss
;

1780 
ev_sockÀn_t
 
¶í
;

1781 
i
;

1783 
ba£
 = 
	`evít_ba£_√w
();

1784 
dns_ba£
 = 
	`evdns_ba£_√w
(
ba£
, 0);

1786 
	`mem£t
(&
sö
, 0, (sin));

1787 
sö
.
sö_Ámûy
 = 
AF_INET
;

1788 
sö
.
sö_p‹t
 = 0;

1789 
sö
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(0x7f000001);

1790 i‡((
fd
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
, 0)) < 0) {

1791 
	`â_ab‹t_≥º‹
("socket");

1793 
	`evutû_make_sockë_n⁄blockög
(
fd
);

1794 i‡(
	`böd
(
fd
, (
sockaddr
*)&
sö
, (sin))<0) {

1795 
	`â_ab‹t_≥º‹
("bind");

1797 
£rvî
 = 
	`evdns_add_£rvî_p‹t_wôh_ba£
(
ba£
, 
fd
, 0, 
gaic_£rvî_cb
,

1798 
ba£
);

1800 
	`mem£t
(&
ss
, 0, (ss));

1801 
¶í
 = (
ss
);

1802 i‡(
	`gësock«me
(
fd
, (
sockaddr
*)&
ss
, &
¶í
)<0) {

1803 
	`â_ab‹t_≥º‹
("getsockname");

1805 
	`evdns_ba£_«me£rvî_sockaddr_add
(
dns_ba£
,

1806 (
sockaddr
*)&
ss
, 
¶í
, 0);

1808 
i
 = 0; i < 1000; ++i) {

1809 
	`gaic_œunch
(
ba£
, 
dns_ba£
);

1812 
	`evít_ba£_di•©ch
(
ba£
);

1814 
íd
:

1815 i‡(
dns_ba£
)

1816 
	`evdns_ba£_‰ì
(
dns_ba£
, 1);

1817 i‡(
£rvî
)

1818 
	`evdns_˛o£_£rvî_p‹t
(
£rvî
);

1819 i‡(
fd
 >= 0)

1820 
	`evutû_˛o£sockë
(
fd
);

1821 
	}
}

1824 
	#DNS_LEGACY
(
«me
, 
Êags
) \

1825 { #«me, 
run_Àgacy_ã°_‚
, 
Êags
|
TT_LEGACY
, &
Àgacy_£tup
, \

1826 
dns_
##
«me
 }

	)

1828 
ã°ˇ£_t
 
	gdns_ã°ˇ£s
[] = {

1829 
DNS_LEGACY
(
£rvî
, 
TT_FORK
|
TT_NEED_BASE
),

1830 
DNS_LEGACY
(
gëho°by«me
, 
TT_FORK
|
TT_NEED_BASE
|
TT_NEED_DNS
),

1831 
DNS_LEGACY
(
gëho°by«me6
, 
TT_FORK
|
TT_NEED_BASE
|
TT_NEED_DNS
),

1832 
DNS_LEGACY
(
gëho°byaddr
, 
TT_FORK
|
TT_NEED_BASE
|
TT_NEED_DNS
),

1833 { "ªsﬁve_ªvî£", 
dns_ªsﬁve_ªvî£
, 
TT_FORK
, 
NULL
, NULL },

1834 { "£¨ch", 
dns_£¨ch_ã°
, 
TT_FORK
|
TT_NEED_BASE
, &
basic_£tup
, 
NULL
 },

1835 { "£¨ch_ˇn˚l", 
dns_£¨ch_ˇn˚l_ã°
,

1836 
TT_FORK
|
TT_NEED_BASE
, &
basic_£tup
, 
NULL
 },

1837 { "ªåy", 
dns_ªåy_ã°
, 
TT_FORK
|
TT_NEED_BASE
, &
basic_£tup
, 
NULL
 },

1838 { "ªissue", 
dns_ªissue_ã°
, 
TT_FORK
|
TT_NEED_BASE
, &
basic_£tup
, 
NULL
 },

1839 { "öÊight", 
dns_öÊight_ã°
, 
TT_FORK
|
TT_NEED_BASE
, &
basic_£tup
, 
NULL
 },

1840 { "buf„ªvít_c⁄√˘_ho°«me", 
ã°_buf„ªvít_c⁄√˘_ho°«me
,

1841 
TT_FORK
|
TT_NEED_BASE
, &
basic_£tup
, 
NULL
 },

1843 { "gëaddröfo_async", 
ã°_gëaddröfo_async
,

1844 
TT_FORK
|
TT_NEED_BASE
, &
basic_£tup
, (*)"" },

1845 { "gëaddröfo_ˇn˚l_°ªss", 
ã°_gëaddröfo_async_ˇn˚l_°ªss
,

1846 
TT_FORK
, 
NULL
, NULL },

1848 #ifde‡
EVENT_SET_MEM_FUNCTIONS_IMPLEMENTED


1849 { "Àak_shutdown", 
ã°_dbg_Àak_shutdown
, 
TT_FORK
, &
ã°Àak_funcs
, 
NULL
 },

1850 { "Àak_ˇn˚l", 
ã°_dbg_Àak_ˇn˚l
, 
TT_FORK
, &
ã°Àak_funcs
, 
NULL
 },

1853 
END_OF_TESTCASES


	@test/regress_et.c

26 
	~"../utû-öã∫Æ.h
"

27 
	~"evít2/evít-c⁄fig.h
"

29 #ifde‡
WIN32


30 
	~<wösock2.h
>

32 
	~<sys/ty≥s.h
>

33 
	~<sys/°©.h
>

34 #ifde‡
_EVENT_HAVE_SYS_SOCKET_H


35 
	~<sys/sockë.h
>

37 
	~<f˙é.h
>

38 
	~<°dlib.h
>

39 
	~<°dio.h
>

40 
	~<°rög.h
>

41 #i‚de‡
WIN32


42 
	~<sys/time.h
>

43 
	~<uni°d.h
>

45 
	~<î∫o.h
>

47 
	~"evít2/evít.h
"

48 
	~"evít2/utû.h
"

50 
	~"ªgªss.h
"

52 
	gwas_ë
 = 0;

55 
	$ªad_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

57 
buf
;

58 
Àn
;

60 
Àn
 = 
	`ªcv
(
fd
, &
buf
, (buf), 0);

62 
ˇŒed
++;

63 i‡(
evít
 & 
EV_ET
)

64 
was_ë
 = 1;

66 i‡(!
Àn
)

67 
	`evít_dñ
(
¨g
);

68 
	}
}

70 #i‚de‡
SHUT_WR


71 
	#SHUT_WR
 1

	)

74 #ifde‡
WIN32


75 
	#LOCAL_SOCKETPAIR_AF
 
AF_INET


	)

77 
	#LOCAL_SOCKETPAIR_AF
 
AF_UNIX


	)

81 
	$ã°_edgëriggîed
(*
ë
)

83 
evít
 *
ev
 = 
NULL
;

84 
evít_ba£
 *
ba£
 = 
NULL
;

85 c⁄° *
ã°
 = "test string";

86 
evutû_sockë_t
 
∑ú
[2] = {-1,-1};

87 
suµ‹ts_ë
;

95 #ifde‡
__löux__


96 i‡(
	`evutû_îßtz_sockë∑ú
(
AF_INET
, 
SOCK_STREAM
, 0, 
∑ú
) == -1) {

97 
	`â_ab‹t_≥º‹
("socketpair");

100 i‡(
	`evutû_sockë∑ú
(
LOCAL_SOCKETPAIR_AF
, 
SOCK_STREAM
, 0, 
∑ú
) == -1) {

101 
	`â_ab‹t_≥º‹
("socketpair");

105 
ˇŒed
 = 
was_ë
 = 0;

107 
	`â_öt_›
(
	`£nd
(
∑ú
[0], 
ã°
, ()
	`°æí
(test)+1, 0), >, 0);

108 
	`shutdown
(
∑ú
[0], 
SHUT_WR
);

111 
ba£
 = 
	`evít_ba£_√w
();

113 i‡(!
	`°rcmp
(
	`evít_ba£_gë_mëhod
(
ba£
), "epoll") ||

114 !
	`°rcmp
(
	`evít_ba£_gë_mëhod
(
ba£
), "epoll (with changelist)") ||

115 !
	`°rcmp
(
	`evít_ba£_gë_mëhod
(
ba£
), "kqueue"))

116 
suµ‹ts_ë
 = 1;

118 
suµ‹ts_ë
 = 0;

120 
	`TT_BLATHER
(("Checking forÉdge-triggeredÉvents with %s, which should %s"

121 "suµ‹àedge-åiggîög", 
	`evít_ba£_gë_mëhod
(
ba£
),

122 
suµ‹ts_ë
?"":"not "));

125 
ev
 = 
	`evít_√w
(
ba£
, 
∑ú
[1], 
EV_READ
|
EV_ET
|
EV_PERSIST
, 
ªad_cb
, &ev);

127 
	`evít_add
(
ev
, 
NULL
);

136 
	`evít_ba£_lo›
(
ba£
,
EVLOOP_NONBLOCK
|
EVLOOP_ONCE
);

137 
	`evít_ba£_lo›
(
ba£
,
EVLOOP_NONBLOCK
|
EVLOOP_ONCE
);

139 i‡(
suµ‹ts_ë
) {

140 
	`â_öt_›
(
ˇŒed
, ==, 1);

141 
	`â_as£π
(
was_ë
);

143 
	`â_öt_›
(
ˇŒed
, ==, 2);

144 
	`â_as£π
(!
was_ë
);

147 
íd
:

148 i‡(
ev
) {

149 
	`evít_dñ
(
ev
);

150 
	`evít_‰ì
(
ev
);

152 i‡(
ba£
)

153 
	`evít_ba£_‰ì
(
ba£
);

154 
	`evutû_˛o£sockë
(
∑ú
[0]);

155 
	`evutû_˛o£sockë
(
∑ú
[1]);

156 
	}
}

159 
	$ã°_edgëriggîed_mix_îr‹
(*
d©a_
)

161 
basic_ã°_d©a
 *
d©a
 = 
d©a_
;

162 
evít_ba£
 *
ba£
 = 
NULL
;

163 
evít
 *
ev_ë
=
NULL
, *
ev_…
=NULL;

165 #ifde‡
_EVENT_DISABLE_DEBUG_MODE


167 
	`â_skù
();

170 
	`evít_íabÀ_debug_mode
();

172 
ba£
 = 
	`evít_ba£_√w
();

175 
ev_ë
 = 
	`evít_√w
(
ba£
, 
d©a
->
∑ú
[0], 
EV_READ
|
EV_ET
, 
ªad_cb
,Év_et);

176 
	`â_as£π
(
ev_ë
);

177 
ev_…
 = 
	`evít_√w
(
ba£
, 
d©a
->
∑ú
[0], 
EV_READ
, 
ªad_cb
,Év_lt);

178 
	`â_as£π
(
ev_…
);

181 
	`â_öt_›
(0, ==, 
	`evít_add
(
ev_ë
, 
NULL
));

182 
	`â_öt_›
(-1, ==, 
	`evít_add
(
ev_…
, 
NULL
));

183 
	`â_öt_›
(
EV_READ
, ==, 
	`evít_≥ndög
(
ev_ë
, EV_READ, 
NULL
));

184 
	`â_öt_›
(0, ==, 
	`evít_≥ndög
(
ev_…
, 
EV_READ
, 
NULL
));

186 
	`â_öt_›
(0, ==, 
	`evít_dñ
(
ev_ë
));

188 
	`â_öt_›
(0, ==, 
	`evít_add
(
ev_…
, 
NULL
));

189 
	`â_öt_›
(-1, ==, 
	`evít_add
(
ev_ë
, 
NULL
));

190 
	`â_öt_›
(
EV_READ
, ==, 
	`evít_≥ndög
(
ev_…
, EV_READ, 
NULL
));

191 
	`â_öt_›
(0, ==, 
	`evít_≥ndög
(
ev_ë
, 
EV_READ
, 
NULL
));

193 
íd
:

194 i‡(
ev_ë
)

195 
	`evít_‰ì
(
ev_ë
);

196 i‡(
ev_…
)

197 
	`evít_‰ì
(
ev_…
);

198 i‡(
ba£
)

199 
	`evít_ba£_‰ì
(
ba£
);

200 
	}
}

202 
ã°ˇ£_t
 
	gedgëriggîed_ã°ˇ£s
[] = {

203 { "ë", 
ã°_edgëriggîed
, 
TT_FORK
, 
NULL
, NULL },

204 { "ë_mix_îr‹", 
ã°_edgëriggîed_mix_îr‹
,

205 
TT_FORK
|
TT_NEED_SOCKETPAIR
|
TT_NO_LOGS
, &
basic_£tup
, 
NULL
 },

206 
END_OF_TESTCASES


	@test/regress_http.c

28 #ifde‡
WIN32


29 
	~<wösock2.h
>

30 
	~<ws2t˝ù.h
>

31 
	~<wödows.h
>

34 
	~"evít2/evít-c⁄fig.h
"

36 
	~<sys/ty≥s.h
>

37 
	~<sys/°©.h
>

38 #ifde‡
_EVENT_HAVE_SYS_TIME_H


39 
	~<sys/time.h
>

41 
	~<sys/queue.h
>

42 #i‚de‡
WIN32


43 
	~<sys/sockë.h
>

44 
	~<sig«l.h
>

45 
	~<uni°d.h
>

46 
	~<√tdb.h
>

48 
	~<f˙é.h
>

49 
	~<°dlib.h
>

50 
	~<°dio.h
>

51 
	~<°rög.h
>

52 
	~<î∫o.h
>

54 
	~"evít2/dns.h
"

56 
	~"evít2/evít.h
"

57 
	~"evít2/hâp.h
"

58 
	~"evít2/buf„r.h
"

59 
	~"evít2/buf„ªvít.h
"

60 
	~"evít2/utû.h
"

61 
	~"log-öã∫Æ.h
"

62 
	~"utû-öã∫Æ.h
"

63 
	~"hâp-öã∫Æ.h
"

64 
	~"ªgªss.h
"

65 
	~"ªgªss_ã°utûs.h
"

67 
evhâp
 *
	ghâp
;

69 
evít_ba£
 *
	gexô_ba£
;

71 c⁄° 
	gBASIC_REQUEST_BODY
[] = "This is funny";

73 
hâp_basic_cb
(
evhâp_ªque°
 *
ªq
, *
¨g
);

74 
hâp_chunked_cb
(
evhâp_ªque°
 *
ªq
, *
¨g
);

75 
hâp_po°_cb
(
evhâp_ªque°
 *
ªq
, *
¨g
);

76 
hâp_put_cb
(
evhâp_ªque°
 *
ªq
, *
¨g
);

77 
hâp_dñëe_cb
(
evhâp_ªque°
 *
ªq
, *
¨g
);

78 
hâp_dñay_cb
(
evhâp_ªque°
 *
ªq
, *
¨g
);

79 
hâp_œrge_dñay_cb
(
evhâp_ªque°
 *
ªq
, *
¨g
);

80 
hâp_badªq_cb
(
evhâp_ªque°
 *
ªq
, *
¨g
);

81 
hâp_di•©chî_cb
(
evhâp_ªque°
 *
ªq
, *
¨g
);

83 
	$hâp_böd
(
evhâp
 *
myhâp
, 
ev_uöt16_t
 *
µ‹t
)

85 
p‹t
;

86 
evhâp_bound_sockë
 *
sock
;

88 
sock
 = 
	`evhâp_böd_sockë_wôh_h™dÀ
(
myhâp
, "127.0.0.1", *
µ‹t
);

89 i‡(
sock
 =
NULL
)

90 
	`evít_îrx
(1, "CouldÇot start web server");

92 
p‹t
 = 
	`ªgªss_gë_sockë_p‹t
(
	`evhâp_bound_sockë_gë_fd
(
sock
));

93 i‡(
p‹t
 < 0)

95 *
µ‹t
 = (
ev_uöt16_t
Ë
p‹t
;

98 
	}
}

100 
evhâp
 *

101 
	$hâp_£tup
(
ev_uöt16_t
 *
µ‹t
, 
evít_ba£
 *
ba£
)

103 
evhâp
 *
myhâp
;

106 
myhâp
 = 
	`evhâp_√w
(
ba£
);

108 i‡(
	`hâp_böd
(
myhâp
, 
µ‹t
) < 0)

109  
NULL
;

112 
	`evhâp_£t_cb
(
myhâp
, "/ã°", 
hâp_basic_cb
, 
ba£
);

113 
	`evhâp_£t_cb
(
myhâp
, "/chunked", 
hâp_chunked_cb
, 
ba£
);

114 
	`evhâp_£t_cb
(
myhâp
, "/°ªamed", 
hâp_chunked_cb
, 
ba£
);

115 
	`evhâp_£t_cb
(
myhâp
, "/po°ô", 
hâp_po°_cb
, 
ba£
);

116 
	`evhâp_£t_cb
(
myhâp
, "/putô", 
hâp_put_cb
, 
ba£
);

117 
	`evhâp_£t_cb
(
myhâp
, "/dñëeô", 
hâp_dñëe_cb
, 
ba£
);

118 
	`evhâp_£t_cb
(
myhâp
, "/dñay", 
hâp_dñay_cb
, 
ba£
);

119 
	`evhâp_£t_cb
(
myhâp
, "/œrgedñay", 
hâp_œrge_dñay_cb
, 
ba£
);

120 
	`evhâp_£t_cb
(
myhâp
, "/badªque°", 
hâp_badªq_cb
, 
ba£
);

121 
	`evhâp_£t_cb
(
myhâp
, "/", 
hâp_di•©chî_cb
, 
ba£
);

122  (
myhâp
);

123 
	}
}

125 #i‚de‡
NI_MAXSERV


126 
	#NI_MAXSERV
 1024

	)

129 
evutû_sockë_t


130 
	$hâp_c⁄√˘
(c⁄° *
addªss
, 
u_sh‹t
 
p‹t
)

133 
evutû_addröfo
 
ai
, *
aô›
;

134 
°Ω‹t
[
NI_MAXSERV
];

136 
sockaddr
 *
ß
;

137 
¶í
;

138 
evutû_sockë_t
 
fd
;

140 
	`mem£t
(&
ai
, 0, (ai));

141 
ai
.
ai_Ámûy
 = 
AF_INET
;

142 
ai
.
ai_sockty≥
 = 
SOCK_STREAM
;

143 
	`evutû_¢¥ötf
(
°Ω‹t
, (°Ω‹t), "%d", 
p‹t
);

144 i‡(
	`evutû_gëaddröfo
(
addªss
, 
°Ω‹t
, &
ai
, &
aô›
) != 0) {

145 
	`evít_w¨n
("getaddrinfo");

148 
ß
 = 
aô›
->
ai_addr
;

149 
¶í
 = 
aô›
->
ai_addæí
;

151 
fd
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

152 i‡(
fd
 == -1)

153 
	`evít_îr
(1, "socket failed");

155 
	`evutû_make_sockë_n⁄blockög
(
fd
);

156 i‡(
	`c⁄√˘
(
fd
, 
ß
, 
¶í
) == -1) {

157 #ifde‡
WIN32


158 
tmp_îr
 = 
	`WSAGëLa°Eº‹
();

159 i‡(
tmp_îr
 !
WSAEINPROGRESS
 &&Åmp_î∏!
WSAEINVAL
 &&

160 
tmp_îr
 !
WSAEWOULDBLOCK
)

161 
	`evít_îr
(1, "connect failed");

163 i‡(
î∫o
 !
EINPROGRESS
)

164 
	`evít_îr
(1, "connect failed");

168 
	`evutû_‰ìaddröfo
(
aô›
);

170  (
fd
);

171 
	}
}

175 
	$evbuf„r_d©acmp
(
evbuf„r
 *
buf
, c⁄° *
s
)

177 
size_t
 
b_sz
 = 
	`evbuf„r_gë_Àngth
(
buf
);

178 
size_t
 
s_sz
 = 
	`°æí
(
s
);

179 *
d
;

180 
r
;

182 i‡(
b_sz
 < 
s_sz
)

185 
d
 = 
	`evbuf„r_puŒup
(
buf
, 
s_sz
);

186 i‡((
r
 = 
	`memcmp
(
d
, 
s
, 
s_sz
)))

187  
r
;

189 i‡(
b_sz
 > 
s_sz
)

193 
	}
}

197 
	$evbuf„r_c⁄èös
(
evbuf„r
 *
buf
, c⁄° *
s
)

199 
evbuf„r_±r
 
±r
;

200 
±r
 = 
	`evbuf„r_£¨ch
(
buf
, 
s
, 
	`°æí
(s), 
NULL
);

201  
±r
.
pos
 != -1;

202 
	}
}

205 
	$hâp_ªadcb
(
buf„ªvít
 *
bev
, *
¨g
)

207 c⁄° *
wh©
 = 
BASIC_REQUEST_BODY
;

208 
evít_ba£
 *
my_ba£
 = 
¨g
;

210 i‡(
	`evbuf„r_c⁄èös
(
	`buf„ªvít_gë_öput
(
bev
), 
wh©
)) {

211 
evhâp_ªque°
 *
ªq
 = 
	`evhâp_ªque°_√w
(
NULL
, NULL);

212 
mesßge_ªad_°©us
 
d⁄e
;

215 
d⁄e
 = 
	`evhâp_∑r£_fú°löe
(
ªq
, 
	`buf„ªvít_gë_öput
(
bev
));

216 i‡(
d⁄e
 !
ALL_DATA_READ
)

217 
out
;

219 
d⁄e
 = 
	`evhâp_∑r£_hódîs
(
ªq
, 
	`buf„ªvít_gë_öput
(
bev
));

220 i‡(
d⁄e
 !
ALL_DATA_READ
)

221 
out
;

223 i‡(
d⁄e
 == 1 &&

224 
	`evhâp_föd_hódî
(
	`evhâp_ªque°_gë_öput_hódîs
(
ªq
),

225 "C⁄ã¡-Ty≥"Ë!
NULL
)

226 
ã°_ok
++;

228 
out
:

229 
	`evhâp_ªque°_‰ì
(
ªq
);

230 
	`buf„ªvít_dißbÀ
(
bev
, 
EV_READ
);

231 i‡(
exô_ba£
)

232 
	`evít_ba£_lo›exô
(
exô_ba£
, 
NULL
);

233 i‡(
my_ba£
)

234 
	`evít_ba£_lo›exô
(
my_ba£
, 
NULL
);

236 
	`Ârötf
(
°dîr
, "No wayÅoÉxitÜoop!\n");

237 
	`exô
(1);

240 
	}
}

243 
	$hâp_wrôecb
(
buf„ªvít
 *
bev
, *
¨g
)

245 i‡(
	`evbuf„r_gë_Àngth
(
	`buf„ªvít_gë_ouçut
(
bev
)) == 0) {

247 
	`buf„ªvít_íabÀ
(
bev
, 
EV_READ
);

248 
ã°_ok
++;

250 
	}
}

253 
	$hâp_îr‹cb
(
buf„ªvít
 *
bev
, 
wh©
, *
¨g
)

255 
ã°_ok
 = -2;

256 
	`evít_ba£_lo›exô
(
¨g
, 
NULL
);

257 
	}
}

260 
	$hâp_basic_cb
(
evhâp_ªque°
 *
ªq
, *
¨g
)

262 
evbuf„r
 *
evb
 = 
	`evbuf„r_√w
();

263 
em±y
 = 
	`evhâp_föd_hódî
(
	`evhâp_ªque°_gë_öput_hódîs
(
ªq
), "Em±y"Ë!
NULL
;

264 
	`evít_debug
(("%s: cÆÀd\n", 
__func__
));

265 
	`evbuf„r_add_¥ötf
(
evb
, 
BASIC_REQUEST_BODY
);

269 c⁄° *
mu…i
 =

270 
	`evhâp_föd_hódî
(
	`evhâp_ªque°_gë_öput_hódîs
(
ªq
),"X-multi");

271 i‡(
mu…i
) {

272 i‡(
	`°rcmp
("END", 
mu…i
 + 
	`°æí
(multi) - 3) == 0)

273 
ã°_ok
++;

274 i‡(
	`evhâp_föd_hódî
(
	`evhâp_ªque°_gë_öput_hódîs
(
ªq
), "X-Last"))

275 
ã°_ok
++;

280 i‡(
	`evhâp_föd_hódî
(
	`evhâp_ªque°_gë_öput_hódîs
(
ªq
), "X-Negative"))

281 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
),

285 
	`evhâp_£nd_ª∂y
(
ªq
, 
HTTP_OK
, "Everything is fine",

286 !
em±y
 ? 
evb
 : 
NULL
);

288 
	`evbuf„r_‰ì
(
evb
);

289 
	}
}

291 c⁄°* c⁄° 
	gCHUNKS
[] = {

297 
	schunk_ªq_°©e
 {

298 
evít_ba£
 *
	mba£
;

299 
evhâp_ªque°
 *
	mªq
;

300 
	mi
;

304 
	$hâp_chunked_åickÀ_cb
(
evutû_sockë_t
 
fd
, 
evíts
, *
¨g
)

306 
evbuf„r
 *
evb
 = 
	`evbuf„r_√w
();

307 
chunk_ªq_°©e
 *
°©e
 = 
¨g
;

308 
timevÆ
 
whí
 = { 0, 0 };

310 
	`evbuf„r_add_¥ötf
(
evb
, "%s", 
CHUNKS
[
°©e
->
i
]);

311 
	`evhâp_£nd_ª∂y_chunk
(
°©e
->
ªq
, 
evb
);

312 
	`evbuf„r_‰ì
(
evb
);

314 i‡(++
°©e
->
i
 < (Ë((
CHUNKS
)/(CHUNKS[0]))) {

315 
	`evít_ba£_⁄˚
(
°©e
->
ba£
, -1, 
EV_TIMEOUT
,

316 
hâp_chunked_åickÀ_cb
, 
°©e
, &
whí
);

318 
	`evhâp_£nd_ª∂y_íd
(
°©e
->
ªq
);

319 
	`‰ì
(
°©e
);

321 
	}
}

324 
	$hâp_chunked_cb
(
evhâp_ªque°
 *
ªq
, *
¨g
)

326 
timevÆ
 
whí
 = { 0, 0 };

327 
chunk_ªq_°©e
 *
°©e
 = 
	`mÆloc
((chunk_req_state));

328 
	`evít_debug
(("%s: cÆÀd\n", 
__func__
));

330 
	`mem£t
(
°©e
, 0, (
chunk_ªq_°©e
));

331 
°©e
->
ªq
 =Ñeq;

332 
°©e
->
ba£
 = 
¨g
;

334 i‡(
	`°rcmp
(
	`evhâp_ªque°_gë_uri
(
ªq
), "/streamed") == 0) {

335 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Content-Length", "39");

339 
	`evhâp_£nd_ª∂y_°¨t
(
ªq
, 
HTTP_OK
, "Everything is fine");

343 
	`evít_ba£_⁄˚
(
¨g
, -1, 
EV_TIMEOUT
, 
hâp_chunked_åickÀ_cb
, 
°©e
, &
whí
);

344 
	}
}

347 
	$hâp_com∂ëe_wrôe
(
evutû_sockë_t
 
fd
, 
wh©
, *
¨g
)

349 
buf„ªvít
 *
bev
 = 
¨g
;

350 c⁄° *
hâp_ªque°
 = "host\r\n"

353 
	`buf„ªvít_wrôe
(
bev
, 
hâp_ªque°
, 
	`°æí
(http_request));

354 
	}
}

357 
	$hâp_basic_ã°
(*
¨g
)

359 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

360 
timevÆ
 
tv
;

361 
buf„ªvít
 *
bev
;

362 
evutû_sockë_t
 
fd
;

363 c⁄° *
hâp_ªque°
;

364 
ev_uöt16_t
 
p‹t
 = 0, 
p‹t2
 = 0;

366 
ã°_ok
 = 0;

368 
hâp
 = 
	`hâp_£tup
(&
p‹t
, 
d©a
->
ba£
);

371 i‡(
	`hâp_böd
(
hâp
, &
p‹t2
) == -1) {

372 
	`Ârötf
(
°dout
, "FAILED (bind)\n");

373 
	`exô
(1);

376 
fd
 = 
	`hâp_c⁄√˘
("127.0.0.1", 
p‹t
);

379 
bev
 = 
	`buf„ªvít_sockë_√w
(
d©a
->
ba£
, 
fd
, 0);

380 
	`buf„ªvít_£tcb
(
bev
, 
hâp_ªadcb
, 
hâp_wrôecb
,

381 
hâp_îr‹cb
, 
d©a
->
ba£
);

384 
hâp_ªque°
 =

388 
	`buf„ªvít_wrôe
(
bev
, 
hâp_ªque°
, 
	`°æí
(http_request));

389 
	`evutû_timî˛ór
(&
tv
);

390 
tv
.
tv_u£c
 = 10000;

391 
	`evít_ba£_⁄˚
(
d©a
->
ba£
,

392 -1, 
EV_TIMEOUT
, 
hâp_com∂ëe_wrôe
, 
bev
, &
tv
);

394 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

396 
	`â_as£π
(
ã°_ok
 == 3);

399 
	`buf„ªvít_‰ì
(
bev
);

400 
	`evutû_˛o£sockë
(
fd
);

402 
fd
 = 
	`hâp_c⁄√˘
("127.0.0.1", 
p‹t2
);

405 
bev
 = 
	`buf„ªvít_sockë_√w
(
d©a
->
ba£
, 
fd
, 0);

406 
	`buf„ªvít_£tcb
(
bev
, 
hâp_ªadcb
, 
hâp_wrôecb
,

407 
hâp_îr‹cb
, 
d©a
->
ba£
);

409 
hâp_ªque°
 =

415 
	`buf„ªvít_wrôe
(
bev
, 
hâp_ªque°
, 
	`°æí
(http_request));

417 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

419 
	`â_as£π
(
ã°_ok
 == 5);

422 
	`buf„ªvít_‰ì
(
bev
);

423 
	`evutû_˛o£sockë
(
fd
);

425 
fd
 = 
	`hâp_c⁄√˘
("127.0.0.1", 
p‹t2
);

428 
bev
 = 
	`buf„ªvít_sockë_√w
(
d©a
->
ba£
, 
fd
, 0);

429 
	`buf„ªvít_£tcb
(
bev
, 
hâp_ªadcb
, 
hâp_wrôecb
,

430 
hâp_îr‹cb
, 
d©a
->
ba£
);

432 
hâp_ªque°
 =

438 
	`buf„ªvít_wrôe
(
bev
, 
hâp_ªque°
, 
	`°æí
(http_request));

440 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

442 
	`â_as£π
(
ã°_ok
 == 7);

444 
	`evhâp_‰ì
(
hâp
);

445 
íd
:

447 
	}
}

450 
	$hâp_dñay_ª∂y
(
evutû_sockë_t
 
fd
, 
wh©
, *
¨g
)

452 
evhâp_ªque°
 *
ªq
 = 
¨g
;

454 
	`evhâp_£nd_ª∂y
(
ªq
, 
HTTP_OK
, "Evîythög i†föe", 
NULL
);

456 ++
ã°_ok
;

457 
	}
}

460 
	$hâp_dñay_cb
(
evhâp_ªque°
 *
ªq
, *
¨g
)

462 
timevÆ
 
tv
;

463 
	`evutû_timî˛ór
(&
tv
);

464 
tv
.
tv_£c
 = 0;

465 
tv
.
tv_u£c
 = 200 * 1000;

467 
	`evít_ba£_⁄˚
(
¨g
, -1, 
EV_TIMEOUT
, 
hâp_dñay_ª∂y
, 
ªq
, &
tv
);

468 
	}
}

471 
	$hâp_badªq_cb
(
evhâp_ªque°
 *
ªq
, *
¨g
)

473 
evbuf„r
 *
buf
 = 
	`evbuf„r_√w
();

475 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Content-Type", "text/xml; charset=UTF-8");

476 
	`evbuf„r_add_¥ötf
(
buf
, "Hello, %s!", "127.0.0.1");

478 
	`evhâp_£nd_ª∂y
(
ªq
, 
HTTP_OK
, "OK", 
buf
);

479 
	`evbuf„r_‰ì
(
buf
);

480 
	}
}

483 
	$hâp_badªq_îr‹cb
(
buf„ªvít
 *
bev
, 
wh©
, *
¨g
)

485 
	`evít_debug
(("%s: cÆÀd (wh©=%04x,árg=%p)", 
__func__
, 
wh©
, 
¨g
));

487 
	}
}

489 #i‚de‡
SHUT_WR


490 #ifde‡
WIN32


491 
	#SHUT_WR
 
SD_SEND


	)

493 
	#SHUT_WR
 1

	)

498 
	$hâp_badªq_ªadcb
(
buf„ªvít
 *
bev
, *
¨g
)

500 c⁄° *
wh©
 = "Hello, 127.0.0.1";

501 c⁄° *
bad_ªque°
 = "400 Bad Request";

503 i‡(
	`evbuf„r_c⁄èös
(
	`buf„ªvít_gë_öput
(
bev
), 
bad_ªque°
)) {

504 
	`TT_FAIL
(("%s:badÑeque° dëe˘ed", 
__func__
));

505 
	`buf„ªvít_dißbÀ
(
bev
, 
EV_READ
);

506 
	`evít_ba£_lo›exô
(
¨g
, 
NULL
);

510 i‡(
	`evbuf„r_c⁄èös
(
	`buf„ªvít_gë_öput
(
bev
), 
wh©
)) {

511 
evhâp_ªque°
 *
ªq
 = 
	`evhâp_ªque°_√w
(
NULL
, NULL);

512 
mesßge_ªad_°©us
 
d⁄e
;

515 
d⁄e
 = 
	`evhâp_∑r£_fú°löe
(
ªq
, 
	`buf„ªvít_gë_öput
(
bev
));

516 i‡(
d⁄e
 !
ALL_DATA_READ
)

517 
out
;

519 
d⁄e
 = 
	`evhâp_∑r£_hódîs
(
ªq
, 
	`buf„ªvít_gë_öput
(
bev
));

520 i‡(
d⁄e
 !
ALL_DATA_READ
)

521 
out
;

523 i‡(
d⁄e
 == 1 &&

524 
	`evhâp_föd_hódî
(
	`evhâp_ªque°_gë_öput_hódîs
(
ªq
),

525 "C⁄ã¡-Ty≥"Ë!
NULL
)

526 
ã°_ok
++;

528 
out
:

529 
	`evhâp_ªque°_‰ì
(
ªq
);

530 
	`evbuf„r_døö
(
	`buf„ªvít_gë_öput
(
bev
), 
	`evbuf„r_gë_Àngth
(bufferevent_get_input(bev)));

533 
	`shutdown
(
	`buf„ªvít_gëfd
(
bev
), 
SHUT_WR
);

534 
	}
}

537 
	$hâp_badªq_suc˚sscb
(
evutû_sockë_t
 
fd
, 
wh©
, *
¨g
)

539 
	`evít_debug
(("%s: cÆÀd (wh©=%04x,árg=%p)", 
__func__
, 
wh©
, 
¨g
));

540 
	`evít_ba£_lo›exô
(
exô_ba£
, 
NULL
);

541 
	}
}

544 
	$hâp_bad_ªque°_ã°
(*
¨g
)

546 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

547 
timevÆ
 
tv
;

548 
buf„ªvít
 *
bev
 = 
NULL
;

549 
evutû_sockë_t
 
fd
;

550 c⁄° *
hâp_ªque°
;

551 
ev_uöt16_t
 
p‹t
=0, 
p‹t2
=0;

553 
ã°_ok
 = 0;

554 
exô_ba£
 = 
d©a
->
ba£
;

556 
hâp
 = 
	`hâp_£tup
(&
p‹t
, 
d©a
->
ba£
);

559 i‡(
	`hâp_böd
(
hâp
, &
p‹t2
) == -1)

560 
	`TT_DIE
(("Bind socket failed"));

563 
fd
 = 
	`hâp_c⁄√˘
("127.0.0.1", 
p‹t
);

566 
bev
 = 
	`buf„ªvít_sockë_√w
(
d©a
->
ba£
, 
fd
, 0);

567 
	`buf„ªvít_£tcb
(
bev
, 
hâp_badªq_ªadcb
, 
hâp_wrôecb
,

568 
hâp_badªq_îr‹cb
, 
d©a
->
ba£
);

569 
	`buf„ªvít_íabÀ
(
bev
, 
EV_READ
);

572 
hâp_ªque°
 = "";

574 
	`buf„ªvít_wrôe
(
bev
, 
hâp_ªque°
, 
	`°æí
(http_request));

576 
	`shutdown
(
fd
, 
SHUT_WR
);

577 
	`timî˛ór
(&
tv
);

578 
tv
.
tv_u£c
 = 10000;

579 
	`evít_ba£_⁄˚
(
d©a
->
ba£
, -1, 
EV_TIMEOUT
, 
hâp_badªq_suc˚sscb
, 
bev
, &
tv
);

581 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

583 
	`buf„ªvít_‰ì
(
bev
);

584 
	`evutû_˛o£sockë
(
fd
);

586 i‡(
ã°_ok
 != 0) {

587 
	`Ârötf
(
°dout
, "FAILED\n");

588 
	`exô
(1);

594 
fd
 = 
	`hâp_c⁄√˘
("127.0.0.1", 
p‹t2
);

597 
bev
 = 
	`buf„ªvít_sockë_√w
(
d©a
->
ba£
, 
fd
, 0);

598 
	`buf„ªvít_£tcb
(
bev
, 
hâp_badªq_ªadcb
, 
hâp_wrôecb
,

599 
hâp_badªq_îr‹cb
, 
d©a
->
ba£
);

600 
	`buf„ªvít_íabÀ
(
bev
, 
EV_READ
);

603 
hâp_ªque°
 =

608 
	`buf„ªvít_wrôe
(
bev
, 
hâp_ªque°
, 
	`°æí
(http_request));

610 
	`timî˛ór
(&
tv
);

611 
tv
.
tv_u£c
 = 10000;

612 
	`evít_ba£_⁄˚
(
d©a
->
ba£
, -1, 
EV_TIMEOUT
, 
hâp_badªq_suc˚sscb
, 
bev
, &
tv
);

614 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

616 
	`â_öt_›
(
ã°_ok
, ==, 2);

618 
íd
:

619 
	`evhâp_‰ì
(
hâp
);

620 i‡(
bev
)

621 
	`buf„ªvít_‰ì
(
bev
);

622 
	}
}

624 
evhâp_c⁄√˘i⁄
 *
	gdñayed_˛õ¡
;

627 
	$hâp_œrge_dñay_cb
(
evhâp_ªque°
 *
ªq
, *
¨g
)

629 
timevÆ
 
tv
;

630 
	`evutû_timî˛ór
(&
tv
);

631 
tv
.
tv_£c
 = 3;

633 
	`evít_ba£_⁄˚
(
¨g
, -1, 
EV_TIMEOUT
, 
hâp_dñay_ª∂y
, 
ªq
, &
tv
);

634 
	`evhâp_c⁄√˘i⁄_Áû
(
dñayed_˛õ¡
, 
EVCON_HTTP_EOF
);

635 
	}
}

642 
	$hâp_dñëe_cb
(
evhâp_ªque°
 *
ªq
, *
¨g
)

644 
evbuf„r
 *
evb
 = 
	`evbuf„r_√w
();

645 
em±y
 = 
	`evhâp_föd_hódî
(
	`evhâp_ªque°_gë_öput_hódîs
(
ªq
), "Em±y"Ë!
NULL
;

648 i‡(
	`evhâp_ªque°_gë_comm™d
(
ªq
Ë!
EVHTTP_REQ_DELETE
) {

649 
	`Ârötf
(
°dout
, "FAILED (deleteÅype)\n");

650 
	`exô
(1);

653 
	`evít_debug
(("%s: cÆÀd\n", 
__func__
));

654 
	`evbuf„r_add_¥ötf
(
evb
, 
BASIC_REQUEST_BODY
);

657 
	`evhâp_£nd_ª∂y
(
ªq
, 
HTTP_OK
, "Everything is fine",

658 !
em±y
 ? 
evb
 : 
NULL
);

660 
	`evbuf„r_‰ì
(
evb
);

661 
	}
}

664 
	$hâp_dñëe_ã°
(*
¨g
)

666 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

667 
buf„ªvít
 *
bev
;

668 
evutû_sockë_t
 
fd
;

669 c⁄° *
hâp_ªque°
;

670 
ev_uöt16_t
 
p‹t
 = 0;

672 
ã°_ok
 = 0;

674 
hâp
 = 
	`hâp_£tup
(&
p‹t
, 
d©a
->
ba£
);

676 
fd
 = 
	`hâp_c⁄√˘
("127.0.0.1", 
p‹t
);

679 
bev
 = 
	`buf„ªvít_sockë_√w
(
d©a
->
ba£
, 
fd
, 0);

680 
	`buf„ªvít_£tcb
(
bev
, 
hâp_ªadcb
, 
hâp_wrôecb
,

681 
hâp_îr‹cb
, 
d©a
->
ba£
);

683 
hâp_ªque°
 =

689 
	`buf„ªvít_wrôe
(
bev
, 
hâp_ªque°
, 
	`°æí
(http_request));

691 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

693 
	`buf„ªvít_‰ì
(
bev
);

694 
	`evutû_˛o£sockë
(
fd
);

696 
	`evhâp_‰ì
(
hâp
);

698 
	`â_öt_›
(
ã°_ok
, ==, 2);

699 
íd
:

701 
	}
}

704 
	$hâp_Ælowed_mëhods_evítcb
(
buf„ªvít
 *
bev
, 
wh©
, *
¨g
)

706 **
ouçut
 = 
¨g
;

707 i‡((
wh©
 & (
BEV_EVENT_ERROR
|
BEV_EVENT_EOF
))) {

708 
buf
[4096];

709 
n
;

710 
n
 = 
	`evbuf„r_ªmove
(
	`buf„ªvít_gë_öput
(
bev
), 
buf
,

711 (
buf
)-1);

712 i‡(
n
 >= 0) {

713 
buf
[
n
]='\0';

714 i‡(*
ouçut
)

715 
	`‰ì
(*
ouçut
);

716 *
ouçut
 = 
	`°rdup
(
buf
);

718 
	`evít_ba£_lo›exô
(
exô_ba£
, 
NULL
);

720 
	}
}

723 
	$hâp_Ælowed_mëhods_ã°
(*
¨g
)

725 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

726 
buf„ªvít
 *
bev1
, *
bev2
, *
bev3
;

727 
evutû_sockë_t
 
fd1
, 
fd2
, 
fd3
;

728 c⁄° *
hâp_ªque°
;

729 *
ªsu…1
=
NULL
, *
ªsu…2
=NULL, *
ªsu…3
=NULL;

730 
ev_uöt16_t
 
p‹t
 = 0;

732 
exô_ba£
 = 
d©a
->
ba£
;

733 
ã°_ok
 = 0;

735 
hâp
 = 
	`hâp_£tup
(&
p‹t
, 
d©a
->
ba£
);

737 
fd1
 = 
	`hâp_c⁄√˘
("127.0.0.1", 
p‹t
);

740 
	`evhâp_£t_Ælowed_mëhods
(
hâp
, 
EVHTTP_REQ_PATCH
);

743 
bev1
 = 
	`buf„ªvít_sockë_√w
(
d©a
->
ba£
, 
fd1
, 0);

744 
	`buf„ªvít_íabÀ
(
bev1
, 
EV_READ
|
EV_WRITE
);

745 
	`buf„ªvít_£tcb
(
bev1
, 
NULL
, NULL,

746 
hâp_Ælowed_mëhods_evítcb
, &
ªsu…1
);

748 
hâp_ªque°
 =

754 
	`buf„ªvít_wrôe
(
bev1
, 
hâp_ªque°
, 
	`°æí
(http_request));

756 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

758 
fd2
 = 
	`hâp_c⁄√˘
("127.0.0.1", 
p‹t
);

760 
bev2
 = 
	`buf„ªvít_sockë_√w
(
d©a
->
ba£
, 
fd2
, 0);

761 
	`buf„ªvít_íabÀ
(
bev2
, 
EV_READ
|
EV_WRITE
);

762 
	`buf„ªvít_£tcb
(
bev2
, 
NULL
, NULL,

763 
hâp_Ælowed_mëhods_evítcb
, &
ªsu…2
);

765 
hâp_ªque°
 =

771 
	`buf„ªvít_wrôe
(
bev2
, 
hâp_ªque°
, 
	`°æí
(http_request));

773 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

775 
fd3
 = 
	`hâp_c⁄√˘
("127.0.0.1", 
p‹t
);

777 
bev3
 = 
	`buf„ªvít_sockë_√w
(
d©a
->
ba£
, 
fd3
, 0);

778 
	`buf„ªvít_íabÀ
(
bev3
, 
EV_READ
|
EV_WRITE
);

779 
	`buf„ªvít_£tcb
(
bev3
, 
NULL
, NULL,

780 
hâp_Ælowed_mëhods_evítcb
, &
ªsu…3
);

782 
hâp_ªque°
 =

788 
	`buf„ªvít_wrôe
(
bev3
, 
hâp_ªque°
, 
	`°æí
(http_request));

790 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

792 
	`buf„ªvít_‰ì
(
bev1
);

793 
	`buf„ªvít_‰ì
(
bev2
);

794 
	`buf„ªvít_‰ì
(
bev3
);

795 
	`evutû_˛o£sockë
(
fd1
);

796 
	`evutû_˛o£sockë
(
fd2
);

797 
	`evutû_˛o£sockë
(
fd3
);

799 
	`evhâp_‰ì
(
hâp
);

802 
	`â_as£π
(
ªsu…1
);

803 
	`â_as£π
(!
	`°∫cmp
(
ªsu…1
, "HTTP/1.1 501 ", 
	`°æí
("HTTP/1.1 501 ")));

806 
	`â_as£π
(
ªsu…2
);

807 
	`â_as£π
(!
	`°∫cmp
(
ªsu…2
, "HTTP/1.1 200 ", 
	`°æí
("HTTP/1.1 200 ")));

810 
	`â_as£π
(
ªsu…3
);

811 
	`â_as£π
(!
	`°∫cmp
(
ªsu…3
, "HTTP/1.1 501 ", 
	`°æí
("HTTP/1.1 501 ")));

813 
íd
:

814 i‡(
ªsu…1
)

815 
	`‰ì
(
ªsu…1
);

816 i‡(
ªsu…2
)

817 
	`‰ì
(
ªsu…2
);

818 i‡(
ªsu…3
)

819 
	`‰ì
(
ªsu…3
);

820 
	}
}

822 
hâp_ªque°_d⁄e
(
evhâp_ªque°
 *, *);

823 
hâp_ªque°_em±y_d⁄e
(
evhâp_ªque°
 *, *);

826 
	$_hâp_c⁄√˘i⁄_ã°
(
basic_ã°_d©a
 *
d©a
, 
≥rsi°ít
)

828 
ev_uöt16_t
 
p‹t
 = 0;

829 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
NULL
;

830 
evhâp_ªque°
 *
ªq
 = 
NULL
;

832 
ã°_ok
 = 0;

834 
hâp
 = 
	`hâp_£tup
(&
p‹t
, 
d©a
->
ba£
);

836 
evc⁄
 = 
	`evhâp_c⁄√˘i⁄_ba£_√w
(
d©a
->
ba£
, 
NULL
, "127.0.0.1", 
p‹t
);

837 
	`â_as£π
(
evc⁄
);

839 
	`â_as£π
(
	`evhâp_c⁄√˘i⁄_gë_ba£
(
evc⁄
Ë=
d©a
->
ba£
);

841 
exô_ba£
 = 
d©a
->
ba£
;

847 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_ªque°_d⁄e
, (*Ë
BASIC_REQUEST_BODY
);

850 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Host", "somehost");

853 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_GET
, "/test") == -1) {

854 
	`Ârötf
(
°dout
, "FAILED\n");

855 
	`exô
(1);

858 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

860 
	`â_as£π
(
ã°_ok
);

863 
ã°_ok
 = 0;

865 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_ªque°_d⁄e
, (*Ë
BASIC_REQUEST_BODY
);

868 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Host", "somehost");

874 i‡(!
≥rsi°ít
)

875 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Connection", "close");

878 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_GET
, "/test") == -1) {

879 
	`â_ab‹t_msg
("couldn't makeÑequest");

882 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

885 
ã°_ok
 = 0;

887 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_ªque°_em±y_d⁄e
, 
d©a
->
ba£
);

890 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Empty", "itis");

893 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_GET
, "/test") == -1) {

894 
	`â_ab‹t_msg
("Couldn't makeÑequest");

897 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

899 
íd
:

900 i‡(
evc⁄
)

901 
	`evhâp_c⁄√˘i⁄_‰ì
(
evc⁄
);

902 i‡(
hâp
)

903 
	`evhâp_‰ì
(
hâp
);

904 
	}
}

907 
	$hâp_c⁄√˘i⁄_ã°
(*
¨g
)

909 
	`_hâp_c⁄√˘i⁄_ã°
(
¨g
, 0);

910 
	}
}

912 
	$hâp_≥rsi°_c⁄√˘i⁄_ã°
(*
¨g
)

914 
	`_hâp_c⁄√˘i⁄_ã°
(
¨g
, 1);

915 
	}
}

917 
ªgªss_dns_£rvî_èbÀ
 
	g£¨ch_èbÀ
[] = {

919 { 
NULL
, NULL, NULL, 0 }

923 
	$hâp_c⁄√˘i⁄_async_ã°
(*
¨g
)

925 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

926 
ev_uöt16_t
 
p‹t
 = 0;

927 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
NULL
;

928 
evhâp_ªque°
 *
ªq
 = 
NULL
;

929 
evdns_ba£
 *
dns_ba£
 = 
NULL
;

930 
ev_uöt16_t
 
p‹äum
 = 0;

931 
addªss
[64];

933 
exô_ba£
 = 
d©a
->
ba£
;

934 
	`â_as£π
(
	`ªgªss_dns£rvî
(
d©a
->
ba£
, &
p‹äum
, 
£¨ch_èbÀ
));

936 
dns_ba£
 = 
	`evdns_ba£_√w
(
d©a
->
ba£
, 0 );

937 
	`â_as£π
(
dns_ba£
);

941 
	`evutû_¢¥ötf
(
addªss
, ◊ddªss), "127.0.0.1:%d", 
p‹äum
);

942 
	`evdns_ba£_«me£rvî_ù_add
(
dns_ba£
, 
addªss
);

944 
ã°_ok
 = 0;

946 
hâp
 = 
	`hâp_£tup
(&
p‹t
, 
d©a
->
ba£
);

948 
evc⁄
 = 
	`evhâp_c⁄√˘i⁄_ba£_√w
(
d©a
->
ba£
, 
dns_ba£
, "127.0.0.1", 
p‹t
);

949 
	`â_as£π
(
evc⁄
);

956 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_ªque°_d⁄e
, (*Ë
BASIC_REQUEST_BODY
);

959 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Host", "somehost");

962 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_GET
, "/test") == -1) {

963 
	`Ârötf
(
°dout
, "FAILED\n");

964 
	`exô
(1);

967 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

969 
	`â_as£π
(
ã°_ok
);

972 
ã°_ok
 = 0;

974 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_ªque°_d⁄e
, (*Ë
BASIC_REQUEST_BODY
);

977 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Host", "somehost");

983 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Connection", "close");

986 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_GET
, "/test") == -1) {

987 
	`â_ab‹t_msg
("couldn't makeÑequest");

990 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

993 
ã°_ok
 = 0;

995 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_ªque°_em±y_d⁄e
, 
d©a
->
ba£
);

998 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Empty", "itis");

1001 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_GET
, "/test") == -1) {

1002 
	`â_ab‹t_msg
("Couldn't makeÑequest");

1005 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

1007 
íd
:

1008 i‡(
evc⁄
)

1009 
	`evhâp_c⁄√˘i⁄_‰ì
(
evc⁄
);

1010 i‡(
hâp
)

1011 
	`evhâp_‰ì
(
hâp
);

1012 i‡(
dns_ba£
)

1013 
	`evdns_ba£_‰ì
(
dns_ba£
, 0);

1014 
	`ªgªss_˛ón_dns£rvî
();

1015 
	}
}

1018 
	$hâp_ªque°_√vî_ˇŒ
(
evhâp_ªque°
 *
ªq
, *
¨g
)

1020 
	`Ârötf
(
°dout
, "FAILED\n");

1021 
	`exô
(1);

1022 
	}
}

1025 
	$hâp_do_ˇn˚l
(
evutû_sockë_t
 
fd
, 
wh©
, *
¨g
)

1027 
evhâp_ªque°
 *
ªq
 = 
¨g
;

1028 
timevÆ
 
tv
;

1029 
evít_ba£
 *
ba£
;

1030 
	`evutû_timî˛ór
(&
tv
);

1031 
tv
.
tv_£c
 = 0;

1032 
tv
.
tv_u£c
 = 500 * 1000;

1034 
ba£
 = 
	`evhâp_c⁄√˘i⁄_gë_ba£
(
	`evhâp_ªque°_gë_c⁄√˘i⁄
(
ªq
));

1035 
	`evhâp_ˇn˚l_ªque°
(
ªq
);

1037 
	`evít_ba£_lo›exô
(
ba£
, &
tv
);

1039 ++
ã°_ok
;

1040 
	}
}

1043 
	$hâp_ˇn˚l_ã°
(*
¨g
)

1045 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

1046 
ev_uöt16_t
 
p‹t
 = 0;

1047 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
NULL
;

1048 
evhâp_ªque°
 *
ªq
 = 
NULL
;

1049 
timevÆ
 
tv
;

1051 
exô_ba£
 = 
d©a
->
ba£
;

1053 
ã°_ok
 = 0;

1055 
hâp
 = 
	`hâp_£tup
(&
p‹t
, 
d©a
->
ba£
);

1057 
evc⁄
 = 
	`evhâp_c⁄√˘i⁄_ba£_√w
(
d©a
->
ba£
, 
NULL
, "127.0.0.1", 
p‹t
);

1058 
	`â_as£π
(
evc⁄
);

1065 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_ªque°_√vî_ˇŒ
, 
NULL
);

1068 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Host", "somehost");

1071 
	`â_öt_›
(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_GET
, "/delay"),

1074 
	`evutû_timî˛ór
(&
tv
);

1075 
tv
.
tv_£c
 = 0;

1076 
tv
.
tv_u£c
 = 100 * 1000;

1078 
	`evít_ba£_⁄˚
(
d©a
->
ba£
, -1, 
EV_TIMEOUT
, 
hâp_do_ˇn˚l
, 
ªq
, &
tv
);

1080 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

1082 
	`â_öt_›
(
ã°_ok
, ==, 2);

1085 
ã°_ok
 = 0;

1087 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_ªque°_d⁄e
, (*Ë
BASIC_REQUEST_BODY
);

1090 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Host", "somehost");

1093 
	`â_öt_›
(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_GET
, "/test"),

1096 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

1099 
ã°_ok
 = 0;

1101 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_ªque°_em±y_d⁄e
, 
d©a
->
ba£
);

1104 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Empty", "itis");

1107 
	`â_öt_›
(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_GET
, "/test"),

1110 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

1112 
íd
:

1113 i‡(
evc⁄
)

1114 
	`evhâp_c⁄√˘i⁄_‰ì
(
evc⁄
);

1115 i‡(
hâp
)

1116 
	`evhâp_‰ì
(
hâp
);

1117 
	}
}

1120 
	$hâp_ªque°_d⁄e
(
evhâp_ªque°
 *
ªq
, *
¨g
)

1122 c⁄° *
wh©
 = 
¨g
;

1124 i‡(
	`evhâp_ªque°_gë_ª•⁄£_code
(
ªq
Ë!
HTTP_OK
) {

1125 
	`Ârötf
(
°dîr
, "FAILED\n");

1126 
	`exô
(1);

1129 i‡(
	`evhâp_föd_hódî
(
	`evhâp_ªque°_gë_öput_hódîs
(
ªq
), "C⁄ã¡-Ty≥"Ë=
NULL
) {

1130 
	`Ârötf
(
°dîr
, "FAILED\n");

1131 
	`exô
(1);

1134 i‡(
	`evbuf„r_gë_Àngth
(
	`evhâp_ªque°_gë_öput_buf„r
(
ªq
)Ë!
	`°æí
(
wh©
)) {

1135 
	`Ârötf
(
°dîr
, "FAILED\n");

1136 
	`exô
(1);

1139 i‡(
	`evbuf„r_d©acmp
(
	`evhâp_ªque°_gë_öput_buf„r
(
ªq
), 
wh©
) != 0) {

1140 
	`Ârötf
(
°dîr
, "FAILED\n");

1141 
	`exô
(1);

1144 
ã°_ok
 = 1;

1145 
	`EVUTIL_ASSERT
(
exô_ba£
);

1146 
	`evít_ba£_lo›exô
(
exô_ba£
, 
NULL
);

1147 
	}
}

1150 
	$hâp_ªque°_ex≥˘_îr‹
(
evhâp_ªque°
 *
ªq
, *
¨g
)

1152 i‡(
	`evhâp_ªque°_gë_ª•⁄£_code
(
ªq
Ë=
HTTP_OK
) {

1153 
	`Ârötf
(
°dîr
, "FAILED\n");

1154 
	`exô
(1);

1157 
ã°_ok
 = 1;

1158 
	`EVUTIL_ASSERT
(
¨g
);

1159 
	`evít_ba£_lo›exô
(
¨g
, 
NULL
);

1160 
	}
}

1164 
	$hâp_vútuÆ_ho°_ã°
(*
¨g
)

1166 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

1167 
ev_uöt16_t
 
p‹t
 = 0;

1168 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
NULL
;

1169 
evhâp_ªque°
 *
ªq
 = 
NULL
;

1170 
evhâp
 *
£c⁄d
 = 
NULL
, *
thúd
 = NULL;

1171 
evutû_sockë_t
 
fd
;

1172 
buf„ªvít
 *
bev
;

1173 c⁄° *
hâp_ªque°
;

1175 
exô_ba£
 = 
d©a
->
ba£
;

1177 
hâp
 = 
	`hâp_£tup
(&
p‹t
, 
d©a
->
ba£
);

1180 
£c⁄d
 = 
	`evhâp_√w
(
NULL
);

1181 
	`evhâp_£t_cb
(
£c⁄d
, "/fu¬ybu¬y", 
hâp_basic_cb
, 
NULL
);

1182 
thúd
 = 
	`evhâp_√w
(
NULL
);

1183 
	`evhâp_£t_cb
(
thúd
, "/bœckcof„e", 
hâp_basic_cb
, 
NULL
);

1185 i‡(
	`evhâp_add_vútuÆ_ho°
(
hâp
, "foo.com", 
£c⁄d
) == -1) {

1186 
	`â_ab‹t_msg
("Couldn'tádd vhost");

1189 i‡(
	`evhâp_add_vútuÆ_ho°
(
hâp
, "b¨.*.foo.com", 
thúd
) == -1) {

1190 
	`â_ab‹t_msg
("Couldn'tádd wildcarded vhost");

1194 
	`â_as£π
(
	`evhâp_add_£rvî_Æüs
(
£c⁄d
, "manolito.info") == 0);

1195 
	`â_as£π
(
	`evhâp_add_£rvî_Æüs
(
thúd
, "bonkers.org") == 0);

1197 
evc⁄
 = 
	`evhâp_c⁄√˘i⁄_ba£_√w
(
d©a
->
ba£
, 
NULL
, "127.0.0.1", 
p‹t
);

1198 
	`â_as£π
(
evc⁄
);

1201 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_ªque°_ex≥˘_îr‹
, 
d©a
->
ba£
);

1204 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Host", "somehost");

1207 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_GET
,

1209 
	`â_ab‹t_msg
("Couldn't makeÑequest");

1212 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

1214 
	`â_as£π
(
ã°_ok
 == 1);

1216 
ã°_ok
 = 0;

1219 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_ªque°_d⁄e
, (*Ë
BASIC_REQUEST_BODY
);

1222 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Host", "foo.com");

1225 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_GET
,

1227 
	`Ârötf
(
°dout
, "FAILED\n");

1228 
	`exô
(1);

1231 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

1233 
	`â_as£π
(
ã°_ok
 == 1);

1235 
ã°_ok
 = 0;

1238 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_ªque°_d⁄e
, (*Ë
BASIC_REQUEST_BODY
);

1241 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Host", "bar.magic.foo.com");

1244 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_GET
,

1246 
	`â_ab‹t_msg
("Couldn't makeÑequest");

1249 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

1251 
	`â_as£π
(
ã°_ok
 == 1)

1253 
ã°_ok
 = 0;

1256 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_ªque°_d⁄e
, (*Ë
BASIC_REQUEST_BODY
);

1259 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Host", "manolito.info");

1262 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_GET
,

1264 
	`â_ab‹t_msg
("Couldn't makeÑequest");

1267 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

1269 
	`â_as£π
(
ã°_ok
 == 1)

1271 
ã°_ok
 = 0;

1274 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_ªque°_d⁄e
, (*Ë
BASIC_REQUEST_BODY
);

1277 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Host", "bonkers.org:8000");

1280 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_GET
,

1282 
	`â_ab‹t_msg
("Couldn't makeÑequest");

1285 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

1287 
	`â_as£π
(
ã°_ok
 == 1)

1289 
ã°_ok
 = 0;

1292 
fd
 = 
	`hâp_c⁄√˘
("127.0.0.1", 
p‹t
);

1295 
bev
 = 
	`buf„ªvít_sockë_√w
(
d©a
->
ba£
, 
fd
, 0);

1296 
	`buf„ªvít_£tcb
(
bev
, 
hâp_ªadcb
, 
hâp_wrôecb
,

1297 
hâp_îr‹cb
, 
NULL
);

1300 
hâp_ªque°
 =

1306 
	`buf„ªvít_wrôe
(
bev
, 
hâp_ªque°
, 
	`°æí
(http_request));

1308 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

1310 
	`â_öt_›
(
ã°_ok
, ==, 2);

1312 
	`buf„ªvít_‰ì
(
bev
);

1313 
	`evutû_˛o£sockë
(
fd
);

1315 
íd
:

1316 i‡(
evc⁄
)

1317 
	`evhâp_c⁄√˘i⁄_‰ì
(
evc⁄
);

1318 i‡(
hâp
)

1319 
	`evhâp_‰ì
(
hâp
);

1320 
	}
}

1326 
	$hâp_ªque°_em±y_d⁄e
(
evhâp_ªque°
 *
ªq
, *
¨g
)

1328 i‡(
	`evhâp_ªque°_gë_ª•⁄£_code
(
ªq
Ë!
HTTP_OK
) {

1329 
	`Ârötf
(
°dîr
, "FAILED\n");

1330 
	`exô
(1);

1333 i‡(
	`evhâp_föd_hódî
(
	`evhâp_ªque°_gë_öput_hódîs
(
ªq
), "D©e"Ë=
NULL
) {

1334 
	`Ârötf
(
°dîr
, "FAILED\n");

1335 
	`exô
(1);

1339 i‡(
	`evhâp_föd_hódî
(
	`evhâp_ªque°_gë_öput_hódîs
(
ªq
), "C⁄ã¡-Lígth"Ë=
NULL
) {

1340 
	`Ârötf
(
°dîr
, "FAILED\n");

1341 
	`exô
(1);

1344 i‡(
	`°rcmp
(
	`evhâp_föd_hódî
(
	`evhâp_ªque°_gë_öput_hódîs
(
ªq
), "Content-Length"),

1346 
	`Ârötf
(
°dîr
, "FAILED\n");

1347 
	`exô
(1);

1350 i‡(
	`evbuf„r_gë_Àngth
(
	`evhâp_ªque°_gë_öput_buf„r
(
ªq
)) != 0) {

1351 
	`Ârötf
(
°dîr
, "FAILED\n");

1352 
	`exô
(1);

1355 
ã°_ok
 = 1;

1356 
	`EVUTIL_ASSERT
(
¨g
);

1357 
	`evít_ba£_lo›exô
(
¨g
, 
NULL
);

1358 
	}
}

1365 
	$hâp_di•©chî_cb
(
evhâp_ªque°
 *
ªq
, *
¨g
)

1368 
evbuf„r
 *
evb
 = 
	`evbuf„r_√w
();

1369 
	`evít_debug
(("%s: cÆÀd\n", 
__func__
));

1370 
	`evbuf„r_add_¥ötf
(
evb
, "DISPATCHER_TEST");

1372 
	`evhâp_£nd_ª∂y
(
ªq
, 
HTTP_OK
, "Evîythög i†föe", 
evb
);

1374 
	`evbuf„r_‰ì
(
evb
);

1375 
	}
}

1378 
	$hâp_di•©chî_ã°_d⁄e
(
evhâp_ªque°
 *
ªq
, *
¨g
)

1380 
evít_ba£
 *
ba£
 = 
¨g
;

1381 c⁄° *
wh©
 = "DISPATCHER_TEST";

1383 i‡(
	`evhâp_ªque°_gë_ª•⁄£_code
(
ªq
Ë!
HTTP_OK
) {

1384 
	`Ârötf
(
°dîr
, "FAILED\n");

1385 
	`exô
(1);

1388 i‡(
	`evhâp_föd_hódî
(
	`evhâp_ªque°_gë_öput_hódîs
(
ªq
), "C⁄ã¡-Ty≥"Ë=
NULL
) {

1389 
	`Ârötf
(
°dîr
, "FAILED (contentÅype)\n");

1390 
	`exô
(1);

1393 i‡(
	`evbuf„r_gë_Àngth
(
	`evhâp_ªque°_gë_öput_buf„r
(
ªq
)Ë!
	`°æí
(
wh©
)) {

1394 
	`Ârötf
(
°dîr
, "FAILED (length %lu vs %lu)\n",

1395 ()
	`evbuf„r_gë_Àngth
(
	`evhâp_ªque°_gë_öput_buf„r
(
ªq
)), ()
	`°æí
(
wh©
));

1396 
	`exô
(1);

1399 i‡(
	`evbuf„r_d©acmp
(
	`evhâp_ªque°_gë_öput_buf„r
(
ªq
), 
wh©
) != 0) {

1400 
	`Ârötf
(
°dîr
, "FAILED (data)\n");

1401 
	`exô
(1);

1404 
ã°_ok
 = 1;

1405 
	`evít_ba£_lo›exô
(
ba£
, 
NULL
);

1406 
	}
}

1409 
	$hâp_di•©chî_ã°
(*
¨g
)

1411 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

1412 
ev_uöt16_t
 
p‹t
 = 0;

1413 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
NULL
;

1414 
evhâp_ªque°
 *
ªq
 = 
NULL
;

1416 
ã°_ok
 = 0;

1418 
hâp
 = 
	`hâp_£tup
(&
p‹t
, 
d©a
->
ba£
);

1420 
evc⁄
 = 
	`evhâp_c⁄√˘i⁄_ba£_√w
(
d©a
->
ba£
, 
NULL
, "127.0.0.1", 
p‹t
);

1421 
	`â_as£π
(
evc⁄
);

1424 
	`evhâp_c⁄√˘i⁄_£t_loˇl_addªss
(
evc⁄
, "127.0.0.1");

1431 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_di•©chî_ã°_d⁄e
, 
d©a
->
ba£
);

1432 
	`â_as£π
(
ªq
);

1435 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Host", "somehost");

1437 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_GET
, "/?arg=val") == -1) {

1438 
	`â_ab‹t_msg
("Couldn't makeÑequest");

1441 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

1443 
íd
:

1444 i‡(
evc⁄
)

1445 
	`evhâp_c⁄√˘i⁄_‰ì
(
evc⁄
);

1446 i‡(
hâp
)

1447 
	`evhâp_‰ì
(
hâp
);

1448 
	}
}

1454 
hâp_po°ªque°_d⁄e
(
evhâp_ªque°
 *, *);

1456 
	#POST_DATA
 "Okay. NŸÑóŒyÖrötf"

	)

1459 
	$hâp_po°_ã°
(*
¨g
)

1461 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

1462 
ev_uöt16_t
 
p‹t
 = 0;

1463 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
NULL
;

1464 
evhâp_ªque°
 *
ªq
 = 
NULL
;

1466 
ã°_ok
 = 0;

1468 
hâp
 = 
	`hâp_£tup
(&
p‹t
, 
d©a
->
ba£
);

1470 
evc⁄
 = 
	`evhâp_c⁄√˘i⁄_ba£_√w
(
d©a
->
ba£
, 
NULL
, "127.0.0.1", 
p‹t
);

1471 
	`â_as£π
(
evc⁄
);

1478 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_po°ªque°_d⁄e
, 
d©a
->
ba£
);

1479 
	`â_as£π
(
ªq
);

1482 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Host", "somehost");

1483 
	`evbuf„r_add_¥ötf
(
	`evhâp_ªque°_gë_ouçut_buf„r
(
ªq
), 
POST_DATA
);

1485 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_POST
, "/postit") == -1) {

1486 
	`â_ab‹t_msg
("Couldn't makeÑequest");

1489 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

1491 
	`â_öt_›
(
ã°_ok
, ==, 1);

1493 
ã°_ok
 = 0;

1495 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_po°ªque°_d⁄e
, 
d©a
->
ba£
);

1496 
	`â_as£π
(
ªq
);

1501 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Host", "somehost");

1502 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Expect", "100-continue");

1503 
	`evbuf„r_add_¥ötf
(
	`evhâp_ªque°_gë_ouçut_buf„r
(
ªq
), 
POST_DATA
);

1505 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_POST
, "/postit") == -1) {

1506 
	`â_ab‹t_msg
("Couldn't makeÑequest");

1509 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

1511 
	`â_öt_›
(
ã°_ok
, ==, 1);

1513 
	`evhâp_c⁄√˘i⁄_‰ì
(
evc⁄
);

1514 
	`evhâp_‰ì
(
hâp
);

1516 
íd
:

1518 
	}
}

1521 
	$hâp_po°_cb
(
evhâp_ªque°
 *
ªq
, *
¨g
)

1523 
evbuf„r
 *
evb
;

1524 
	`evít_debug
(("%s: cÆÀd\n", 
__func__
));

1527 i‡(
	`evhâp_ªque°_gë_comm™d
(
ªq
Ë!
EVHTTP_REQ_POST
) {

1528 
	`Ârötf
(
°dout
, "FAILED (postÅype)\n");

1529 
	`exô
(1);

1532 i‡(
	`evbuf„r_gë_Àngth
(
	`evhâp_ªque°_gë_öput_buf„r
(
ªq
)Ë!
	`°æí
(
POST_DATA
)) {

1533 
	`Ârötf
(
°dout
, "FAILED (length: %lu vs %lu)\n",

1534 (Ë
	`evbuf„r_gë_Àngth
(
	`evhâp_ªque°_gë_öput_buf„r
(
ªq
)), (Ë
	`°æí
(
POST_DATA
));

1535 
	`exô
(1);

1538 i‡(
	`evbuf„r_d©acmp
(
	`evhâp_ªque°_gë_öput_buf„r
(
ªq
), 
POST_DATA
) != 0) {

1539 
	`Ârötf
(
°dout
, "FAILED (data)\n");

1540 
	`Ârötf
(
°dout
, "GŸ :%s\n", 
	`evbuf„r_puŒup
(
	`evhâp_ªque°_gë_öput_buf„r
(
ªq
),-1));

1541 
	`Ârötf
(
°dout
, "W™t:%s\n", 
POST_DATA
);

1542 
	`exô
(1);

1545 
evb
 = 
	`evbuf„r_√w
();

1546 
	`evbuf„r_add_¥ötf
(
evb
, 
BASIC_REQUEST_BODY
);

1548 
	`evhâp_£nd_ª∂y
(
ªq
, 
HTTP_OK
, "Evîythög i†föe", 
evb
);

1550 
	`evbuf„r_‰ì
(
evb
);

1551 
	}
}

1554 
	$hâp_po°ªque°_d⁄e
(
evhâp_ªque°
 *
ªq
, *
¨g
)

1556 c⁄° *
wh©
 = 
BASIC_REQUEST_BODY
;

1557 
evít_ba£
 *
ba£
 = 
¨g
;

1559 i‡(
ªq
 =
NULL
) {

1560 
	`Ârötf
(
°dîr
, "FAILED (timeout)\n");

1561 
	`exô
(1);

1564 i‡(
	`evhâp_ªque°_gë_ª•⁄£_code
(
ªq
Ë!
HTTP_OK
) {

1566 
	`Ârötf
(
°dîr
, "FAILED (response code)\n");

1567 
	`exô
(1);

1570 i‡(
	`evhâp_föd_hódî
(
	`evhâp_ªque°_gë_öput_hódîs
(
ªq
), "C⁄ã¡-Ty≥"Ë=
NULL
) {

1571 
	`Ârötf
(
°dîr
, "FAILED (contentÅype)\n");

1572 
	`exô
(1);

1575 i‡(
	`evbuf„r_gë_Àngth
(
	`evhâp_ªque°_gë_öput_buf„r
(
ªq
)Ë!
	`°æí
(
wh©
)) {

1576 
	`Ârötf
(
°dîr
, "FAILED (length %lu vs %lu)\n",

1577 ()
	`evbuf„r_gë_Àngth
(
	`evhâp_ªque°_gë_öput_buf„r
(
ªq
)), ()
	`°æí
(
wh©
));

1578 
	`exô
(1);

1581 i‡(
	`evbuf„r_d©acmp
(
	`evhâp_ªque°_gë_öput_buf„r
(
ªq
), 
wh©
) != 0) {

1582 
	`Ârötf
(
°dîr
, "FAILED (data)\n");

1583 
	`exô
(1);

1586 
ã°_ok
 = 1;

1587 
	`evít_ba£_lo›exô
(
ba£
, 
NULL
);

1588 
	}
}

1594 
hâp_puåeque°_d⁄e
(
evhâp_ªque°
 *, *);

1596 
	#PUT_DATA
 "Hi, I'm somêPUT d©a"

	)

1599 
	$hâp_put_ã°
(*
¨g
)

1601 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

1602 
ev_uöt16_t
 
p‹t
 = 0;

1603 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
NULL
;

1604 
evhâp_ªque°
 *
ªq
 = 
NULL
;

1606 
ã°_ok
 = 0;

1608 
hâp
 = 
	`hâp_£tup
(&
p‹t
, 
d©a
->
ba£
);

1610 
evc⁄
 = 
	`evhâp_c⁄√˘i⁄_ba£_√w
(
d©a
->
ba£
, 
NULL
, "127.0.0.1", 
p‹t
);

1611 
	`â_as£π
(
evc⁄
);

1617 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_puåeque°_d⁄e
, 
d©a
->
ba£
);

1618 
	`â_as£π
(
ªq
);

1621 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Host", "someotherhost");

1622 
	`evbuf„r_add_¥ötf
(
	`evhâp_ªque°_gë_ouçut_buf„r
(
ªq
), 
PUT_DATA
);

1624 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_PUT
, "/putit") == -1) {

1625 
	`â_ab‹t_msg
("Couldn't makeÑequest");

1628 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

1630 
	`evhâp_c⁄√˘i⁄_‰ì
(
evc⁄
);

1631 
	`evhâp_‰ì
(
hâp
);

1633 
	`â_öt_›
(
ã°_ok
, ==, 1);

1634 
íd
:

1636 
	}
}

1639 
	$hâp_put_cb
(
evhâp_ªque°
 *
ªq
, *
¨g
)

1641 
evbuf„r
 *
evb
;

1642 
	`evít_debug
(("%s: cÆÀd\n", 
__func__
));

1645 i‡(
	`evhâp_ªque°_gë_comm™d
(
ªq
Ë!
EVHTTP_REQ_PUT
) {

1646 
	`Ârötf
(
°dout
, "FAILED (putÅype)\n");

1647 
	`exô
(1);

1650 i‡(
	`evbuf„r_gë_Àngth
(
	`evhâp_ªque°_gë_öput_buf„r
(
ªq
)Ë!
	`°æí
(
PUT_DATA
)) {

1651 
	`Ârötf
(
°dout
, "FAILED (length: %lu vs %lu)\n",

1652 ()
	`evbuf„r_gë_Àngth
(
	`evhâp_ªque°_gë_öput_buf„r
(
ªq
)), ()
	`°æí
(
PUT_DATA
));

1653 
	`exô
(1);

1656 i‡(
	`evbuf„r_d©acmp
(
	`evhâp_ªque°_gë_öput_buf„r
(
ªq
), 
PUT_DATA
) != 0) {

1657 
	`Ârötf
(
°dout
, "FAILED (data)\n");

1658 
	`Ârötf
(
°dout
, "GŸ :%s\n", 
	`evbuf„r_puŒup
(
	`evhâp_ªque°_gë_öput_buf„r
(
ªq
),-1));

1659 
	`Ârötf
(
°dout
, "W™t:%s\n", 
PUT_DATA
);

1660 
	`exô
(1);

1663 
evb
 = 
	`evbuf„r_√w
();

1664 
	`evbuf„r_add_¥ötf
(
evb
, "Thatáin't funny");

1666 
	`evhâp_£nd_ª∂y
(
ªq
, 
HTTP_OK
, "Evîythög i†gª©", 
evb
);

1668 
	`evbuf„r_‰ì
(
evb
);

1669 
	}
}

1672 
	$hâp_puåeque°_d⁄e
(
evhâp_ªque°
 *
ªq
, *
¨g
)

1674 
evít_ba£
 *
ba£
 = 
¨g
;

1675 c⁄° *
wh©
 = "Thatáin't funny";

1677 i‡(
ªq
 =
NULL
) {

1678 
	`Ârötf
(
°dîr
, "FAILED (timeout)\n");

1679 
	`exô
(1);

1682 i‡(
	`evhâp_ªque°_gë_ª•⁄£_code
(
ªq
Ë!
HTTP_OK
) {

1684 
	`Ârötf
(
°dîr
, "FAILED (response code)\n");

1685 
	`exô
(1);

1688 i‡(
	`evhâp_föd_hódî
(
	`evhâp_ªque°_gë_öput_hódîs
(
ªq
), "C⁄ã¡-Ty≥"Ë=
NULL
) {

1689 
	`Ârötf
(
°dîr
, "FAILED (contentÅype)\n");

1690 
	`exô
(1);

1693 i‡(
	`evbuf„r_gë_Àngth
(
	`evhâp_ªque°_gë_öput_buf„r
(
ªq
)Ë!
	`°æí
(
wh©
)) {

1694 
	`Ârötf
(
°dîr
, "FAILED (length %lu vs %lu)\n",

1695 ()
	`evbuf„r_gë_Àngth
(
	`evhâp_ªque°_gë_öput_buf„r
(
ªq
)), ()
	`°æí
(
wh©
));

1696 
	`exô
(1);

1700 i‡(
	`evbuf„r_d©acmp
(
	`evhâp_ªque°_gë_öput_buf„r
(
ªq
), 
wh©
) != 0) {

1701 
	`Ârötf
(
°dîr
, "FAILED (data)\n");

1702 
	`exô
(1);

1705 
ã°_ok
 = 1;

1706 
	`evít_ba£_lo›exô
(
ba£
, 
NULL
);

1707 
	}
}

1710 
	$hâp_Áûuª_ªadcb
(
buf„ªvít
 *
bev
, *
¨g
)

1712 c⁄° *
wh©
 = "400 Bad Request";

1713 i‡(
	`evbuf„r_c⁄èös
(
	`buf„ªvít_gë_öput
(
bev
), 
wh©
)) {

1714 
ã°_ok
 = 2;

1715 
	`buf„ªvít_dißbÀ
(
bev
, 
EV_READ
);

1716 
	`evít_ba£_lo›exô
(
¨g
, 
NULL
);

1718 
	}
}

1724 
	$hâp_Áûuª_ã°
(*
¨g
)

1726 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

1727 
buf„ªvít
 *
bev
;

1728 
evutû_sockë_t
 
fd
;

1729 c⁄° *
hâp_ªque°
;

1730 
ev_uöt16_t
 
p‹t
 = 0;

1732 
ã°_ok
 = 0;

1734 
hâp
 = 
	`hâp_£tup
(&
p‹t
, 
d©a
->
ba£
);

1736 
fd
 = 
	`hâp_c⁄√˘
("127.0.0.1", 
p‹t
);

1739 
bev
 = 
	`buf„ªvít_sockë_√w
(
d©a
->
ba£
, 
fd
, 0);

1740 
	`buf„ªvít_£tcb
(
bev
, 
hâp_Áûuª_ªadcb
, 
hâp_wrôecb
,

1741 
hâp_îr‹cb
, 
d©a
->
ba£
);

1743 
hâp_ªque°
 = "illegalÑequest\r\n";

1745 
	`buf„ªvít_wrôe
(
bev
, 
hâp_ªque°
, 
	`°æí
(http_request));

1747 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

1749 
	`buf„ªvít_‰ì
(
bev
);

1750 
	`evutû_˛o£sockë
(
fd
);

1752 
	`evhâp_‰ì
(
hâp
);

1754 
	`â_öt_›
(
ã°_ok
, ==, 2);

1755 
íd
:

1757 
	}
}

1760 
	$˛o£_dëe˘_d⁄e
(
evhâp_ªque°
 *
ªq
, *
¨g
)

1762 
timevÆ
 
tv
;

1763 
	`â_as£π
(
ªq
);

1764 
	`â_as£π
(
	`evhâp_ªque°_gë_ª•⁄£_code
(
ªq
Ë=
HTTP_OK
);

1766 
ã°_ok
 = 1;

1768 
íd
:

1769 
	`evutû_timî˛ór
(&
tv
);

1770 
tv
.
tv_£c
 = 3;

1771 
	`evít_ba£_lo›exô
(
¨g
, &
tv
);

1772 
	}
}

1775 
	$˛o£_dëe˘_œunch
(
evutû_sockë_t
 
fd
, 
wh©
, *
¨g
)

1777 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
¨g
;

1778 
evít_ba£
 *
ba£
 = 
	`evhâp_c⁄√˘i⁄_gë_ba£
(
evc⁄
);

1779 
evhâp_ªque°
 *
ªq
;

1781 
ªq
 = 
	`evhâp_ªque°_√w
(
˛o£_dëe˘_d⁄e
, 
ba£
);

1784 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Host", "somehost");

1787 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_GET
, "/test") == -1) {

1788 
	`â_Áû_msg
("Couldn't makeÑequest");

1790 
	}
}

1793 
	$˛o£_dëe˘_cb
(
evhâp_ªque°
 *
ªq
, *
¨g
)

1795 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
¨g
;

1796 
evít_ba£
 *
ba£
 = 
	`evhâp_c⁄√˘i⁄_gë_ba£
(
evc⁄
);

1797 
timevÆ
 
tv
;

1799 i‡(
ªq
 !
NULL
 && 
	`evhâp_ªque°_gë_ª•⁄£_code
‘eqË!
HTTP_OK
) {

1800 
	`â_ab‹t_msg
("Failed");

1803 
	`evutû_timî˛ór
(&
tv
);

1804 
tv
.
tv_£c
 = 3;

1807 
	`evít_ba£_⁄˚
(
ba£
, -1, 
EV_TIMEOUT
, 
˛o£_dëe˘_œunch
, 
evc⁄
, &
tv
);

1808 
íd
:

1810 
	}
}

1814 
	$_hâp_˛o£_dëe˘i⁄
(
basic_ã°_d©a
 *
d©a
, 
wôh_dñay
)

1816 
ev_uöt16_t
 
p‹t
 = 0;

1817 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
NULL
;

1818 
evhâp_ªque°
 *
ªq
 = 
NULL
;

1820 
ã°_ok
 = 0;

1821 
hâp
 = 
	`hâp_£tup
(&
p‹t
, 
d©a
->
ba£
);

1824 
	`evhâp_£t_timeout
(
hâp
, 1);

1826 
evc⁄
 = 
	`evhâp_c⁄√˘i⁄_ba£_√w
(
d©a
->
ba£
, 
NULL
,

1827 "127.0.0.1", 
p‹t
);

1828 
	`â_as£π
(
evc⁄
);

1829 
dñayed_˛õ¡
 = 
evc⁄
;

1836 
ªq
 = 
	`evhâp_ªque°_√w
(
˛o£_dëe˘_cb
, 
evc⁄
);

1839 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Host", "somehost");

1842 i‡(
	`evhâp_make_ªque°
(
evc⁄
,

1843 
ªq
, 
EVHTTP_REQ_GET
, 
wôh_dñay
 ? "/largedelay" : "/test") == -1) {

1844 
	`â_ab‹t_msg
("couldn't makeÑequest");

1847 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

1850 
	`â_as£π
(
	`TAILQ_FIRST
(&
hâp
->
c⁄√˘i⁄s
Ë=
NULL
);

1852 
íd
:

1853 i‡(
evc⁄
)

1854 
	`evhâp_c⁄√˘i⁄_‰ì
(
evc⁄
);

1855 i‡(
hâp
)

1856 
	`evhâp_‰ì
(
hâp
);

1857 
	}
}

1859 
	$hâp_˛o£_dëe˘i⁄_ã°
(*
¨g
)

1861 
	`_hâp_˛o£_dëe˘i⁄
(
¨g
, 0);

1862 
	}
}

1864 
	$hâp_˛o£_dëe˘i⁄_dñay_ã°
(*
¨g
)

1866 
	`_hâp_˛o£_dëe˘i⁄
(
¨g
, 1);

1867 
	}
}

1870 
	$hâp_highp‹t_ã°
(*
¨g
)

1872 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

1873 
i
 = -1;

1874 
evhâp
 *
myhâp
 = 
NULL
;

1877 
i
 = 0; i < 50; ++i) {

1878 
myhâp
 = 
	`evhâp_√w
(
d©a
->
ba£
);

1879 i‡(
	`evhâp_böd_sockë
(
myhâp
, "127.0.0.1", 65535 - 
i
) == 0) {

1880 
ã°_ok
 = 1;

1881 
	`evhâp_‰ì
(
myhâp
);

1884 
	`evhâp_‰ì
(
myhâp
);

1887 
	`â_Áû_msg
("Couldn't getá highÖort");

1888 
	}
}

1891 
	$hâp_bad_hódî_ã°
(*
±r
)

1893 
evkeyvÆq
 
hódîs
;

1895 
	`TAILQ_INIT
(&
hódîs
);

1897 
	`â_w™t
(
	`evhâp_add_hódî
(&
hódîs
, "One", "Two") == 0);

1898 
	`â_w™t
(
	`evhâp_add_hódî
(&
hódîs
, "One", "Two\r\n Three") == 0);

1899 
	`â_w™t
(
	`evhâp_add_hódî
(&
hódîs
, "One\r", "Two") == -1);

1900 
	`â_w™t
(
	`evhâp_add_hódî
(&
hódîs
, "One\n", "Two") == -1);

1901 
	`â_w™t
(
	`evhâp_add_hódî
(&
hódîs
, "One", "Two\r") == -1);

1902 
	`â_w™t
(
	`evhâp_add_hódî
(&
hódîs
, "One", "Two\n") == -1);

1904 
	`evhâp_˛ór_hódîs
(&
hódîs
);

1905 
	}
}

1907 
	$vÆid©e_hódî
(

1908 c⁄° 
evkeyvÆq
* 
hódîs
,

1909 c⁄° *
key
, c⁄° *
vÆue
)

1911 c⁄° *
ªÆ_vÆ
 = 
	`evhâp_föd_hódî
(
hódîs
, 
key
);

1912 
	`â_as£π
(
ªÆ_vÆ
 !
NULL
);

1913 
	`â_w™t
(
	`°rcmp
(
ªÆ_vÆ
, 
vÆue
) == 0);

1914 
íd
:

1916 
	}
}

1919 
	$hâp_∑r£_quîy_ã°
(*
±r
)

1921 
evkeyvÆq
 
hódîs
;

1922 
r
;

1924 
	`TAILQ_INIT
(&
hódîs
);

1926 
r
 = 
	`evhâp_∑r£_quîy
("hâp://www.ã°.com/?qÒe°", &
hódîs
);

1927 
	`â_w™t
(
	`vÆid©e_hódî
(&
hódîs
, "q", "test") == 0);

1928 
	`â_öt_›
(
r
, ==, 0);

1929 
	`evhâp_˛ór_hódîs
(&
hódîs
);

1931 
r
 = 
	`evhâp_∑r£_quîy
("hâp://www.ã°.com/?qÒe°&foo=b¨", &
hódîs
);

1932 
	`â_w™t
(
	`vÆid©e_hódî
(&
hódîs
, "q", "test") == 0);

1933 
	`â_w™t
(
	`vÆid©e_hódî
(&
hódîs
, "foo", "bar") == 0);

1934 
	`â_öt_›
(
r
, ==, 0);

1935 
	`evhâp_˛ór_hódîs
(&
hódîs
);

1937 
r
 = 
	`evhâp_∑r£_quîy
("hâp://www.ã°.com/?qÒe°+foo", &
hódîs
);

1938 
	`â_w™t
(
	`vÆid©e_hódî
(&
hódîs
, "q", "test foo") == 0);

1939 
	`â_öt_›
(
r
, ==, 0);

1940 
	`evhâp_˛ór_hódîs
(&
hódîs
);

1942 
r
 = 
	`evhâp_∑r£_quîy
("hâp://www.ã°.com/?qÒe°%0Afoo", &
hódîs
);

1943 
	`â_w™t
(
	`vÆid©e_hódî
(&
hódîs
, "q", "test\nfoo") == 0);

1944 
	`â_öt_›
(
r
, ==, 0);

1945 
	`evhâp_˛ór_hódîs
(&
hódîs
);

1947 
r
 = 
	`evhâp_∑r£_quîy
("hâp://www.ã°.com/?qÒe°%0Dfoo", &
hódîs
);

1948 
	`â_w™t
(
	`vÆid©e_hódî
(&
hódîs
, "q", "test\rfoo") == 0);

1949 
	`â_öt_›
(
r
, ==, 0);

1950 
	`evhâp_˛ór_hódîs
(&
hódîs
);

1952 
r
 = 
	`evhâp_∑r£_quîy
("hâp://www.ã°.com/?qÒe°&&q2", &
hódîs
);

1953 
	`â_öt_›
(
r
, ==, -1);

1954 
	`evhâp_˛ór_hódîs
(&
hódîs
);

1956 
r
 = 
	`evhâp_∑r£_quîy
("hâp://www.ã°.com/?qÒe°+this", &
hódîs
);

1957 
	`â_w™t
(
	`vÆid©e_hódî
(&
hódîs
, "q", "testÅhis") == 0);

1958 
	`â_öt_›
(
r
, ==, 0);

1959 
	`evhâp_˛ór_hódîs
(&
hódîs
);

1961 
r
 = 
	`evhâp_∑r£_quîy
("hâp://www.ã°.com/?qÒe°&q2=foo", &
hódîs
);

1962 
	`â_öt_›
(
r
, ==, 0);

1963 
	`â_w™t
(
	`vÆid©e_hódî
(&
hódîs
, "q", "test") == 0);

1964 
	`â_w™t
(
	`vÆid©e_hódî
(&
hódîs
, "q2", "foo") == 0);

1965 
	`evhâp_˛ór_hódîs
(&
hódîs
);

1967 
r
 = 
	`evhâp_∑r£_quîy
("hâp://www.ã°.com/?q&q2=foo", &
hódîs
);

1968 
	`â_öt_›
(
r
, ==, -1);

1969 
	`evhâp_˛ór_hódîs
(&
hódîs
);

1971 
r
 = 
	`evhâp_∑r£_quîy
("hâp://www.ã°.com/?q=foo&q2", &
hódîs
);

1972 
	`â_öt_›
(
r
, ==, -1);

1973 
	`evhâp_˛ór_hódîs
(&
hódîs
);

1975 
r
 = 
	`evhâp_∑r£_quîy
("hâp://www.ã°.com/?q=foo&q2&q3=x", &
hódîs
);

1976 
	`â_öt_›
(
r
, ==, -1);

1977 
	`evhâp_˛ór_hódîs
(&
hódîs
);

1979 
r
 = 
	`evhâp_∑r£_quîy
("hâp://www.ã°.com/?q=&q2=&q3=", &
hódîs
);

1980 
	`â_öt_›
(
r
, ==, 0);

1981 
	`â_w™t
(
	`vÆid©e_hódî
(&
hódîs
, "q", "") == 0);

1982 
	`â_w™t
(
	`vÆid©e_hódî
(&
hódîs
, "q2", "") == 0);

1983 
	`â_w™t
(
	`vÆid©e_hódî
(&
hódîs
, "q3", "") == 0);

1984 
	`evhâp_˛ór_hódîs
(&
hódîs
);

1986 
íd
:

1987 
	`evhâp_˛ór_hódîs
(&
hódîs
);

1988 
	}
}

1991 
	$hâp_∑r£_uri_ã°
(*
±r
)

1993 c⁄° 
n⁄c⁄f‹m
 = (
±r
 !
NULL
);

1994 c⁄° 
∑r£_Êags
 =

1995 
n⁄c⁄f‹m
 ? 
EVHTTP_URI_NONCONFORMANT
 : 0;

1996 
evhâp_uri
 *
uri
 = 
NULL
;

1997 
uæ_tmp
[4096];

1998 
	#URI_PARSE
(
uri
) \

1999 
	`evhâp_uri_∑r£_wôh_Êags
((
uri
), 
∑r£_Êags
)

	)

2001 
	#TT_URI
(
w™t
) do { \

2002 *
ªt
 = 
	`evhâp_uri_joö
(
uri
, 
uæ_tmp
, (url_tmp)); \

2003 
	`â_w™t
(
ªt
 !
NULL
); \

2004 
	`â_w™t
(
ªt
 =
uæ_tmp
); \

2005 i‡(
	`°rcmp
(
ªt
,
w™t
) != 0) \

2006 
	`TT_FAIL
(("\"%s\" !\"%s\"",
ªt
,
w™t
)); \

2007 } 0)

	)

2009 
	`â_w™t
(
	`evhâp_uri_joö
(
NULL
, 0, 0) == NULL);

2010 
	`â_w™t
(
	`evhâp_uri_joö
(
NULL
, 
uæ_tmp
, 0) == NULL);

2011 
	`â_w™t
(
	`evhâp_uri_joö
(
NULL
, 
uæ_tmp
, (url_tmp)) == NULL);

2014 
	#BAD
(
s
) do { \

2015 i‡(
	`URI_PARSE
(
s
Ë!
NULL
) \

2016 
	`TT_FAIL
(("Ex≥˘edÉº‹Ö¨sög \"%s\"",
s
)); \

2017 } 0)

	)

2019 
	#NCF
(
s
) do { \

2020 
uri
 = 
	`URI_PARSE
(
s
); \

2021 i‡(
uri
 !
NULL
 && !
n⁄c⁄f‹m
) { \

2022 
	`TT_FAIL
(("Ex≥˘edÉº‹Ö¨sög \"%s\"",
s
)); \

2023 } i‡(
uri
 =
NULL
 && 
n⁄c⁄f‹m
) { \

2024 
	`TT_FAIL
(("Couldn'tÖarseÇonconformant URI \"%s\"", \

2025 
s
)); \

2027 i‡(
uri
) { \

2028 
	`â_w™t
(
	`evhâp_uri_joö
(
uri
, 
uæ_tmp
, \

2029 (
uæ_tmp
))); \

2030 
	`evhâp_uri_‰ì
(
uri
); \

2032 } 0)

	)

2034 
	`NCF
("http://www.test.com/ why hello");

2035 
	`NCF
("http://www.test.com/why-hello\x01");

2036 
	`NCF
("http://www.test.com/why-hello?\x01");

2037 
	`NCF
("http://www.test.com/why-hello#\x01");

2038 
	`BAD
("http://www.\x01.test.com/why-hello");

2039 
	`BAD
("http://www.%7test.com/why-hello");

2040 
	`NCF
("http://www.test.com/why-hell%7o");

2041 
	`BAD
("h%3ttp://www.test.com/why-hello");

2042 
	`NCF
("http://www.test.com/why-hello%7");

2043 
	`NCF
("http://www.test.com/why-hell%7o");

2044 
	`NCF
("http://www.test.com/foo?ba%r");

2045 
	`NCF
("http://www.test.com/foo#ba%r");

2046 
	`BAD
("99:99/foo");

2047 
	`BAD
("http://www.test.com:999x/");

2048 
	`BAD
("http://www.test.com:x/");

2049 
	`BAD
("http://[hello-there]/");

2050 
	`BAD
("http://[::1]]/");

2051 
	`BAD
("http://[::1/");

2052 
	`BAD
("http://[foob/");

2053 
	`BAD
("http://[/");

2054 
	`BAD
("http://[ffff:ffff:ffff:ffff:Ffff:ffff:ffff:"

2056 
	`BAD
("http://[vX.foo]/");

2057 
	`BAD
("http://[vX.foo]/");

2058 
	`BAD
("http://[v.foo]/");

2059 
	`BAD
("http://[v5.fo%o]/");

2060 
	`BAD
("http://[v5X]/");

2061 
	`BAD
("http://[v5]/");

2062 
	`BAD
("http://[]/");

2063 
	`BAD
("http://f\x01red@www.example.com/");

2064 
	`BAD
("http://f%0red@www.example.com/");

2065 
	`BAD
("http://www.example.com:9999999999999999999999999999999999999/");

2066 
	`BAD
("http://www.example.com:hihi/");

2067 
	`BAD
("://www.example.com/");

2070 
uri
 = 
	`evhâp_uri_√w
();

2071 
	`â_w™t
(0==
	`evhâp_uri_£t_ho°
(
uri
, "www.example.com"));

2072 
	`â_w™t
(
	`evhâp_uri_joö
(
uri
, 
uæ_tmp
, (uæ_tmp)Ë!
NULL
);

2074 
	`â_w™t
(
	`evhâp_uri_joö
(
uri
, 
uæ_tmp
, 3Ë=
NULL
);

2076 
	`â_w™t
(0==
	`evhâp_uri_£t_∑th
(
uri
, "hi_mom"));

2077 
	`â_w™t
(
	`evhâp_uri_joö
(
uri
, 
uæ_tmp
, (uæ_tmp)Ë=
NULL
);

2078 
	`â_w™t
(
	`evhâp_uri_joö
(
uri
, 
NULL
, (
uæ_tmp
))==NULL);

2079 
	`â_w™t
(
	`evhâp_uri_joö
(
uri
, 
uæ_tmp
, 0)==
NULL
);

2080 
	`evhâp_uri_‰ì
(
uri
);

2081 
uri
 = 
	`URI_PARSE
("mailto:foo@bar");

2082 
	`â_w™t
(
uri
 !
NULL
);

2083 
	`â_w™t
(
	`evhâp_uri_gë_ho°
(
uri
Ë=
NULL
);

2084 
	`â_w™t
(
	`evhâp_uri_gë_u£röfo
(
uri
Ë=
NULL
);

2085 
	`â_w™t
(
	`evhâp_uri_gë_p‹t
(
uri
) == -1);

2086 
	`â_w™t
(!
	`°rcmp
(
	`evhâp_uri_gë_scheme
(
uri
), "mailto"));

2087 
	`â_w™t
(!
	`°rcmp
(
	`evhâp_uri_gë_∑th
(
uri
), "foo@bar"));

2088 
	`â_w™t
(
	`evhâp_uri_gë_quîy
(
uri
Ë=
NULL
);

2089 
	`â_w™t
(
	`evhâp_uri_gë_‰agmít
(
uri
Ë=
NULL
);

2090 
	`TT_URI
("mailto:foo@bar");

2091 
	`evhâp_uri_‰ì
(
uri
);

2093 
uri
 = 
	`evhâp_uri_√w
();

2095 
	`â_w™t
(-1 =
	`evhâp_uri_£t_scheme
(
uri
,""));

2096 
	`â_w™t
(-1 =
	`evhâp_uri_£t_scheme
(
uri
,"33"));

2097 
	`â_w™t
(-1 =
	`evhâp_uri_£t_scheme
(
uri
,"hi!"));

2098 
	`â_w™t
(-1 =
	`evhâp_uri_£t_u£röfo
(
uri
,"hello@"));

2099 
	`â_w™t
(-1 =
	`evhâp_uri_£t_ho°
(
uri
,"[1.2.3.4]"));

2100 
	`â_w™t
(-1 =
	`evhâp_uri_£t_ho°
(
uri
,"["));

2101 
	`â_w™t
(-1 =
	`evhâp_uri_£t_ho°
(
uri
,"www.[foo].com"));

2102 
	`â_w™t
(-1 =
	`evhâp_uri_£t_p‹t
(
uri
,-3));

2103 
	`â_w™t
(-1 =
	`evhâp_uri_£t_∑th
(
uri
,"hello?world"));

2104 
	`â_w™t
(-1 =
	`evhâp_uri_£t_quîy
(
uri
,"hello#world"));

2105 
	`â_w™t
(-1 =
	`evhâp_uri_£t_‰agmít
(
uri
,"hello#world"));

2107 
	`â_w™t
(0 =
	`evhâp_uri_£t_scheme
(
uri
,"http"));

2108 
	`â_w™t
(0 =
	`evhâp_uri_£t_scheme
(
uri
,
NULL
));

2109 
	`â_w™t
(0 =
	`evhâp_uri_£t_u£röfo
(
uri
,"username:pass"));

2110 
	`â_w™t
(0 =
	`evhâp_uri_£t_u£röfo
(
uri
,
NULL
));

2111 
	`â_w™t
(0 =
	`evhâp_uri_£t_ho°
(
uri
,"www.example.com"));

2112 
	`â_w™t
(0 =
	`evhâp_uri_£t_ho°
(
uri
,"1.2.3.4"));

2113 
	`â_w™t
(0 =
	`evhâp_uri_£t_ho°
(
uri
,"[1:2:3:4::]"));

2114 
	`â_w™t
(0 =
	`evhâp_uri_£t_ho°
(
uri
,"[v7.wobblewobble]"));

2115 
	`â_w™t
(0 =
	`evhâp_uri_£t_ho°
(
uri
,
NULL
));

2116 
	`â_w™t
(0 =
	`evhâp_uri_£t_ho°
(
uri
,""));

2117 
	`â_w™t
(0 =
	`evhâp_uri_£t_p‹t
(
uri
, -1));

2118 
	`â_w™t
(0 =
	`evhâp_uri_£t_p‹t
(
uri
, 80));

2119 
	`â_w™t
(0 =
	`evhâp_uri_£t_p‹t
(
uri
, 65535));

2120 
	`â_w™t
(0 =
	`evhâp_uri_£t_∑th
(
uri
, ""));

2121 
	`â_w™t
(0 =
	`evhâp_uri_£t_∑th
(
uri
, "/documents/public/index.html"));

2122 
	`â_w™t
(0 =
	`evhâp_uri_£t_∑th
(
uri
, 
NULL
));

2123 
	`â_w™t
(0 =
	`evhâp_uri_£t_quîy
(
uri
, "key=val&key2=val2"));

2124 
	`â_w™t
(0 =
	`evhâp_uri_£t_quîy
(
uri
, "keyvalblarg"));

2125 
	`â_w™t
(0 =
	`evhâp_uri_£t_quîy
(
uri
, ""));

2126 
	`â_w™t
(0 =
	`evhâp_uri_£t_quîy
(
uri
, 
NULL
));

2127 
	`â_w™t
(0 =
	`evhâp_uri_£t_‰agmít
(
uri
, ""));

2128 
	`â_w™t
(0 =
	`evhâp_uri_£t_‰agmít
(
uri
, "here?i?am"));

2129 
	`â_w™t
(0 =
	`evhâp_uri_£t_‰agmít
(
uri
, 
NULL
));

2130 
	`evhâp_uri_‰ì
(
uri
);

2133 
uri
 = 
	`URI_PARSE
("http://www.test.com/?q=t%33est");

2134 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_scheme
(
uri
), "http") == 0);

2135 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_ho°
(
uri
), "www.test.com") == 0);

2136 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_∑th
(
uri
), "/") == 0);

2137 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_quîy
(
uri
), "q=t%33est") == 0);

2138 
	`â_w™t
(
	`evhâp_uri_gë_u£röfo
(
uri
Ë=
NULL
);

2139 
	`â_w™t
(
	`evhâp_uri_gë_p‹t
(
uri
) == -1);

2140 
	`â_w™t
(
	`evhâp_uri_gë_‰agmít
(
uri
Ë=
NULL
);

2141 
	`TT_URI
("http://www.test.com/?q=t%33est");

2142 
	`evhâp_uri_‰ì
(
uri
);

2144 
uri
 = 
	`URI_PARSE
("http://%77ww.test.com");

2145 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_scheme
(
uri
), "http") == 0);

2146 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_ho°
(
uri
), "%77ww.test.com") == 0);

2147 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_∑th
(
uri
), "") == 0);

2148 
	`â_w™t
(
	`evhâp_uri_gë_quîy
(
uri
Ë=
NULL
);

2149 
	`â_w™t
(
	`evhâp_uri_gë_u£röfo
(
uri
Ë=
NULL
);

2150 
	`â_w™t
(
	`evhâp_uri_gë_p‹t
(
uri
) == -1);

2151 
	`â_w™t
(
	`evhâp_uri_gë_‰agmít
(
uri
Ë=
NULL
);

2152 
	`TT_URI
("http://%77ww.test.com");

2153 
	`evhâp_uri_‰ì
(
uri
);

2155 
uri
 = 
	`URI_PARSE
("http://www.test.com?q=test");

2156 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_scheme
(
uri
), "http") == 0);

2157 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_ho°
(
uri
), "www.test.com") == 0);

2158 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_∑th
(
uri
), "") == 0);

2159 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_quîy
(
uri
), "q=test") == 0);

2160 
	`â_w™t
(
	`evhâp_uri_gë_u£röfo
(
uri
Ë=
NULL
);

2161 
	`â_w™t
(
	`evhâp_uri_gë_p‹t
(
uri
) == -1);

2162 
	`â_w™t
(
	`evhâp_uri_gë_‰agmít
(
uri
Ë=
NULL
);

2163 
	`TT_URI
("http://www.test.com?q=test");

2164 
	`evhâp_uri_‰ì
(
uri
);

2166 
uri
 = 
	`URI_PARSE
("http://www.test.com#fragment");

2167 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_scheme
(
uri
), "http") == 0);

2168 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_ho°
(
uri
), "www.test.com") == 0);

2169 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_∑th
(
uri
), "") == 0);

2170 
	`â_w™t
(
	`evhâp_uri_gë_quîy
(
uri
Ë=
NULL
);

2171 
	`â_w™t
(
	`evhâp_uri_gë_u£röfo
(
uri
Ë=
NULL
);

2172 
	`â_w™t
(
	`evhâp_uri_gë_p‹t
(
uri
) == -1);

2173 
	`â_w™t_°r_›
(
	`evhâp_uri_gë_‰agmít
(
uri
), ==, "fragment");

2174 
	`TT_URI
("http://www.test.com#fragment");

2175 
	`evhâp_uri_‰ì
(
uri
);

2177 
uri
 = 
	`URI_PARSE
("http://8000/");

2178 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_scheme
(
uri
), "http") == 0);

2179 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_ho°
(
uri
), "8000") == 0);

2180 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_∑th
(
uri
), "/") == 0);

2181 
	`â_w™t
(
	`evhâp_uri_gë_quîy
(
uri
Ë=
NULL
);

2182 
	`â_w™t
(
	`evhâp_uri_gë_u£röfo
(
uri
Ë=
NULL
);

2183 
	`â_w™t
(
	`evhâp_uri_gë_p‹t
(
uri
) == -1);

2184 
	`â_w™t
(
	`evhâp_uri_gë_‰agmít
(
uri
Ë=
NULL
);

2185 
	`TT_URI
("http://8000/");

2186 
	`evhâp_uri_‰ì
(
uri
);

2188 
uri
 = 
	`URI_PARSE
("http://:8000/");

2189 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_scheme
(
uri
), "http") == 0);

2190 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_ho°
(
uri
), "") == 0);

2191 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_∑th
(
uri
), "/") == 0);

2192 
	`â_w™t
(
	`evhâp_uri_gë_quîy
(
uri
Ë=
NULL
);

2193 
	`â_w™t
(
	`evhâp_uri_gë_u£röfo
(
uri
Ë=
NULL
);

2194 
	`â_w™t
(
	`evhâp_uri_gë_p‹t
(
uri
) == 8000);

2195 
	`â_w™t
(
	`evhâp_uri_gë_‰agmít
(
uri
Ë=
NULL
);

2196 
	`TT_URI
("http://:8000/");

2197 
	`evhâp_uri_‰ì
(
uri
);

2199 
uri
 = 
	`URI_PARSE
("http://www.test.com:/");

2200 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_scheme
(
uri
), "http") == 0);

2201 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_ho°
(
uri
), "www.test.com") == 0);

2202 
	`â_w™t_°r_›
(
	`evhâp_uri_gë_∑th
(
uri
), ==, "/");

2203 
	`â_w™t
(
	`evhâp_uri_gë_quîy
(
uri
Ë=
NULL
);

2204 
	`â_w™t
(
	`evhâp_uri_gë_u£röfo
(
uri
Ë=
NULL
);

2205 
	`â_w™t
(
	`evhâp_uri_gë_p‹t
(
uri
) == -1);

2206 
	`â_w™t
(
	`evhâp_uri_gë_‰agmít
(
uri
Ë=
NULL
);

2207 
	`TT_URI
("http://www.test.com/");

2208 
	`evhâp_uri_‰ì
(
uri
);

2210 
uri
 = 
	`URI_PARSE
("http://www.test.com:");

2211 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_scheme
(
uri
), "http") == 0);

2212 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_ho°
(
uri
), "www.test.com") == 0);

2213 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_∑th
(
uri
), "") == 0);

2214 
	`â_w™t
(
	`evhâp_uri_gë_quîy
(
uri
Ë=
NULL
);

2215 
	`â_w™t
(
	`evhâp_uri_gë_u£röfo
(
uri
Ë=
NULL
);

2216 
	`â_w™t
(
	`evhâp_uri_gë_p‹t
(
uri
) == -1);

2217 
	`â_w™t
(
	`evhâp_uri_gë_‰agmít
(
uri
Ë=
NULL
);

2218 
	`TT_URI
("http://www.test.com");

2219 
	`evhâp_uri_‰ì
(
uri
);

2221 
uri
 = 
	`URI_PARSE
("ftp://www.test.com/?q=test");

2222 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_scheme
(
uri
), "ftp") == 0);

2223 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_ho°
(
uri
), "www.test.com") == 0);

2224 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_∑th
(
uri
), "/") == 0);

2225 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_quîy
(
uri
), "q=test") == 0);

2226 
	`â_w™t
(
	`evhâp_uri_gë_u£röfo
(
uri
Ë=
NULL
);

2227 
	`â_w™t
(
	`evhâp_uri_gë_p‹t
(
uri
) == -1);

2228 
	`â_w™t
(
	`evhâp_uri_gë_‰agmít
(
uri
Ë=
NULL
);

2229 
	`TT_URI
("ftp://www.test.com/?q=test");

2230 
	`evhâp_uri_‰ì
(
uri
);

2232 
uri
 = 
	`URI_PARSE
("ftp://[::1]:999/?q=test");

2233 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_scheme
(
uri
), "ftp") == 0);

2234 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_ho°
(
uri
), "[::1]") == 0);

2235 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_∑th
(
uri
), "/") == 0);

2236 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_quîy
(
uri
), "q=test") == 0);

2237 
	`â_w™t
(
	`evhâp_uri_gë_u£röfo
(
uri
Ë=
NULL
);

2238 
	`â_w™t
(
	`evhâp_uri_gë_p‹t
(
uri
) == 999);

2239 
	`â_w™t
(
	`evhâp_uri_gë_‰agmít
(
uri
Ë=
NULL
);

2240 
	`TT_URI
("ftp://[::1]:999/?q=test");

2241 
	`evhâp_uri_‰ì
(
uri
);

2243 
uri
 = 
	`URI_PARSE
("ftp://[ff00::127.0.0.1]/?q=test");

2244 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_scheme
(
uri
), "ftp") == 0);

2245 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_ho°
(
uri
), "[ff00::127.0.0.1]") == 0);

2246 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_∑th
(
uri
), "/") == 0);

2247 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_quîy
(
uri
), "q=test") == 0);

2248 
	`â_w™t
(
	`evhâp_uri_gë_u£röfo
(
uri
Ë=
NULL
);

2249 
	`â_w™t
(
	`evhâp_uri_gë_p‹t
(
uri
) == -1);

2250 
	`â_w™t
(
	`evhâp_uri_gë_‰agmít
(
uri
Ë=
NULL
);

2251 
	`TT_URI
("ftp://[ff00::127.0.0.1]/?q=test");

2252 
	`evhâp_uri_‰ì
(
uri
);

2254 
uri
 = 
	`URI_PARSE
("ftp://[v99.not_(any:time)_soon]/?q=test");

2255 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_scheme
(
uri
), "ftp") == 0);

2256 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_ho°
(
uri
), "[v99.not_(any:time)_soon]") == 0);

2257 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_∑th
(
uri
), "/") == 0);

2258 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_quîy
(
uri
), "q=test") == 0);

2259 
	`â_w™t
(
	`evhâp_uri_gë_u£röfo
(
uri
Ë=
NULL
);

2260 
	`â_w™t
(
	`evhâp_uri_gë_p‹t
(
uri
) == -1);

2261 
	`â_w™t
(
	`evhâp_uri_gë_‰agmít
(
uri
Ë=
NULL
);

2262 
	`TT_URI
("ftp://[v99.not_(any:time)_soon]/?q=test");

2263 
	`evhâp_uri_‰ì
(
uri
);

2265 
uri
 = 
	`URI_PARSE
("scheme://user:pass@foo.com:42/?q=test&s=some+thing#fragment");

2266 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_scheme
(
uri
), "scheme") == 0);

2267 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_u£röfo
(
uri
), "user:pass") == 0);

2268 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_ho°
(
uri
), "foo.com") == 0);

2269 
	`â_w™t
(
	`evhâp_uri_gë_p‹t
(
uri
) == 42);

2270 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_∑th
(
uri
), "/") == 0);

2271 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_quîy
(
uri
), "q=test&s=some+thing") == 0);

2272 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_‰agmít
(
uri
), "fragment") == 0);

2273 
	`TT_URI
("scheme://user:pass@foo.com:42/?q=test&s=some+thing#fragment");

2274 
	`evhâp_uri_‰ì
(
uri
);

2276 
uri
 = 
	`URI_PARSE
("scheme://user@foo.com/#fragment");

2277 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_scheme
(
uri
), "scheme") == 0);

2278 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_u£röfo
(
uri
), "user") == 0);

2279 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_ho°
(
uri
), "foo.com") == 0);

2280 
	`â_w™t
(
	`evhâp_uri_gë_p‹t
(
uri
) == -1);

2281 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_∑th
(
uri
), "/") == 0);

2282 
	`â_w™t
(
	`evhâp_uri_gë_quîy
(
uri
Ë=
NULL
);

2283 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_‰agmít
(
uri
), "fragment") == 0);

2284 
	`TT_URI
("scheme://user@foo.com/#fragment");

2285 
	`evhâp_uri_‰ì
(
uri
);

2287 
uri
 = 
	`URI_PARSE
("scheme://%75ser@foo.com/#frag@ment");

2288 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_scheme
(
uri
), "scheme") == 0);

2289 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_u£röfo
(
uri
), "%75ser") == 0);

2290 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_ho°
(
uri
), "foo.com") == 0);

2291 
	`â_w™t
(
	`evhâp_uri_gë_p‹t
(
uri
) == -1);

2292 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_∑th
(
uri
), "/") == 0);

2293 
	`â_w™t
(
	`evhâp_uri_gë_quîy
(
uri
Ë=
NULL
);

2294 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_‰agmít
(
uri
), "frag@ment") == 0);

2295 
	`TT_URI
("scheme://%75ser@foo.com/#frag@ment");

2296 
	`evhâp_uri_‰ì
(
uri
);

2298 
uri
 = 
	`URI_PARSE
("file:///some/path/to/the/file");

2299 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_scheme
(
uri
), "file") == 0);

2300 
	`â_w™t
(
	`evhâp_uri_gë_u£röfo
(
uri
Ë=
NULL
);

2301 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_ho°
(
uri
), "") == 0);

2302 
	`â_w™t
(
	`evhâp_uri_gë_p‹t
(
uri
) == -1);

2303 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_∑th
(
uri
), "/some/path/to/the/file") == 0);

2304 
	`â_w™t
(
	`evhâp_uri_gë_quîy
(
uri
Ë=
NULL
);

2305 
	`â_w™t
(
	`evhâp_uri_gë_‰agmít
(
uri
Ë=
NULL
);

2306 
	`TT_URI
("file:///some/path/to/the/file");

2307 
	`evhâp_uri_‰ì
(
uri
);

2309 
uri
 = 
	`URI_PARSE
("///some/path/to/the-file");

2310 
	`â_w™t
(
uri
 !
NULL
);

2311 
	`â_w™t
(
	`evhâp_uri_gë_scheme
(
uri
Ë=
NULL
);

2312 
	`â_w™t
(
	`evhâp_uri_gë_u£röfo
(
uri
Ë=
NULL
);

2313 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_ho°
(
uri
), "") == 0);

2314 
	`â_w™t
(
	`evhâp_uri_gë_p‹t
(
uri
) == -1);

2315 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_∑th
(
uri
), "/some/path/to/the-file") == 0);

2316 
	`â_w™t
(
	`evhâp_uri_gë_quîy
(
uri
Ë=
NULL
);

2317 
	`â_w™t
(
	`evhâp_uri_gë_‰agmít
(
uri
Ë=
NULL
);

2318 
	`TT_URI
("///some/path/to/the-file");

2319 
	`evhâp_uri_‰ì
(
uri
);

2321 
uri
 = 
	`URI_PARSE
("/s:ome/path/to/the-file?q=99#fred");

2322 
	`â_w™t
(
uri
 !
NULL
);

2323 
	`â_w™t
(
	`evhâp_uri_gë_scheme
(
uri
Ë=
NULL
);

2324 
	`â_w™t
(
	`evhâp_uri_gë_u£röfo
(
uri
Ë=
NULL
);

2325 
	`â_w™t
(
	`evhâp_uri_gë_ho°
(
uri
Ë=
NULL
);

2326 
	`â_w™t
(
	`evhâp_uri_gë_p‹t
(
uri
) == -1);

2327 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_∑th
(
uri
), "/s:ome/path/to/the-file") == 0);

2328 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_quîy
(
uri
), "q=99") == 0);

2329 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_‰agmít
(
uri
), "fred") == 0);

2330 
	`TT_URI
("/s:ome/path/to/the-file?q=99#fred");

2331 
	`evhâp_uri_‰ì
(
uri
);

2333 
uri
 = 
	`URI_PARSE
("relative/path/with/co:lon");

2334 
	`â_w™t
(
uri
 !
NULL
);

2335 
	`â_w™t
(
	`evhâp_uri_gë_scheme
(
uri
Ë=
NULL
);

2336 
	`â_w™t
(
	`evhâp_uri_gë_u£röfo
(
uri
Ë=
NULL
);

2337 
	`â_w™t
(
	`evhâp_uri_gë_ho°
(
uri
Ë=
NULL
);

2338 
	`â_w™t
(
	`evhâp_uri_gë_p‹t
(
uri
) == -1);

2339 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_∑th
(
uri
), "relative/path/with/co:lon") == 0);

2340 
	`â_w™t
(
	`evhâp_uri_gë_quîy
(
uri
Ë=
NULL
);

2341 
	`â_w™t
(
	`evhâp_uri_gë_‰agmít
(
uri
Ë=
NULL
);

2342 
	`TT_URI
("relative/path/with/co:lon");

2343 
	`evhâp_uri_‰ì
(
uri
);

2345 
uri
 = 
	`URI_PARSE
("bob?q=99&q2=q?33#fr?ed");

2346 
	`â_w™t
(
uri
 !
NULL
);

2347 
	`â_w™t
(
	`evhâp_uri_gë_scheme
(
uri
Ë=
NULL
);

2348 
	`â_w™t
(
	`evhâp_uri_gë_u£röfo
(
uri
Ë=
NULL
);

2349 
	`â_w™t
(
	`evhâp_uri_gë_ho°
(
uri
Ë=
NULL
);

2350 
	`â_w™t
(
	`evhâp_uri_gë_p‹t
(
uri
) == -1);

2351 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_∑th
(
uri
), "bob") == 0);

2352 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_quîy
(
uri
), "q=99&q2=q?33") == 0);

2353 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_‰agmít
(
uri
), "fr?ed") == 0);

2354 
	`TT_URI
("bob?q=99&q2=q?33#fr?ed");

2355 
	`evhâp_uri_‰ì
(
uri
);

2357 
uri
 = 
	`URI_PARSE
("#fr?ed");

2358 
	`â_w™t
(
uri
 !
NULL
);

2359 
	`â_w™t
(
	`evhâp_uri_gë_scheme
(
uri
Ë=
NULL
);

2360 
	`â_w™t
(
	`evhâp_uri_gë_u£röfo
(
uri
Ë=
NULL
);

2361 
	`â_w™t
(
	`evhâp_uri_gë_ho°
(
uri
Ë=
NULL
);

2362 
	`â_w™t
(
	`evhâp_uri_gë_p‹t
(
uri
) == -1);

2363 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_∑th
(
uri
), "") == 0);

2364 
	`â_w™t
(
	`evhâp_uri_gë_quîy
(
uri
Ë=
NULL
);

2365 
	`â_w™t
(
	`°rcmp
(
	`evhâp_uri_gë_‰agmít
(
uri
), "fr?ed") == 0);

2366 
	`TT_URI
("#fr?ed");

2367 
	`evhâp_uri_‰ì
(
uri
);

2368 #unde‡
URI_PARSE


2369 #unde‡
TT_URI


2370 #unde‡
BAD


2371 
	}
}

2374 
	$hâp_urõncode_ã°
(*
±r
)

2376 *
s
=
NULL
, *
s2
=NULL;

2377 
size_t
 
sz
;

2379 
	#ENC
(
‰om
,
w™t
,
∂us
) do { \

2380 
s
 = 
	`evhâp_urõncode
((
‰om
), -1, (
∂us
)); \

2381 
	`â_as£π
(
s
); \

2382 
	`â_°r_›
(
s
,==,(
w™t
)); \

2383 
sz
 = -1; \

2384 
s2
 = 
	`evhâp_uridecode
((
s
), (
∂us
), &
sz
); \

2385 
	`â_as£π
(
s2
); \

2386 
	`â_°r_›
(
s2
,==,(
‰om
)); \

2387 
	`â_öt_›
(
sz
,==,
	`°æí
(
‰om
)); \

2388 
	`‰ì
(
s
); \

2389 
	`‰ì
(
s2
); \

2390 
s
 = 
s2
 = 
NULL
; \

2391 } 0)

	)

2393 
	#DEC
(
‰om
,
w™t
,
dp
) do { \

2394 
s
 = 
	`evhâp_uridecode
((
‰om
),(
dp
),&
sz
); \

2395 
	`â_as£π
(
s
); \

2396 
	`â_°r_›
(
s
,==,(
w™t
)); \

2397 
	`â_öt_›
(
sz
,==,
	`°æí
(
w™t
)); \

2398 
	`‰ì
(
s
); \

2399 
s
 = 
NULL
; \

2400 } 0)

	)

2402 
	#OLD_DEC
(
‰om
,
w™t
) do { \

2403 
s
 = 
	`evhâp_decode_uri
((
‰om
)); \

2404 
	`â_as£π
(
s
); \

2405 
	`â_°r_›
(
s
,==,(
w™t
)); \

2406 
	`‰ì
(
s
); \

2407 
s
 = 
NULL
; \

2408 } 0)

	)

2411 
	`ENC
("Hello", "Hello",0);

2412 
	`ENC
("99", "99",0);

2413 
	`ENC
("", "",0);

2414 
	`ENC
(

2417 
	`ENC
(" ", "%20",0);

2418 
	`ENC
(" ", "+",1);

2419 
	`ENC
("\xff\xf0\xe0", "%FF%F0%E0",0);

2420 
	`ENC
("\x01\x19", "%01%19",1);

2421 
	`ENC
("http://www.ietf.org/rfc/rfc3986.txt",

2424 
	`ENC
("1+2=3", "1%2B2%3D3",1);

2425 
	`ENC
("1+2=3", "1%2B2%3D3",0);

2428 
s
 = 
	`evhâp_urõncode
("hello\0world", 11, 0);

2429 
	`â_as£π
(
s
);

2430 
	`â_°r_›
(
s
,==,"hello%00world");

2431 
	`‰ì
(
s
);

2432 
s
 = 
NULL
;

2436 
	`DEC
("%%xhelloÅh+ere \xff",

2439 
	`DEC
("plus+should%20work+", "plus should work ",1);

2441 
	`DEC
("%f0%a0%b0", "\xf0\xa0\xb0",1);

2444 
sz
 = 0;

2445 
s
 = 
	`evhâp_uridecode
("%00%00x%00%00", 1, &
sz
);

2446 
	`â_öt_›
(
sz
,==,5);

2447 
	`â_as£π
(!
	`memcmp
(
s
, "\0\0x\0\0", 5));

2448 
	`‰ì
(
s
);

2449 
s
 = 
NULL
;

2452 
sz
 = 0;

2453 
s
 = 
	`evhâp_uridecode
("%00%00x%00%00", 1, 
NULL
);

2454 
	`â_as£π
(!
	`memcmp
(
s
, "\0\0x\0\0", 5));

2455 
	`‰ì
(
s
);

2456 
s
 = 
NULL
;

2460 
	`OLD_DEC
("http://example.com/normal+path/?key=val+with+spaces",

2463 
íd
:

2464 i‡(
s
)

2465 
	`‰ì
(
s
);

2466 i‡(
s2
)

2467 
	`‰ì
(
s2
);

2468 #unde‡
ENC


2469 #unde‡
DEC


2470 #unde‡
OLD_DEC


2471 
	}
}

2474 
	$hâp_ba£_ã°
(*
±r
)

2476 
evít_ba£
 *
ba£
 = 
NULL
;

2477 
buf„ªvít
 *
bev
;

2478 
evutû_sockë_t
 
fd
;

2479 c⁄° *
hâp_ªque°
;

2480 
ev_uöt16_t
 
p‹t
 = 0;

2482 
ã°_ok
 = 0;

2483 
ba£
 = 
	`evít_ba£_√w
();

2484 
hâp
 = 
	`hâp_£tup
(&
p‹t
, 
ba£
);

2486 
fd
 = 
	`hâp_c⁄√˘
("127.0.0.1", 
p‹t
);

2489 
bev
 = 
	`buf„ªvít_sockë_√w
(
ba£
, 
fd
, 0);

2490 
	`buf„ªvít_£tcb
(
bev
, 
hâp_ªadcb
, 
hâp_wrôecb
,

2491 
hâp_îr‹cb
, 
ba£
);

2492 
	`buf„ªvít_ba£_£t
(
ba£
, 
bev
);

2494 
hâp_ªque°
 =

2500 
	`buf„ªvít_wrôe
(
bev
, 
hâp_ªque°
, 
	`°æí
(http_request));

2502 
	`evít_ba£_di•©ch
(
ba£
);

2504 
	`buf„ªvít_‰ì
(
bev
);

2505 
	`evutû_˛o£sockë
(
fd
);

2507 
	`evhâp_‰ì
(
hâp
);

2509 
	`â_öt_›
(
ã°_ok
, ==, 2);

2511 
íd
:

2512 i‡(
ba£
)

2513 
	`evít_ba£_‰ì
(
ba£
);

2514 
	}
}

2522 
	$hâp_öcom∂ëe_ªadcb
(
buf„ªvít
 *
bev
, *
¨g
)

2524 
ã°_ok
 = -1;

2525 
	`evít_ba£_lo›exô
(
exô_ba£
,
NULL
);

2526 
	}
}

2529 
	$hâp_öcom∂ëe_îr‹cb
(
buf„ªvít
 *
bev
, 
wh©
, *
¨g
)

2531 i‡(
wh©
 =(
BEV_EVENT_READING
|
BEV_EVENT_EOF
))

2532 
ã°_ok
++;

2534 
ã°_ok
 = -2;

2535 
	`evít_ba£_lo›exô
(
exô_ba£
,
NULL
);

2536 
	}
}

2539 
	$hâp_öcom∂ëe_wrôecb
(
buf„ªvít
 *
bev
, *
¨g
)

2541 i‡(
¨g
 !
NULL
) {

2542 
evutû_sockë_t
 
fd
 = *”vutû_sockë_à*)
¨g
;

2544 
	`shutdown
(
fd
, 
SHUT_WR
);

2546 i‡(
	`evbuf„r_gë_Àngth
(
	`buf„ªvít_gë_ouçut
(
bev
)) == 0) {

2548 
	`buf„ªvít_íabÀ
(
bev
, 
EV_READ
);

2549 
ã°_ok
++;

2551 
	}
}

2554 
	$_hâp_öcom∂ëe_ã°
(
basic_ã°_d©a
 *
d©a
, 
u£_timeout
)

2556 
buf„ªvít
 *
bev
;

2557 
evutû_sockë_t
 
fd
;

2558 c⁄° *
hâp_ªque°
;

2559 
ev_uöt16_t
 
p‹t
 = 0;

2560 
timevÆ
 
tv_°¨t
, 
tv_íd
;

2562 
exô_ba£
 = 
d©a
->
ba£
;

2564 
ã°_ok
 = 0;

2566 
hâp
 = 
	`hâp_£tup
(&
p‹t
, 
d©a
->
ba£
);

2567 
	`evhâp_£t_timeout
(
hâp
, 1);

2569 
fd
 = 
	`hâp_c⁄√˘
("127.0.0.1", 
p‹t
);

2572 
bev
 = 
	`buf„ªvít_sockë_√w
(
d©a
->
ba£
, 
fd
, 0);

2573 
	`buf„ªvít_£tcb
(
bev
,

2574 
hâp_öcom∂ëe_ªadcb
, 
hâp_öcom∂ëe_wrôecb
,

2575 
hâp_öcom∂ëe_îr‹cb
, 
u£_timeout
 ? 
NULL
 : &
fd
);

2577 
hâp_ªque°
 =

2581 
	`buf„ªvít_wrôe
(
bev
, 
hâp_ªque°
, 
	`°æí
(http_request));

2583 
	`evutû_gëtimeofday
(&
tv_°¨t
, 
NULL
);

2585 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

2587 
	`evutû_gëtimeofday
(&
tv_íd
, 
NULL
);

2588 
	`evutû_timîsub
(&
tv_íd
, &
tv_°¨t
, &tv_end);

2590 
	`buf„ªvít_‰ì
(
bev
);

2591 i‡(
u£_timeout
) {

2592 
	`evutû_˛o£sockë
(
fd
);

2595 
	`evhâp_‰ì
(
hâp
);

2597 i‡(
u£_timeout
 && 
tv_íd
.
tv_£c
 >= 3) {

2598 
	`â_ab‹t_msg
("time");

2599 } i‡(!
u£_timeout
 && 
tv_íd
.
tv_£c
 >= 1) {

2601 
	`â_ab‹t_msg
("time");

2604 
	`â_öt_›
(
ã°_ok
, ==, 2);

2605 
íd
:

2607 
	}
}

2609 
	$hâp_öcom∂ëe_ã°
(*
¨g
)

2611 
	`_hâp_öcom∂ëe_ã°
(
¨g
, 0);

2612 
	}
}

2614 
	$hâp_öcom∂ëe_timeout_ã°
(*
¨g
)

2616 
	`_hâp_öcom∂ëe_ã°
(
¨g
, 1);

2617 
	}
}

2624 
	$hâp_chunked_ªadcb
(
buf„ªvít
 *
bev
, *
¨g
)

2627 
	}
}

2630 
	$hâp_chunked_îr‹cb
(
buf„ªvít
 *
bev
, 
wh©
, *
¨g
)

2632 i‡(!
ã°_ok
)

2633 
out
;

2635 
ã°_ok
 = -1;

2637 i‡((
wh©
 & 
BEV_EVENT_EOF
) != 0) {

2638 
evhâp_ªque°
 *
ªq
 = 
	`evhâp_ªque°_√w
(
NULL
, NULL);

2639 c⁄° *
hódî
;

2640 
mesßge_ªad_°©us
 
d⁄e
;

2643 
d⁄e
 = 
	`evhâp_∑r£_fú°löe
(
ªq
, 
	`buf„ªvít_gë_öput
(
bev
));

2644 i‡(
d⁄e
 !
ALL_DATA_READ
)

2645 
out
;

2647 
d⁄e
 = 
	`evhâp_∑r£_hódîs
(
ªq
, 
	`buf„ªvít_gë_öput
(
bev
));

2648 i‡(
d⁄e
 !
ALL_DATA_READ
)

2649 
out
;

2651 
hódî
 = 
	`evhâp_föd_hódî
(
	`evhâp_ªque°_gë_öput_hódîs
(
ªq
), "Transfer-Encoding");

2652 i‡(
hódî
 =
NULL
 || 
	`°rcmp
(header, "chunked"))

2653 
out
;

2655 
hódî
 = 
	`evhâp_föd_hódî
(
	`evhâp_ªque°_gë_öput_hódîs
(
ªq
), "Connection");

2656 i‡(
hódî
 =
NULL
 || 
	`°rcmp
(header, "close"))

2657 
out
;

2659 
hódî
 = 
	`evbuf„r_ªad 
(
	`buf„ªvít_gë_öput
(
bev
), 
NULL
, 
EVBUFFER_EOL_CRLF
);

2660 i‡(
hódî
 =
NULL
)

2661 
out
;

2663 i‡(
	`°rcmp
(
hódî
, "d")) {

2664 
	`‰ì
((*)
hódî
);

2665 
out
;

2667 
	`‰ì
((*)
hódî
);

2669 i‡(
	`°∫cmp
((*)
	`evbuf„r_puŒup
(
	`buf„ªvít_gë_öput
(
bev
), 13),

2671 
out
;

2673 
	`evbuf„r_døö
(
	`buf„ªvít_gë_öput
(
bev
), 13 + 2);

2675 
hódî
 = 
	`evbuf„r_ªad 
(
	`buf„ªvít_gë_öput
(
bev
), 
NULL
, 
EVBUFFER_EOL_CRLF
);

2676 i‡(
hódî
 =
NULL
)

2677 
out
;

2679 i‡(
	`°rcmp
(
hódî
, "12"))

2680 
out
;

2681 
	`‰ì
((*)
hódî
);

2683 i‡(
	`°∫cmp
((*)
	`evbuf„r_puŒup
(
	`buf„ªvít_gë_öput
(
bev
), 18),

2685 
out
;

2687 
	`evbuf„r_døö
(
	`buf„ªvít_gë_öput
(
bev
), 18 + 2);

2689 
hódî
 = 
	`evbuf„r_ªad 
(
	`buf„ªvít_gë_öput
(
bev
), 
NULL
, 
EVBUFFER_EOL_CRLF
);

2690 i‡(
hódî
 =
NULL
)

2691 
out
;

2693 i‡(
	`°rcmp
(
hódî
, "8")) {

2694 
	`‰ì
((*)
hódî
);

2695 
out
;

2697 
	`‰ì
((*)
hódî
);

2699 i‡(
	`°∫cmp
((*)
	`evbuf„r_puŒup
(
	`buf„ªvít_gë_öput
(
bev
), 8),

2701 
out
;

2703 
	`evbuf„r_døö
(
	`buf„ªvít_gë_öput
(
bev
), 8 + 2);

2705 
hódî
 = 
	`evbuf„r_ªad 
(
	`buf„ªvít_gë_öput
(
bev
), 
NULL
, 
EVBUFFER_EOL_CRLF
);

2706 i‡(
hódî
 =
NULL
)

2707 
out
;

2709 i‡(
	`°rcmp
(
hódî
, "0")) {

2710 
	`‰ì
((*)
hódî
);

2711 
out
;

2713 
	`‰ì
((*)
hódî
);

2715 
ã°_ok
 = 2;

2717 
	`evhâp_ªque°_‰ì
(
ªq
);

2720 
out
:

2721 
	`evít_ba£_lo›exô
(
¨g
, 
NULL
);

2722 
	}
}

2725 
	$hâp_chunked_wrôecb
(
buf„ªvít
 *
bev
, *
¨g
)

2727 i‡(
	`evbuf„r_gë_Àngth
(
	`buf„ªvít_gë_ouçut
(
bev
)) == 0) {

2729 
	`buf„ªvít_íabÀ
(
bev
, 
EV_READ
);

2730 
ã°_ok
++;

2732 
	}
}

2735 
	$hâp_chunked_ªque°_d⁄e
(
evhâp_ªque°
 *
ªq
, *
¨g
)

2737 i‡(
	`evhâp_ªque°_gë_ª•⁄£_code
(
ªq
Ë!
HTTP_OK
) {

2738 
	`Ârötf
(
°dîr
, "FAILED\n");

2739 
	`exô
(1);

2742 i‡(
	`evhâp_föd_hódî
(
	`evhâp_ªque°_gë_öput_hódîs
(
ªq
),

2743 "Tøns„r-Encodög"Ë=
NULL
) {

2744 
	`Ârötf
(
°dîr
, "FAILED\n");

2745 
	`exô
(1);

2748 i‡(
	`evbuf„r_gë_Àngth
(
	`evhâp_ªque°_gë_öput_buf„r
(
ªq
)) != 13 + 18 + 8) {

2749 
	`Ârötf
(
°dîr
, "FAILED\n");

2750 
	`exô
(1);

2753 i‡(
	`°∫cmp
((*)
	`evbuf„r_puŒup
(
	`evhâp_ªque°_gë_öput_buf„r
(
ªq
), 13 + 18 + 8),

2756 
	`Ârötf
(
°dîr
, "FAILED\n");

2757 
	`exô
(1);

2760 
ã°_ok
 = 1;

2761 
	`evít_ba£_lo›exô
(
¨g
, 
NULL
);

2762 
	}
}

2765 
	$hâp_chunk_out_ã°
(*
¨g
)

2767 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

2768 
buf„ªvít
 *
bev
;

2769 
evutû_sockë_t
 
fd
;

2770 c⁄° *
hâp_ªque°
;

2771 
ev_uöt16_t
 
p‹t
 = 0;

2772 
timevÆ
 
tv_°¨t
, 
tv_íd
;

2773 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
NULL
;

2774 
evhâp_ªque°
 *
ªq
 = 
NULL
;

2775 
i
;

2777 
exô_ba£
 = 
d©a
->
ba£
;

2778 
ã°_ok
 = 0;

2780 
hâp
 = 
	`hâp_£tup
(&
p‹t
, 
d©a
->
ba£
);

2782 
fd
 = 
	`hâp_c⁄√˘
("127.0.0.1", 
p‹t
);

2785 
bev
 = 
	`buf„ªvít_sockë_√w
(
d©a
->
ba£
, 
fd
, 0);

2786 
	`buf„ªvít_£tcb
(
bev
,

2787 
hâp_chunked_ªadcb
, 
hâp_chunked_wrôecb
,

2788 
hâp_chunked_îr‹cb
, 
d©a
->
ba£
);

2790 
hâp_ªque°
 =

2796 
	`buf„ªvít_wrôe
(
bev
, 
hâp_ªque°
, 
	`°æí
(http_request));

2798 
	`evutû_gëtimeofday
(&
tv_°¨t
, 
NULL
);

2800 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

2802 
	`buf„ªvít_‰ì
(
bev
);

2804 
	`evutû_gëtimeofday
(&
tv_íd
, 
NULL
);

2805 
	`evutû_timîsub
(&
tv_íd
, &
tv_°¨t
, &tv_end);

2807 
	`â_öt_›
(
tv_íd
.
tv_£c
, <, 1);

2809 
	`â_öt_›
(
ã°_ok
, ==, 2);

2812 
evc⁄
 = 
	`evhâp_c⁄√˘i⁄_ba£_√w
(
d©a
->
ba£
, 
NULL
, "127.0.0.1", 
p‹t
);

2813 
	`â_as£π
(
evc⁄
);

2816 
i
 = 0; i < 2; i++) {

2817 
ã°_ok
 = 0;

2818 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_chunked_ªque°_d⁄e
,
d©a
->
ba£
);

2821 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Host", "somehost");

2824 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
,

2825 
EVHTTP_REQ_GET
, "/chunked") == -1) {

2826 
	`â_ab‹t_msg
("Couldn't makeÑequest");

2829 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

2831 
	`â_as£π
(
ã°_ok
 == 1);

2834 
íd
:

2835 i‡(
evc⁄
)

2836 
	`evhâp_c⁄√˘i⁄_‰ì
(
evc⁄
);

2837 i‡(
hâp
)

2838 
	`evhâp_‰ì
(
hâp
);

2839 
	}
}

2842 
	$hâp_°ªam_out_ã°
(*
¨g
)

2844 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

2845 
ev_uöt16_t
 
p‹t
 = 0;

2846 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
NULL
;

2847 
evhâp_ªque°
 *
ªq
 = 
NULL
;

2849 
ã°_ok
 = 0;

2850 
exô_ba£
 = 
d©a
->
ba£
;

2852 
hâp
 = 
	`hâp_£tup
(&
p‹t
, 
d©a
->
ba£
);

2854 
evc⁄
 = 
	`evhâp_c⁄√˘i⁄_ba£_√w
(
d©a
->
ba£
, 
NULL
, "127.0.0.1", 
p‹t
);

2855 
	`â_as£π
(
evc⁄
);

2862 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_ªque°_d⁄e
,

2866 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Host", "somehost");

2869 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_GET
, "/streamed")

2871 
	`â_ab‹t_msg
("Couldn't makeÑequest");

2874 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

2876 
íd
:

2877 i‡(
evc⁄
)

2878 
	`evhâp_c⁄√˘i⁄_‰ì
(
evc⁄
);

2879 i‡(
hâp
)

2880 
	`evhâp_‰ì
(
hâp
);

2881 
	}
}

2884 
	$hâp_°ªam_ö_chunk
(
evhâp_ªque°
 *
ªq
, *
¨g
)

2886 
evbuf„r
 *
ª∂y
 = 
¨g
;

2888 i‡(
	`evhâp_ªque°_gë_ª•⁄£_code
(
ªq
Ë!
HTTP_OK
) {

2889 
	`Ârötf
(
°dîr
, "FAILED\n");

2890 
	`exô
(1);

2893 
	`evbuf„r_add_buf„r
(
ª∂y
, 
	`evhâp_ªque°_gë_öput_buf„r
(
ªq
));

2894 
	}
}

2897 
	$hâp_°ªam_ö_d⁄e
(
evhâp_ªque°
 *
ªq
, *
¨g
)

2899 i‡(
	`evbuf„r_gë_Àngth
(
	`evhâp_ªque°_gë_öput_buf„r
(
ªq
)) != 0) {

2900 
	`Ârötf
(
°dîr
, "FAILED\n");

2901 
	`exô
(1);

2904 
	`evít_ba£_lo›exô
(
exô_ba£
, 
NULL
);

2905 
	}
}

2911 
	$_hâp_°ªam_ö_ã°
(
basic_ã°_d©a
 *
d©a
, c⁄° *
uæ
,

2912 
size_t
 
ex≥˘ed_Àn
, c⁄° *
ex≥˘ed
)

2914 
evhâp_c⁄√˘i⁄
 *
evc⁄
;

2915 
evbuf„r
 *
ª∂y
 = 
	`evbuf„r_√w
();

2916 
evhâp_ªque°
 *
ªq
 = 
NULL
;

2917 
ev_uöt16_t
 
p‹t
 = 0;

2919 
exô_ba£
 = 
d©a
->
ba£
;

2920 
hâp
 = 
	`hâp_£tup
(&
p‹t
, 
d©a
->
ba£
);

2922 
evc⁄
 = 
	`evhâp_c⁄√˘i⁄_ba£_√w
(
d©a
->
ba£
, 
NULL
,"127.0.0.1", 
p‹t
);

2923 
	`â_as£π
(
evc⁄
);

2925 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_°ªam_ö_d⁄e
, 
ª∂y
);

2926 
	`evhâp_ªque°_£t_chunked_cb
(
ªq
, 
hâp_°ªam_ö_chunk
);

2929 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_GET
, 
uæ
) == -1) {

2930 
	`â_ab‹t_msg
("Couldn't makeÑequest");

2933 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

2935 i‡(
	`evbuf„r_gë_Àngth
(
ª∂y
Ë!
ex≥˘ed_Àn
) {

2936 
	`TT_DIE
(("replyÜength %lu;Éxpected %lu; FAILED (%s)\n",

2937 ()
	`evbuf„r_gë_Àngth
(
ª∂y
),

2938 ()
ex≥˘ed_Àn
,

2939 (*)
	`evbuf„r_puŒup
(
ª∂y
, -1)));

2942 i‡(
	`memcmp
(
	`evbuf„r_puŒup
(
ª∂y
, -1), 
ex≥˘ed
, 
ex≥˘ed_Àn
) != 0) {

2943 
	`â_ab‹t_msg
("Memory mismatch");

2946 
ã°_ok
 = 1;

2947 
íd
:

2948 i‡(
ª∂y
)

2949 
	`evbuf„r_‰ì
(
ª∂y
);

2950 i‡(
evc⁄
)

2951 
	`evhâp_c⁄√˘i⁄_‰ì
(
evc⁄
);

2952 i‡(
hâp
)

2953 
	`evhâp_‰ì
(
hâp
);

2954 
	}
}

2957 
	$hâp_°ªam_ö_ã°
(*
¨g
)

2959 
	`_hâp_°ªam_ö_ã°
(
¨g
, "/chunked", 13 + 18 + 8,

2962 
	`_hâp_°ªam_ö_ã°
(
¨g
, "/ã°", 
	`°æí
(
BASIC_REQUEST_BODY
),

2963 
BASIC_REQUEST_BODY
);

2964 
	}
}

2967 
	$hâp_°ªam_ö_ˇn˚l_chunk
(
evhâp_ªque°
 *
ªq
, *
¨g
)

2969 
	`â_öt_›
(
	`evhâp_ªque°_gë_ª•⁄£_code
(
ªq
), ==, 
HTTP_OK
);

2971 
íd
:

2972 
	`evhâp_ˇn˚l_ªque°
(
ªq
);

2973 
	`evít_ba£_lo›exô
(
¨g
, 
NULL
);

2974 
	}
}

2977 
	$hâp_°ªam_ö_ˇn˚l_d⁄e
(
evhâp_ªque°
 *
ªq
, *
¨g
)

2980 
	`â_Áû_msg
("In cancel done");

2981 
	}
}

2984 
	$hâp_°ªam_ö_ˇn˚l_ã°
(*
¨g
)

2986 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

2987 
evhâp_c⁄√˘i⁄
 *
evc⁄
;

2988 
evhâp_ªque°
 *
ªq
 = 
NULL
;

2989 
ev_uöt16_t
 
p‹t
 = 0;

2991 
hâp
 = 
	`hâp_£tup
(&
p‹t
, 
d©a
->
ba£
);

2993 
evc⁄
 = 
	`evhâp_c⁄√˘i⁄_ba£_√w
(
d©a
->
ba£
, 
NULL
, "127.0.0.1", 
p‹t
);

2994 
	`â_as£π
(
evc⁄
);

2996 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_°ªam_ö_ˇn˚l_d⁄e
, 
d©a
->
ba£
);

2997 
	`evhâp_ªque°_£t_chunked_cb
(
ªq
, 
hâp_°ªam_ö_ˇn˚l_chunk
);

3000 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_GET
, "/chunked") == -1) {

3001 
	`â_ab‹t_msg
("Couldn't makeÑequest");

3004 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

3006 
ã°_ok
 = 1;

3007 
íd
:

3008 
	`evhâp_c⁄√˘i⁄_‰ì
(
evc⁄
);

3009 
	`evhâp_‰ì
(
hâp
);

3011 
	}
}

3014 
	$hâp_c⁄√˘i⁄_Áû_d⁄e
(
evhâp_ªque°
 *
ªq
, *
¨g
)

3020 
	`â_as£π
(!
ªq
);

3022 
ã°_ok
 = 1;

3024 
íd
:

3025 
	`evít_ba£_lo›exô
(
¨g
, 
NULL
);

3026 
	}
}

3031 
	$hâp_c⁄√˘i⁄_Áû_ã°
(*
¨g
)

3033 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

3034 
ev_uöt16_t
 
p‹t
 = 0;

3035 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
NULL
;

3036 
evhâp_ªque°
 *
ªq
 = 
NULL
;

3038 
exô_ba£
 = 
d©a
->
ba£
;

3039 
ã°_ok
 = 0;

3042 
hâp
 = 
	`hâp_£tup
(&
p‹t
, 
d©a
->
ba£
);

3043 
	`evhâp_‰ì
(
hâp
);

3044 
hâp
 = 
NULL
;

3048 
evc⁄
 = 
	`evhâp_c⁄√˘i⁄_ba£_√w
(
d©a
->
ba£
, 
NULL
, "239.10.20.30", 80);

3049 
	`â_as£π
(
evc⁄
);

3056 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_c⁄√˘i⁄_Áû_d⁄e
, 
d©a
->
ba£
);

3057 
	`â_as£π
(
ªq
);

3059 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_GET
, "/") == -1) {

3060 
	`â_ab‹t_msg
("Couldn't makeÑequest");

3063 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

3065 
	`â_öt_›
(
ã°_ok
, ==, 1);

3067 
íd
:

3068 i‡(
evc⁄
)

3069 
	`evhâp_c⁄√˘i⁄_‰ì
(
evc⁄
);

3070 
	}
}

3073 
	$hâp_c⁄√˘i⁄_ªåy_d⁄e
(
evhâp_ªque°
 *
ªq
, *
¨g
)

3075 
	`â_as£π
(
ªq
);

3076 
	`â_öt_›
(
	`evhâp_ªque°_gë_ª•⁄£_code
(
ªq
), !=, 
HTTP_OK
);

3077 i‡(
	`evhâp_föd_hódî
(
	`evhâp_ªque°_gë_öput_hódîs
(
ªq
), "C⁄ã¡-Ty≥"Ë!
NULL
) {

3078 
	`â_ab‹t_msg
("(contentÅype)\n");

3081 
	`â_uöt_›
(
	`evbuf„r_gë_Àngth
(
	`evhâp_ªque°_gë_öput_buf„r
(
ªq
)), ==, 0);

3083 
ã°_ok
 = 1;

3084 
íd
:

3085 
	`evít_ba£_lo›exô
(
¨g
,
NULL
);

3086 
	}
}

3088 
evít_ba£
 *
	ghâp_make_web_£rvî_ba£
=
NULL
;

3090 
	$hâp_make_web_£rvî
(
evutû_sockë_t
 
fd
, 
wh©
, *
¨g
)

3092 
ev_uöt16_t
 
p‹t
 = *”v_uöt16_t*)
¨g
;

3093 
hâp
 = 
	`hâp_£tup
(&
p‹t
, 
hâp_make_web_£rvî_ba£
);

3094 
	}
}

3097 
	$hâp_c⁄√˘i⁄_ªåy_ã°
(*
¨g
)

3099 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

3100 
ev_uöt16_t
 
p‹t
 = 0;

3101 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
NULL
;

3102 
evhâp_ªque°
 *
ªq
 = 
NULL
;

3103 
timevÆ
 
tv
, 
tv_°¨t
, 
tv_íd
;

3105 
exô_ba£
 = 
d©a
->
ba£
;

3106 
ã°_ok
 = 0;

3109 
hâp
 = 
	`hâp_£tup
(&
p‹t
, 
d©a
->
ba£
);

3110 
	`evhâp_‰ì
(
hâp
);

3111 
hâp
 = 
NULL
;

3113 
evc⁄
 = 
	`evhâp_c⁄√˘i⁄_ba£_√w
(
d©a
->
ba£
, 
NULL
, "127.0.0.1", 
p‹t
);

3114 
	`â_as£π
(
evc⁄
);

3116 
	`evhâp_c⁄√˘i⁄_£t_timeout
(
evc⁄
, 1);

3118 
	`evhâp_c⁄√˘i⁄_£t_loˇl_addªss
(
evc⁄
, "127.0.0.1");

3125 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_c⁄√˘i⁄_ªåy_d⁄e
, 
d©a
->
ba£
);

3126 
	`â_as£π
(
ªq
);

3129 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Host", "somehost");

3131 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_GET
,

3133 
	`â_ab‹t_msg
("Couldn't makeÑequest");

3136 
	`evutû_gëtimeofday
(&
tv_°¨t
, 
NULL
);

3137 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

3138 
	`evutû_gëtimeofday
(&
tv_íd
, 
NULL
);

3139 
	`evutû_timîsub
(&
tv_íd
, &
tv_°¨t
, &tv_end);

3140 
	`â_öt_›
(
tv_íd
.
tv_£c
, <, 1);

3142 
	`â_öt_›
(
ã°_ok
, ==, 1);

3147 
ã°_ok
 = 0;

3149 
	`evhâp_c⁄√˘i⁄_£t_timeout
(
evc⁄
, 1);

3150 
	`evhâp_c⁄√˘i⁄_£t_ªåõs
(
evc⁄
, 1);

3152 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_c⁄√˘i⁄_ªåy_d⁄e
, 
d©a
->
ba£
);

3153 
	`â_as£π
(
ªq
);

3156 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Host", "somehost");

3158 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_GET
,

3160 
	`â_ab‹t_msg
("Couldn't makeÑequest");

3163 
	`evutû_gëtimeofday
(&
tv_°¨t
, 
NULL
);

3164 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

3165 
	`evutû_gëtimeofday
(&
tv_íd
, 
NULL
);

3166 
	`evutû_timîsub
(&
tv_íd
, &
tv_°¨t
, &tv_end);

3167 
	`â_öt_›
(
tv_íd
.
tv_£c
, >, 1);

3168 
	`â_öt_›
(
tv_íd
.
tv_£c
, <, 6);

3170 
	`â_as£π
(
ã°_ok
 == 1);

3176 
ã°_ok
 = 0;

3178 
	`evhâp_c⁄√˘i⁄_£t_timeout
(
evc⁄
, 1);

3179 
	`evhâp_c⁄√˘i⁄_£t_ªåõs
(
evc⁄
, 3);

3181 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_di•©chî_ã°_d⁄e
, 
d©a
->
ba£
);

3182 
	`â_as£π
(
ªq
);

3185 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Host", "somehost");

3187 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_GET
,

3189 
	`â_ab‹t_msg
("Couldn't makeÑequest");

3195 
	`evutû_timî˛ór
(&
tv
);

3196 
tv
.
tv_£c
 = 1;

3197 
hâp_make_web_£rvî_ba£
 = 
d©a
->
ba£
;

3198 
	`evít_ba£_⁄˚
(
d©a
->
ba£
, -1, 
EV_TIMEOUT
, 
hâp_make_web_£rvî
, &
p‹t
, &
tv
);

3200 
	`evutû_gëtimeofday
(&
tv_°¨t
, 
NULL
);

3201 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

3202 
	`evutû_gëtimeofday
(&
tv_íd
, 
NULL
);

3204 
	`evutû_timîsub
(&
tv_íd
, &
tv_°¨t
, &tv_end);

3206 
	`â_öt_›
(
tv_íd
.
tv_£c
, >, 1);

3207 
	`â_öt_›
(
tv_íd
.
tv_£c
, <, 6);

3209 
	`â_öt_›
(
ã°_ok
, ==, 1);

3211 
íd
:

3212 i‡(
evc⁄
)

3213 
	`evhâp_c⁄√˘i⁄_‰ì
(
evc⁄
);

3214 i‡(
hâp
)

3215 
	`evhâp_‰ì
(
hâp
);

3216 
	}
}

3219 
	$hâp_¥imôives
(*
±r
)

3221 *
esˇ≥d
 = 
NULL
;

3222 
evhâp
 *
hâp
 = 
NULL
;

3224 
esˇ≥d
 = 
	`evhâp_htmÀsˇ≥
("<script>");

3225 
	`â_as£π
(
esˇ≥d
);

3226 
	`â_°r_›
(
esˇ≥d
, ==, "&lt;script&gt;");

3227 
	`‰ì
(
esˇ≥d
);

3229 
esˇ≥d
 = 
	`evhâp_htmÀsˇ≥
("\"\'&");

3230 
	`â_as£π
(
esˇ≥d
);

3231 
	`â_°r_›
(
esˇ≥d
, ==, "&quot;&#039;&amp;");

3233 
hâp
 = 
	`evhâp_√w
(
NULL
);

3234 
	`â_as£π
(
hâp
);

3235 
	`â_öt_›
(
	`evhâp_£t_cb
(
hâp
, "/ã°", 
hâp_basic_cb
, 
NULL
), ==, 0);

3236 
	`â_öt_›
(
	`evhâp_£t_cb
(
hâp
, "/ã°", 
hâp_basic_cb
, 
NULL
), ==, -1);

3237 
	`â_öt_›
(
	`evhâp_dñ_cb
(
hâp
, "/test"), ==, 0);

3238 
	`â_öt_›
(
	`evhâp_dñ_cb
(
hâp
, "/test"), ==, -1);

3239 
	`â_öt_›
(
	`evhâp_£t_cb
(
hâp
, "/ã°", 
hâp_basic_cb
, 
NULL
), ==, 0);

3241 
íd
:

3242 i‡(
esˇ≥d
)

3243 
	`‰ì
(
esˇ≥d
);

3244 i‡(
hâp
)

3245 
	`evhâp_‰ì
(
hâp
);

3246 
	}
}

3249 
	$hâp_mu…i_löe_hódî_ã°
(*
¨g
)

3251 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

3252 
buf„ªvít
 *
bev

NULL
;

3253 
evutû_sockë_t
 
fd
 = -1;

3254 c⁄° *
hâp_°¨t_ªque°
;

3255 
ev_uöt16_t
 
p‹t
 = 0;

3257 
ã°_ok
 = 0;

3259 
hâp
 = 
	`hâp_£tup
(&
p‹t
, 
d©a
->
ba£
);

3261 
fd
 = 
	`hâp_c⁄√˘
("127.0.0.1", 
p‹t
);

3264 
bev
 = 
	`buf„ªvít_sockë_√w
(
d©a
->
ba£
, 
fd
, 0);

3265 
	`buf„ªvít_£tcb
(
bev
, 
hâp_ªadcb
, 
hâp_wrôecb
,

3266 
hâp_îr‹cb
, 
d©a
->
ba£
);

3268 
hâp_°¨t_ªque°
 =

3278 
	`buf„ªvít_wrôe
(
bev
, 
hâp_°¨t_ªque°
, 
	`°æí
(http_start_request));

3280 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

3282 
	`â_öt_›
(
ã°_ok
, ==, 4);

3283 
íd
:

3284 i‡(
bev
)

3285 
	`buf„ªvít_‰ì
(
bev
);

3286 i‡(
fd
 >= 0)

3287 
	`evutû_˛o£sockë
(
fd
);

3288 i‡(
hâp
)

3289 
	`evhâp_‰ì
(
hâp
);

3290 
	}
}

3293 
	$hâp_ªque°_bad
(
evhâp_ªque°
 *
ªq
, *
¨g
)

3295 i‡(
ªq
 !
NULL
) {

3296 
	`Ârötf
(
°dîr
, "FAILED\n");

3297 
	`exô
(1);

3300 
ã°_ok
 = 1;

3301 
	`evít_ba£_lo›exô
(
¨g
, 
NULL
);

3302 
	}
}

3305 
	$hâp_√g©ive_c⁄ã¡_Àngth_ã°
(*
¨g
)

3307 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

3308 
ev_uöt16_t
 
p‹t
 = 0;

3309 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
NULL
;

3310 
evhâp_ªque°
 *
ªq
 = 
NULL
;

3312 
ã°_ok
 = 0;

3314 
hâp
 = 
	`hâp_£tup
(&
p‹t
, 
d©a
->
ba£
);

3316 
evc⁄
 = 
	`evhâp_c⁄√˘i⁄_ba£_√w
(
d©a
->
ba£
, 
NULL
, "127.0.0.1", 
p‹t
);

3317 
	`â_as£π
(
evc⁄
);

3324 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_ªque°_bad
, 
d©a
->
ba£
);

3327 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "X-Negative", "makeitso");

3330 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_GET
, "/test") == -1) {

3331 
	`â_ab‹t_msg
("Couldn't makeÑequest");

3334 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

3336 
íd
:

3337 i‡(
evc⁄
)

3338 
	`evhâp_c⁄√˘i⁄_‰ì
(
evc⁄
);

3339 i‡(
hâp
)

3340 
	`evhâp_‰ì
(
hâp
);

3341 
	}
}

3345 
	$hâp_d©a_Àngth_c⁄°øöts_ã°_d⁄e
(
evhâp_ªque°
 *
ªq
, *
¨g
)

3347 
	`â_as£π
(
ªq
);

3348 
	`â_öt_›
(
	`evhâp_ªque°_gë_ª•⁄£_code
(
ªq
), ==, 
HTTP_BADREQUEST
);

3349 
íd
:

3350 
	`evít_ba£_lo›exô
(
¨g
, 
NULL
);

3351 
	}
}

3354 
	$hâp_œrge_ítôy_ã°_d⁄e
(
evhâp_ªque°
 *
ªq
, *
¨g
)

3356 
	`â_as£π
(
ªq
);

3357 
	`â_öt_›
(
	`evhâp_ªque°_gë_ª•⁄£_code
(
ªq
), ==, 
HTTP_ENTITYTOOLARGE
);

3358 
íd
:

3359 
	`evít_ba£_lo›exô
(
¨g
, 
NULL
);

3360 
	}
}

3363 
	$hâp_d©a_Àngth_c⁄°øöts_ã°
(*
¨g
)

3365 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

3366 
ev_uöt16_t
 
p‹t
 = 0;

3367 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
NULL
;

3368 
evhâp_ªque°
 *
ªq
 = 
NULL
;

3369 
l⁄g_°r
[8192];

3371 
ã°_ok
 = 0;

3373 
hâp
 = 
	`hâp_£tup
(&
p‹t
, 
d©a
->
ba£
);

3375 
evc⁄
 = 
	`evhâp_c⁄√˘i⁄_ba£_√w
(
d©a
->
ba£
, 
NULL
, "127.0.0.1", 
p‹t
);

3376 
	`â_as£π
(
evc⁄
);

3379 
	`evhâp_c⁄√˘i⁄_£t_loˇl_addªss
(
evc⁄
, "127.0.0.1");

3386 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_d©a_Àngth_c⁄°øöts_ã°_d⁄e
, 
d©a
->
ba£
);

3387 
	`â_as£π
(
ªq
);

3389 
	`mem£t
(
l⁄g_°r
, 'a', 8192);

3390 
l⁄g_°r
[8191] = '\0';

3392 
	`evhâp_£t_max_hódîs_size
(
hâp
, 8191);

3393 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Host", "somehost");

3394 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "L⁄ghódî", 
l⁄g_°r
);

3396 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_GET
, "/?arg=val") == -1) {

3397 
	`â_ab‹t_msg
("Couldn't makeÑequest");

3399 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

3401 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_d©a_Àngth_c⁄°øöts_ã°_d⁄e
, 
d©a
->
ba£
);

3402 
	`â_as£π
(
ªq
);

3403 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Host", "somehost");

3406 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_GET
, 
l⁄g_°r
) == -1) {

3407 
	`â_ab‹t_msg
("Couldn't makeÑequest");

3409 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

3411 
	`evhâp_£t_max_body_size
(
hâp
, 8190);

3412 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_d©a_Àngth_c⁄°øöts_ã°_d⁄e
, 
d©a
->
ba£
);

3413 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Host", "somehost");

3414 
	`evbuf„r_add_¥ötf
(
	`evhâp_ªque°_gë_ouçut_buf„r
(
ªq
), "%s", 
l⁄g_°r
);

3415 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_POST
, "/") == -1) {

3416 
	`â_ab‹t_msg
("Couldn't makeÑequest");

3418 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

3420 
ªq
 = 
	`evhâp_ªque°_√w
(
hâp_œrge_ítôy_ã°_d⁄e
, 
d©a
->
ba£
);

3421 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Host", "somehost");

3422 
	`evhâp_add_hódî
(
	`evhâp_ªque°_gë_ouçut_hódîs
(
ªq
), "Expect", "100-continue");

3423 
	`evbuf„r_add_¥ötf
(
	`evhâp_ªque°_gë_ouçut_buf„r
(
ªq
), "%s", 
l⁄g_°r
);

3424 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
, 
EVHTTP_REQ_POST
, "/") == -1) {

3425 
	`â_ab‹t_msg
("Couldn't makeÑequest");

3427 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

3429 
ã°_ok
 = 1;

3430 
íd
:

3431 i‡(
evc⁄
)

3432 
	`evhâp_c⁄√˘i⁄_‰ì
(
evc⁄
);

3433 i‡(
hâp
)

3434 
	`evhâp_‰ì
(
hâp
);

3435 
	}
}

3441 
	sãrmö©e_°©e
 {

3442 
evít_ba£
 *
	mba£
;

3443 
evhâp_ªque°
 *
	mªq
;

3444 
buf„ªvít
 *
	mbev
;

3445 
evutû_sockë_t
 
	mfd
;

3446 
	mgŸ˛o£cb
: 1;

3450 
	$ãrmö©e_chunked_åickÀ_cb
(
evutû_sockë_t
 
fd
, 
evíts
, *
¨g
)

3452 
ãrmö©e_°©e
 *
°©e
 = 
¨g
;

3453 
evbuf„r
 *
evb
;

3454 
timevÆ
 
tv
;

3456 i‡(
	`evhâp_ªque°_gë_c⁄√˘i⁄
(
°©e
->
ªq
Ë=
NULL
) {

3457 
ã°_ok
 = 1;

3458 
	`evhâp_ªque°_‰ì
(
°©e
->
ªq
);

3459 
	`evít_ba£_lo›exô
(
°©e
->
ba£
,
NULL
);

3463 
evb
 = 
	`evbuf„r_√w
();

3464 
	`evbuf„r_add_¥ötf
(
evb
, "%p",Évb);

3465 
	`evhâp_£nd_ª∂y_chunk
(
°©e
->
ªq
, 
evb
);

3466 
	`evbuf„r_‰ì
(
evb
);

3468 
tv
.
tv_£c
 = 0;

3469 
tv
.
tv_u£c
 = 3000;

3470 
	`EVUTIL_ASSERT
(
°©e
);

3471 
	`EVUTIL_ASSERT
(
°©e
->
ba£
);

3472 
	`evít_ba£_⁄˚
(
°©e
->
ba£
, -1, 
EV_TIMEOUT
, 
ãrmö©e_chunked_åickÀ_cb
, 
¨g
, &
tv
);

3473 
	}
}

3476 
	$ãrmö©e_chunked_˛o£_cb
(
evhâp_c⁄√˘i⁄
 *
evc⁄
, *
¨g
)

3478 
ãrmö©e_°©e
 *
°©e
 = 
¨g
;

3479 
°©e
->
gŸ˛o£cb
 = 1;

3480 
	}
}

3483 
	$ãrmö©e_chunked_cb
(
evhâp_ªque°
 *
ªq
, *
¨g
)

3485 
ãrmö©e_°©e
 *
°©e
 = 
¨g
;

3486 
timevÆ
 
tv
;

3489 
	`evhâp_c⁄√˘i⁄_£t_˛o£cb
(

3490 
	`evhâp_ªque°_gë_c⁄√˘i⁄
(
ªq
),

3491 
ãrmö©e_chunked_˛o£_cb
, 
¨g
);

3493 
°©e
->
ªq
 =Ñeq;

3495 
	`evhâp_£nd_ª∂y_°¨t
(
ªq
, 
HTTP_OK
, "OK");

3497 
tv
.
tv_£c
 = 0;

3498 
tv
.
tv_u£c
 = 3000;

3499 
	`evít_ba£_⁄˚
(
°©e
->
ba£
, -1, 
EV_TIMEOUT
, 
ãrmö©e_chunked_åickÀ_cb
, 
¨g
, &
tv
);

3500 
	}
}

3503 
	$ãrmö©e_chunked_˛õ¡
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

3505 
ãrmö©e_°©e
 *
°©e
 = 
¨g
;

3506 
	`buf„ªvít_‰ì
(
°©e
->
bev
);

3507 
	`evutû_˛o£sockë
(
°©e
->
fd
);

3508 
	}
}

3511 
	$ãrmö©e_ªadcb
(
buf„ªvít
 *
bev
, *
¨g
)

3514 
	`evbuf„r_døö
(
	`buf„ªvít_gë_öput
(
bev
), -1);

3515 
	}
}

3519 
	$hâp_ãrmö©e_chunked_ã°
(*
¨g
)

3521 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

3522 
buf„ªvít
 *
bev
 = 
NULL
;

3523 
timevÆ
 
tv
;

3524 c⁄° *
hâp_ªque°
;

3525 
ev_uöt16_t
 
p‹t
 = 0;

3526 
evutû_sockë_t
 
fd
 = -1;

3527 
ãrmö©e_°©e
Åerminate_state;

3529 
ã°_ok
 = 0;

3531 
hâp
 = 
	`hâp_£tup
(&
p‹t
, 
d©a
->
ba£
);

3532 
	`evhâp_dñ_cb
(
hâp
, "/test");

3533 
	`â_as£π
(
	`evhâp_£t_cb
(
hâp
, "/test",

3534 
ãrmö©e_chunked_cb
, &
ãrmö©e_°©e
) == 0);

3536 
fd
 = 
	`hâp_c⁄√˘
("127.0.0.1", 
p‹t
);

3539 
bev
 = 
	`buf„ªvít_sockë_√w
(
d©a
->
ba£
, 
fd
, 0);

3540 
	`buf„ªvít_£tcb
(
bev
, 
ãrmö©e_ªadcb
, 
hâp_wrôecb
,

3541 
hâp_îr‹cb
, 
d©a
->
ba£
);

3543 
	`mem£t
(&
ãrmö©e_°©e
, 0, (terminate_state));

3544 
ãrmö©e_°©e
.
ba£
 = 
d©a
->base;

3545 
ãrmö©e_°©e
.
fd
 = fd;

3546 
ãrmö©e_°©e
.
bev
 = bev;

3547 
ãrmö©e_°©e
.
gŸ˛o£cb
 = 0;

3550 
hâp_ªque°
 =

3554 
	`buf„ªvít_wrôe
(
bev
, 
hâp_ªque°
, 
	`°æí
(http_request));

3555 
	`evutû_timî˛ór
(&
tv
);

3556 
tv
.
tv_u£c
 = 10000;

3557 
	`evít_ba£_⁄˚
(
d©a
->
ba£
, -1, 
EV_TIMEOUT
, 
ãrmö©e_chunked_˛õ¡
, &
ãrmö©e_°©e
,

3558 &
tv
);

3560 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

3562 i‡(
ãrmö©e_°©e
.
gŸ˛o£cb
 == 0)

3563 
ã°_ok
 = 0;

3565 
íd
:

3566 i‡(
fd
 >= 0)

3567 
	`evutû_˛o£sockë
(
fd
);

3568 i‡(
hâp
)

3569 
	`evhâp_‰ì
(
hâp
);

3570 
	}
}

3572 
	#HTTP_LEGACY
(
«me
) \

3573 { #«me, 
run_Àgacy_ã°_‚
, 
TT_ISOLATED
|
TT_LEGACY
, &
Àgacy_£tup
, \

3574 
hâp_
##
«me
##
_ã°
 }

	)

3576 
	#HTTP
(
«me
) \

3577 { #«me, 
hâp_
##
«me
##
_ã°
, 
TT_ISOLATED
, &
basic_£tup
, 
NULL
 }

	)

3579 
ã°ˇ£_t
 
	ghâp_ã°ˇ£s
[] = {

3580 { "¥imôives", 
hâp_¥imôives
, 0, 
NULL
, NULL },

3581 { "ba£", 
hâp_ba£_ã°
, 
TT_FORK
, 
NULL
, NULL },

3582 { "bad_hódîs", 
hâp_bad_hódî_ã°
, 0, 
NULL
, NULL },

3583 { "∑r£_quîy", 
hâp_∑r£_quîy_ã°
, 0, 
NULL
, NULL },

3584 { "∑r£_uri", 
hâp_∑r£_uri_ã°
, 0, 
NULL
, NULL },

3585 { "∑r£_uri_nc", 
hâp_∑r£_uri_ã°
, 0, &
basic_£tup
, (*)"nc" },

3586 { "urõncode", 
hâp_urõncode_ã°
, 0, 
NULL
, NULL },

3587 
HTTP
(
basic
),

3588 
HTTP
(
ˇn˚l
),

3589 
HTTP
(
vútuÆ_ho°
),

3590 
HTTP
(
po°
),

3591 
HTTP
(
put
),

3592 
HTTP
(
dñëe
),

3593 
HTTP
(
Ælowed_mëhods
),

3594 
HTTP
(
Áûuª
),

3595 
HTTP
(
c⁄√˘i⁄
),

3596 
HTTP
(
≥rsi°_c⁄√˘i⁄
),

3597 
HTTP
(
c⁄√˘i⁄_async
),

3598 
HTTP
(
˛o£_dëe˘i⁄
),

3599 
HTTP
(
˛o£_dëe˘i⁄_dñay
),

3600 
HTTP
(
bad_ªque°
),

3601 
HTTP
(
öcom∂ëe
),

3602 
HTTP
(
öcom∂ëe_timeout
),

3603 
HTTP
(
ãrmö©e_chunked
),

3605 
HTTP
(
highp‹t
),

3606 
HTTP
(
di•©chî
),

3607 
HTTP
(
mu…i_löe_hódî
),

3608 
HTTP
(
√g©ive_c⁄ã¡_Àngth
),

3609 
HTTP
(
chunk_out
),

3610 
HTTP
(
°ªam_out
),

3612 
HTTP
(
°ªam_ö
),

3613 
HTTP
(
°ªam_ö_ˇn˚l
),

3615 
HTTP
(
c⁄√˘i⁄_Áû
),

3616 
HTTP
(
c⁄√˘i⁄_ªåy
),

3617 
HTTP
(
d©a_Àngth_c⁄°øöts
),

3619 
END_OF_TESTCASES


	@test/regress_iocp.c

27 
	~<°dlib.h
>

28 
	~<°rög.h
>

29 
	~"evít2/evít.h
"

30 
	~"evít2/thªad.h
"

31 
	~"evít2/buf„r.h
"

32 
	~"evít2/buf„r_com∑t.h
"

33 
	~"evít2/buf„ªvít.h
"

35 
	~<wösock2.h
>

36 
	~<ws2t˝ù.h
>

38 
	~"ªgªss.h
"

39 
	~"töyã°.h
"

40 
	~"töyã°_ma¸os.h
"

42 
	#WIN32_LEAN_AND_MEAN


	)

43 
	~<wödows.h
>

44 
	~<wösock2.h
>

45 #unde‡
WIN32_LEAN_AND_MEAN


47 
	~"io˝-öã∫Æ.h
"

48 
	~"evbuf„r-öã∫Æ.h
"

49 
	~"evthªad-öã∫Æ.h
"

52 
	~<sys/queue.h
>

53 
	~"evít2/evít_°ru˘.h
"

54 
	~"evít-öã∫Æ.h
"

56 
	#MAX_CALLS
 16

	)

58 *
	gcou¡_lock
 = 
NULL
, *
	gcou¡_c⁄d
 = NULL;

59 
	gcou¡
 = 0;

62 
	$cou¡_öô
()

64 
	`EVTHREAD_ALLOC_LOCK
(
cou¡_lock
, 0);

65 
	`EVTHREAD_ALLOC_COND
(
cou¡_c⁄d
);

67 
	`â_as£π
(
cou¡_lock
);

68 
	`â_as£π
(
cou¡_c⁄d
);

70 
íd
:

72 
	}
}

75 
	$cou¡_‰ì
()

77 
	`EVTHREAD_FREE_LOCK
(
cou¡_lock
, 0);

78 
	`EVTHREAD_FREE_COND
(
cou¡_c⁄d
);

79 
	}
}

82 
	$cou¡_ö¸
()

84 
	`EVLOCK_LOCK
(
cou¡_lock
, 0);

85 
cou¡
++;

86 
	`EVTHREAD_COND_BROADCAST
(
cou¡_c⁄d
);

87 
	`EVLOCK_UNLOCK
(
cou¡_lock
, 0);

88 
	}
}

91 
	$cou¡_waô_f‹
(
i
, 
ms
)

93 
timevÆ
 
tv
;

94 
DWORD
 
ñ≠£d
;

95 
rv
 = -1;

97 
	`EVLOCK_LOCK
(
cou¡_lock
, 0);

98 
ms
 > 0 && 
cou¡
 !
i
) {

99 
tv
.
tv_£c
 = 0;

100 
tv
.
tv_u£c
 = 
ms
 * 1000;

101 
ñ≠£d
 = 
	`GëTickCou¡
();

102 
	`EVTHREAD_COND_WAIT_TIMED
(
cou¡_c⁄d
, 
cou¡_lock
, &
tv
);

103 
ñ≠£d
 = 
	`GëTickCou¡
() -Élapsed;

104 
ms
 -
ñ≠£d
;

106 i‡(
cou¡
 =
i
)

107 
rv
 = 0;

108 
	`EVLOCK_UNLOCK
(
cou¡_lock
, 0);

110  
rv
;

111 
	}
}

113 
	sdummy_ovîœµed
 {

114 
evít_ovîœµed
 
	meo
;

115 *
	mlock
;

116 
	mˇŒ_cou¡
;

117 
uöçå_t
 
	mkeys
[
MAX_CALLS
];

118 
ev_ssize_t
 
	msizes
[
MAX_CALLS
];

122 
	$dummy_cb
(
evít_ovîœµed
 *
o
, 
uöçå_t
 
key
, 
ev_ssize_t
 
n
, 
ok
)

124 
dummy_ovîœµed
 *
d_o
 =

125 
	`EVUTIL_UPCAST
(
o
, 
dummy_ovîœµed
, 
eo
);

127 
	`EVLOCK_LOCK
(
d_o
->
lock
, 0);

128 i‡(
d_o
->
ˇŒ_cou¡
 < 
MAX_CALLS
) {

129 
d_o
->
keys
[d_o->
ˇŒ_cou¡
] = 
key
;

130 
d_o
->
sizes
[d_o->
ˇŒ_cou¡
] = 
n
;

132 
d_o
->
ˇŒ_cou¡
++;

133 
	`EVLOCK_UNLOCK
(
d_o
->
lock
, 0);

135 
	`cou¡_ö¸
();

136 
	}
}

139 
	$∑ú_is_ö
(
dummy_ovîœµed
 *
o
, 
uöçå_t
 
key
, 
ev_ssize_t
 
n
)

141 
i
;

142 
ªsu…
 = 0;

143 
	`EVLOCK_LOCK
(
o
->
lock
, 0);

144 
i
=0; i < 
o
->
ˇŒ_cou¡
; ++i) {

145 i‡(
o
->
keys
[
i
] =
key
 && o->
sizes
[i] =
n
) {

146 
ªsu…
 = 1;

150 
	`EVLOCK_UNLOCK
(
o
->
lock
, 0);

151  
ªsu…
;

152 
	}
}

155 
	$ã°_io˝_p‹t
(*
±r
)

157 
evít_io˝_p‹t
 *
p‹t
 = 
NULL
;

158 
dummy_ovîœµed
 
o1
, 
o2
;

160 
	`mem£t
(&
o1
, 0, (o1));

161 
	`mem£t
(&
o2
, 0, (o2));

163 
	`cou¡_öô
();

164 
	`EVTHREAD_ALLOC_LOCK
(
o1
.
lock
, 
EVTHREAD_LOCKTYPE_RECURSIVE
);

165 
	`EVTHREAD_ALLOC_LOCK
(
o2
.
lock
, 
EVTHREAD_LOCKTYPE_RECURSIVE
);

167 
	`â_as£π
(
o1
.
lock
);

168 
	`â_as£π
(
o2
.
lock
);

170 
	`evít_ovîœµed_öô
(&
o1
.
eo
, 
dummy_cb
);

171 
	`evít_ovîœµed_öô
(&
o2
.
eo
, 
dummy_cb
);

173 
p‹t
 = 
	`evít_io˝_p‹t_œunch
(0);

174 
	`â_as£π
(
p‹t
);

176 
	`â_as£π
(!
	`evít_io˝_a˘iv©e_ovîœµed
(
p‹t
, &
o1
.
eo
, 10, 100));

177 
	`â_as£π
(!
	`evít_io˝_a˘iv©e_ovîœµed
(
p‹t
, &
o2
.
eo
, 20, 200));

179 
	`â_as£π
(!
	`evít_io˝_a˘iv©e_ovîœµed
(
p‹t
, &
o1
.
eo
, 11, 101));

180 
	`â_as£π
(!
	`evít_io˝_a˘iv©e_ovîœµed
(
p‹t
, &
o2
.
eo
, 21, 201));

182 
	`â_as£π
(!
	`evít_io˝_a˘iv©e_ovîœµed
(
p‹t
, &
o1
.
eo
, 12, 102));

183 
	`â_as£π
(!
	`evít_io˝_a˘iv©e_ovîœµed
(
p‹t
, &
o2
.
eo
, 22, 202));

185 
	`â_as£π
(!
	`evít_io˝_a˘iv©e_ovîœµed
(
p‹t
, &
o1
.
eo
, 13, 103));

186 
	`â_as£π
(!
	`evít_io˝_a˘iv©e_ovîœµed
(
p‹t
, &
o2
.
eo
, 23, 203));

188 
	`â_öt_›
(
	`cou¡_waô_f‹
(8, 2000), ==, 0);

190 
	`â_w™t
(!
	`evít_io˝_shutdown
(
p‹t
, 2000));

192 
	`â_öt_›
(
o1
.
ˇŒ_cou¡
, ==, 4);

193 
	`â_öt_›
(
o2
.
ˇŒ_cou¡
, ==, 4);

195 
	`â_w™t
(
	`∑ú_is_ö
(&
o1
, 10, 100));

196 
	`â_w™t
(
	`∑ú_is_ö
(&
o1
, 11, 101));

197 
	`â_w™t
(
	`∑ú_is_ö
(&
o1
, 12, 102));

198 
	`â_w™t
(
	`∑ú_is_ö
(&
o1
, 13, 103));

200 
	`â_w™t
(
	`∑ú_is_ö
(&
o2
, 20, 200));

201 
	`â_w™t
(
	`∑ú_is_ö
(&
o2
, 21, 201));

202 
	`â_w™t
(
	`∑ú_is_ö
(&
o2
, 22, 202));

203 
	`â_w™t
(
	`∑ú_is_ö
(&
o2
, 23, 203));

205 
íd
:

206 
	`EVTHREAD_FREE_LOCK
(
o1
.
lock
, 
EVTHREAD_LOCKTYPE_RECURSIVE
);

207 
	`EVTHREAD_FREE_LOCK
(
o2
.
lock
, 
EVTHREAD_LOCKTYPE_RECURSIVE
);

208 
	`cou¡_‰ì
();

209 
	}
}

211 
evbuf„r
 *
	grbuf
 = 
NULL
, *
	gwbuf
 = NULL;

214 
	$ªad_com∂ëe
(
evít_ovîœµed
 *
eo
, 
uöçå_t
 
key
,

215 
ev_ssize_t
 
nbyãs
, 
ok
)

217 
	`â_as£π
(
ok
);

218 
	`evbuf„r_commô_ªad
(
rbuf
, 
nbyãs
);

219 
	`cou¡_ö¸
();

220 
íd
:

222 
	}
}

225 
	$wrôe_com∂ëe
(
evít_ovîœµed
 *
eo
, 
uöçå_t
 
key
,

226 
ev_ssize_t
 
nbyãs
, 
ok
)

228 
	`â_as£π
(
ok
);

229 
	`evbuf„r_commô_wrôe
(
wbuf
, 
nbyãs
);

230 
	`cou¡_ö¸
();

231 
íd
:

233 
	}
}

236 
	$ã°_io˝_evbuf„r
(*
±r
)

238 
evít_ovîœµed
 
rﬁ
, 
wﬁ
;

239 
basic_ã°_d©a
 *
d©a
 = 
±r
;

240 
evít_io˝_p‹t
 *
p‹t
 = 
NULL
;

241 
evbuf„r
 *
buf
=
NULL
;

242 
evbuf„r_chaö
 *
chaö
;

243 
junk
[1024];

244 
i
;

246 
	`cou¡_öô
();

247 
	`evít_ovîœµed_öô
(&
rﬁ
, 
ªad_com∂ëe
);

248 
	`evít_ovîœµed_öô
(&
wﬁ
, 
wrôe_com∂ëe
);

250 
i
 = 0; i < ()(
junk
); ++i)

251 
junk
[
i
] = ()(i);

253 
rbuf
 = 
	`evbuf„r_ovîœµed_√w
(
d©a
->
∑ú
[0]);

254 
wbuf
 = 
	`evbuf„r_ovîœµed_√w
(
d©a
->
∑ú
[1]);

255 
	`evbuf„r_íabÀ_lockög
(
rbuf
, 
NULL
);

256 
	`evbuf„r_íabÀ_lockög
(
wbuf
, 
NULL
);

258 
p‹t
 = 
	`evít_io˝_p‹t_œunch
(0);

259 
	`â_as£π
(
p‹t
);

260 
	`â_as£π
(
rbuf
);

261 
	`â_as£π
(
wbuf
);

263 
	`â_as£π
(!
	`evít_io˝_p‹t_assocüã
(
p‹t
, 
d©a
->
∑ú
[0], 100));

264 
	`â_as£π
(!
	`evít_io˝_p‹t_assocüã
(
p‹t
, 
d©a
->
∑ú
[1], 100));

266 
i
=0;i<10;++i)

267 
	`evbuf„r_add
(
wbuf
, 
junk
, (junk));

269 
buf
 = 
	`evbuf„r_√w
();

270 
	`â_as£π
(
buf
 !
NULL
);

271 
	`evbuf„r_add
(
rbuf
, 
junk
, (junk));

272 
	`â_as£π
(!
	`evbuf„r_œunch_ªad
(
rbuf
, 2048, &
rﬁ
));

273 
	`evbuf„r_add_buf„r
(
buf
, 
rbuf
);

274 
	`â_öt_›
(
	`evbuf„r_gë_Àngth
(
buf
), ==, (
junk
));

275 
chaö
 = 
buf
->
fú°
; chaö; chaö = chaö->
√xt
)

276 
	`â_öt_›
(
chaö
->
Êags
 & 
EVBUFFER_MEM_PINNED_ANY
, ==, 0);

277 
	`â_as£π
(!
	`evbuf„r_gë_Àngth
(
rbuf
));

278 
	`â_as£π
(!
	`evbuf„r_œunch_wrôe
(
wbuf
, 512, &
wﬁ
));

280 
	`â_öt_›
(
	`cou¡_waô_f‹
(2, 2000), ==, 0);

282 
	`â_öt_›
(
	`evbuf„r_gë_Àngth
(
rbuf
),==,512);

286 
	`â_w™t
(!
	`evít_io˝_shutdown
(
p‹t
, 2000));

287 
íd
:

288 
	`cou¡_‰ì
();

289 
	`evbuf„r_‰ì
(
rbuf
);

290 
	`evbuf„r_‰ì
(
wbuf
);

291 i‡(
buf
Ë
	`evbuf„r_‰ì
(buf);

292 
	}
}

294 
	ggŸ_ªadcb
 = 0;

297 
	$async_ªadcb
(
buf„ªvít
 *
bev
, *
¨g
)

300 
	`buf„ªvít_dißbÀ
(
bev
, 
EV_READ
);

301 
gŸ_ªadcb
++;

302 
	}
}

305 
	$ã°_io˝_buf„ªvít_async
(*
±r
)

307 
basic_ã°_d©a
 *
d©a
 = 
±r
;

308 
evít_io˝_p‹t
 *
p‹t
 = 
NULL
;

309 
buf„ªvít
 *
bó1
=
NULL
, *
bó2
=NULL;

310 
buf
[128];

311 
size_t
 
n
;

313 
	`evít_ba£_°¨t_io˝
(
d©a
->
ba£
, 0);

314 
p‹t
 = 
	`evít_ba£_gë_io˝
(
d©a
->
ba£
);

315 
	`â_as£π
(
p‹t
);

317 
bó1
 = 
	`buf„ªvít_async_√w
(
d©a
->
ba£
, d©a->
∑ú
[0],

318 
BEV_OPT_DEFER_CALLBACKS
);

319 
bó2
 = 
	`buf„ªvít_async_√w
(
d©a
->
ba£
, d©a->
∑ú
[1],

320 
BEV_OPT_DEFER_CALLBACKS
);

321 
	`â_as£π
(
bó1
);

322 
	`â_as£π
(
bó2
);

324 
	`buf„ªvít_£tcb
(
bó2
, 
async_ªadcb
, 
NULL
, NULL, NULL);

325 
	`buf„ªvít_íabÀ
(
bó1
, 
EV_WRITE
);

326 
	`buf„ªvít_íabÀ
(
bó2
, 
EV_READ
);

328 
	`buf„ªvít_wrôe
(
bó1
, "Hñlÿw‹ld", 
	`°æí
("Hello world")+1);

330 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

332 
	`â_öt_›
(
gŸ_ªadcb
, ==, 1);

333 
n
 = 
	`buf„ªvít_ªad
(
bó2
, 
buf
, (buf)-1);

334 
buf
[
n
]='\0';

335 
	`â_°r_›
(
buf
, ==, "Hello world");

337 
íd
:

338 
	`buf„ªvít_‰ì
(
bó1
);

339 
	`buf„ªvít_‰ì
(
bó2
);

340 
	}
}

343 
ã°ˇ£_t
 
	gio˝_ã°ˇ£s
[] = {

344 { "p‹t", 
ã°_io˝_p‹t
, 
TT_FORK
|
TT_NEED_THREADS
, &
basic_£tup
, 
NULL
 },

345 { "evbuf„r", 
ã°_io˝_evbuf„r
,

346 
TT_FORK
|
TT_NEED_SOCKETPAIR
|
TT_NEED_THREADS
,

347 &
basic_£tup
, 
NULL
 },

348 { "buf„ªvít_async", 
ã°_io˝_buf„ªvít_async
,

349 
TT_FORK
|
TT_NEED_SOCKETPAIR
|
TT_NEED_THREADS
|
TT_NEED_BASE
,

350 &
basic_£tup
, 
NULL
 },

351 
END_OF_TESTCASES


	@test/regress_listener.c

27 #ifde‡
WIN32


28 
	~<wösock2.h
>

29 
	~<wödows.h
>

32 
	~<sys/ty≥s.h
>

34 #i‚de‡
WIN32


35 
	~<sys/sockë.h
>

36 
	~<√töë/ö.h
>

37 #ifde‡
_XOPEN_SOURCE_EXTENDED


38 
	~<¨∑/öë.h
>

40 
	~<uni°d.h
>

43 
	~<°rög.h
>

45 
	~"evít2/li°íî.h
"

46 
	~"evít2/evít.h
"

47 
	~"evít2/utû.h
"

49 
	~"ªgªss.h
"

50 
	~"töyã°.h
"

51 
	~"töyã°_ma¸os.h
"

52 
	~"utû-öã∫Æ.h
"

55 
	$ac˚±cb
(
evc⁄∆i°íî
 *
li°íî
, 
evutû_sockë_t
 
fd
,

56 
sockaddr
 *
addr
, 
sockÀn
, *
¨g
)

58 *
±r
 = 
¨g
;

59 --*
±r
;

60 
	`TT_BLATHER
(("GŸ o√ f‹ %p", 
±r
));

61 
	`evutû_˛o£sockë
(
fd
);

63 i‡(! *
±r
)

64 
	`evc⁄∆i°íî_dißbÀ
(
li°íî
);

65 
	}
}

68 
	$ªgªss_pick_a_p‹t
(*
¨g
)

70 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

71 
evít_ba£
 *
ba£
 = 
d©a
->base;

72 
evc⁄∆i°íî
 *
li°íî1
 = 
NULL
, *
li°íî2
 = NULL;

73 
sockaddr_ö
 
sö
;

74 
cou¡1
 = 2, 
cou¡2
 = 1;

75 
sockaddr_°‹age
 
ss1
, 
ss2
;

76 
sockaddr_ö
 *
sö1
, *
sö2
;

77 
ev_sockÀn_t
 
¶í1
 = (
ss1
), 
¶í2
 = (
ss2
);

78 
Êags
 =

79 
LEV_OPT_CLOSE_ON_FREE
|
LEV_OPT_REUSEABLE
|
LEV_OPT_CLOSE_ON_EXEC
;

81 
evutû_sockë_t
 
fd1
 = -1, 
fd2
 = -1, 
fd3
 = -1;

83 i‡(
d©a
->
£tup_d©a
 && 
	`°r°r
((*)data->setup_data, "ts")) {

84 
Êags
 |
LEV_OPT_THREADSAFE
;

87 
	`mem£t
(&
sö
, 0, (sin));

88 
sö
.
sö_Ámûy
 = 
AF_INET
;

89 
sö
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(0x7f000001);

90 
sö
.
sö_p‹t
 = 0;

92 
li°íî1
 = 
	`evc⁄∆i°íî_√w_böd
(
ba£
, 
ac˚±cb
, &
cou¡1
,

93 
Êags
, -1, (
sockaddr
 *)&
sö
, (sin));

94 
	`â_as£π
(
li°íî1
);

95 
li°íî2
 = 
	`evc⁄∆i°íî_√w_böd
(
ba£
, 
ac˚±cb
, &
cou¡2
,

96 
Êags
, -1, (
sockaddr
 *)&
sö
, (sin));

97 
	`â_as£π
(
li°íî2
);

99 
	`â_öt_›
(
	`evc⁄∆i°íî_gë_fd
(
li°íî1
), >=, 0);

100 
	`â_öt_›
(
	`evc⁄∆i°íî_gë_fd
(
li°íî2
), >=, 0);

101 
	`â_as£π
(
	`gësock«me
(
	`evc⁄∆i°íî_gë_fd
(
li°íî1
),

102 (
sockaddr
*)&
ss1
, &
¶í1
) == 0);

103 
	`â_as£π
(
	`gësock«me
(
	`evc⁄∆i°íî_gë_fd
(
li°íî2
),

104 (
sockaddr
*)&
ss2
, &
¶í2
) == 0);

105 
	`â_öt_›
(
ss1
.
ss_Ámûy
, ==, 
AF_INET
);

106 
	`â_öt_›
(
ss2
.
ss_Ámûy
, ==, 
AF_INET
);

108 
sö1
 = (
sockaddr_ö
*)&
ss1
;

109 
sö2
 = (
sockaddr_ö
*)&
ss2
;

110 
	`â_öt_›
(
	`¡ohl
(
sö1
->
sö_addr
.
s_addr
), ==, 0x7f000001);

111 
	`â_öt_›
(
	`¡ohl
(
sö2
->
sö_addr
.
s_addr
), ==, 0x7f000001);

112 
	`â_öt_›
(
sö1
->
sö_p‹t
, !=, 
sö2
->sin_port);

114 
	`â_±r_›
(
	`evc⁄∆i°íî_gë_ba£
(
li°íî1
), ==, 
ba£
);

115 
	`â_±r_›
(
	`evc⁄∆i°íî_gë_ba£
(
li°íî2
), ==, 
ba£
);

117 
fd1
 = 
fd2
 = 
fd3
 = -1;

118 
	`evutû_sockë_c⁄√˘
(&
fd1
, (
sockaddr
*)&
ss1
, 
¶í1
);

119 
	`evutû_sockë_c⁄√˘
(&
fd2
, (
sockaddr
*)&
ss1
, 
¶í1
);

120 
	`evutû_sockë_c⁄√˘
(&
fd3
, (
sockaddr
*)&
ss2
, 
¶í2
);

122 #ifde‡
WIN32


123 
	`SÀï
(100);

125 
	`evít_ba£_di•©ch
(
ba£
);

127 
	`â_öt_›
(
cou¡1
, ==, 0);

128 
	`â_öt_›
(
cou¡2
, ==, 0);

130 
íd
:

131 i‡(
fd1
>=0)

132 
	`EVUTIL_CLOSESOCKET
(
fd1
);

133 i‡(
fd2
>=0)

134 
	`EVUTIL_CLOSESOCKET
(
fd2
);

135 i‡(
fd3
>=0)

136 
	`EVUTIL_CLOSESOCKET
(
fd3
);

137 i‡(
li°íî1
)

138 
	`evc⁄∆i°íî_‰ì
(
li°íî1
);

139 i‡(
li°íî2
)

140 
	`evc⁄∆i°íî_‰ì
(
li°íî2
);

141 
	}
}

144 
	$îr‹cb
(
evc⁄∆i°íî
 *
lis
, *
d©a_
)

146 *
d©a
 = 
d©a_
;

147 *
d©a
 = 1000;

148 
	`evc⁄∆i°íî_dißbÀ
(
lis
);

149 
	}
}

152 
	$ªgªss_li°íî_îr‹
(*
¨g
)

154 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

155 
evít_ba£
 *
ba£
 = 
d©a
->base;

156 
evc⁄∆i°íî
 *
li°íî
 = 
NULL
;

157 
cou¡
 = 1;

158 
Êags
 = 
LEV_OPT_CLOSE_ON_FREE
|
LEV_OPT_REUSEABLE
;

160 i‡(
d©a
->
£tup_d©a
 && 
	`°r°r
((*)data->setup_data, "ts")) {

161 
Êags
 |
LEV_OPT_THREADSAFE
;

165 
	`â_öt_›
(
	`£nd
(
d©a
->
∑ú
[1], "hello", 5, 0), >, 0);

168 
li°íî
 = 
	`evc⁄∆i°íî_√w
(
ba£
, 
ac˚±cb
, &
cou¡
,

169 
Êags
, 0,

170 
d©a
->
∑ú
[0]);

171 
	`â_as£π
(
li°íî
);

173 
	`evc⁄∆i°íî_£t_îr‹_cb
(
li°íî
, 
îr‹cb
);

175 
	`â_as£π
(
li°íî
);

177 
	`evít_ba£_di•©ch
(
ba£
);

178 
	`â_öt_›
(
cou¡
,==,1000);

180 
íd
:

181 i‡(
li°íî
)

182 
	`evc⁄∆i°íî_‰ì
(
li°íî
);

183 
	}
}

185 
ã°ˇ£_t
 
	gli°íî_ã°ˇ£s
[] = {

187 { "øndp‹t", 
ªgªss_pick_a_p‹t
, 
TT_FORK
|
TT_NEED_BASE
,

188 &
basic_£tup
, 
NULL
},

190 { "øndp‹t_ts", 
ªgªss_pick_a_p‹t
, 
TT_FORK
|
TT_NEED_BASE
,

191 &
basic_£tup
, (*)"ts"},

193 { "îr‹", 
ªgªss_li°íî_îr‹
,

194 
TT_FORK
|
TT_NEED_BASE
|
TT_NEED_SOCKETPAIR
,

195 &
basic_£tup
, 
NULL
},

197 { "îr‹_ts", 
ªgªss_li°íî_îr‹
,

198 
TT_FORK
|
TT_NEED_BASE
|
TT_NEED_SOCKETPAIR
,

199 &
basic_£tup
, (*)"ts"},

201 
END_OF_TESTCASES
,

204 
ã°ˇ£_t
 
	gli°íî_io˝_ã°ˇ£s
[] = {

205 { "øndp‹t", 
ªgªss_pick_a_p‹t
,

206 
TT_FORK
|
TT_NEED_BASE
|
TT_ENABLE_IOCP
,

207 &
basic_£tup
, 
NULL
},

209 { "îr‹", 
ªgªss_li°íî_îr‹
,

210 
TT_FORK
|
TT_NEED_BASE
|
TT_NEED_SOCKETPAIR
|
TT_ENABLE_IOCP
,

211 &
basic_£tup
, 
NULL
},

213 
END_OF_TESTCASES
,

	@test/regress_main.c

28 #ifde‡
WIN32


29 
	~<wösock2.h
>

30 
	~<wödows.h
>

31 
	~<io.h
>

32 
	~<f˙é.h
>

35 #i‡
deföed
(
__APPLE__
Ë&& deföed(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
)

36 #i‡(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
 >= 1060 && \

37 
	g__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
 < 1070)

38 
	#FORK_BREAKS_GCOV


	)

39 
	~<v¥oc.h
>

43 
	~"evít2/evít-c⁄fig.h
"

45 #ifde‡
_EVENT___func__


46 
	#__func__
 
_EVENT___func__


	)

50 
	~<sys/ty≥s.h
>

51 
	~<sys/°©.h
>

52 #ifde‡
_EVENT_HAVE_SYS_TIME_H


53 
	~<sys/time.h
>

55 
	~<sys/queue.h
>

56 
	~<sig«l.h
>

57 
	~<î∫o.h
>

60 
	~<sys/ty≥s.h
>

61 #ifde‡
_EVENT_HAVE_SYS_STAT_H


62 
	~<sys/°©.h
>

65 #i‚de‡
WIN32


66 
	~<sys/sockë.h
>

67 
	~<sys/waô.h
>

68 
	~<sig«l.h
>

69 
	~<uni°d.h
>

70 
	~<√tdb.h
>

73 
	~<°dlib.h
>

74 
	~<°dio.h
>

75 
	~<°rög.h
>

76 
	~<as£π.h
>

78 
	~"evít2/utû.h
"

79 
	~"evít2/evít.h
"

80 
	~"evít2/evít_com∑t.h
"

81 
	~"evít2/dns.h
"

82 
	~"evít2/dns_com∑t.h
"

83 
	~"evít2/thªad.h
"

85 
	~"evít2/evít-c⁄fig.h
"

86 
	~"ªgªss.h
"

87 
	~"töyã°.h
"

88 
	~"töyã°_ma¸os.h
"

89 
	~"../io˝-öã∫Æ.h
"

90 
	~"../evít-öã∫Æ.h
"

93 
	$timevÆ_m£c_diff
(c⁄° 
timevÆ
 *
°¨t
, c⁄° timevÆ *
íd
)

95 
ms
 = 
íd
->
tv_£c
 - 
°¨t
->tv_sec;

96 
ms
 *= 1000;

97 
ms
 +((
íd
->
tv_u£c
 - 
°¨t
->tv_usec)+500) / 1000;

98  
ms
;

100 
	}
}

114 
	gö_Àgacy_ã°_wøµî
 = 0;

116 
	$dn¶ogcb
(
w
, c⁄° *
m
)

118 
	`TT_BLATHER
(("%s", 
m
));

119 
	}
}

123 
	$ªgªss_make_tmpfûe
(c⁄° *
d©a
, 
size_t
 
d©Æí
)

125 #i‚de‡
WIN32


126 
tmpfûíame
[32];

127 
fd
;

128 
	`°r˝y
(
tmpfûíame
, "/tmp/eventtmp.XXXXXX");

129 #ifde‡
_EVENT_HAVE_UMASK


130 
	`umask
(0077);

132 
fd
 = 
	`mk°emp
(
tmpfûíame
);

133 i‡(
fd
 == -1)

135 i‡(
	`wrôe
(
fd
, 
d©a
, 
d©Æí
) != ()datalen) {

136 
	`˛o£
(
fd
);

139 
	`l£ek
(
fd
, 0, 
SEEK_SET
);

141 
	`u∆ök
(
tmpfûíame
);

142  (
fd
);

145 
tmpfûï©h
[
MAX_PATH
];

146 
tmpfûíame
[
MAX_PATH
];

147 
DWORD
 
r
, 
wrôãn
;

148 
åõs
 = 16;

149 
HANDLE
 
h
;

150 
r
 = 
	`GëTempP©hA
(
MAX_PATH
, 
tmpfûï©h
);

151 i‡(
r
 > 
MAX_PATH
 ||Ñ == 0)

153 ; 
åõs
 > 0; --tries) {

154 
r
 = 
	`GëTempFûeNameA
(
tmpfûï©h
, "LIBEVENT", 0, 
tmpfûíame
);

155 i‡(
r
 == 0)

157 
h
 = 
	`Cª©eFûeA
(
tmpfûíame
, 
GENERIC_READ
|
GENERIC_WRITE
,

158 0, 
NULL
, 
CREATE_ALWAYS
, 
FILE_ATTRIBUTE_NORMAL
, NULL);

159 i‡(
h
 !
INVALID_HANDLE_VALUE
)

162 i‡(
åõs
 == 0)

164 
wrôãn
 = 0;

165 
	`WrôeFûe
(
h
, 
d©a
, (
DWORD
)
d©Æí
, &
wrôãn
, 
NULL
);

167  
	`_›í_osfh™dÀ
((
öçå_t
)
h
,
_O_RDONLY
);

169 
	}
}

171 #i‚de‡
_WIN32


172 
pid_t


173 
	$ªgªss_f‹k
()

175 
pid_t
 
pid
 = 
	`f‹k
();

176 #ifde‡
FORK_BREAKS_GCOV


177 
	`v¥oc_å™ß˘i⁄_begö
(0);

179  
pid
;

180 
	}
}

184 
	$ign‹e_log_cb
(
s
, c⁄° *
msg
)

186 
	}
}

189 
	$basic_ã°_£tup
(c⁄° 
ã°ˇ£_t
 *
ã°ˇ£
)

191 
evít_ba£
 *
ba£
 = 
NULL
;

192 
evutû_sockë_t
 
•aú
[2] = { -1, -1 };

193 
basic_ã°_d©a
 *
d©a
 = 
NULL
;

195 #i‚de‡
WIN32


196 i‡(
ã°ˇ£
->
Êags
 & 
TT_ENABLE_IOCP_FLAG
)

197  (*)
TT_SKIP
;

200 i‡(
ã°ˇ£
->
Êags
 & 
TT_NEED_THREADS
) {

201 i‡(!(
ã°ˇ£
->
Êags
 & 
TT_FORK
))

202  
NULL
;

203 #i‡
	`deföed
(
EVTHREAD_USE_PTHREADS_IMPLEMENTED
)

204 i‡(
	`evthªad_u£_±hªads
())

205 
	`exô
(1);

206 #ñi‡
	`deföed
(
EVTHREAD_USE_WINDOWS_THREADS_IMPLEMENTED
)

207 i‡(
	`evthªad_u£_wödows_thªads
())

208 
	`exô
(1);

210  (*)
TT_SKIP
;

214 i‡(
ã°ˇ£
->
Êags
 & 
TT_NEED_SOCKETPAIR
) {

215 i‡(
	`evutû_sockë∑ú
(
AF_UNIX
, 
SOCK_STREAM
, 0, 
•aú
) == -1) {

216 
	`Ârötf
(
°dîr
, "%s: sockë∑ú\n", 
__func__
);

217 
	`exô
(1);

220 i‡(
	`evutû_make_sockë_n⁄blockög
(
•aú
[0]) == -1) {

221 
	`Ârötf
(
°dîr
, "fcntl(O_NONBLOCK)");

222 
	`exô
(1);

225 i‡(
	`evutû_make_sockë_n⁄blockög
(
•aú
[1]) == -1) {

226 
	`Ârötf
(
°dîr
, "fcntl(O_NONBLOCK)");

227 
	`exô
(1);

230 i‡(
ã°ˇ£
->
Êags
 & 
TT_NEED_BASE
) {

231 i‡(
ã°ˇ£
->
Êags
 & 
TT_LEGACY
)

232 
ba£
 = 
	`evít_öô
();

234 
ba£
 = 
	`evít_ba£_√w
();

235 i‡(!
ba£
)

236 
	`exô
(1);

238 i‡(
ã°ˇ£
->
Êags
 & 
TT_ENABLE_IOCP_FLAG
) {

239 i‡(
	`evít_ba£_°¨t_io˝
(
ba£
, 0)<0) {

240 
	`evít_ba£_‰ì
(
ba£
);

241  (*)
TT_SKIP
;

245 i‡(
ã°ˇ£
->
Êags
 & 
TT_NEED_DNS
) {

246 
	`evdns_£t_log_‚
(
dn¶ogcb
);

247 i‡(
	`evdns_öô
())

248  
NULL
;

251 i‡(
ã°ˇ£
->
Êags
 & 
TT_NO_LOGS
)

252 
	`evít_£t_log_ˇŒback
(
ign‹e_log_cb
);

254 
d©a
 = 
	`ˇŒoc
(1, (*data));

255 i‡(!
d©a
)

256 
	`exô
(1);

257 
d©a
->
ba£
 = base;

258 
d©a
->
∑ú
[0] = 
•aú
[0];

259 
d©a
->
∑ú
[1] = 
•aú
[1];

260 
d©a
->
£tup_d©a
 = 
ã°ˇ£
->setup_data;

261  
d©a
;

262 
	}
}

265 
	$basic_ã°_˛ónup
(c⁄° 
ã°ˇ£_t
 *
ã°ˇ£
, *
±r
)

267 
basic_ã°_d©a
 *
d©a
 = 
±r
;

269 i‡(
ã°ˇ£
->
Êags
 & 
TT_NO_LOGS
)

270 
	`evít_£t_log_ˇŒback
(
NULL
);

272 i‡(
ã°ˇ£
->
Êags
 & 
TT_NEED_SOCKETPAIR
) {

273 i‡(
d©a
->
∑ú
[0] != -1)

274 
	`evutû_˛o£sockë
(
d©a
->
∑ú
[0]);

275 i‡(
d©a
->
∑ú
[1] != -1)

276 
	`evutû_˛o£sockë
(
d©a
->
∑ú
[1]);

279 i‡(
ã°ˇ£
->
Êags
 & 
TT_NEED_DNS
) {

280 
	`evdns_shutdown
(0);

283 i‡(
ã°ˇ£
->
Êags
 & 
TT_NEED_BASE
) {

284 i‡(
d©a
->
ba£
) {

285 
	`evít_ba£_as£π_ok
(
d©a
->
ba£
);

286 
	`evít_ba£_‰ì
(
d©a
->
ba£
);

290 
	`‰ì
(
d©a
);

293 
	}
}

295 c⁄° 
ã°ˇ£_£tup_t
 
	gbasic_£tup
 = {

296 
basic_ã°_£tup
, 
basic_ã°_˛ónup


305 
	$Àgacy_ã°_£tup
(c⁄° 
ã°ˇ£_t
 *
ã°ˇ£
)

307 
basic_ã°_d©a
 *
d©a
 = 
	`basic_ã°_£tup
(
ã°ˇ£
);

308 i‡(
d©a
 =(*)
TT_SKIP
 || d©®=
NULL
)

309  
d©a
;

310 
globÆ_ba£
 = 
d©a
->
ba£
;

311 
∑ú
[0] = 
d©a
->pair[0];

312 
∑ú
[1] = 
d©a
->pair[1];

313 
d©a
->
Àgacy_ã°_‚
 = 
ã°ˇ£
->
£tup_d©a
;

314  
d©a
;

315 
	}
}

322 
	$run_Àgacy_ã°_‚
(*
±r
)

324 
basic_ã°_d©a
 *
d©a
 = 
±r
;

325 
ã°_ok
 = 
ˇŒed
 = 0;

327 
ö_Àgacy_ã°_wøµî
 = 1;

328 
d©a
->
	`Àgacy_ã°_‚
();

329 
ö_Àgacy_ã°_wøµî
 = 0;

331 i‡(!
ã°_ok
)

332 
	`â_ab‹t_msg
("Legacy unitÅest failed");

334 
íd
:

335 
ã°_ok
 = 0;

336 
	}
}

343 
	$Àgacy_ã°_˛ónup
(c⁄° 
ã°ˇ£_t
 *
ã°ˇ£
, *
±r
)

345 
r
 = 
	`basic_ã°_˛ónup
(
ã°ˇ£
, 
±r
);

346 
∑ú
[0] =Öair[1] = -1;

347 
globÆ_ba£
 = 
NULL
;

348  
r
;

349 
	}
}

351 c⁄° 
ã°ˇ£_£tup_t
 
	gÀgacy_£tup
 = {

352 
Àgacy_ã°_£tup
, 
Àgacy_ã°_˛ónup


357 #i‡(!
deföed
(
_EVENT_HAVE_PTHREADS
Ë&& !deföed(
WIN32
)Ë|| deföed(
_EVENT_DISABLE_THREAD_SUPPORT
)

358 
ã°ˇ£_t
 
	gthªad_ã°ˇ£s
[] = {

359 { "basic", 
NULL
, 
TT_SKIP
, NULL, NULL },

360 
END_OF_TESTCASES


364 
ã°group_t
 
	gã°groups
[] = {

365 { "maö/", 
maö_ã°ˇ£s
 },

366 { "hóp/", 
möhóp_ã°ˇ£s
 },

367 { "ë/", 
edgëriggîed_ã°ˇ£s
 },

368 { "evbuf„r/", 
evbuf„r_ã°ˇ£s
 },

369 { "sig«l/", 
sig«l_ã°ˇ£s
 },

370 { "utû/", 
utû_ã°ˇ£s
 },

371 { "buf„ªvít/", 
buf„ªvít_ã°ˇ£s
 },

372 { "hâp/", 
hâp_ã°ˇ£s
 },

373 { "dns/", 
dns_ã°ˇ£s
 },

374 { "evèg/", 
evèg_ã°ˇ£s
 },

375 { "Ωc/", 
Ωc_ã°ˇ£s
 },

376 { "thªad/", 
thªad_ã°ˇ£s
 },

377 { "li°íî/", 
li°íî_ã°ˇ£s
 },

378 #ifde‡
WIN32


379 { "io˝/", 
io˝_ã°ˇ£s
 },

380 { "io˝/buf„ªvít/", 
buf„ªvít_io˝_ã°ˇ£s
 },

381 { "io˝/li°íî/", 
li°íî_io˝_ã°ˇ£s
 },

383 #ifde‡
_EVENT_HAVE_OPENSSL


384 { "s¶/", 
s¶_ã°ˇ£s
 },

386 
END_OF_GROUPS


390 
	$maö
(
¨gc
, c⁄° **
¨gv
)

392 #ifde‡
WIN32


393 
WORD
 
wVîsi⁄Reque°ed
;

394 
WSADATA
 
wßD©a
;

396 
wVîsi⁄Reque°ed
 = 
	`MAKEWORD
(2, 2);

398 (Ë
	`WSASèπup
(
wVîsi⁄Reque°ed
, &
wßD©a
);

401 #i‚de‡
WIN32


402 i‡(
	`sig«l
(
SIGPIPE
, 
SIG_IGN
Ë=
SIG_ERR
)

406 #ifde‡
WIN32


407 
	`töyã°_skù
(
ã°groups
, "http/connection_retry");

410 #i‚de‡
_EVENT_DISABLE_THREAD_SUPPORT


411 i‡(!
	`gëív
("EVENT_NO_DEBUG_LOCKS"))

412 
	`evthªad_íabÀ_lock_debugög
();

415 i‡(
	`töyã°_maö
(
¨gc
,
¨gv
,
ã°groups
))

419 
	}
}

	@test/regress_minheap.c

27 
	~<°dlib.h
>

28 
	~"evít2/evít_°ru˘.h
"

30 
	~"töyã°.h
"

31 
	~"töyã°_ma¸os.h
"

32 
	~"../möhóp-öã∫Æ.h
"

35 
	$£t_øndom_timeout
(
evít
 *
ev
)

37 
ev
->
ev_timeout
.
tv_£c
 = 
	`ønd
();

38 
ev
->
ev_timeout
.
tv_u£c
 = 
	`ønd
() & 0xfffff;

39 
ev
->
ev_timeout_pos
.
mö_hóp_idx
 = -1;

40 
	}
}

43 
	$check_hóp
(
mö_hóp
 *
hóp
)

45 
i
;

46 
i
 = 1; i < 
hóp
->
n
; ++i) {

47 
∑ª¡_idx
 = (
i
-1)/2;

48 
	`â_w™t
(
	`evutû_timîcmp
(&
hóp
->
p
[
i
]->
ev_timeout
,

49 &
hóp
->
p
[
∑ª¡_idx
]->
ev_timeout
, >=));

51 
	}
}

54 
	$ã°_hóp_øndomized
(*
±r
)

56 
mö_hóp
 
hóp
;

57 
evít
 *
ö£πed
[1024];

58 
evít
 *
e
, *
œ°_e
;

59 
i
;

61 
	`mö_hóp_˘‹
(&
hóp
);

63 
i
 = 0; i < 1024; ++i) {

64 
ö£πed
[
i
] = 
	`mÆloc
((
evít
));

65 
	`£t_øndom_timeout
(
ö£πed
[
i
]);

66 
	`mö_hóp_push
(&
hóp
, 
ö£πed
[
i
]);

68 
	`check_hóp
(&
hóp
);

70 
	`â_as£π
(
	`mö_hóp_size
(&
hóp
) == 1024);

72 
i
 = 0; i < 512; ++i) {

73 
	`mö_hóp_îa£
(&
hóp
, 
ö£πed
[
i
]);

74 i‡(0 =(
i
 % 32))

75 
	`check_hóp
(&
hóp
);

77 
	`â_as£π
(
	`mö_hóp_size
(&
hóp
) == 512);

79 
œ°_e
 = 
	`mö_hóp_p›
(&
hóp
);

81 
e
 = 
	`mö_hóp_p›
(&
hóp
);

82 i‡(!
e
)

84 
	`â_w™t
(
	`evutû_timîcmp
(&
œ°_e
->
ev_timeout
,

85 &
e
->
ev_timeout
, <=));

87 
	`â_as£π
(
	`mö_hóp_size
(&
hóp
) == 0);

88 
íd
:

89 
i
 = 0; i < 1024; ++i)

90 
	`‰ì
(
ö£πed
[
i
]);

92 
	`mö_hóp_dt‹
(&
hóp
);

93 
	}
}

95 
ã°ˇ£_t
 
	gmöhóp_ã°ˇ£s
[] = {

96 { "øndomized", 
ã°_hóp_øndomized
, 0, 
NULL
, NULL },

97 
END_OF_TESTCASES


	@test/regress_rpc.c

29 #unde‡
NDEBUG


31 #ifde‡
WIN32


32 
	~<wösock2.h
>

33 
	~<wödows.h
>

36 
	~"evít2/evít-c⁄fig.h
"

38 
	~<sys/ty≥s.h
>

39 
	~<sys/°©.h
>

40 #ifde‡
_EVENT_HAVE_SYS_TIME_H


41 
	~<sys/time.h
>

43 
	~<sys/queue.h
>

44 #i‚de‡
WIN32


45 
	~<sys/sockë.h
>

46 
	~<sig«l.h
>

47 
	~<uni°d.h
>

48 
	~<√tdb.h
>

50 
	~<f˙é.h
>

51 
	~<°dlib.h
>

52 
	~<°dio.h
>

53 
	~<°rög.h
>

54 
	~<î∫o.h
>

55 
	~<as£π.h
>

57 
	~"evít2/buf„r.h
"

58 
	~"evít2/evít.h
"

59 
	~"evít2/evít_com∑t.h
"

60 
	~"evít2/hâp.h
"

61 
	~"evít2/hâp_com∑t.h
"

62 
	~"evít2/hâp_°ru˘.h
"

63 
	~"evít2/Ωc.h
"

64 
	~"evít2/Ωc.h
"

65 
	~"evít2/Ωc_°ru˘.h
"

66 
	~"evít2/èg.h
"

67 
	~"log-öã∫Æ.h
"

69 
	~"ªgªss.gí.h
"

71 
	~"ªgªss.h
"

72 
	~"ªgªss_ã°utûs.h
"

74 #i‚de‡
NO_PYTHON_EXISTS


76 
evhâp
 *

77 
	$hâp_£tup
(
ev_uöt16_t
 *
µ‹t
)

79 
evhâp
 *
myhâp
;

80 
ev_uöt16_t
 
p‹t
;

81 
evhâp_bound_sockë
 *
sock
;

83 
myhâp
 = 
	`evhâp_√w
(
NULL
);

84 i‡(!
myhâp
)

85 
	`evít_îrx
(1, "CouldÇot start web server");

88 
sock
 = 
	`evhâp_böd_sockë_wôh_h™dÀ
(
myhâp
, "127.0.0.1", 0);

89 i‡(!
sock
)

90 
	`evít_îrx
(1, "Couldn't open webÖort");

92 
p‹t
 = 
	`ªgªss_gë_sockë_p‹t
(
	`evhâp_bound_sockë_gë_fd
(
sock
));

94 *
µ‹t
 = 
p‹t
;

95  (
myhâp
);

96 
	}
}

98 
	$EVRPC_HEADER
(
Mesßge
, 
msg
, 
kûl
)

99 
	$EVRPC_HEADER
(
NevîRïly
, 
msg
, 
kûl
)

101 
	$EVRPC_GENERATE
(
Mesßge
, 
msg
, 
kûl
)

102 
	$EVRPC_GENERATE
(
NevîRïly
, 
msg
, 
kûl
)

104 
√ed_öput_hook
 = 0;

105 
√ed_ouçut_hook
 = 0;

108 
	`MesßgeCb
(
	`EVRPC_STRUCT
(
Mesßge
)* 
Ωc
, *
¨g
)

110 
kûl
* 
kûl_ª∂y
 = 
Ωc
->
ª∂y
;

112 i‡(
√ed_öput_hook
) {

113 
evhâp_ªque°
* 
ªq
 = 
	`EVRPC_REQUEST_HTTP
(
Ωc
);

114 c⁄° *
hódî
 = 
	`evhâp_föd_hódî
(

115 
ªq
->
öput_hódîs
, "X-Hook");

116 
	`as£π
(
hódî
);

117 
	`as£π
(
	`°rcmp
(
hódî
, "input") == 0);

121 
	`EVTAG_ASSIGN
(
kûl_ª∂y
, 
wóp⁄
, "dagger");

122 
	`EVTAG_ASSIGN
(
kûl_ª∂y
, 
a˘i⁄
, "waveároundÜikeán idiot");

125 
	`EVRPC_REQUEST_DONE
(
Ωc
);

126 
	}
}

128 
EVRPC_STRUCT
(
NevîRïly
Ë*
	gßved_Ωc
;

131 
NevîRïlyCb
(
EVRPC_STRUCT
(
NevîRïly
)* 
Ωc
, *
¨g
)

133 
	gã°_ok
 += 1;

134 
	gßved_Ωc
 = 
Ωc
;

138 
	$Ωc_£tup
(
evhâp
 **
phâp
, 
ev_uöt16_t
 *
µ‹t
, 
evΩc_ba£
 **
pba£
)

140 
ev_uöt16_t
 
p‹t
;

141 
evhâp
 *
hâp
 = 
NULL
;

142 
evΩc_ba£
 *
ba£
 = 
NULL
;

144 
hâp
 = 
	`hâp_£tup
(&
p‹t
);

145 
ba£
 = 
	`evΩc_öô
(
hâp
);

147 
	`EVRPC_REGISTER
(
ba£
, 
Mesßge
, 
msg
, 
kûl
, 
MesßgeCb
, 
NULL
);

148 
	`EVRPC_REGISTER
(
ba£
, 
NevîRïly
, 
msg
, 
kûl
, 
NevîRïlyCb
, 
NULL
);

150 *
phâp
 = 
hâp
;

151 *
µ‹t
 = 
p‹t
;

152 *
pba£
 = 
ba£
;

154 
√ed_öput_hook
 = 0;

155 
√ed_ouçut_hook
 = 0;

156 
	}
}

159 
	$Ωc_ã¨down
(
evΩc_ba£
 *
ba£
)

161 
	`as£π
(
	`EVRPC_UNREGISTER
(
ba£
, 
Mesßge
) == 0);

162 
	`as£π
(
	`EVRPC_UNREGISTER
(
ba£
, 
NevîRïly
) == 0);

164 
	`evΩc_‰ì
(
ba£
);

165 
	}
}

168 
	$Ωc_po°ªque°_Áûuª
(
evhâp_ªque°
 *
ªq
, *
¨g
)

170 i‡(
ªq
->
ª•⁄£_code
 !
HTTP_SERVUNAVAIL
) {

172 
	`Ârötf
(
°dîr
, "FAILED (response code)\n");

173 
	`exô
(1);

176 
ã°_ok
 = 1;

177 
	`evít_lo›exô
(
NULL
);

178 
	}
}

185 
	$Ωc_basic_ã°
()

187 
ev_uöt16_t
 
p‹t
;

188 
evhâp
 *
hâp
 = 
NULL
;

189 
evΩc_ba£
 *
ba£
 = 
NULL
;

190 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
NULL
;

191 
evhâp_ªque°
 *
ªq
 = 
NULL
;

193 
	`Ωc_£tup
(&
hâp
, &
p‹t
, &
ba£
);

195 
evc⁄
 = 
	`evhâp_c⁄√˘i⁄_√w
("127.0.0.1", 
p‹t
);

196 
	`â_as£π
(
evc⁄
);

203 
ªq
 = 
	`evhâp_ªque°_√w
(
Ωc_po°ªque°_Áûuª
, 
NULL
);

204 
	`â_as£π
(
ªq
);

207 
	`evhâp_add_hódî
(
ªq
->
ouçut_hódîs
, "Host", "somehost");

208 
	`evbuf„r_add_¥ötf
(
ªq
->
ouçut_buf„r
, "Some Nonsense");

210 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
,

211 
EVHTTP_REQ_POST
,

213 
	`â_ab‹t
();

216 
ã°_ok
 = 0;

218 
	`evít_di•©ch
();

220 
	`evhâp_c⁄√˘i⁄_‰ì
(
evc⁄
);

222 
	`Ωc_ã¨down
(
ba£
);

224 
	`â_as£π
(
ã°_ok
 == 1);

226 
íd
:

227 
	`evhâp_‰ì
(
hâp
);

228 
	}
}

231 
	$Ωc_po°ªque°_d⁄e
(
evhâp_ªque°
 *
ªq
, *
¨g
)

233 
kûl
* 
kûl_ª∂y
 = 
NULL
;

235 i‡(
ªq
->
ª•⁄£_code
 !
HTTP_OK
) {

236 
	`Ârötf
(
°dîr
, "FAILED (response code)\n");

237 
	`exô
(1);

240 
kûl_ª∂y
 = 
	`kûl_√w
();

242 i‡((
	`kûl_unm¨shÆ
(
kûl_ª∂y
, 
ªq
->
öput_buf„r
)) == -1) {

243 
	`Ârötf
(
°dîr
, "FAILED (unmarshal)\n");

244 
	`exô
(1);

247 
	`kûl_‰ì
(
kûl_ª∂y
);

249 
ã°_ok
 = 1;

250 
	`evít_lo›exô
(
NULL
);

251 
	}
}

254 
	$Ωc_basic_mesßge
()

256 
ev_uöt16_t
 
p‹t
;

257 
evhâp
 *
hâp
 = 
NULL
;

258 
evΩc_ba£
 *
ba£
 = 
NULL
;

259 
evhâp_c⁄√˘i⁄
 *
evc⁄
 = 
NULL
;

260 
evhâp_ªque°
 *
ªq
 = 
NULL
;

261 
msg
 *msg;

263 
	`Ωc_£tup
(&
hâp
, &
p‹t
, &
ba£
);

265 
evc⁄
 = 
	`evhâp_c⁄√˘i⁄_√w
("127.0.0.1", 
p‹t
);

266 
	`â_as£π
(
evc⁄
);

273 
ªq
 = 
	`evhâp_ªque°_√w
(
Ωc_po°ªque°_d⁄e
, 
NULL
);

274 i‡(
ªq
 =
NULL
) {

275 
	`Ârötf
(
°dout
, "FAILED\n");

276 
	`exô
(1);

280 
	`evhâp_add_hódî
(
ªq
->
ouçut_hódîs
, "Host", "somehost");

283 
msg
 = 
	`msg_√w
();

284 
	`EVTAG_ASSIGN
(
msg
, 
‰om_«me
, "niels");

285 
	`EVTAG_ASSIGN
(
msg
, 
to_«me
, "tester");

286 
	`msg_m¨shÆ
(
ªq
->
ouçut_buf„r
, 
msg
);

287 
	`msg_‰ì
(
msg
);

289 i‡(
	`evhâp_make_ªque°
(
evc⁄
, 
ªq
,

290 
EVHTTP_REQ_POST
,

292 
	`Ârötf
(
°dout
, "FAILED\n");

293 
	`exô
(1);

296 
ã°_ok
 = 0;

298 
	`evít_di•©ch
();

300 
	`evhâp_c⁄√˘i⁄_‰ì
(
evc⁄
);

302 
	`Ωc_ã¨down
(
ba£
);

304 
íd
:

305 
	`evhâp_‰ì
(
hâp
);

306 
	}
}

308 
evΩc_poﬁ
 *

309 
	$Ωc_poﬁ_wôh_c⁄√˘i⁄
(
ev_uöt16_t
 
p‹t
)

311 
evhâp_c⁄√˘i⁄
 *
evc⁄
;

312 
evΩc_poﬁ
 *
poﬁ
;

314 
poﬁ
 = 
	`evΩc_poﬁ_√w
(
NULL
);

315 
	`as£π
(
poﬁ
 !
NULL
);

317 
evc⁄
 = 
	`evhâp_c⁄√˘i⁄_√w
("127.0.0.1", 
p‹t
);

318 
	`as£π
(
evc⁄
 !
NULL
);

320 
	`evΩc_poﬁ_add_c⁄√˘i⁄
(
poﬁ
, 
evc⁄
);

322  (
poﬁ
);

323 
	}
}

326 
	$GŸKûlCb
(
evΩc_°©us
 *
°©us
,

327 
msg
 *msg, 
kûl
 *kûl, *
¨g
)

329 *
wóp⁄
;

330 *
a˘i⁄
;

332 i‡(
√ed_ouçut_hook
) {

333 
evhâp_ªque°
 *
ªq
 = 
°©us
->
hâp_ªq
;

334 c⁄° *
hódî
 = 
	`evhâp_föd_hódî
(

335 
ªq
->
öput_hódîs
, "X-Pool-Hook");

336 
	`as£π
(
hódî
);

337 
	`as£π
(
	`°rcmp
(
hódî
, "ran") == 0);

340 i‡(
°©us
->
îr‹
 !
EVRPC_STATUS_ERR_NONE
)

341 
d⁄e
;

343 i‡(
	`EVTAG_GET
(
kûl
, 
wóp⁄
, &weapon) == -1) {

344 
	`Ârötf
(
°dîr
, "get weapon\n");

345 
d⁄e
;

347 i‡(
	`EVTAG_GET
(
kûl
, 
a˘i⁄
, &action) == -1) {

348 
	`Ârötf
(
°dîr
, "getáction\n");

349 
d⁄e
;

352 i‡(
	`°rcmp
(
wóp⁄
, "dagger"))

353 
d⁄e
;

355 i‡(
	`°rcmp
(
a˘i⁄
, "waveároundÜikeán idiot"))

356 
d⁄e
;

358 
ã°_ok
 += 1;

360 
d⁄e
:

361 
	`evít_lo›exô
(
NULL
);

362 
	}
}

365 
	$GŸKûlCbTwo
(
evΩc_°©us
 *
°©us
,

366 
msg
 *msg, 
kûl
 *kûl, *
¨g
)

368 *
wóp⁄
;

369 *
a˘i⁄
;

371 i‡(
°©us
->
îr‹
 !
EVRPC_STATUS_ERR_NONE
)

372 
d⁄e
;

374 i‡(
	`EVTAG_GET
(
kûl
, 
wóp⁄
, &weapon) == -1) {

375 
	`Ârötf
(
°dîr
, "get weapon\n");

376 
d⁄e
;

378 i‡(
	`EVTAG_GET
(
kûl
, 
a˘i⁄
, &action) == -1) {

379 
	`Ârötf
(
°dîr
, "getáction\n");

380 
d⁄e
;

383 i‡(
	`°rcmp
(
wóp⁄
, "dagger"))

384 
d⁄e
;

386 i‡(
	`°rcmp
(
a˘i⁄
, "waveároundÜikeán idiot"))

387 
d⁄e
;

389 
ã°_ok
 += 1;

391 
d⁄e
:

392 i‡(
ã°_ok
 == 2)

393 
	`evít_lo›exô
(
NULL
);

394 
	}
}

397 
	$Ωc_hook_add_hódî
(*
˘x
, 
evhâp_ªque°
 *
ªq
,

398 
evbuf„r
 *
evbuf
, *
¨g
)

400 c⁄° *
hook_ty≥
 = 
¨g
;

401 i‡(
	`°rcmp
("öput", 
hook_ty≥
) == 0)

402 
	`evhâp_add_hódî
(
ªq
->
öput_hódîs
, "X-Hook", 
hook_ty≥
);

404 
	`evhâp_add_hódî
(
ªq
->
ouçut_hódîs
, "X-Hook", 
hook_ty≥
);

406 
	`as£π
(
	`evΩc_hook_gë_c⁄√˘i⁄
(
˘x
Ë!
NULL
);

408  (
EVRPC_CONTINUE
);

409 
	}
}

412 
	$Ωc_hook_add_mëa
(*
˘x
, 
evhâp_ªque°
 *
ªq
,

413 
evbuf„r
 *
evbuf
, *
¨g
)

415 
	`evΩc_hook_add_mëa
(
˘x
, "meta", "test", 5);

417 
	`as£π
(
	`evΩc_hook_gë_c⁄√˘i⁄
(
˘x
Ë!
NULL
);

419  (
EVRPC_CONTINUE
);

420 
	}
}

423 
	$Ωc_hook_ªmove_hódî
(*
˘x
, 
evhâp_ªque°
 *
ªq
,

424 
evbuf„r
 *
evbuf
, *
¨g
)

426 c⁄° *
hódî
 = 
	`evhâp_föd_hódî
(
ªq
->
öput_hódîs
, "X-Hook");

427 *
d©a
 = 
NULL
;

428 
size_t
 
d©a_Àn
 = 0;

430 
	`as£π
(
hódî
 !
NULL
);

431 
	`as£π
(
	`°rcmp
(
hódî
, 
¨g
) == 0);

433 
	`evhâp_ªmove_hódî
(
ªq
->
öput_hódîs
, "X-Hook");

434 
	`evhâp_add_hódî
(
ªq
->
öput_hódîs
, "X-Pool-Hook", "ran");

436 
	`as£π
(
	`evΩc_hook_föd_mëa
(
˘x
, "mëa", &
d©a
, &
d©a_Àn
) == 0);

437 
	`as£π
(
d©a
 !
NULL
);

438 
	`as£π
(
d©a_Àn
 == 5);

440 
	`as£π
(
	`evΩc_hook_gë_c⁄√˘i⁄
(
˘x
Ë!
NULL
);

442  (
EVRPC_CONTINUE
);

443 
	}
}

446 
	$Ωc_basic_˛õ¡
()

448 
ev_uöt16_t
 
p‹t
;

449 
evhâp
 *
hâp
 = 
NULL
;

450 
evΩc_ba£
 *
ba£
 = 
NULL
;

451 
evΩc_poﬁ
 *
poﬁ
 = 
NULL
;

452 
msg
 *msg = 
NULL
;

453 
kûl
 *kû»
NULL
;

455 
	`Ωc_£tup
(&
hâp
, &
p‹t
, &
ba£
);

457 
√ed_öput_hook
 = 1;

458 
√ed_ouçut_hook
 = 1;

460 
	`as£π
(
	`evΩc_add_hook
(
ba£
, 
EVRPC_INPUT
, 
Ωc_hook_add_hódî
, (*)"input")

461 !
NULL
);

462 
	`as£π
(
	`evΩc_add_hook
(
ba£
, 
EVRPC_OUTPUT
, 
Ωc_hook_add_hódî
, (*)"output")

463 !
NULL
);

465 
poﬁ
 = 
	`Ωc_poﬁ_wôh_c⁄√˘i⁄
(
p‹t
);

467 
	`as£π
(
	`evΩc_add_hook
(
poﬁ
, 
EVRPC_OUTPUT
, 
Ωc_hook_add_mëa
, 
NULL
));

468 
	`as£π
(
	`evΩc_add_hook
(
poﬁ
, 
EVRPC_INPUT
, 
Ωc_hook_ªmove_hódî
, (*)"output"));

471 
msg
 = 
	`msg_√w
();

472 
	`EVTAG_ASSIGN
(
msg
, 
‰om_«me
, "niels");

473 
	`EVTAG_ASSIGN
(
msg
, 
to_«me
, "tester");

475 
kûl
 = 
	`kûl_√w
();

477 
	`EVRPC_MAKE_REQUEST
(
Mesßge
, 
poﬁ
, 
msg
, 
kûl
, 
GŸKûlCb
, 
NULL
);

479 
ã°_ok
 = 0;

481 
	`evít_di•©ch
();

483 
	`â_as£π
(
ã°_ok
 == 1);

486 
	`kûl_˛ór
(
kûl
);

488 
	`EVRPC_MAKE_REQUEST
(
Mesßge
, 
poﬁ
, 
msg
, 
kûl
, 
GŸKûlCb
, 
NULL
);

490 
	`evít_di•©ch
();

492 
	`â_as£π
(
ã°_ok
 == 2);

495 
	`kûl_˛ór
(
kûl
);

498 
evΩc_ªque°_wøµî
 *
˘x
 =

499 
	`EVRPC_MAKE_CTX
(
Mesßge
, 
msg
, 
kûl
,

500 
poﬁ
, 
msg
, 
kûl
, 
GŸKûlCb
, 
NULL
);

501 
	`evΩc_make_ªque°
(
˘x
);

504 
	`evít_di•©ch
();

506 
	`Ωc_ã¨down
(
ba£
);

508 
	`â_as£π
(
ã°_ok
 == 3);

510 
íd
:

511 i‡(
msg
)

512 
	`msg_‰ì
(
msg
);

513 i‡(
kûl
)

514 
	`kûl_‰ì
(
kûl
);

516 i‡(
poﬁ
)

517 
	`evΩc_poﬁ_‰ì
(
poﬁ
);

518 i‡(
hâp
)

519 
	`evhâp_‰ì
(
hâp
);

521 
√ed_öput_hook
 = 0;

522 
√ed_ouçut_hook
 = 0;

523 
	}
}

530 
	$Ωc_basic_queued_˛õ¡
()

532 
ev_uöt16_t
 
p‹t
;

533 
evhâp
 *
hâp
 = 
NULL
;

534 
evΩc_ba£
 *
ba£
 = 
NULL
;

535 
evΩc_poﬁ
 *
poﬁ
 = 
NULL
;

536 
msg
 *msg=
NULL
;

537 
kûl
 *
kûl_⁄e
=
NULL
, *
kûl_two
=NULL;

539 
	`Ωc_£tup
(&
hâp
, &
p‹t
, &
ba£
);

541 
poﬁ
 = 
	`Ωc_poﬁ_wôh_c⁄√˘i⁄
(
p‹t
);

544 
msg
 = 
	`msg_√w
();

545 
	`EVTAG_ASSIGN
(
msg
, 
‰om_«me
, "niels");

546 
	`EVTAG_ASSIGN
(
msg
, 
to_«me
, "tester");

548 
kûl_⁄e
 = 
	`kûl_√w
();

549 
kûl_two
 = 
	`kûl_√w
();

551 
	`EVRPC_MAKE_REQUEST
(
Mesßge
, 
poﬁ
, 
msg
, 
kûl_⁄e
, 
GŸKûlCbTwo
, 
NULL
);

552 
	`EVRPC_MAKE_REQUEST
(
Mesßge
, 
poﬁ
, 
msg
, 
kûl_two
, 
GŸKûlCb
, 
NULL
);

554 
ã°_ok
 = 0;

556 
	`evít_di•©ch
();

558 
	`Ωc_ã¨down
(
ba£
);

560 
	`â_as£π
(
ã°_ok
 == 2);

562 
íd
:

563 i‡(
msg
)

564 
	`msg_‰ì
(
msg
);

565 i‡(
kûl_⁄e
)

566 
	`kûl_‰ì
(
kûl_⁄e
);

567 i‡(
kûl_two
)

568 
	`kûl_‰ì
(
kûl_two
);

570 i‡(
poﬁ
)

571 
	`evΩc_poﬁ_‰ì
(
poﬁ
);

572 i‡(
hâp
)

573 
	`evhâp_‰ì
(
hâp
);

574 
	}
}

577 
	$GŸEº‹Cb
(
evΩc_°©us
 *
°©us
,

578 
msg
 *msg, 
kûl
 *kûl, *
¨g
)

580 i‡(
°©us
->
îr‹
 !
EVRPC_STATUS_ERR_TIMEOUT
)

581 
d⁄e
;

584 i‡(
	`kûl_com∂ëe
(
kûl
) == 0)

585 
d⁄e
;

587 
ã°_ok
 += 1;

589 
d⁄e
:

590 
	`evít_lo›exô
(
NULL
);

591 
	}
}

595 
	s_Ωc_hook_˘x
 {

596 *
	mvba£
;

597 *
	m˘x
;

600 
	ghook_∑u£_cb_ˇŒed
=0;

603 
	$Ωc_hook_∑u£_cb
(
evutû_sockë_t
 
fd
, 
wh©
, *
¨g
)

605 
_Ωc_hook_˘x
 *
˘x
 = 
¨g
;

606 ++
hook_∑u£_cb_ˇŒed
;

607 
	`evΩc_ªsume_ªque°
(
˘x
->
vba£
, ctx->˘x, 
EVRPC_CONTINUE
);

608 
	`‰ì
(
¨g
);

609 
	}
}

612 
	$Ωc_hook_∑u£
(*
˘x
, 
evhâp_ªque°
 *
ªq
, 
evbuf„r
 *
evbuf
,

613 *
¨g
)

615 
_Ωc_hook_˘x
 *
tmp
 = 
	`mÆloc
((*tmp));

616 
timevÆ
 
tv
;

618 
	`as£π
(
tmp
 !
NULL
);

619 
tmp
->
vba£
 = 
¨g
;

620 
tmp
->
˘x
 = ctx;

622 
	`mem£t
(&
tv
, 0, (tv));

623 
	`evít_⁄˚
(-1, 
EV_TIMEOUT
, 
Ωc_hook_∑u£_cb
, 
tmp
, &
tv
);

624  
EVRPC_PAUSE
;

625 
	}
}

628 
	$Ωc_basic_˛õ¡_wôh_∑u£
()

630 
ev_uöt16_t
 
p‹t
;

631 
evhâp
 *
hâp
 = 
NULL
;

632 
evΩc_ba£
 *
ba£
 = 
NULL
;

633 
evΩc_poﬁ
 *
poﬁ
 = 
NULL
;

634 
msg
 *msg = 
NULL
;

635 
kûl
 *kûl
NULL
;

637 
	`Ωc_£tup
(&
hâp
, &
p‹t
, &
ba£
);

639 
	`as£π
(
	`evΩc_add_hook
(
ba£
, 
EVRPC_INPUT
, 
Ωc_hook_∑u£
, base));

640 
	`as£π
(
	`evΩc_add_hook
(
ba£
, 
EVRPC_OUTPUT
, 
Ωc_hook_∑u£
, base));

642 
poﬁ
 = 
	`Ωc_poﬁ_wôh_c⁄√˘i⁄
(
p‹t
);

644 
	`as£π
(
	`evΩc_add_hook
(
poﬁ
, 
EVRPC_INPUT
, 
Ωc_hook_∑u£
,Öool));

645 
	`as£π
(
	`evΩc_add_hook
(
poﬁ
, 
EVRPC_OUTPUT
, 
Ωc_hook_∑u£
,Öool));

648 
msg
 = 
	`msg_√w
();

649 
	`EVTAG_ASSIGN
(
msg
, 
‰om_«me
, "niels");

650 
	`EVTAG_ASSIGN
(
msg
, 
to_«me
, "tester");

652 
kûl
 = 
	`kûl_√w
();

654 
	`EVRPC_MAKE_REQUEST
(
Mesßge
, 
poﬁ
, 
msg
, 
kûl
, 
GŸKûlCb
, 
NULL
);

656 
ã°_ok
 = 0;

658 
	`evít_di•©ch
();

660 
	`â_öt_›
(
ã°_ok
, ==, 1);

661 
	`â_öt_›
(
hook_∑u£_cb_ˇŒed
, ==, 4);

663 
íd
:

664 i‡(
ba£
)

665 
	`Ωc_ã¨down
(
ba£
);

667 i‡(
msg
)

668 
	`msg_‰ì
(
msg
);

669 i‡(
kûl
)

670 
	`kûl_‰ì
(
kûl
);

672 i‡(
poﬁ
)

673 
	`evΩc_poﬁ_‰ì
(
poﬁ
);

674 i‡(
hâp
)

675 
	`evhâp_‰ì
(
hâp
);

676 
	}
}

679 
	$Ωc_˛õ¡_timeout
()

681 
ev_uöt16_t
 
p‹t
;

682 
evhâp
 *
hâp
 = 
NULL
;

683 
evΩc_ba£
 *
ba£
 = 
NULL
;

684 
evΩc_poﬁ
 *
poﬁ
 = 
NULL
;

685 
msg
 *msg = 
NULL
;

686 
kûl
 *kû»
NULL
;

688 
	`Ωc_£tup
(&
hâp
, &
p‹t
, &
ba£
);

690 
poﬁ
 = 
	`Ωc_poﬁ_wôh_c⁄√˘i⁄
(
p‹t
);

693 
	`evΩc_poﬁ_£t_timeout
(
poﬁ
, 5);

696 
msg
 = 
	`msg_√w
();

697 
	`EVTAG_ASSIGN
(
msg
, 
‰om_«me
, "niels");

698 
	`EVTAG_ASSIGN
(
msg
, 
to_«me
, "tester");

700 
kûl
 = 
	`kûl_√w
();

702 
	`EVRPC_MAKE_REQUEST
(
NevîRïly
, 
poﬁ
, 
msg
, 
kûl
, 
GŸEº‹Cb
, 
NULL
);

704 
ã°_ok
 = 0;

706 
	`evít_di•©ch
();

709 
	`EVRPC_REQUEST_DONE
(
ßved_Ωc
);

711 
	`Ωc_ã¨down
(
ba£
);

713 
	`â_as£π
(
ã°_ok
 == 2);

715 
íd
:

716 i‡(
msg
)

717 
	`msg_‰ì
(
msg
);

718 i‡(
kûl
)

719 
	`kûl_‰ì
(
kûl
);

721 i‡(
poﬁ
)

722 
	`evΩc_poﬁ_‰ì
(
poﬁ
);

723 i‡(
hâp
)

724 
	`evhâp_‰ì
(
hâp
);

725 
	}
}

728 
	$Ωc_ã°
()

730 
msg
 *msg = 
NULL
, *
msg2
 = NULL;

731 
kûl
 *
©èck
 = 
NULL
;

732 
run
 *ru¿
NULL
;

733 
evbuf„r
 *
tmp
 = 
	`evbuf„r_√w
();

734 
timevÆ
 
tv_°¨t
, 
tv_íd
;

735 
ev_uöt32_t
 
èg
;

736 
i
;

738 
msg
 = 
	`msg_√w
();

740 
	`â_as£π
(
msg
);

742 
	`EVTAG_ASSIGN
(
msg
, 
‰om_«me
, "niels");

743 
	`EVTAG_ASSIGN
(
msg
, 
to_«me
, "phoenix");

745 i‡(
	`EVTAG_GET
(
msg
, 
©èck
, &attack) == -1) {

746 
	`â_ab‹t_msg
("FailedÅo set kill message.");

749 
	`EVTAG_ASSIGN
(
©èck
, 
wóp⁄
, "feather");

750 
	`EVTAG_ASSIGN
(
©èck
, 
a˘i⁄
, "tickle");

751 
i
 = 0; i < 3; ++i) {

752 i‡(
	`EVTAG_ARRAY_ADD_VALUE
(
©èck
, 
how_o·í
, 
i
Ë=
NULL
) {

753 
	`â_ab‹t_msg
("FailedÅoádd how_often.");

757 
	`evutû_gëtimeofday
(&
tv_°¨t
, 
NULL
);

758 
i
 = 0; i < 1000; ++i) {

759 
run
 = 
	`EVTAG_ARRAY_ADD
(
msg
,Ñun);

760 i‡(
run
 =
NULL
) {

761 
	`â_ab‹t_msg
("FailedÅoáddÑun message.");

763 
	`EVTAG_ASSIGN
(
run
, 
how
, "very fast but with some data in it");

764 
	`EVTAG_ASSIGN
(
run
, 
fixed_byãs
,

765 (
ev_uöt8_t
*)"012345678901234567890123");

767 i‡(
	`EVTAG_ARRAY_ADD_VALUE
(

768 
run
, 
nŸes
, "thi†i†myÇŸe"Ë=
NULL
) {

769 
	`â_ab‹t_msg
("FailedÅoáddÇote.");

771 i‡(
	`EVTAG_ARRAY_ADD_VALUE
(
run
, 
nŸes
, "µs"Ë=
NULL
) {

772 
	`â_ab‹t_msg
("FailedÅoáddÇote");

775 
	`EVTAG_ASSIGN
(
run
, 
œrge_numbî
, 0xdead0a0bcafebeefLL);

776 
	`EVTAG_ARRAY_ADD_VALUE
(
run
, 
Ÿhî_numbîs
, 0xdead0a0b);

777 
	`EVTAG_ARRAY_ADD_VALUE
(
run
, 
Ÿhî_numbîs
, 0xbeefcafe);

780 i‡(
	`msg_com∂ëe
(
msg
) == -1)

781 
	`â_ab‹t_msg
("FailedÅo make complete message.");

783 
	`evèg_m¨shÆ_msg
(
tmp
, 0xdóf, 
msg
);

785 i‡(
	`evèg_≥ek
(
tmp
, &
èg
) == -1)

786 
	`â_ab‹t_msg
("FailedÅoÖeakÅag.");

788 i‡(
èg
 != 0xdeaf)

789 
	`TT_DIE
(("GŸ inc‹ª˘Åag: %0x.", ()
èg
));

791 
msg2
 = 
	`msg_√w
();

792 i‡(
	`evèg_unm¨shÆ_msg
(
tmp
, 0xdóf, 
msg2
) == -1)

793 
	`â_ab‹t_msg
("FailedÅo unmarshal message.");

795 
	`evutû_gëtimeofday
(&
tv_íd
, 
NULL
);

796 
	`evutû_timîsub
(&
tv_íd
, &
tv_°¨t
, &tv_end);

797 
	`TT_BLATHER
(("(%.1f us/add) ",

798 ()
tv_íd
.
tv_£c
/()
i
 * 1000000.0 +

799 
tv_íd
.
tv_u£c
 / ()
i
));

801 i‡(!
	`EVTAG_HAS
(
msg2
, 
‰om_«me
) ||

802 !
	`EVTAG_HAS
(
msg2
, 
to_«me
) ||

803 !
	`EVTAG_HAS
(
msg2
, 
©èck
)) {

804 
	`â_ab‹t_msg
("Missing data structures.");

807 i‡(
	`EVTAG_GET
(
msg2
, 
©èck
, &attack) == -1) {

808 
	`â_ab‹t_msg
("CouldÇot getáttack.");

811 i‡(
	`EVTAG_ARRAY_LEN
(
msg2
, 
run
Ë!
i
) {

812 
	`â_ab‹t_msg
("WrongÇumber ofÑun messages.");

816 i‡(
	`EVTAG_ARRAY_GET
(
msg2
, 
run
, 0, &run) == -1) {

817 
	`â_ab‹t_msg
("FailedÅo getÑun msg.");

820 *
nŸe_⁄e
, *
nŸe_two
;

821 
ev_uöt64_t
 
œrge_numbî
;

822 
ev_uöt32_t
 
sh‹t_numbî
;

824 i‡(
	`EVTAG_ARRAY_LEN
(
run
, 
nŸes
) != 2) {

825 
	`â_ab‹t_msg
("WrongÇumber ofÇote strings.");

828 i‡(
	`EVTAG_ARRAY_GET
(
run
, 
nŸes
, 0, &
nŸe_⁄e
) == -1 ||

829 
	`EVTAG_ARRAY_GET
(
run
, 
nŸes
, 1, &
nŸe_two
) == -1) {

830 
	`â_ab‹t_msg
("CouldÇot getÇote strings.");

833 i‡(
	`°rcmp
(
nŸe_⁄e
, "this is myÇote") ||

834 
	`°rcmp
(
nŸe_two
, "pps")) {

835 
	`â_ab‹t_msg
("IncorrectÇote stringsÉncoded.");

838 i‡(
	`EVTAG_GET
(
run
, 
œrge_numbî
, &large_number) == -1 ||

839 
œrge_numbî
 != 0xdead0a0bcafebeefLL) {

840 
	`â_ab‹t_msg
("IncorrrectÜarge_number.");

843 i‡(
	`EVTAG_ARRAY_LEN
(
run
, 
Ÿhî_numbîs
) != 2) {

844 
	`â_ab‹t_msg
("WrongÇumber of other_numbers.");

847 i‡(
	`EVTAG_ARRAY_GET
(

848 
run
, 
Ÿhî_numbîs
, 0, &
sh‹t_numbî
) == -1) {

849 
	`â_ab‹t_msg
("CouldÇot get shortÇumber.");

851 
	`â_uöt_›
(
sh‹t_numbî
, ==, 0xdead0a0b);

854 
	`â_öt_›
(
	`EVTAG_ARRAY_LEN
(
©èck
, 
how_o·í
), ==, 3);

856 
i
 = 0; i < 3; ++i) {

857 
ev_uöt32_t
 
ªs
;

858 i‡(
	`EVTAG_ARRAY_GET
(
©èck
, 
how_o·í
, 
i
, &
ªs
) == -1) {

859 
	`TT_DIE
(("C™nŸ gë %dth how_o·í msg.", 
i
));

861 i‡(()
ªs
 !
i
) {

862 
	`TT_DIE
(("Wr⁄g mesßgêícoded %d !%d", 
i
, 
ªs
));

866 
ã°_ok
 = 1;

867 
íd
:

868 i‡(
msg
)

869 
	`msg_‰ì
(
msg
);

870 i‡(
msg2
)

871 
	`msg_‰ì
(
msg2
);

872 i‡(
tmp
)

873 
	`evbuf„r_‰ì
(
tmp
);

874 
	}
}

876 
	#RPC_LEGACY
(
«me
) \

877 { #«me, 
run_Àgacy_ã°_‚
, 
TT_FORK
|
TT_NEED_BASE
|
TT_LEGACY
, \

878 &
Àgacy_£tup
, \

879 
Ωc_
##
«me
 }

	)

883 
	#RPC_LEGACY
(
«me
) \

884 { #«me, 
NULL
, 
TT_SKIP
, NULL, NULL }

	)

888 
ã°ˇ£_t
 
	gΩc_ã°ˇ£s
[] = {

889 
RPC_LEGACY
(
basic_ã°
),

890 
RPC_LEGACY
(
basic_mesßge
),

891 
RPC_LEGACY
(
basic_˛õ¡
),

892 
RPC_LEGACY
(
basic_queued_˛õ¡
),

893 
RPC_LEGACY
(
basic_˛õ¡_wôh_∑u£
),

894 
RPC_LEGACY
(
˛õ¡_timeout
),

895 
RPC_LEGACY
(
ã°
),

897 
END_OF_TESTCASES
,

	@test/regress_ssl.c

27 #ifde‡
WIN32


28 
	~<wösock2.h
>

29 
	~<wödows.h
>

32 #i‚de‡
WIN32


33 
	~<sys/ty≥s.h
>

34 
	~<sys/sockë.h
>

35 
	~<√töë/ö.h
>

38 
	~"evít2/utû.h
"

39 
	~"evít2/evít.h
"

40 
	~"evít2/buf„ªvít_s¶.h
"

41 
	~"evít2/buf„r.h
"

42 
	~"evít2/li°íî.h
"

44 
	~"ªgªss.h
"

45 
	~"töyã°.h
"

46 
	~"töyã°_ma¸os.h
"

48 
	~<›ís¶/s¶.h
>

49 
	~<›ís¶/bio.h
>

50 
	~<›ís¶/îr.h
>

51 
	~<›ís¶/≥m.h
>

53 
	~<°rög.h
>

59 c⁄° 
	gKEY
[] =

70 
EVP_PKEY
 *

71 
	$gëkey
()

73 
EVP_PKEY
 *
key
;

74 
BIO
 *
bio
;

77 
bio
 = 
	`BIO_√w_mem_buf
((*)
KEY
, -1);

78 
	`â_as£π
(
bio
);

80 
key
 = 
	`PEM_ªad_bio_Priv©eKey
(
bio
,
NULL
,NULL,NULL);

81 
	`BIO_‰ì
(
bio
);

82 
	`â_as£π
(
key
);

84  
key
;

85 
íd
:

86  
NULL
;

87 
	}
}

89 
X509
 *

90 
	$gë˚π
()

95 
X509
 *
x509
 = 
NULL
;

96 
X509_NAME
 *
«me
 = 
NULL
;

97 
EVP_PKEY
 *
key
 = 
	`gëkey
();

98 
nid
;

99 
time_t
 
now
 = 
	`time
(
NULL
);

101 
	`â_as£π
(
key
);

103 
x509
 = 
	`X509_√w
();

104 
	`â_as£π
(
x509
);

105 
	`â_as£π
(0 !
	`X509_£t_vîsi⁄
(
x509
, 2));

106 
	`â_as£π
(0 !
	`ASN1_INTEGER_£t
(
	`X509_gë_£rülNumbî
(
x509
),

107 ()
now
));

109 
«me
 = 
	`X509_NAME_√w
();

110 
	`â_as£π
(
«me
);

111 
nid
 = 
	`OBJ_txt2nid
("commonName");

112 
	`â_as£π
(
NID_undef
 !
nid
);

113 
	`â_as£π
(0 !
	`X509_NAME_add_íåy_by_NID
(

114 
«me
, 
nid
, 
MBSTRING_ASC
, (*)"example.com",

117 
	`X509_£t_subje˘_«me
(
x509
, 
«me
);

118 
	`X509_£t_issuî_«me
(
x509
, 
«me
);

120 
	`X509_time_adj
(
	`X509_gë_nŸBef‹e
(
x509
), 0, &
now
);

121 
now
 += 3600;

122 
	`X509_time_adj
(
	`X509_gë_nŸA·î
(
x509
), 0, &
now
);

123 
	`X509_£t_pubkey
(
x509
, 
key
);

124 
	`â_as£π
(0 !
	`X509_sign
(
x509
, 
key
, 
	`EVP_sha1
()));

126  
x509
;

127 
íd
:

128 
	`X509_‰ì
(
x509
);

129  
NULL
;

130 
	}
}

132 
	gdißbÀ_és_11_™d_12
 = 0;

133 
SSL_CTX
 *
	gthe_s¶_˘x
 = 
NULL
;

135 
SSL_CTX
 *

136 
	$gë_s¶_˘x
()

138 i‡(
the_s¶_˘x
)

139  
the_s¶_˘x
;

140 
the_s¶_˘x
 = 
	`SSL_CTX_√w
(
	`SSLv23_mëhod
());

141 i‡(!
the_s¶_˘x
)

142  
NULL
;

143 i‡(
dißbÀ_és_11_™d_12
) {

144 #ifde‡
SSL_OP_NO_TLSv1_2


145 
	`SSL_CTX_£t_›ti⁄s
(
the_s¶_˘x
, 
SSL_OP_NO_TLSv1_2
);

147 #ifde‡
SSL_OP_NO_TLSv1_1


148 
	`SSL_CTX_£t_›ti⁄s
(
the_s¶_˘x
, 
SSL_OP_NO_TLSv1_1
);

151  
the_s¶_˘x
;

152 
	}
}

155 
	$öô_s¶
()

157 
	`SSL_libøry_öô
();

158 
	`ERR_lﬂd_¸y±o_°rögs
();

159 
	`SSL_lﬂd_îr‹_°rögs
();

160 
	`O≥nSSL_add_Æl_Æg‹ôhms
();

161 i‡(
	`SSLóy
(Ë!
OPENSSL_VERSION_NUMBER
) {

162 
	`TT_DECLARE
("WARN", ("Vîsi⁄ mism©ch f‹ o≥ns¶: compûed wôh %lx buàru¬ög wôh %lx", ()
OPENSSL_VERSION_NUMBER
, ()
	`SSLóy
()));

164 
	}
}

171 
	gã°_is_d⁄e
 = 0;

172 
	gn_c⁄√˘ed
 = 0;

173 
	ggŸ_˛o£
 = 0;

174 
	ggŸ_îr‹
 = 0;

175 
	gª√gŸüã_©
 = -1;

176 
	g°›_whí_c⁄√˘ed
 = 0;

177 
	g≥ndög_c⁄√˘_evíts
 = 0;

178 
evít_ba£
 *
	gexô_ba£
 = 
NULL
;

181 
	$ª•⁄d_to_numbî
(
buf„ªvít
 *
bev
, *
˘x
)

183 
evbuf„r
 *
b
 = 
	`buf„ªvít_gë_öput
(
bev
);

184 *
löe
;

185 
n
;

186 
löe
 = 
	`evbuf„r_ªad 
(
b
, 
NULL
, 
EVBUFFER_EOL_LF
);

187 i‡(! 
löe
)

189 
n
 = 
	`©oi
(
löe
);

190 i‡(
n
 <= 0)

191 
	`TT_FAIL
(("BadÇumbî: %s", 
löe
));

192 
	`TT_BLATHER
(("Thênumbî wa†%d", 
n
));

193 i‡(
n
 == 1001) {

194 ++
ã°_is_d⁄e
;

195 
	`buf„ªvít_‰ì
(
bev
);

198 i‡(!
	`°rcmp
(
˘x
, "˛õ¡"Ë&& 
n
 =
ª√gŸüã_©
) {

199 
	`SSL_ª√gŸüã
(
	`buf„ªvít_›ís¶_gë_s¶
(
bev
));

201 ++
n
;

202 
	`evbuf„r_add_¥ötf
(
	`buf„ªvít_gë_ouçut
(
bev
),

203 "%d\n", 
n
);

204 
	`TT_BLATHER
(("DoneÑeading;Çow writing."));

205 
	`buf„ªvít_íabÀ
(
bev
, 
EV_WRITE
);

206 
	`buf„ªvít_dißbÀ
(
bev
, 
EV_READ
);

207 
	}
}

210 
	$d⁄e_wrôög_cb
(
buf„ªvít
 *
bev
, *
˘x
)

212 
evbuf„r
 *
b
 = 
	`buf„ªvít_gë_ouçut
(
bev
);

213 i‡(
	`evbuf„r_gë_Àngth
(
b
))

215 
	`TT_BLATHER
(("Done writing."));

216 
	`buf„ªvít_dißbÀ
(
bev
, 
EV_WRITE
);

217 
	`buf„ªvít_íabÀ
(
bev
, 
EV_READ
);

218 
	}
}

221 
	$evítcb
(
buf„ªvít
 *
bev
, 
wh©
, *
˘x
)

223 
	`TT_BLATHER
(("GŸÉvíà%d", ()
wh©
));

224 i‡(
wh©
 & 
BEV_EVENT_CONNECTED
) {

225 
SSL
 *
s¶
;

226 
X509
 *
≥î_˚π
;

227 ++
n_c⁄√˘ed
;

228 
s¶
 = 
	`buf„ªvít_›ís¶_gë_s¶
(
bev
);

229 
	`â_as£π
(
s¶
);

230 
≥î_˚π
 = 
	`SSL_gë_≥î_˚πifiˇã
(
s¶
);

231 i‡(0==
	`°rcmp
(
˘x
, "server")) {

232 
	`â_as£π
(
≥î_˚π
 =
NULL
);

234 
	`â_as£π
(
≥î_˚π
 !
NULL
);

236 i‡(
°›_whí_c⁄√˘ed
) {

237 i‡(--
≥ndög_c⁄√˘_evíts
 == 0)

238 
	`evít_ba£_lo›exô
(
exô_ba£
, 
NULL
);

240 } i‡(
wh©
 & 
BEV_EVENT_EOF
) {

241 
	`TT_BLATHER
(("Gotá good EOF"));

242 ++
gŸ_˛o£
;

243 
	`buf„ªvít_‰ì
(
bev
);

244 } i‡(
wh©
 & 
BEV_EVENT_ERROR
) {

245 
	`TT_BLATHER
(("GotánÉrror."));

246 ++
gŸ_îr‹
;

247 
	`buf„ªvít_‰ì
(
bev
);

249 
íd
:

251 
	}
}

254 
	$›í_s¶_bu„vs
(
buf„ªvít
 **
bev1_out
, buf„ªvíà**
bev2_out
,

255 
evít_ba£
 *
ba£
, 
is_›í
, 
Êags
, 
SSL
 *
s¶1
, SSL *
s¶2
,

256 
evutû_sockë_t
 *
fd_∑ú
, 
buf„ªvít
 **
undîlyög_∑ú
)

258 
°©e1
 = 
is_›í
 ? 
BUFFEREVENT_SSL_OPEN
 :
BUFFEREVENT_SSL_CONNECTING
;

259 
°©e2
 = 
is_›í
 ? 
BUFFEREVENT_SSL_OPEN
 :
BUFFEREVENT_SSL_ACCEPTING
;

260 i‡(
fd_∑ú
) {

261 *
bev1_out
 = 
	`buf„ªvít_›ís¶_sockë_√w
(

262 
ba£
, 
fd_∑ú
[0], 
s¶1
, 
°©e1
, 
Êags
);

263 *
bev2_out
 = 
	`buf„ªvít_›ís¶_sockë_√w
(

264 
ba£
, 
fd_∑ú
[1], 
s¶2
, 
°©e2
, 
Êags
);

266 *
bev1_out
 = 
	`buf„ªvít_›ís¶_fûãr_√w
(

267 
ba£
, 
undîlyög_∑ú
[0], 
s¶1
, 
°©e1
, 
Êags
);

268 *
bev2_out
 = 
	`buf„ªvít_›ís¶_fûãr_√w
(

269 
ba£
, 
undîlyög_∑ú
[1], 
s¶2
, 
°©e2
, 
Êags
);

272 
	`buf„ªvít_£tcb
(*
bev1_out
, 
ª•⁄d_to_numbî
, 
d⁄e_wrôög_cb
,

273 
evítcb
, (*)"client");

274 
	`buf„ªvít_£tcb
(*
bev2_out
, 
ª•⁄d_to_numbî
, 
d⁄e_wrôög_cb
,

275 
evítcb
, (*)"server");

276 
	}
}

279 
	$ªgªss_buf„ªvít_›ís¶
(*
¨g
)

281 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

283 
buf„ªvít
 *
bev1
, *
bev2
;

284 
SSL
 *
s¶1
, *
s¶2
;

285 
X509
 *
˚π
 = 
	`gë˚π
();

286 
EVP_PKEY
 *
key
 = 
	`gëkey
();

287 c⁄° 
°¨t_›í
 = 
	`°r°r
((*)
d©a
->
£tup_d©a
, "›í")!=
NULL
;

288 c⁄° 
fûãr
 = 
	`°r°r
((*)
d©a
->
£tup_d©a
, "fûãr")!=
NULL
;

289 
Êags
 = 
BEV_OPT_DEFER_CALLBACKS
;

290 
buf„ªvít
 *
bev_Œ
[2] = { 
NULL
, NULL };

291 
evutû_sockë_t
 *
fd_∑ú
 = 
NULL
;

293 
	`â_as£π
(
˚π
);

294 
	`â_as£π
(
key
);

296 
	`öô_s¶
();

298 i‡(
	`°r°r
((*)
d©a
->
£tup_d©a
, "renegotiate")) {

299 i‡(
	`SSLóy
() >= 0x10001000 &&

300 
	`SSLóy
() < 0x1000104f) {

303 
dißbÀ_és_11_™d_12
 = 1;

305 
ª√gŸüã_©
 = 600;

308 
s¶1
 = 
	`SSL_√w
(
	`gë_s¶_˘x
());

309 
s¶2
 = 
	`SSL_√w
(
	`gë_s¶_˘x
());

311 
	`SSL_u£_˚πifiˇã
(
s¶2
, 
˚π
);

312 
	`SSL_u£_Priv©eKey
(
s¶2
, 
key
);

314 i‡(! 
°¨t_›í
)

315 
Êags
 |
BEV_OPT_CLOSE_ON_FREE
;

317 i‡(!
fûãr
) {

318 
	`â_as£π
(
	`°r°r
((*)
d©a
->
£tup_d©a
, "socketpair"));

319 
fd_∑ú
 = 
d©a
->
∑ú
;

321 
bev_Œ
[0] = 
	`buf„ªvít_sockë_√w
(
d©a
->
ba£
, d©a->
∑ú
[0],

322 
BEV_OPT_CLOSE_ON_FREE
);

323 
bev_Œ
[1] = 
	`buf„ªvít_sockë_√w
(
d©a
->
ba£
, d©a->
∑ú
[1],

324 
BEV_OPT_CLOSE_ON_FREE
);

327 
	`›í_s¶_bu„vs
(&
bev1
, &
bev2
, 
d©a
->
ba£
, 0, 
Êags
, 
s¶1
, 
s¶2
,

328 
fd_∑ú
, 
bev_Œ
);

330 i‡(!
fûãr
) {

331 
	`â_öt_›
(
	`buf„ªvít_gëfd
(
bev1
), ==, 
d©a
->
∑ú
[0]);

333 
	`â_±r_›
(
	`buf„ªvít_gë_undîlyög
(
bev1
), ==, 
bev_Œ
[0]);

336 i‡(
°¨t_›í
) {

337 
≥ndög_c⁄√˘_evíts
 = 2;

338 
°›_whí_c⁄√˘ed
 = 1;

339 
exô_ba£
 = 
d©a
->
ba£
;

340 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

343 
Êags
 |
BEV_OPT_CLOSE_ON_FREE
;

344 
	`buf„ªvít_‰ì
(
bev1
);

345 
	`buf„ªvít_‰ì
(
bev2
);

346 
bev1
 = 
bev2
 = 
NULL
;

347 
	`›í_s¶_bu„vs
(&
bev1
, &
bev2
, 
d©a
->
ba£
, 1, 
Êags
, 
s¶1
, 
s¶2
,

348 
fd_∑ú
, 
bev_Œ
);

351 
	`buf„ªvít_íabÀ
(
bev1
, 
EV_READ
|
EV_WRITE
);

352 
	`buf„ªvít_íabÀ
(
bev2
, 
EV_READ
|
EV_WRITE
);

354 
	`evbuf„r_add_¥ötf
(
	`buf„ªvít_gë_ouçut
(
bev1
), "1\n");

356 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

358 
	`â_as£π
(
ã°_is_d⁄e
 == 1);

359 
	`â_as£π
(
n_c⁄√˘ed
 == 2);

365 
íd
:

367 
	}
}

370 
	$ac˚±cb
(
evc⁄∆i°íî
 *
li°íî
, 
evutû_sockë_t
 
fd
,

371 
sockaddr
 *
addr
, 
sockÀn
, *
¨g
)

373 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

374 
buf„ªvít
 *
bev
;

375 
SSL
 *
s¶
 = 
	`SSL_√w
(
	`gë_s¶_˘x
());

377 
	`SSL_u£_˚πifiˇã
(
s¶
, 
	`gë˚π
());

378 
	`SSL_u£_Priv©eKey
(
s¶
, 
	`gëkey
());

380 
bev
 = 
	`buf„ªvít_›ís¶_sockë_√w
(

381 
d©a
->
ba£
,

382 
fd
,

383 
s¶
,

384 
BUFFEREVENT_SSL_ACCEPTING
,

385 
BEV_OPT_CLOSE_ON_FREE
|
BEV_OPT_DEFER_CALLBACKS
);

387 
	`buf„ªvít_£tcb
(
bev
, 
ª•⁄d_to_numbî
, 
NULL
, 
evítcb
,

390 
	`buf„ªvít_íabÀ
(
bev
, 
EV_READ
|
EV_WRITE
);

393 
	`evc⁄∆i°íî_dißbÀ
(
li°íî
);

394 
	}
}

397 
	$ªgªss_buf„ªvít_›ís¶_c⁄√˘
(*
¨g
)

399 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

401 
evít_ba£
 *
ba£
 = 
d©a
->base;

403 
evc⁄∆i°íî
 *
li°íî
;

404 
buf„ªvít
 *
bev
;

405 
sockaddr_ö
 
sö
;

406 
sockaddr_°‹age
 
ss
;

407 
ev_sockÀn_t
 
¶í
;

409 
	`öô_s¶
();

411 
	`mem£t
(&
sö
, 0, (sin));

412 
sö
.
sö_Ámûy
 = 
AF_INET
;

413 
sö
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(0x7f000001);

415 
	`mem£t
(&
ss
, 0, (ss));

416 
¶í
 = (
ss
);

418 
li°íî
 = 
	`evc⁄∆i°íî_√w_böd
(
ba£
, 
ac˚±cb
, 
d©a
,

419 
LEV_OPT_CLOSE_ON_FREE
|
LEV_OPT_REUSEABLE
,

420 -1, (
sockaddr
 *)&
sö
, (sin));

422 
	`â_as£π
(
li°íî
);

423 
	`â_as£π
(
	`evc⁄∆i°íî_gë_fd
(
li°íî
) >= 0);

425 
bev
 = 
	`buf„ªvít_›ís¶_sockë_√w
(

426 
d©a
->
ba£
, -1, 
	`SSL_√w
(
	`gë_s¶_˘x
()),

427 
BUFFEREVENT_SSL_CONNECTING
,

428 
BEV_OPT_CLOSE_ON_FREE
|
BEV_OPT_DEFER_CALLBACKS
);

429 
	`â_as£π
(
bev
);

431 
	`buf„ªvít_£tcb
(
bev
, 
ª•⁄d_to_numbî
, 
NULL
, 
evítcb
,

434 
	`â_as£π
(
	`gësock«me
(
	`evc⁄∆i°íî_gë_fd
(
li°íî
),

435 (
sockaddr
*)&
ss
, &
¶í
) == 0);

436 
	`â_as£π
(
¶í
 =(
sockaddr_ö
));

437 
	`â_öt_›
(((
sockaddr
*)&
ss
)->
ß_Ámûy
, ==, 
AF_INET
);

438 
	`â_öt_›
(((
sockaddr
*)&
ss
)->
ß_Ámûy
, ==, 
AF_INET
);

440 
	`â_as£π
(0 ==

441 
	`buf„ªvít_sockë_c⁄√˘
(
bev
, (
sockaddr
*)&
ss
, 
¶í
));

442 
	`evbuf„r_add_¥ötf
(
	`buf„ªvít_gë_ouçut
(
bev
), "1\n");

443 
	`buf„ªvít_íabÀ
(
bev
, 
EV_READ
|
EV_WRITE
);

445 
	`evít_ba£_di•©ch
(
ba£
);

446 
íd
:

448 
	}
}

450 
ã°ˇ£_t
 
	gs¶_ã°ˇ£s
[] = {

452 { "buf„ªvít_sockë∑ú", 
ªgªss_buf„ªvít_›ís¶
, 
TT_ISOLATED
,

453 &
basic_£tup
, (*)"socketpair" },

454 { "buf„ªvít_fûãr", 
ªgªss_buf„ªvít_›ís¶
,

455 
TT_ISOLATED
,

456 &
basic_£tup
, (*)"filter" },

457 { "buf„ªvít_ª√gŸüã_sockë∑ú", 
ªgªss_buf„ªvít_›ís¶
,

458 
TT_ISOLATED
,

459 &
basic_£tup
, (*)"socketpairÑenegotiate" },

460 { "buf„ªvít_ª√gŸüã_fûãr", 
ªgªss_buf„ªvít_›ís¶
,

461 
TT_ISOLATED
,

462 &
basic_£tup
, (*)"filterÑenegotiate" },

463 { "buf„ªvít_sockë∑ú_°¨t›í", 
ªgªss_buf„ªvít_›ís¶
,

464 
TT_ISOLATED
, &
basic_£tup
, (*)"socketpair open" },

465 { "buf„ªvít_fûãr_°¨t›í", 
ªgªss_buf„ªvít_›ís¶
,

466 
TT_ISOLATED
, &
basic_£tup
, (*)"filter open" },

468 { "buf„ªvít_c⁄√˘", 
ªgªss_buf„ªvít_›ís¶_c⁄√˘
,

469 
TT_FORK
|
TT_NEED_BASE
, &
basic_£tup
, 
NULL
 },

471 
END_OF_TESTCASES
,

	@test/regress_testutils.c

27 #ifde‡
WIN32


28 
	~<wösock2.h
>

29 
	~<wödows.h
>

30 
	~<ws2t˝ù.h
>

33 
	~"evít2/evít-c⁄fig.h
"

35 
	~<sys/ty≥s.h
>

36 
	~<sys/°©.h
>

37 #ifde‡
_EVENT_HAVE_SYS_TIME_H


38 
	~<sys/time.h
>

40 
	~<sys/queue.h
>

41 #i‚de‡
WIN32


42 
	~<sys/sockë.h
>

43 
	~<sig«l.h
>

44 
	~<√töë/ö.h
>

45 
	~<¨∑/öë.h
>

46 
	~<uni°d.h
>

48 #ifde‡
_EVENT_HAVE_NETINET_IN6_H


49 
	~<√töë/ö6.h
>

51 #ifde‡
HAVE_NETDB_H


52 
	~<√tdb.h
>

54 
	~<f˙é.h
>

55 
	~<°dlib.h
>

56 
	~<°dio.h
>

57 
	~<°rög.h
>

58 
	~<î∫o.h
>

60 
	~"evít2/dns.h
"

61 
	~"evít2/dns_°ru˘.h
"

62 
	~"evít2/evít.h
"

63 
	~"evít2/evít_com∑t.h
"

64 
	~"evít2/utû.h
"

65 
	~"evít2/li°íî.h
"

66 
	~"evít2/buf„ªvít.h
"

67 
	~"log-öã∫Æ.h
"

68 
	~"ªgªss.h
"

69 
	~"ªgªss_ã°utûs.h
"

71 
	~"../utû-öã∫Æ.h
"

74 
evdns_£rvî_p‹t
 *
	gdns_p‹t
;

75 
evutû_sockë_t
 
	gdns_sock
 = -1;

79 
	$ªgªss_gë_sockë_p‹t
(
evutû_sockë_t
 
fd
)

81 
sockaddr_°‹age
 
ss
;

82 
ev_sockÀn_t
 
sockÀn
 = (
ss
);

83 i‡(
	`gësock«me
(
fd
, (
sockaddr
*)&
ss
, &
sockÀn
) != 0)

85 i‡(
ss
.
ss_Ámûy
 =
AF_INET
)

86  
	`¡ohs
–((
sockaddr_ö
*)&
ss
)->
sö_p‹t
);

87 i‡(
ss
.
ss_Ámûy
 =
AF_INET6
)

88  
	`¡ohs
–((
sockaddr_ö6
*)&
ss
)->
sö6_p‹t
);

91 
	}
}

93 
evdns_£rvî_p‹t
 *

94 
	$ªgªss_gë_dns£rvî
(
evít_ba£
 *
ba£
,

95 
ev_uöt16_t
 *
p‹äum
,

96 
evutû_sockë_t
 *
psock
,

97 
evdns_ªque°_ˇŒback_‚_ty≥
 
cb
,

98 *
¨g
)

100 
evdns_£rvî_p‹t
 *
p‹t
 = 
NULL
;

101 
evutû_sockë_t
 
sock
;

102 
sockaddr_ö
 
my_addr
;

104 
sock
 = 
	`sockë
(
AF_INET
, 
SOCK_DGRAM
, 0);

105 i‡(
sock
 < 0) {

106 
	`â_ab‹t_≥º‹
("socket");

109 
	`evutû_make_sockë_n⁄blockög
(
sock
);

111 
	`mem£t
(&
my_addr
, 0, (my_addr));

112 
my_addr
.
sö_Ámûy
 = 
AF_INET
;

113 
my_addr
.
sö_p‹t
 = 
	`ht⁄s
(*
p‹äum
);

114 
my_addr
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(0x7f000001UL);

115 i‡(
	`böd
(
sock
, (
sockaddr
*)&
my_addr
, (my_addr)) < 0) {

116 
	`evutû_˛o£sockë
(
sock
);

117 
	`â_ab‹t_≥º‹
("bind");

119 
p‹t
 = 
	`evdns_add_£rvî_p‹t_wôh_ba£
(
ba£
, 
sock
, 0, 
cb
, 
¨g
);

120 i‡(!*
p‹äum
)

121 *
p‹äum
 = 
	`ªgªss_gë_sockë_p‹t
(
sock
);

122 i‡(
psock
)

123 *
psock
 = 
sock
;

125  
p‹t
;

126 
íd
:

127  
NULL
;

128 
	}
}

131 
	$ªgªss_˛ón_dns£rvî
()

133 i‡(
dns_p‹t
)

134 
	`evdns_˛o£_£rvî_p‹t
(
dns_p‹t
);

135 i‡(
dns_sock
 >= 0)

136 
	`evutû_˛o£sockë
(
dns_sock
);

137 
	}
}

140 
	$ªgªss_dns_£rvî_cb
(
evdns_£rvî_ªque°
 *
ªq
, *
d©a
)

142 
ªgªss_dns_£rvî_èbÀ
 *
èb
 = 
d©a
;

143 c⁄° *
que°i⁄
;

145 i‡(
ªq
->
nque°i⁄s
 != 1)

146 
	`TT_DIE
(("Only handling one questionátáÅime; got %d",

147 
ªq
->
nque°i⁄s
));

149 
que°i⁄
 = 
ªq
->
que°i⁄s
[0]->
«me
;

151 
èb
->
q
 && 
	`evutû_ascii_°rˇ£cmp
(
que°i⁄
,Åab->q) &&

152 
	`°rcmp
("*", 
èb
->
q
))

153 ++
èb
;

154 i‡(
èb
->
q
 =
NULL
)

155 
	`TT_DIE
(("U√x≥˘ed que°i⁄: '%s'", 
que°i⁄
));

157 ++
èb
->
£í
;

159 i‡(!
	`°rcmp
(
èb
->
™°y≥
, "err")) {

160 
îr
 = 
	`©oi
(
èb
->
™s
);

161 
	`â_as£π
(! 
	`evdns_£rvî_ªque°_ª•⁄d
(
ªq
, 
îr
));

163 } i‡(!
	`°rcmp
(
èb
->
™°y≥
, "errsoa")) {

164 
îr
 = 
	`©oi
(
èb
->
™s
);

165 
sﬂ_ªc‹d
[] =

174 
	`evdns_£rvî_ªque°_add_ª∂y
(

175 
ªq
, 
EVDNS_AUTHORITY_SECTION
,

176 "exam∂e.com", 
EVDNS_TYPE_SOA
, 
EVDNS_CLASS_INET
,

177 42, (
sﬂ_ªc‹d
) - 1, 0, soa_record);

178 
	`â_as£π
(! 
	`evdns_£rvî_ªque°_ª•⁄d
(
ªq
, 
îr
));

180 } i‡(!
	`°rcmp
(
èb
->
™°y≥
, "A")) {

181 
ö_addr
 
ö
;

182 i‡(!
	`evutû_öë_±⁄
(
AF_INET
, 
èb
->
™s
, &
ö
)) {

183 
	`TT_DIE
(("Bad A vÆuê%†öÅabÀ", 
èb
->
™s
));

185 
	`evdns_£rvî_ªque°_add_a_ª∂y
(
ªq
, 
que°i⁄
, 1, &
ö
.
s_addr
,

187 } i‡(!
	`°rcmp
(
èb
->
™°y≥
, "AAAA")) {

188 
ö6_addr
 
ö6
;

189 i‡(!
	`evutû_öë_±⁄
(
AF_INET6
, 
èb
->
™s
, &
ö6
)) {

190 
	`TT_DIE
(("Bad AAAA vÆuê%†öÅabÀ", 
èb
->
™s
));

192 
	`evdns_£rvî_ªque°_add_ØØ_ª∂y
(
ªq
,

193 
que°i⁄
, 1, &
ö6
.
s6_addr
, 100);

195 
	`TT_DIE
(("WeúdÅabÀÉ¡ry wôhÅy≥ '%s'", 
èb
->
™°y≥
));

197 
	`â_as£π
(! 
	`evdns_£rvî_ªque°_ª•⁄d
(
ªq
, 0))

199 
íd
:

200 
	`â_w™t
(! 
	`evdns_£rvî_ªque°_dr›
(
ªq
));

201 
	}
}

204 
	$ªgªss_dns£rvî
(
evít_ba£
 *
ba£
, 
ev_uöt16_t
 *
p‹t
,

205 
ªgªss_dns_£rvî_èbÀ
 *
£¨ch_èbÀ
)

207 
dns_p‹t
 = 
	`ªgªss_gë_dns£rvî
(
ba£
, 
p‹t
, &
dns_sock
,

208 
ªgªss_dns_£rvî_cb
, 
£¨ch_èbÀ
);

209  
dns_p‹t
 !
NULL
;

210 
	}
}

213 
	$ªgªss_gë_li°íî_addr
(
evc⁄∆i°íî
 *
Àv
,

214 
sockaddr
 *
ß
, 
ev_sockÀn_t
 *
sockÀn
)

216 
evutû_sockë_t
 
s
 = 
	`evc⁄∆i°íî_gë_fd
(
Àv
);

217 i‡(
s
 <= 0)

219  
	`gësock«me
(
s
, 
ß
, 
sockÀn
);

220 
	}
}

	@test/regress_testutils.h

27 #i‚de‡
_TESTUTILS_H


28 
	#_TESTUTILS_H


	)

30 
	~"evít2/dns.h
"

32 
	sªgªss_dns_£rvî_èbÀ
 {

33 c⁄° *
	mq
;

34 c⁄° *
	m™°y≥
;

35 c⁄° *
	m™s
;

36 
	m£í
;

39 
evdns_£rvî_p‹t
 *

40 
ªgªss_gë_dns£rvî
(
evít_ba£
 *
ba£
,

41 
ev_uöt16_t
 *
p‹äum
,

42 
evutû_sockë_t
 *
psock
,

43 
evdns_ªque°_ˇŒback_‚_ty≥
 
cb
,

44 *
¨g
);

47 
ªgªss_gë_sockë_p‹t
(
evutû_sockë_t
 
fd
);

50 
ªgªss_dns_£rvî_cb
(

51 
evdns_£rvî_ªque°
 *
ªq
, *
d©a
);

54 
ªgªss_dns£rvî
(
evít_ba£
 *
ba£
, 
ev_uöt16_t
 *
p‹t
,

55 
ªgªss_dns_£rvî_èbÀ
 *
£ach_èbÀ
);

58 
ªgªss_˛ón_dns£rvî
();

60 
	gevc⁄∆i°íî
;

61 
	gsockaddr
;

62 
ªgªss_gë_li°íî_addr
(
evc⁄∆i°íî
 *
Àv
,

63 
sockaddr
 *
ß
, 
ev_sockÀn_t
 *
sockÀn
);

	@test/regress_thread.c

28 #unde‡
NDEBUG


30 
	~"evít2/evít-c⁄fig.h
"

32 
	~<sys/ty≥s.h
>

33 
	~<°dio.h
>

34 
	~<°dlib.h
>

35 
	~<°rög.h
>

36 #ifde‡
_EVENT_HAVE_UNISTD_H


37 
	~<uni°d.h
>

39 #ifde‡
_EVENT_HAVE_SYS_WAIT_H


40 
	~<sys/waô.h
>

43 #ifde‡
_EVENT_HAVE_PTHREADS


44 
	~<±hªad.h
>

45 #ñi‡
deföed
(
WIN32
)

46 
	~<¥o˚ss.h
>

48 
	~<as£π.h
>

49 #ifde‡
_EVENT_HAVE_UNISTD_H


50 
	~<uni°d.h
>

52 
	~<time.h
>

54 
	~"sys/queue.h
"

56 
	~"evít2/utû.h
"

57 
	~"evít2/evít.h
"

58 
	~"evít2/evít_°ru˘.h
"

59 
	~"evít2/thªad.h
"

60 
	~"evthªad-öã∫Æ.h
"

61 
	~"evít-öã∫Æ.h
"

62 
	~"de„r-öã∫Æ.h
"

63 
	~"ªgªss.h
"

64 
	~"töyã°_ma¸os.h
"

66 #ifde‡
_EVENT_HAVE_PTHREADS


67 
	#THREAD_T
 
±hªad_t


	)

68 
	#THREAD_FN
 *

	)

69 
	#THREAD_RETURN
(Ë (
NULL
)

	)

70 
	#THREAD_START
(
thªadv¨
, 
‚
, 
¨g
) \

71 
	`±hªad_¸óã
(&(
thªadv¨
), 
NULL
, 
‚
, 
¨g
)

	)

72 
	#THREAD_JOIN
(
th
Ë
	`±hªad_joö
—h, 
NULL
)

	)

74 
	#THREAD_T
 
HANDLE


	)

75 
	#THREAD_FN
 
__°dˇŒ


	)

76 
	#THREAD_RETURN
(Ë (0)

	)

77 
	#THREAD_START
(
thªadv¨
, 
‚
, 
¨g
) do { \

78 
uöçå_t
 
thªadh™dÀ
 = 
	`_begöthªadex
(
NULL
,0,
‚
,(
¨g
),0,NULL); \

79 (
thªadv¨
Ë(
HANDLE
Ë
thªadh™dÀ
; \

80 } 0)

	)

81 
	#THREAD_JOIN
(
th
Ë
	`WaôF‹SögÀObje˘
—h, 
INFINITE
)

	)

84 
	sc⁄d_waô
 {

85 *
	mlock
;

86 *
	mc⁄d
;

90 
	$wake_Æl_timeout
(
evutû_sockë_t
 
fd
, 
wh©
, *
¨g
)

92 
c⁄d_waô
 *
cw
 = 
¨g
;

93 
	`EVLOCK_LOCK
(
cw
->
lock
, 0);

94 
	`EVTHREAD_COND_BROADCAST
(
cw
->
c⁄d
);

95 
	`EVLOCK_UNLOCK
(
cw
->
lock
, 0);

97 
	}
}

100 
	$wake_⁄e_timeout
(
evutû_sockë_t
 
fd
, 
wh©
, *
¨g
)

102 
c⁄d_waô
 *
cw
 = 
¨g
;

103 
	`EVLOCK_LOCK
(
cw
->
lock
, 0);

104 
	`EVTHREAD_COND_SIGNAL
(
cw
->
c⁄d
);

105 
	`EVLOCK_UNLOCK
(
cw
->
lock
, 0);

106 
	}
}

108 
	#NUM_THREADS
 100

	)

109 
	#NUM_ITERATIONS
 100

	)

110 *
	gcou¡_lock
;

111 
	gcou¡
;

113 
THREAD_FN


114 
	$basic_thªad
(*
¨g
)

116 
c⁄d_waô
 
cw
;

117 
evít_ba£
 *
ba£
 = 
¨g
;

118 
evít
 
ev
;

119 
i
 = 0;

121 
	`EVTHREAD_ALLOC_LOCK
(
cw
.
lock
, 0);

122 
	`EVTHREAD_ALLOC_COND
(
cw
.
c⁄d
);

123 
	`as£π
(
cw
.
lock
);

124 
	`as£π
(
cw
.
c⁄d
);

126 
	`evtimî_assign
(&
ev
, 
ba£
, 
wake_Æl_timeout
, &
cw
);

127 
i
 = 0; i < 
NUM_ITERATIONS
; i++) {

128 
timevÆ
 
tv
;

129 
	`evutû_timî˛ór
(&
tv
);

130 
tv
.
tv_£c
 = 0;

131 
tv
.
tv_u£c
 = 3000;

133 
	`EVLOCK_LOCK
(
cw
.
lock
, 0);

136 
	`as£π
(
	`evtimî_add
(&
ev
, &
tv
) == 0);

138 
	`as£π
(
	`EVTHREAD_COND_WAIT
(
cw
.
c⁄d
, cw.
lock
) == 0);

139 
	`EVLOCK_UNLOCK
(
cw
.
lock
, 0);

141 
	`EVLOCK_LOCK
(
cou¡_lock
, 0);

142 ++
cou¡
;

143 
	`EVLOCK_UNLOCK
(
cou¡_lock
, 0);

147 
	`EVLOCK_LOCK
(
cou¡_lock
, 0);

148 i‡(
cou¡
 >
NUM_THREADS
 * 
NUM_ITERATIONS
)

149 
	`evít_ba£_lo›exô
(
ba£
, 
NULL
);

150 
	`EVLOCK_UNLOCK
(
cou¡_lock
, 0);

152 
	`EVTHREAD_FREE_LOCK
(
cw
.
lock
, 0);

153 
	`EVTHREAD_FREE_COND
(
cw
.
c⁄d
);

155 
	`THREAD_RETURN
();

156 
	}
}

158 
	gnŸifiˇti⁄_fd_u£d
 = 0;

159 #i‚de‡
WIN32


160 
	ggŸ_sigchld
 = 0;

162 
	$sigchld_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

164 
timevÆ
 
tv
;

165 
evít_ba£
 *
ba£
 = 
¨g
;

167 
gŸ_sigchld
++;

168 
tv
.
tv_u£c
 = 100000;

169 
tv
.
tv_£c
 = 0;

170 
	`evít_ba£_lo›exô
(
ba£
, &
tv
);

171 
	}
}

175 
	$nŸify_fd_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

177 ++
nŸifiˇti⁄_fd_u£d
;

178 
	}
}

182 
	$thªad_basic
(*
¨g
)

184 
THREAD_T
 
thªads
[
NUM_THREADS
];

185 
evít
 
ev
;

186 
timevÆ
 
tv
;

187 
i
;

188 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

189 
evít_ba£
 *
ba£
 = 
d©a
->base;

191 
evít
 *
nŸifiˇti⁄_evít
 = 
NULL
;

192 
evít
 *
sigchld_evít
 = 
NULL
;

194 
	`EVTHREAD_ALLOC_LOCK
(
cou¡_lock
, 0);

195 
	`â_as£π
(
cou¡_lock
);

197 
	`â_as£π
(
ba£
);

198 i‡(
	`evthªad_make_ba£_nŸifübÀ
(
ba£
)<0) {

199 
	`â_ab‹t_msg
("Couldn't make baseÇotifiable!");

202 #i‚de‡
WIN32


203 i‡(
d©a
->
£tup_d©a
 && !
	`°rcmp
(data->setup_data, "forking")) {

204 
pid_t
 
pid
;

205 
°©us
;

206 
sigchld_evít
 = 
	`evsig«l_√w
(
ba£
, 
SIGCHLD
, 
sigchld_cb
, base);

210 
nŸifiˇti⁄_evít
 = 
	`evít_√w
(
ba£
,

211 
ba£
->
th_nŸify_fd
[0], 
EV_READ
|
EV_PERSIST
, 
nŸify_fd_cb
,

212 
NULL
);

213 
	`evít_add
(
sigchld_evít
, 
NULL
);

214 
	`evít_add
(
nŸifiˇti⁄_evít
, 
NULL
);

216 i‡((
pid
 = 
	`f‹k
()) == 0) {

217 
	`evít_dñ
(
nŸifiˇti⁄_evít
);

218 i‡(
	`evít_ªöô
(
ba£
) < 0) {

219 
	`TT_FAIL
(("reinit"));

220 
	`exô
(1);

222 
	`evít_assign
(
nŸifiˇti⁄_evít
, 
ba£
,

223 
ba£
->
th_nŸify_fd
[0], 
EV_READ
|
EV_PERSIST
,

224 
nŸify_fd_cb
, 
NULL
);

225 
	`evít_add
(
nŸifiˇti⁄_evít
, 
NULL
);

226 
chûd
;

229 
	`evít_ba£_di•©ch
(
ba£
);

231 i‡(
	`waôpid
(
pid
, &
°©us
, 0) == -1)

232 
	`â_ab‹t_≥º‹
("waitpid");

233 
	`TT_BLATHER
(("Waitpid okay\n"));

235 
	`â_as£π
(
gŸ_sigchld
);

236 
	`â_öt_›
(
nŸifiˇti⁄_fd_u£d
, ==, 0);

238 
íd
;

241 
chûd
:

243 
i
 = 0; i < 
NUM_THREADS
; ++i)

244 
	`THREAD_START
(
thªads
[
i
], 
basic_thªad
, 
ba£
);

246 
	`evtimî_assign
(&
ev
, 
ba£
, 
NULL
, NULL);

247 
	`evutû_timî˛ór
(&
tv
);

248 
tv
.
tv_£c
 = 1000;

249 
	`evít_add
(&
ev
, &
tv
);

251 
	`evít_ba£_di•©ch
(
ba£
);

253 
i
 = 0; i < 
NUM_THREADS
; ++i)

254 
	`THREAD_JOIN
(
thªads
[
i
]);

256 
	`evít_dñ
(&
ev
);

258 
	`â_öt_›
(
cou¡
, ==, 
NUM_THREADS
 * 
NUM_ITERATIONS
);

260 
	`EVTHREAD_FREE_LOCK
(
cou¡_lock
, 0);

262 
	`TT_BLATHER
(("nŸifüti⁄s==%d", 
nŸifiˇti⁄_fd_u£d
));

264 
íd
:

266 i‡(
nŸifiˇti⁄_evít
)

267 
	`evít_‰ì
(
nŸifiˇti⁄_evít
);

268 i‡(
sigchld_evít
)

269 
	`evít_‰ì
(
sigchld_evít
);

270 
	}
}

272 #unde‡
NUM_THREADS


273 
	#NUM_THREADS
 10

	)

275 
	sÆîãd_ªc‹d
 {

276 
c⁄d_waô
 *
	mc⁄d
;

277 
timevÆ
 
	mdñay
;

278 
timevÆ
 
	mÆîãd_©
;

279 
	mtimed_out
;

282 
THREAD_FN


283 
	$waô_f‹_c⁄dôi⁄
(*
¨g
)

285 
Æîãd_ªc‹d
 *
ªc
 = 
¨g
;

286 
r
;

288 
	`EVLOCK_LOCK
(
ªc
->
c⁄d
->
lock
, 0);

289 i‡(
ªc
->
dñay
.
tv_£c
 ||Ñec->dñay.
tv_u£c
) {

290 
r
 = 
	`EVTHREAD_COND_WAIT_TIMED
(
ªc
->
c⁄d
->c⁄d,Ñec->c⁄d->
lock
,

291 &
ªc
->
dñay
);

293 
r
 = 
	`EVTHREAD_COND_WAIT
(
ªc
->
c⁄d
->c⁄d,Ñec->c⁄d->
lock
);

295 
	`EVLOCK_UNLOCK
(
ªc
->
c⁄d
->
lock
, 0);

297 
	`evutû_gëtimeofday
(&
ªc
->
Æîãd_©
, 
NULL
);

298 i‡(
r
 == 1)

299 
ªc
->
timed_out
 = 1;

301 
	`THREAD_RETURN
();

302 
	}
}

305 
	$thªad_c⁄dôi⁄s_sim∂e
(*
¨g
)

307 
timevÆ
 
tv_sig«l
, 
tv_timeout
, 
tv_brﬂdˇ°
;

308 
Æîãd_ªc‹d
 
Æîãd
[
NUM_THREADS
];

309 
THREAD_T
 
thªads
[
NUM_THREADS
];

310 
c⁄d_waô
 
c⁄d
;

311 
i
;

312 
timevÆ
 
œunched_©
;

313 
evít
 
wake_⁄e
;

314 
evít
 
wake_Æl
;

315 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

316 
evít_ba£
 *
ba£
 = 
d©a
->base;

317 
n_timed_out
=0, 
n_sig«l
=0, 
n_brﬂdˇ°
=0;

319 
tv_sig«l
.
tv_£c
 = 
tv_timeout
.tv_£¯
tv_brﬂdˇ°
.tv_sec = 0;

320 
tv_sig«l
.
tv_u£c
 = 30*1000;

321 
tv_timeout
.
tv_u£c
 = 150*1000;

322 
tv_brﬂdˇ°
.
tv_u£c
 = 500*1000;

324 
	`EVTHREAD_ALLOC_LOCK
(
c⁄d
.
lock
, 
EVTHREAD_LOCKTYPE_RECURSIVE
);

325 
	`EVTHREAD_ALLOC_COND
(
c⁄d
.cond);

326 
	`â_as£π
(
c⁄d
.
lock
);

327 
	`â_as£π
(
c⁄d
.cond);

328 
i
 = 0; i < 
NUM_THREADS
; ++i) {

329 
	`mem£t
(&
Æîãd
[
i
], 0, (
Æîãd_ªc‹d
));

330 
Æîãd
[
i
].
c⁄d
 = &cond;

334 
	`mem˝y
(&
Æîãd
[5].
dñay
, &
tv_timeout
, (tv_timeout));

335 
	`mem˝y
(&
Æîãd
[6].
dñay
, &
tv_timeout
, (tv_timeout));

337 
	`evtimî_assign
(&
wake_⁄e
, 
ba£
, 
wake_⁄e_timeout
, &
c⁄d
);

338 
	`evtimî_assign
(&
wake_Æl
, 
ba£
, 
wake_Æl_timeout
, &
c⁄d
);

340 
	`evutû_gëtimeofday
(&
œunched_©
, 
NULL
);

343 
i
 = 0; i < 
NUM_THREADS
; ++i) {

344 
	`THREAD_START
(
thªads
[
i
], 
waô_f‹_c⁄dôi⁄
, &
Æîãd
[i]);

348 
	`â_öt_›
(
	`evít_add
(&
wake_⁄e
, &
tv_sig«l
), ==, 0);

349 
	`â_öt_›
(
	`evít_add
(&
wake_Æl
, &
tv_brﬂdˇ°
), ==, 0);

352 
	`evít_ba£_di•©ch
(
ba£
);

355 
i
 = 0; i < 
NUM_THREADS
; ++i)

356 
	`THREAD_JOIN
(
thªads
[
i
]);

360 
n_timed_out
 = 
Æîãd
[5].
timed_out
 +álerted[6].timed_out;

361 
	`â_öt_›
(
n_timed_out
, >=, 1);

362 
	`â_öt_›
(
n_timed_out
, <=, 2);

364 
i
 = 0; i < 
NUM_THREADS
; ++i) {

365 c⁄° 
timevÆ
 *
èrgë_dñay
;

366 
timevÆ
 
èrgë_time
, 
a˘uÆ_dñay
;

367 i‡(
Æîãd
[
i
].
timed_out
) {

368 
	`TT_BLATHER
(("%dÜook†likê®timeout\n", 
i
));

369 
èrgë_dñay
 = &
tv_timeout
;

370 
	`â_as£π
(
i
 == 5 || i == 6);

371 } i‡(
	`evutû_timîis£t
(&
Æîãd
[
i
].
Æîãd_©
)) {

372 
diff1
,
diff2
;

373 
	`evutû_timîsub
(&
Æîãd
[
i
].
Æîãd_©
,

374 &
œunched_©
, &
a˘uÆ_dñay
);

375 
diff1
 = 
	`timevÆ_m£c_diff
(&
a˘uÆ_dñay
,

376 &
tv_sig«l
);

377 
diff2
 = 
	`timevÆ_m£c_diff
(&
a˘uÆ_dñay
,

378 &
tv_brﬂdˇ°
);

379 i‡(
	`abs
(
diff1
Ë<ábs(
diff2
)) {

380 
	`TT_BLATHER
(("%dÜook†likê®sig«l\n", 
i
));

381 
èrgë_dñay
 = &
tv_sig«l
;

382 ++
n_sig«l
;

384 
	`TT_BLATHER
(("%dÜook†likê®brﬂdˇ°\n", 
i
));

385 
èrgë_dñay
 = &
tv_brﬂdˇ°
;

386 ++
n_brﬂdˇ°
;

389 
	`TT_FAIL
(("Thªad %dÇevî gŸ wokí", 
i
));

392 
	`evutû_timîadd
(
èrgë_dñay
, &
œunched_©
, &
èrgë_time
);

393 
	`ã°_timevÆ_diff_Àq
(&
èrgë_time
, &
Æîãd
[
i
].
Æîãd_©
,

396 
	`â_öt_›
(
n_brﬂdˇ°
 + 
n_sig«l
 + 
n_timed_out
, ==, 
NUM_THREADS
);

397 
	`â_öt_›
(
n_sig«l
, ==, 1);

399 
íd
:

401 
	}
}

403 
	#CB_COUNT
 128

	)

404 
	#QUEUE_THREAD_COUNT
 8

	)

406 #ifde‡
WIN32


407 
	#SLEEP_MS
(
ms
Ë
	`SÀï
(ms)

	)

409 
	#SLEEP_MS
(
ms
Ë
	`u¶ìp
((msË* 1000)

	)

412 
	sde„ºed_ã°_d©a
 {

413 
de„ºed_cb
 
	mcbs
[
CB_COUNT
];

414 
de„ºed_cb_queue
 *
	mqueue
;

417 
time_t
 
	gtimî_°¨t
 = 0;

418 
time_t
 
	gtimî_íd
 = 0;

419 
	gˇŒback_cou¡
 = 0;

420 
THREAD_T
 
	glﬂd_thªads
[
QUEUE_THREAD_COUNT
];

421 
de„ºed_ã°_d©a
 
	gde„ºed_d©a
[
QUEUE_THREAD_COUNT
];

424 
	$de„ºed_ˇŒback
(
de„ºed_cb
 *
cb
, *
¨g
)

426 
	`SLEEP_MS
(1);

427 
ˇŒback_cou¡
 += 1;

428 
	}
}

430 
THREAD_FN


431 
	$lﬂd_de„ºed_queue
(*
¨g
)

433 
de„ºed_ã°_d©a
 *
d©a
 = 
¨g
;

434 
size_t
 
i
;

436 
i
 = 0; i < 
CB_COUNT
; ++i) {

437 
	`evít_de„ºed_cb_öô
(&
d©a
->
cbs
[
i
], 
de„ºed_ˇŒback
, 
NULL
);

438 
	`evít_de„ºed_cb_scheduÀ
(
d©a
->
queue
, &d©a->
cbs
[
i
]);

439 
	`SLEEP_MS
(1);

442 
	`THREAD_RETURN
();

443 
	}
}

446 
	$timî_ˇŒback
(
evutû_sockë_t
 
fd
, 
wh©
, *
¨g
)

448 
timî_íd
 = 
	`time
(
NULL
);

449 
	}
}

452 
	$°¨t_thªads_ˇŒback
(
evutû_sockë_t
 
fd
, 
wh©
, *
¨g
)

454 
i
;

456 
i
 = 0; i < 
QUEUE_THREAD_COUNT
; ++i) {

457 
	`THREAD_START
(
lﬂd_thªads
[
i
], 
lﬂd_de„ºed_queue
,

458 &
de„ºed_d©a
[
i
]);

460 
	}
}

463 
	$thªad_de„ºed_cb_skew
(*
¨g
)

465 
basic_ã°_d©a
 *
d©a
 = 
¨g
;

466 
timevÆ
 
tv_timî
 = {4, 0};

467 
de„ºed_cb_queue
 *
queue
;

468 
time_t
 
ñ≠£d
;

469 
i
;

471 
queue
 = 
	`evít_ba£_gë_de„ºed_cb_queue
(
d©a
->
ba£
);

472 
	`â_as£π
(
queue
);

474 
i
 = 0; i < 
QUEUE_THREAD_COUNT
; ++i)

475 
de„ºed_d©a
[
i
].
queue
 = queue;

477 
timî_°¨t
 = 
	`time
(
NULL
);

478 
	`evít_ba£_⁄˚
(
d©a
->
ba£
, -1, 
EV_TIMEOUT
, 
timî_ˇŒback
, 
NULL
,

479 &
tv_timî
);

480 
	`evít_ba£_⁄˚
(
d©a
->
ba£
, -1, 
EV_TIMEOUT
, 
°¨t_thªads_ˇŒback
,

481 
NULL
, NULL);

482 
	`evít_ba£_di•©ch
(
d©a
->
ba£
);

484 
ñ≠£d
 = 
timî_íd
 - 
timî_°¨t
;

485 
	`TT_BLATHER
(("ˇŒback cou¡, %u", 
ˇŒback_cou¡
));

486 
	`TT_BLATHER
(("ñ≠£dÅime, %u", ()
ñ≠£d
));

489 
	`â_as£π
(
ñ≠£d
 >= 4 &&Élapsed <= 6);

491 
íd
:

492 
i
 = 0; i < 
QUEUE_THREAD_COUNT
; ++i)

493 
	`THREAD_JOIN
(
lﬂd_thªads
[
i
]);

494 
	}
}

496 
	#TEST
(
«me
) \

497 { #«me, 
thªad_
##
«me
, 
TT_FORK
|
TT_NEED_THREADS
|
TT_NEED_BASE
, \

498 &
basic_£tup
, 
NULL
 }

	)

500 
ã°ˇ£_t
 
	gthªad_ã°ˇ£s
[] = {

501 { "basic", 
thªad_basic
, 
TT_FORK
|
TT_NEED_THREADS
|
TT_NEED_BASE
,

502 &
basic_£tup
, 
NULL
 },

503 #i‚de‡
WIN32


504 { "f‹kög", 
thªad_basic
, 
TT_FORK
|
TT_NEED_THREADS
|
TT_NEED_BASE
,

505 &
basic_£tup
, (*)"forking" },

507 
TEST
(
c⁄dôi⁄s_sim∂e
),

508 
TEST
(
de„ºed_cb_skew
),

509 
END_OF_TESTCASES


	@test/regress_util.c

26 #ifde‡
WIN32


27 
	~<wösock2.h
>

28 
	~<wödows.h
>

29 
	~<ws2t˝ù.h
>

32 
	~"evít2/evít-c⁄fig.h
"

34 
	~<sys/ty≥s.h
>

36 #i‚de‡
WIN32


37 
	~<sys/sockë.h
>

38 
	~<√töë/ö.h
>

39 
	~<¨∑/öë.h
>

40 
	~<uni°d.h
>

42 #ifde‡
_EVENT_HAVE_NETINET_IN6_H


43 
	~<√töë/ö6.h
>

45 #ifde‡
_EVENT_HAVE_SYS_WAIT_H


46 
	~<sys/waô.h
>

48 
	~<sig«l.h
>

49 
	~<°dio.h
>

50 
	~<°dlib.h
>

51 
	~<°rög.h
>

53 
	~"evít2/evít.h
"

54 
	~"evít2/utû.h
"

55 
	~"../ùv6-öã∫Æ.h
"

56 
	~"../utû-öã∫Æ.h
"

57 
	~"../log-öã∫Æ.h
"

58 
	~"../°æ˝y-öã∫Æ.h
"

60 
	~"ªgªss.h
"

62 
	eíåy_°©us
 { 
	mNORMAL
, 
	mCANONICAL
, 
	mBAD
 };

65 
	sùv4_íåy
 {

66 c⁄° *
	maddr
;

67 
ev_uöt32_t
 
	mªs
;

68 
íåy_°©us
 
	m°©us
;

69 } 
	gùv4_íåõs
[] = {

70 { "1.2.3.4", 0x01020304u, 
CANONICAL
 },

71 { "255.255.255.255", 0xffffffffu, 
CANONICAL
 },

72 { "256.0.0.0", 0, 
BAD
 },

73 { "ABC", 0, 
BAD
 },

74 { "1.2.3.4.5", 0, 
BAD
 },

75 { "176.192.208.244", 0xb0c0d0f4, 
CANONICAL
 },

76 { 
NULL
, 0, 
BAD
 },

79 
	sùv6_íåy
 {

80 c⁄° *
	maddr
;

81 
ev_uöt32_t
 
	mªs
[4];

82 
íåy_°©us
 
	m°©us
;

83 } 
	gùv6_íåõs
[] = {

84 { "::", { 0, 0, 0, 0, }, 
CANONICAL
 },

85 { "0:0:0:0:0:0:0:0", { 0, 0, 0, 0, }, 
NORMAL
 },

86 { "::1", { 0, 0, 0, 1, }, 
CANONICAL
 },

87 { "::1.2.3.4", { 0, 0, 0, 0x01020304, }, 
CANONICAL
 },

88 { "ffff:1::", { 0xffff0001u, 0, 0, 0, }, 
CANONICAL
 },

89 { "ffff:0000::", { 0xffff0000u, 0, 0, 0, }, 
NORMAL
 },

90 { "ffff::1234", { 0xffff0000u, 0, 0, 0x1234, }, 
CANONICAL
 },

91 { "0102::1.2.3.4", {0x01020000u, 0, 0, 0x01020304u }, 
NORMAL
 },

92 { "::9:c0a8:1:1", { 0, 0, 0x0009c0a8u, 0x00010001u }, 
CANONICAL
 },

93 { "::ffff:1.2.3.4", { 0, 0, 0x000ffffu, 0x01020304u }, 
CANONICAL
 },

94 { "FFFF::", { 0xffff0000u, 0, 0, 0 }, 
NORMAL
 },

95 { "foob¨.", { 0, 0, 0, 0 }, 
BAD
 },

96 { "foob¨", { 0, 0, 0, 0 }, 
BAD
 },

97 { "fo:ob¨", { 0, 0, 0, 0 }, 
BAD
 },

98 { "ffff", { 0, 0, 0, 0 }, 
BAD
 },

99 { "fffff::", { 0, 0, 0, 0 }, 
BAD
 },

100 { "fffff::", { 0, 0, 0, 0 }, 
BAD
 },

101 { "::1.0.1.1000", { 0, 0, 0, 0 }, 
BAD
 },

102 { "1:2:33333:4::", { 0, 0, 0, 0 }, 
BAD
 },

103 { "1:2:3:4:5:6:7:8:9", { 0, 0, 0, 0 }, 
BAD
 },

104 { "1::2::3", { 0, 0, 0, 0 }, 
BAD
 },

105 { ":::1", { 0, 0, 0, 0 }, 
BAD
 },

106 { 
NULL
, { 0, 0, 0, 0, }, 
BAD
 },

110 
	$ªgªss_ùv4_∑r£
(*
±r
)

112 
i
;

113 
i
 = 0; 
ùv4_íåõs
[i].
addr
; ++i) {

114 
wrôãn
[128];

115 
ùv4_íåy
 *
ít
 = &
ùv4_íåõs
[
i
];

116 
ö_addr
 
ö
;

117 
r
;

118 
r
 = 
	`evutû_öë_±⁄
(
AF_INET
, 
ít
->
addr
, &
ö
);

119 i‡(
r
 == 0) {

120 i‡(
ít
->
°©us
 !
BAD
) {

121 
	`TT_FAIL
(("%s didÇotÖarse, but it'sá goodáddress!",

122 
ít
->
addr
));

126 i‡(
ít
->
°©us
 =
BAD
) {

127 
	`TT_FAIL
(("%†∑r£d, buàwêex≥˘edá¿îr‹", 
ít
->
addr
));

130 i‡(
	`¡ohl
(
ö
.
s_addr
Ë!
ít
->
ªs
) {

131 
	`TT_FAIL
(("%†∑r£dÅÿ%lx, buàwêex≥˘ed %lx", 
ít
->
addr
,

132 ()
	`¡ohl
(
ö
.
s_addr
),

133 ()
ít
->
ªs
));

136 i‡(
ít
->
°©us
 =
CANONICAL
) {

137 c⁄° *
w
 = 
	`evutû_öë_¡›
(
AF_INET
, &
ö
, 
wrôãn
,

138 (
wrôãn
));

139 i‡(!
w
) {

140 
	`TT_FAIL
(("TrõdÅÿwrôêouà%s; gŸ NULL.", 
ít
->
addr
));

143 i‡(
	`°rcmp
(
wrôãn
, 
ít
->
addr
)) {

144 
	`TT_FAIL
(("TriedÅo write out %s; got %s",

145 
ít
->
addr
, 
wrôãn
));

152 
	}
}

155 
	$ªgªss_ùv6_∑r£
(*
±r
)

157 #ifde‡
AF_INET6


158 
i
, 
j
;

160 
i
 = 0; 
ùv6_íåõs
[i].
addr
; ++i) {

161 
wrôãn
[128];

162 
ùv6_íåy
 *
ít
 = &
ùv6_íåõs
[
i
];

163 
ö6_addr
 
ö6
;

164 
r
;

165 
r
 = 
	`evutû_öë_±⁄
(
AF_INET6
, 
ít
->
addr
, &
ö6
);

166 i‡(
r
 == 0) {

167 i‡(
ít
->
°©us
 !
BAD
)

168 
	`TT_FAIL
(("%s didÇotÖarse, but it'sá goodáddress!",

169 
ít
->
addr
));

172 i‡(
ít
->
°©us
 =
BAD
) {

173 
	`TT_FAIL
(("%†∑r£d, buàwêex≥˘edá¿îr‹", 
ít
->
addr
));

176 
j
 = 0; j < 4; ++j) {

178 
ev_uöt32_t
 
u
 =

179 (
ö6
.
s6_addr
[
j
*4 ] << 24) |

180 (
ö6
.
s6_addr
[
j
*4+1] << 16) |

181 (
ö6
.
s6_addr
[
j
*4+2] << 8) |

182 (
ö6
.
s6_addr
[
j
*4+3]);

183 i‡(
u
 !
ít
->
ªs
[
j
]) {

184 
	`TT_FAIL
(("%†didÇŸÖ¨£á†ex≥˘ed.", 
ít
->
addr
));

188 i‡(
ít
->
°©us
 =
CANONICAL
) {

189 c⁄° *
w
 = 
	`evutû_öë_¡›
(
AF_INET6
, &
ö6
, 
wrôãn
,

190 (
wrôãn
));

191 i‡(!
w
) {

192 
	`TT_FAIL
(("TrõdÅÿwrôêouà%s; gŸ NULL.", 
ít
->
addr
));

195 i‡(
	`°rcmp
(
wrôãn
, 
ít
->
addr
)) {

196 
	`TT_FAIL
(("TrõdÅÿwrôêouà%s; gŸ %s", 
ít
->
addr
, 
wrôãn
));

203 
	`TT_BLATHER
(("Skipping IPv6áddressÖarsing."));

205 
	}
}

207 
	sß_p‹t_ít
 {

208 c⁄° *
	m∑r£
;

209 
	mßÁmûy
;

210 c⁄° *
	maddr
;

211 
	mp‹t
;

212 } 
	gß_p‹t_íts
[] = {

213 { "[ffff::1]:1000", 
AF_INET6
, "ffff::1", 1000 },

214 { "[ffff::1]", 
AF_INET6
, "ffff::1", 0 },

215 { "[ffff::1", 0, 
NULL
, 0 },

216 { "[ffff::1]:65599", 0, 
NULL
, 0 },

217 { "[ffff::1]:0", 0, 
NULL
, 0 },

218 { "[ffff::1]:-1", 0, 
NULL
, 0 },

219 { "::1", 
AF_INET6
, "::1", 0 },

220 { "1:2::1", 
AF_INET6
, "1:2::1", 0 },

221 { "192.168.0.1:50", 
AF_INET
, "192.168.0.1", 50 },

222 { "1.2.3.4", 
AF_INET
, "1.2.3.4", 0 },

223 { 
NULL
, 0, NULL, 0 },

227 
	$ªgªss_sockaddr_p‹t_∑r£
(*
±r
)

229 
sockaddr_°‹age
 
ss
;

230 
i
, 
r
;

232 
i
 = 0; 
ß_p‹t_íts
[i].
∑r£
; ++i) {

233 
ß_p‹t_ít
 *
ít
 = &
ß_p‹t_íts
[
i
];

234 
Àn
 = (
ss
);

235 
	`mem£t
(&
ss
, 0, (ss));

236 
r
 = 
	`evutû_∑r£_sockaddr_p‹t
(
ít
->
∑r£
, (
sockaddr
*)&
ss
, &
Àn
);

237 i‡(
r
 < 0) {

238 i‡(
ít
->
ßÁmûy
)

239 
	`TT_FAIL
(("Couldn'à∑r£ %s!", 
ít
->
∑r£
));

241 } i‡(! 
ít
->
ßÁmûy
) {

242 
	`TT_FAIL
(("Shouldn'àhavêbì¿abÀÅÿ∑r£ %s!", 
ít
->
∑r£
));

245 i‡(
ít
->
ßÁmûy
 =
AF_INET
) {

246 
sockaddr_ö
 
sö
;

247 
	`mem£t
(&
sö
, 0, (sin));

248 #ifde‡
_EVENT_HAVE_STRUCT_SOCKADDR_IN_SIN_LEN


249 
sö
.
sö_Àn
 = (sin);

251 
sö
.
sö_Ámûy
 = 
AF_INET
;

252 
sö
.
sö_p‹t
 = 
	`ht⁄s
(
ít
->
p‹t
);

253 
r
 = 
	`evutû_öë_±⁄
(
AF_INET
, 
ít
->
addr
, &
sö
.
sö_addr
);

254 i‡(1 !
r
) {

255 
	`TT_FAIL
(("Couldn'à∑r£ ipv4Å¨gë %s.", 
ít
->
addr
));

256 } i‡(
	`memcmp
(&
sö
, &
ss
, (sin))) {

257 
	`TT_FAIL
(("P¨£ f‹ %†wa†nŸá†ex≥˘ed.", 
ít
->
∑r£
));

258 } i‡(
Àn
 !(
sö
)) {

259 
	`TT_FAIL
(("Lígth f‹ %†nŸá†ex≥˘ed.",
ít
->
∑r£
));

262 
sockaddr_ö6
 
sö6
;

263 
	`mem£t
(&
sö6
, 0, (sin6));

264 #ifde‡
_EVENT_HAVE_STRUCT_SOCKADDR_IN6_SIN6_LEN


265 
sö6
.
sö6_Àn
 = (sin6);

267 
sö6
.
sö6_Ámûy
 = 
AF_INET6
;

268 
sö6
.
sö6_p‹t
 = 
	`ht⁄s
(
ít
->
p‹t
);

269 
r
 = 
	`evutû_öë_±⁄
(
AF_INET6
, 
ít
->
addr
, &
sö6
.
sö6_addr
);

270 i‡(1 !
r
) {

271 
	`TT_FAIL
(("Couldn'à∑r£ ipv6Å¨gë %s.", 
ít
->
addr
));

272 } i‡(
	`memcmp
(&
sö6
, &
ss
, (sin6))) {

273 
	`TT_FAIL
(("P¨£ f‹ %†wa†nŸá†ex≥˘ed.", 
ít
->
∑r£
));

274 } i‡(
Àn
 !(
sö6
)) {

275 
	`TT_FAIL
(("Lígth f‹ %†nŸá†ex≥˘ed.",
ít
->
∑r£
));

279 
	}
}

283 
	$ªgªss_sockaddr_p‹t_f‹m©
(*
±r
)

285 
sockaddr_°‹age
 
ss
;

286 
Àn
;

287 c⁄° *
˝
;

288 
cbuf
[128];

289 
r
;

291 
Àn
 = (
ss
);

292 
r
 = 
	`evutû_∑r£_sockaddr_p‹t
("192.168.1.1:80",

293 (
sockaddr
*)&
ss
, &
Àn
);

294 
	`â_öt_›
(
r
,==,0);

295 
˝
 = 
	`evutû_f‹m©_sockaddr_p‹t
(

296 (
sockaddr
*)&
ss
, 
cbuf
, (cbuf));

297 
	`â_±r_›
(
˝
,==,
cbuf
);

298 
	`â_°r_›
(
˝
,==,"192.168.1.1:80");

300 
Àn
 = (
ss
);

301 
r
 = 
	`evutû_∑r£_sockaddr_p‹t
("[ff00::8010]:999",

302 (
sockaddr
*)&
ss
, &
Àn
);

303 
	`â_öt_›
(
r
,==,0);

304 
˝
 = 
	`evutû_f‹m©_sockaddr_p‹t
(

305 (
sockaddr
*)&
ss
, 
cbuf
, (cbuf));

306 
	`â_±r_›
(
˝
,==,
cbuf
);

307 
	`â_°r_›
(
˝
,==,"[ff00::8010]:999");

309 
ss
.
ss_Ámûy
=99;

310 
˝
 = 
	`evutû_f‹m©_sockaddr_p‹t
(

311 (
sockaddr
*)&
ss
, 
cbuf
, (cbuf));

312 
	`â_±r_›
(
˝
,==,
cbuf
);

313 
	`â_°r_›
(
˝
,==,"<addr with socktype 99>");

314 
íd
:

316 
	}
}

318 
	sß_¥ed_ít
 {

319 c⁄° *
	m∑r£
;

321 
	mis_lo›back
;

322 } 
	gß_¥ed_íåõs
[] = {

333 { 
NULL
, 0 },

338 
	$ã°_evutû_sockaddr_¥ediˇãs
(*
±r
)

340 
sockaddr_°‹age
 
ss
;

341 
r
, 
i
;

343 
i
=0; 
ß_¥ed_íåõs
[i].
∑r£
; ++i) {

344 
ß_¥ed_ít
 *
ít
 = &
ß_¥ed_íåõs
[
i
];

345 
Àn
 = (
ss
);

347 
r
 = 
	`evutû_∑r£_sockaddr_p‹t
(
ít
->
∑r£
, (
sockaddr
*)&
ss
, &
Àn
);

349 i‡(
r
<0) {

350 
	`TT_FAIL
(("Couldn'à∑r£ %s!", 
ít
->
∑r£
));

355 i‡(
ít
->
is_lo›back
 !
	`evutû_sockaddr_is_lo›back
((
sockaddr
*)&
ss
)) {

356 
	`TT_FAIL
(("evutil_sockaddr_loopback(%s)ÇotásÉxpected",

357 
ít
->
∑r£
));

360 
	}
}

363 
	$ã°_evutû_°πﬁl
(*
±r
)

365 c⁄° *
s
;

366 *
íd±r
;

368 
	`â_w™t
(
	`evutû_°πﬁl
("5000000000", 
NULL
, 10) ==

369 ((
ev_öt64_t
)5000000)*1000);

370 
	`â_w™t
(
	`evutû_°πﬁl
("-5000000000", 
NULL
, 10) ==

371 ((
ev_öt64_t
)5000000)*-1000);

372 
s
 = " 99999stuff";

373 
	`â_w™t
(
	`evutû_°πﬁl
(
s
, &
íd±r
, 10Ë=(
ev_öt64_t
)99999);

374 
	`â_w™t
(
íd±r
 =
s
+6);

375 
	`â_w™t
(
	`evutû_°πﬁl
("foo", 
NULL
, 10) == 0);

376 
	}
}

379 
	$ã°_evutû_¢¥ötf
(*
±r
)

381 
buf
[16];

382 
r
;

383 
ev_uöt64_t
 
u64
 = ((ev_uint64_t)1000000000)*200;

384 
ev_öt64_t
 
i64
 = -1 * (ev_öt64_tË
u64
;

385 
size_t
 
size
 = 8000;

386 
ev_ssize_t
 
ssize
 = -9000;

388 
r
 = 
	`evutû_¢¥ötf
(
buf
, (buf), "%d %d", 50, 100);

389 
	`â_°r_›
(
buf
, ==, "50 100");

390 
	`â_öt_›
(
r
, ==, 6);

392 
r
 = 
	`evutû_¢¥ötf
(
buf
, (buf), "longish %d", 1234567890);

393 
	`â_°r_›
(
buf
, ==, "longish 1234567");

394 
	`â_öt_›
(
r
, ==, 18);

396 
r
 = 
	`evutû_¢¥ötf
(
buf
, (buf), 
EV_U64_FMT
, 
	`EV_U64_ARG
(
u64
));

397 
	`â_°r_›
(
buf
, ==, "200000000000");

398 
	`â_öt_›
(
r
, ==, 12);

400 
r
 = 
	`evutû_¢¥ötf
(
buf
, (buf), 
EV_I64_FMT
, 
	`EV_I64_ARG
(
i64
));

401 
	`â_°r_›
(
buf
, ==, "-200000000000");

402 
	`â_öt_›
(
r
, ==, 13);

404 
r
 = 
	`evutû_¢¥ötf
(
buf
, (buf), 
EV_SIZE_FMT
" "
EV_SSIZE_FMT
,

405 
	`EV_SIZE_ARG
(
size
), 
	`EV_SSIZE_ARG
(
ssize
));

406 
	`â_°r_›
(
buf
, ==, "8000 -9000");

407 
	`â_öt_›
(
r
, ==, 10);

409 
íd
:

411 
	}
}

414 
	$ã°_evutû_ˇ£cmp
(*
±r
)

416 
	`â_öt_›
(
	`evutû_ascii_°rˇ£cmp
("ABC", "ABC"), ==, 0);

417 
	`â_öt_›
(
	`evutû_ascii_°rˇ£cmp
("ABC", "abc"), ==, 0);

418 
	`â_öt_›
(
	`evutû_ascii_°rˇ£cmp
("ABC", "abcd"), <, 0);

419 
	`â_öt_›
(
	`evutû_ascii_°rˇ£cmp
("ABC", "abb"), >, 0);

420 
	`â_öt_›
(
	`evutû_ascii_°rˇ£cmp
("ABCd", "abc"), >, 0);

422 
	`â_öt_›
(
	`evutû_ascii_°∫ˇ£cmp
("Libevent", "LibEvEnT", 100), ==, 0);

423 
	`â_öt_›
(
	`evutû_ascii_°∫ˇ£cmp
("Libevent", "LibEvEnT", 4), ==, 0);

424 
	`â_öt_›
(
	`evutû_ascii_°∫ˇ£cmp
("Libevent", "LibEXXXX", 4), ==, 0);

425 
	`â_öt_›
(
	`evutû_ascii_°∫ˇ£cmp
("Libevent", "LibE", 4), ==, 0);

426 
	`â_öt_›
(
	`evutû_ascii_°∫ˇ£cmp
("Libe", "LibEvEnT", 4), ==, 0);

427 
	`â_öt_›
(
	`evutû_ascii_°∫ˇ£cmp
("Lib", "LibEvEnT", 4), <, 0);

428 
	`â_öt_›
(
	`evutû_ascii_°∫ˇ£cmp
("abc", "def", 99), <, 0);

429 
	`â_öt_›
(
	`evutû_ascii_°∫ˇ£cmp
("Z", "qrst", 1), >, 0);

430 
íd
:

432 
	}
}

434 
	glog£v
 = 0;

435 *
	glogmsg
 = 
NULL
;

438 
	$log‚
(
£vîôy
, c⁄° *
msg
)

440 
log£v
 = 
£vîôy
;

441 
	`â_w™t
(
msg
);

442 i‡(
msg
) {

443 i‡(
logmsg
)

444 
	`‰ì
(
logmsg
);

445 
logmsg
 = 
	`°rdup
(
msg
);

447 
	}
}

449 
	gÁèl_w™t_£vîôy
 = 0;

450 c⁄° *
	gÁèl_w™t_mesßge
 = 
NULL
;

452 
	$Áèl‚
(
exôcode
)

454 i‡(
log£v
 !
Áèl_w™t_£vîôy
 ||

455 !
logmsg
 ||

456 
	`°rcmp
(
logmsg
, 
Áèl_w™t_mesßge
))

457 
	`exô
(0);

459 
	`exô
(
exôcode
);

460 
	}
}

462 #i‚de‡
WIN32


463 
	#CAN_CHECK_ERR


	)

465 
check_îr‹_loggög
((*
‚
)(), 
w™ãxôcode
,

466 
w™t£vîôy
, c⁄° *
w™tmsg
)

468 
pid_t
 
pid
;

469 
°©us
 = 0, 
exôcode
;

470 
Áèl_w™t_£vîôy
 = 
w™t£vîôy
;

471 
Áèl_w™t_mesßge
 = 
w™tmsg
;

472 i‡((
pid
 = 
	`ªgªss_f‹k
()) == 0) {

474 
	`‚
();

475 
	`exô
(0);

477 
	`waô
(&
°©us
);

478 
exôcode
 = 
	`WEXITSTATUS
(
°©us
);

479 
	`â_öt_›
(
w™ãxôcode
, ==, 
exôcode
);

481 
íd
:

483 
	}
}

486 
	$îrx_‚
()

488 
	`evít_îrx
(2, "FatalÉrror;Åoo many kumquats (%d)", 5);

489 
	}
}

492 
	$îr_‚
()

494 
î∫o
 = 
ENOENT
;

495 
	`evít_îr
(5,"Couldn't open %s", "/very/bad/file");

496 
	}
}

499 
	$sock_îr_‚
()

501 
evutû_sockë_t
 
fd
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

502 #ifde‡
WIN32


503 
	`EVUTIL_SET_SOCKET_ERROR
(
WSAEWOULDBLOCK
);

505 
î∫o
 = 
EAGAIN
;

507 
	`evít_sock_îr
(20, 
fd
, "Unhappy socket");

508 
	}
}

512 
	$ã°_evutû_log
(*
±r
)

514 
evutû_sockë_t
 
fd
 = -1;

515 
buf
[128];

517 
	`evít_£t_log_ˇŒback
(
log‚
);

518 
	`evít_£t_Áèl_ˇŒback
(
Áèl‚
);

519 
	#RESET
() do { \

520 
log£v
 = 0; \

521 i‡(
logmsg
Ë
	`‰ì
(logmsg); \

522 
logmsg
 = 
NULL
; \

523 } 0)

	)

524 
	#LOGEQ
(
£v
,
msg
) do { \

525 
	`â_öt_›
(
log£v
,==,
£v
); \

526 
	`â_as£π
(
logmsg
 !
NULL
); \

527 
	`â_°r_›
(
logmsg
,==,
msg
); \

528 } 0)

	)

530 #ifde‡
CAN_CHECK_ERR


535 
	`check_îr‹_loggög
(
îrx_‚
, 2, 
_EVENT_LOG_ERR
,

537 
	`RESET
();

540 
	`evít_w¨nx
("FarÅoo many %s (%d)", "wombats", 99);

541 
	`LOGEQ
(
_EVENT_LOG_WARN
, "FarÅoo many wombats (99)");

542 
	`RESET
();

544 
	`evít_msgx
("ConnectingÜimeÅo coconut");

545 
	`LOGEQ
(
_EVENT_LOG_MSG
, "ConnectingÜimeÅo coconut");

546 
	`RESET
();

548 
	`evít_debug
(("A millisecondÖassed! We shouldÜogÅhat!"));

549 #ifde‡
USE_DEBUG


550 
	`LOGEQ
(
_EVENT_LOG_DEBUG
, "A millisecondÖassed! We shouldÜogÅhat!");

552 
	`â_öt_›
(
log£v
,==,0);

553 
	`â_±r_›
(
logmsg
,==,
NULL
);

555 
	`RESET
();

558 
î∫o
 = 
ENOENT
;

559 
	`evít_w¨n
("Couldn't open %s", "/bad/file");

560 
	`evutû_¢¥ötf
(
buf
, (buf),

561 "Couldn'à›í /bad/fûe: %s",
	`°ªº‹
(
ENOENT
));

562 
	`LOGEQ
(
_EVENT_LOG_WARN
,
buf
);

563 
	`RESET
();

565 #ifde‡
CAN_CHECK_ERR


566 
	`evutû_¢¥ötf
(
buf
, (buf),

567 "Couldn'à›í /vîy/bad/fûe: %s",
	`°ªº‹
(
ENOENT
));

568 
	`check_îr‹_loggög
(
îr_‚
, 5, 
_EVENT_LOG_ERR
, 
buf
);

569 
	`RESET
();

573 
fd
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

574 #ifde‡
WIN32


575 
	`evutû_¢¥ötf
(
buf
, (buf),

577 
	`evutû_sockë_îr‹_to_°rög
(
WSAEWOULDBLOCK
));

578 
	`EVUTIL_SET_SOCKET_ERROR
(
WSAEWOULDBLOCK
);

580 
	`evutû_¢¥ötf
(
buf
, (buf),

581 "Unh≠py sockë: %s", 
	`°ªº‹
(
EAGAIN
));

582 
î∫o
 = 
EAGAIN
;

584 
	`evít_sock_w¨n
(
fd
, "Unhappy socket");

585 
	`LOGEQ
(
_EVENT_LOG_WARN
, 
buf
);

586 
	`RESET
();

588 #ifde‡
CAN_CHECK_ERR


589 
	`check_îr‹_loggög
(
sock_îr_‚
, 20, 
_EVENT_LOG_ERR
, 
buf
);

590 
	`RESET
();

593 #unde‡
RESET


594 #unde‡
LOGEQ


595 
íd
:

596 i‡(
logmsg
)

597 
	`‰ì
(
logmsg
);

598 i‡(
fd
 >= 0)

599 
	`evutû_˛o£sockë
(
fd
);

600 
	}
}

603 
	$ã°_evutû_°æ˝y
(*
¨g
)

605 
buf
[8];

608 
	`â_öt_›
(5, ==, 
	`°æ˝y
(
buf
, "Hello", (buf)));

609 
	`â_°r_›
(
buf
, ==, "Hello");

612 
	`â_öt_›
(13, ==, 
	`°æ˝y
(
buf
, "pentasyllabic", (buf)));

613 
	`â_°r_›
(
buf
, ==, "pentasy");

616 
	`â_öt_›
(8, ==, 
	`°æ˝y
(
buf
, "overlong", (buf)));

617 
	`â_°r_›
(
buf
, ==, "overlon");

618 
íd
:

620 
	}
}

622 
	sexam∂e_°ru˘
 {

623 c⁄° *
	ma
;

624 c⁄° *
	mb
;

625 
	mc
;

629 
	$ã°_evutû_upˇ°
(*
¨g
)

631 
exam∂e_°ru˘
 
es1
;

632 c⁄° **
˝
;

633 
es1
.
a
 = "World";

634 
es1
.
b
 = "Hello";

635 
es1
.
c
 = -99;

637 
	`â_öt_›
(
	`evutû_off£tof
(
exam∂e_°ru˘
, 
b
), ==, (*));

639 
˝
 = &
es1
.
b
;

640 
	`â_±r_›
(
	`EVUTIL_UPCAST
(
˝
, 
exam∂e_°ru˘
, 
b
), ==, &
es1
);

642 
íd
:

644 
	}
}

647 
	$ã°_evutû_öãgîs
(*
¨g
)

649 
ev_öt64_t
 
i64
;

650 
ev_uöt64_t
 
u64
;

651 
ev_öt32_t
 
i32
;

652 
ev_uöt32_t
 
u32
;

653 
ev_öt16_t
 
i16
;

654 
ev_uöt16_t
 
u16
;

655 
ev_öt8_t
 
i8
;

656 
ev_uöt8_t
 
u8
;

658 *
±r
;

659 
ev_öçå_t
 
ùå
;

660 
ev_uöçå_t
 
u±r
;

662 
ev_ssize_t
 
ssize
;

664 
	`â_öt_›
((
u64
), ==, 8);

665 
	`â_öt_›
((
i64
), ==, 8);

666 
	`â_öt_›
((
u32
), ==, 4);

667 
	`â_öt_›
((
i32
), ==, 4);

668 
	`â_öt_›
((
u16
), ==, 2);

669 
	`â_öt_›
((
i16
), ==, 2);

670 
	`â_öt_›
((
u8
), ==, 1);

671 
	`â_öt_›
((
i8
), ==, 1);

673 
	`â_öt_›
((
ev_ssize_t
), ==, (
size_t
));

674 
	`â_öt_›
((
ev_öçå_t
), >=, (*));

675 
	`â_öt_›
((
ev_uöçå_t
), ==, (
öçå_t
));

677 
u64
 = 1000000000;

678 
u64
 *= 1000000000;

679 
	`â_as£π
(
u64
 / 1000000000 == 1000000000);

680 
i64
 = -1000000000;

681 
i64
 *= 1000000000;

682 
	`â_as£π
(
i64
 / 1000000000 == -1000000000);

684 
u64
 = 
EV_UINT64_MAX
;

685 
i64
 = 
EV_INT64_MAX
;

686 
	`â_as£π
(
u64
 > 0);

687 
	`â_as£π
(
i64
 > 0);

688 
u64
++;

689 
i64
++;

690 
	`â_as£π
(
u64
 == 0);

691 
	`â_as£π
(
i64
 =
EV_INT64_MIN
);

692 
	`â_as£π
(
i64
 < 0);

694 
u32
 = 
EV_UINT32_MAX
;

695 
i32
 = 
EV_INT32_MAX
;

696 
	`â_as£π
(
u32
 > 0);

697 
	`â_as£π
(
i32
 > 0);

698 
u32
++;

699 
i32
++;

700 
	`â_as£π
(
u32
 == 0);

701 
	`â_as£π
(
i32
 =
EV_INT32_MIN
);

702 
	`â_as£π
(
i32
 < 0);

704 
u16
 = 
EV_UINT16_MAX
;

705 
i16
 = 
EV_INT16_MAX
;

706 
	`â_as£π
(
u16
 > 0);

707 
	`â_as£π
(
i16
 > 0);

708 
u16
++;

709 
i16
++;

710 
	`â_as£π
(
u16
 == 0);

711 
	`â_as£π
(
i16
 =
EV_INT16_MIN
);

712 
	`â_as£π
(
i16
 < 0);

714 
u8
 = 
EV_UINT8_MAX
;

715 
i8
 = 
EV_INT8_MAX
;

716 
	`â_as£π
(
u8
 > 0);

717 
	`â_as£π
(
i8
 > 0);

718 
u8
++;

719 
i8
++;

720 
	`â_as£π
(
u8
 == 0);

721 
	`â_as£π
(
i8
 =
EV_INT8_MIN
);

722 
	`â_as£π
(
i8
 < 0);

724 
ssize
 = 
EV_SSIZE_MAX
;

725 
	`â_as£π
(
ssize
 > 0);

726 
ssize
++;

727 
	`â_as£π
(
ssize
 < 0);

728 
	`â_as£π
(
ssize
 =
EV_SSIZE_MIN
);

730 
±r
 = &
ssize
;

731 
ùå
 = (
ev_öçå_t
)
±r
;

732 
u±r
 = (
ev_uöçå_t
)
±r
;

733 
±r
 = (*)
ùå
;

734 
	`â_as£π
(
±r
 =&
ssize
);

735 
±r
 = (*)
u±r
;

736 
	`â_as£π
(
±r
 =&
ssize
);

738 
ùå
 = -1;

739 
	`â_as£π
(
ùå
 < 0);

740 
íd
:

742 
	}
}

744 
evutû_addröfo
 *

745 
	$ai_föd_by_Ámûy
(
evutû_addröfo
 *
ai
, 
Ámûy
)

747 
ai
) {

748 i‡(
ai
->
ai_Ámûy
 =
Ámûy
)

749  
ai
;

750 
ai
 =ái->
ai_√xt
;

752  
NULL
;

753 
	}
}

755 
evutû_addröfo
 *

756 
	$ai_föd_by_¥Ÿocﬁ
(
evutû_addröfo
 *
ai
, 
¥Ÿocﬁ
)

758 
ai
) {

759 i‡(
ai
->
ai_¥Ÿocﬁ
 =
¥Ÿocﬁ
)

760  
ai
;

761 
ai
 =ái->
ai_√xt
;

763  
NULL
;

764 
	}
}

768 
	$_ã°_ai_eq
(c⁄° 
evutû_addröfo
 *
ai
, c⁄° *
sockaddr_p‹t
,

769 
sockty≥
, 
¥Ÿocﬁ
, 
löe
)

771 
sockaddr_°‹age
 
ss
;

772 
¶í
 = (
ss
);

773 
gŸp‹t
;

774 
buf
[128];

775 
	`mem£t
(&
ss
, 0, (ss));

776 i‡(
sockty≥
 > 0)

777 
	`â_öt_›
(
ai
->
ai_sockty≥
, ==, 
sockty≥
);

778 i‡(
¥Ÿocﬁ
 > 0)

779 
	`â_öt_›
(
ai
->
ai_¥Ÿocﬁ
, ==, 
¥Ÿocﬁ
);

781 i‡(
	`evutû_∑r£_sockaddr_p‹t
(

782 
sockaddr_p‹t
, (
sockaddr
*)&
ss
, &
¶í
)<0) {

783 
	`TT_FAIL
(("Couldn'tÖarseÉxpectedáddress %s onÜine %d",

784 
sockaddr_p‹t
, 
löe
));

787 i‡(
ai
->
ai_Ámûy
 !
ss
.
ss_Ámûy
) {

788 
	`TT_FAIL
(("Address family %d didÇot match %d onÜine %d",

789 
ai
->
ai_Ámûy
, 
ss
.
ss_Ámûy
, 
löe
));

792 i‡(
ai
->
ai_addr
->
ß_Ámûy
 =
AF_INET
) {

793 
sockaddr_ö
 *
sö
 = (sockaddr_ö*)
ai
->
ai_addr
;

794 
	`evutû_öë_¡›
(
AF_INET
, &
sö
->
sö_addr
, 
buf
, (buf));

795 
gŸp‹t
 = 
	`¡ohs
(
sö
->
sö_p‹t
);

796 i‡(
ai
->
ai_addæí
 !(
sockaddr_ö
)) {

797 
	`TT_FAIL
(("Add∏sizêmism©ch o¿löê%d", 
löe
));

801 
sockaddr_ö6
 *
sö6
 = (sockaddr_ö6*)
ai
->
ai_addr
;

802 
	`evutû_öë_¡›
(
AF_INET6
, &
sö6
->
sö6_addr
, 
buf
, (buf));

803 
gŸp‹t
 = 
	`¡ohs
(
sö6
->
sö6_p‹t
);

804 i‡(
ai
->
ai_addæí
 !(
sockaddr_ö6
)) {

805 
	`TT_FAIL
(("Add∏sizêmism©ch o¿löê%d", 
löe
));

809 i‡(
	`evutû_sockaddr_cmp
(
ai
->
ai_addr
, (
sockaddr
*)&
ss
, 1)) {

810 
	`TT_FAIL
(("W™ãd %s, gŸ %s:%d o¿löê%d", 
sockaddr_p‹t
,

811 
buf
, 
gŸp‹t
, 
löe
));

814 
	`TT_BLATHER
(("W™ãd %s, gŸ %s:%d o¿löê%d", 
sockaddr_p‹t
,

815 
buf
, 
gŸp‹t
, 
löe
));

818 
íd
:

819 
	`TT_FAIL
(("Te° faûed o¿löê%d", 
löe
));

821 
	}
}

824 
	$ã°_evutû_ønd
(*
¨g
)

826 
buf1
[32];

827 
buf2
[32];

828 
cou¡s
[256];

829 
i
, 
j
, 
k
, 
n
=0;

831 
	`mem£t
(
buf2
, 0, (buf2));

832 
	`mem£t
(
cou¡s
, 0, (counts));

834 
k
=0;k<32;++k) {

837 
°¨çoöt
 = 
	`_evutû_wókønd
() % 4;

838 
ídpoöt
 = 32 - (
	`_evutû_wókønd
() % 4);

840 
	`mem£t
(
buf2
, 0, (buf2));

845 
i
=0;i<8;++i) {

846 
	`mem£t
(
buf1
, 0, (buf1));

847 
	`evutû_£cuª_∫g_gë_byãs
(
buf1
 + 
°¨çoöt
,

848 
ídpoöt
-
°¨çoöt
);

849 
n
 +
ídpoöt
 - 
°¨çoöt
;

850 
j
=0; j<32; ++j) {

851 i‡(
j
 >
°¨çoöt
 && j < 
ídpoöt
) {

852 
buf2
[
j
] |
buf1
[j];

853 ++
cou¡s
[()
buf1
[
j
]];

855 
	`â_as£π
(
buf1
[
j
] == 0);

856 
	`â_öt_›
(
buf1
[
j
], ==, 0);

864 
j
=
°¨çoöt
;j<
ídpoöt
;++j) {

865 
	`â_öt_›
(
buf2
[
j
], !=, 0);

870 
íd
:

872 
	}
}

875 
	$ã°_evutû_gëaddröfo
(*
¨g
)

877 
evutû_addröfo
 *
ai
 = 
NULL
, *
a
;

878 
evutû_addröfo
 
höts
;

880 
sockaddr_ö6
 *
sö6
;

881 
sockaddr_ö
 *
sö
;

882 
buf
[128];

883 c⁄° *
˝
;

884 
r
;

887 
	`mem£t
(&
höts
, 0, (hints));

888 
höts
.
ai_Ámûy
 = 
PF_UNSPEC
;

889 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

890 
r
 = 
	`evutû_gëaddröfo
("1.2.3.4", "8080", &
höts
, &
ai
);

891 
	`â_öt_›
(
r
, ==, 0);

892 
	`â_as£π
(
ai
);

893 
	`â_±r_›
(
ai
->
ai_√xt
, ==, 
NULL
);

894 
	`ã°_ai_eq
(
ai
, "1.2.3.4:8080", 
SOCK_STREAM
, 
IPPROTO_TCP
);

895 
	`evutû_‰ìaddröfo
(
ai
);

896 
ai
 = 
NULL
;

898 
	`mem£t
(&
höts
, 0, (hints));

899 
höts
.
ai_Ámûy
 = 
PF_UNSPEC
;

900 
höts
.
ai_¥Ÿocﬁ
 = 
IPPROTO_UDP
;

901 
r
 = 
	`evutû_gëaddröfo
("1001:b0b::f00f", "4321", &
höts
, &
ai
);

902 
	`â_öt_›
(
r
, ==, 0);

903 
	`â_as£π
(
ai
);

904 
	`â_±r_›
(
ai
->
ai_√xt
, ==, 
NULL
);

905 
	`ã°_ai_eq
(
ai
, "[1001:b0b::f00f]:4321", 
SOCK_DGRAM
, 
IPPROTO_UDP
);

906 
	`evutû_‰ìaddröfo
(
ai
);

907 
ai
 = 
NULL
;

910 
	`mem£t
(&
höts
, 0, (hints));

911 
höts
.
ai_Ámûy
 = 
PF_INET
;

912 
höts
.
ai_¥Ÿocﬁ
 = 
IPPROTO_TCP
;

913 
höts
.
ai_Êags
 = 
EVUTIL_AI_PASSIVE
;

914 
r
 = 
	`evutû_gëaddröfo
(
NULL
, "9999", &
höts
, &
ai
);

915 
	`â_öt_›
(
r
,==,0);

916 
	`â_as£π
(
ai
);

917 
	`â_±r_›
(
ai
->
ai_√xt
, ==, 
NULL
);

918 
	`ã°_ai_eq
(
ai
, "0.0.0.0:9999", 
SOCK_STREAM
, 
IPPROTO_TCP
);

919 
	`evutû_‰ìaddröfo
(
ai
);

920 
ai
 = 
NULL
;

921 
höts
.
ai_Êags
 = 0;

922 
r
 = 
	`evutû_gëaddröfo
(
NULL
, "9998", &
höts
, &
ai
);

923 
	`â_as£π
(
ai
);

924 
	`â_öt_›
(
r
,==,0);

925 
	`ã°_ai_eq
(
ai
, "127.0.0.1:9998", 
SOCK_STREAM
, 
IPPROTO_TCP
);

926 
	`â_±r_›
(
ai
->
ai_√xt
, ==, 
NULL
);

927 
	`evutû_‰ìaddröfo
(
ai
);

928 
ai
 = 
NULL
;

930 
höts
.
ai_Êags
 = 0;

931 
höts
.
ai_Ámûy
 = 
PF_INET6
;

932 
r
 = 
	`evutû_gëaddröfo
(
NULL
, "9997", &
höts
, &
ai
);

933 
	`â_as£π
(
ai
);

934 
	`â_öt_›
(
r
,==,0);

935 
	`â_±r_›
(
ai
->
ai_√xt
, ==, 
NULL
);

936 
	`ã°_ai_eq
(
ai
, "[::1]:9997", 
SOCK_STREAM
, 
IPPROTO_TCP
);

937 
	`evutû_‰ìaddröfo
(
ai
);

938 
ai
 = 
NULL
;

940 
höts
.
ai_Êags
 = 
EVUTIL_AI_PASSIVE
;

941 
höts
.
ai_Ámûy
 = 
PF_INET6
;

942 
r
 = 
	`evutû_gëaddröfo
(
NULL
, "9996", &
höts
, &
ai
);

943 
	`â_as£π
(
ai
);

944 
	`â_öt_›
(
r
,==,0);

945 
	`â_±r_›
(
ai
->
ai_√xt
, ==, 
NULL
);

946 
	`ã°_ai_eq
(
ai
, "[::]:9996", 
SOCK_STREAM
, 
IPPROTO_TCP
);

947 
	`evutû_‰ìaddröfo
(
ai
);

948 
ai
 = 
NULL
;

951 
höts
.
ai_Ámûy
 = 
PF_UNSPEC
;

952 
r
 = 
	`evutû_gëaddröfo
(
NULL
, "9996", &
höts
, &
ai
);

953 
	`â_as£π
(
ai
);

954 
	`â_öt_›
(
r
,==,0);

955 
a
 = 
	`ai_föd_by_Ámûy
(
ai
, 
PF_INET6
);

956 
	`â_as£π
(
a
);

957 
	`ã°_ai_eq
(
a
, "[::]:9996", 
SOCK_STREAM
, 
IPPROTO_TCP
);

958 
a
 = 
	`ai_föd_by_Ámûy
(
ai
, 
PF_INET
);

959 
	`â_as£π
(
a
);

960 
	`ã°_ai_eq
(
a
, "0.0.0.0:9996", 
SOCK_STREAM
, 
IPPROTO_TCP
);

961 
	`evutû_‰ìaddröfo
(
ai
);

962 
ai
 = 
NULL
;

966 
	`mem£t
(&
höts
, 0, (hints));

967 
höts
.
ai_Ámûy
 = 
PF_UNSPEC
;

968 
höts
.
ai_Êags
 = 
EVUTIL_AI_NUMERICHOST
;

969 
r
 = 
	`evutû_gëaddröfo
("1.2.3.4", 
NULL
, &
höts
, &
ai
);

970 
	`â_öt_›
(
r
, ==, 0);

971 
a
 = 
	`ai_föd_by_¥Ÿocﬁ
(
ai
, 
IPPROTO_TCP
);

972 
	`â_as£π
(
a
);

973 
	`ã°_ai_eq
(
a
, "1.2.3.4", 
SOCK_STREAM
, 
IPPROTO_TCP
);

974 
a
 = 
	`ai_föd_by_¥Ÿocﬁ
(
ai
, 
IPPROTO_UDP
);

975 
	`â_as£π
(
a
);

976 
	`ã°_ai_eq
(
a
, "1.2.3.4", 
SOCK_DGRAM
, 
IPPROTO_UDP
);

977 
	`evutû_‰ìaddröfo
(
ai
);

978 
ai
 = 
NULL
;

981 
	`mem£t
(&
höts
, 0, (hints));

982 
höts
.
ai_Ámûy
 = 
PF_UNSPEC
;

983 
höts
.
ai_Êags
 = 
EVUTIL_AI_NUMERICHOST
;

984 
r
 = 
	`evutû_gëaddröfo
("www.googÀ.com", "80", &
höts
, &
ai
);

985 
	`â_öt_›
(
r
, ==, 
EVUTIL_EAI_NONAME
);

986 
	`â_±r_›
(
ai
, ==, 
NULL
);

989 
	`mem£t
(&
höts
, 0, (hints));

990 
höts
.
ai_Ámûy
 = 
PF_UNSPEC
;

991 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

992 
höts
.
ai_Êags
 = 
EVUTIL_AI_NUMERICSERV
;

993 
r
 = 
	`evutû_gëaddröfo
("1.2.3.4", "hâp", &
höts
, &
ai
);

994 
	`â_öt_›
(
r
,==,
EVUTIL_EAI_NONAME
);

997 
	`mem£t
(&
höts
, 0, (hints));

998 
höts
.
ai_Ámûy
 = 
PF_UNSPEC
;

999 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

1000 
r
 = 
	`evutû_gëaddröfo
("1.2.3.4", "hâp", &
höts
, &
ai
);

1001 i‡(
r
!=0) {

1002 
	`TT_DECLARE
("SKIP", ("Symbolic serviceÇames seem broken."));

1004 
	`â_as£π
(
ai
);

1005 
	`ã°_ai_eq
(
ai
, "1.2.3.4:80", 
SOCK_STREAM
, 
IPPROTO_TCP
);

1006 
	`evutû_‰ìaddröfo
(
ai
);

1007 
ai
 = 
NULL
;

1011 
	`mem£t
(&
höts
, 0, (hints));

1012 
höts
.
ai_Ámûy
 = 
PF_INET
;

1013 
höts
.
ai_¥Ÿocﬁ
 = 
IPPROTO_TCP
;

1014 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

1015 
r
 = 
	`evutû_gëaddröfo
("www.googÀ.com", "80", &
höts
, &
ai
);

1016 i‡(
r
 != 0) {

1017 
	`TT_DECLARE
("SKIP", ("Couldn'tÑesolve www.google.com"));

1019 
	`â_as£π
(
ai
);

1020 
	`â_öt_›
(
ai
->
ai_Ámûy
, ==, 
PF_INET
);

1021 
	`â_öt_›
(
ai
->
ai_¥Ÿocﬁ
, ==, 
IPPROTO_TCP
);

1022 
	`â_öt_›
(
ai
->
ai_sockty≥
, ==, 
SOCK_STREAM
);

1023 
	`â_öt_›
(
ai
->
ai_addæí
, ==, (
sockaddr_ö
));

1024 
sö
 = (
sockaddr_ö
*)
ai
->
ai_addr
;

1025 
	`â_öt_›
(
sö
->
sö_Ámûy
, ==, 
AF_INET
);

1026 
	`â_öt_›
(
sö
->
sö_p‹t
, ==, 
	`ht⁄s
(80));

1027 
	`â_öt_›
(
sö
->
sö_addr
.
s_addr
, !=, 0xffffffff);

1029 
˝
 = 
	`evutû_öë_¡›
(
AF_INET
, &
sö
->
sö_addr
, 
buf
, (buf));

1030 
	`TT_BLATHER
(("www.google.comÑesolvedÅo %s",

1031 
˝
?cp:"<unwriteable>"));

1032 
	`evutû_‰ìaddröfo
(
ai
);

1033 
ai
 = 
NULL
;

1036 
höts
.
ai_Ámûy
 = 
PF_INET6
;

1037 
r
 = 
	`evutû_gëaddröfo
("ùv6.googÀ.com", "80", &
höts
, &
ai
);

1038 i‡(
r
 != 0) {

1039 
	`TT_BLATHER
(("Couldn't doán ipv6Üookup for ipv6.google.com"));

1041 
	`â_as£π
(
ai
);

1042 
	`â_öt_›
(
ai
->
ai_Ámûy
, ==, 
PF_INET6
);

1043 
	`â_öt_›
(
ai
->
ai_addæí
, ==, (
sockaddr_ö6
));

1044 
sö6
 = (
sockaddr_ö6
*)
ai
->
ai_addr
;

1045 
	`â_öt_›
(
sö6
->
sö6_p‹t
, ==, 
	`ht⁄s
(80));

1047 
˝
 = 
	`evutû_öë_¡›
(
AF_INET6
, &
sö6
->
sö6_addr
, 
buf
,

1048 (
buf
));

1049 
	`TT_BLATHER
(("ipv6.google.comÑesolvedÅo %s",

1050 
˝
?cp:"<unwriteable>"));

1053 
íd
:

1054 i‡(
ai
)

1055 
	`evutû_‰ìaddröfo
(
ai
);

1056 
	}
}

1058 #ifde‡
WIN32


1060 
	$ã°_evutû_lﬂdsy¶ib
(*
¨g
)

1062 
HANDLE
 
h
=
NULL
;

1064 
h
 = 
	`evutû_lﬂd_wödows_sy°em_libøry
(
	`TEXT
("kernel32.dll"));

1065 
	`â_as£π
(
h
);

1067 
íd
:

1068 i‡(
h
)

1069 
	`Clo£H™dÀ
(
h
);

1071 
	}
}

1074 
ã°ˇ£_t
 
	gutû_ã°ˇ£s
[] = {

1075 { "ùv4_∑r£", 
ªgªss_ùv4_∑r£
, 0, 
NULL
, NULL },

1076 { "ùv6_∑r£", 
ªgªss_ùv6_∑r£
, 0, 
NULL
, NULL },

1077 { "sockaddr_p‹t_∑r£", 
ªgªss_sockaddr_p‹t_∑r£
, 0, 
NULL
, NULL },

1078 { "sockaddr_p‹t_f‹m©", 
ªgªss_sockaddr_p‹t_f‹m©
, 0, 
NULL
, NULL },

1079 { "sockaddr_¥ediˇãs", 
ã°_evutû_sockaddr_¥ediˇãs
, 0,
NULL
,NULL },

1080 { "evutû_¢¥ötf", 
ã°_evutû_¢¥ötf
, 0, 
NULL
, NULL },

1081 { "evutû_°πﬁl", 
ã°_evutû_°πﬁl
, 0, 
NULL
, NULL },

1082 { "evutû_ˇ£cmp", 
ã°_evutû_ˇ£cmp
, 0, 
NULL
, NULL },

1083 { "°æ˝y", 
ã°_evutû_°æ˝y
, 0, 
NULL
, NULL },

1084 { "log", 
ã°_evutû_log
, 
TT_FORK
, 
NULL
, NULL },

1085 { "upˇ°", 
ã°_evutû_upˇ°
, 0, 
NULL
, NULL },

1086 { "öãgîs", 
ã°_evutû_öãgîs
, 0, 
NULL
, NULL },

1087 { "ønd", 
ã°_evutû_ønd
, 
TT_FORK
, 
NULL
, NULL },

1088 { "gëaddröfo", 
ã°_evutû_gëaddröfo
, 
TT_FORK
, 
NULL
, NULL },

1089 #ifde‡
WIN32


1090 { "lﬂdsy¶ib", 
ã°_evutû_lﬂdsy¶ib
, 
TT_FORK
, 
NULL
, NULL },

1092 
END_OF_TESTCASES
,

	@test/regress_zlib.c

28 #unde‡
NDEBUG


30 #ifde‡
WIN32


31 
	~<wösock2.h
>

32 
	~<wödows.h
>

35 
	~"evít2/evít-c⁄fig.h
"

37 
	~<sys/ty≥s.h
>

38 #i‚de‡
WIN32


39 
	~<sys/sockë.h
>

40 
	~<sys/waô.h
>

41 
	~<uni°d.h
>

42 
	~<√tdb.h
>

44 
	~<sig«l.h
>

45 
	~<°dio.h
>

46 
	~<°dlib.h
>

47 
	~<°rög.h
>

49 
	~<as£π.h
>

50 
	~<î∫o.h
>

52 
	~"evít2/utû.h
"

53 
	~"evít2/evít.h
"

54 
	~"evít2/evít_com∑t.h
"

55 
	~"evít2/buf„r.h
"

56 
	~"evít2/buf„ªvít.h
"

58 
	~"ªgªss.h
"

67 #i‚de‡
_LARGEFILE64_SOURCE


68 
	#_LARGEFILE64_SOURCE
 0

	)

70 #i‚de‡
_LFS64_LARGEFILE


71 
	#_LFS64_LARGEFILE
 0

	)

73 #i‚de‡
_FILE_OFFSET_BITS


74 
	#_FILE_OFFSET_BITS
 0

	)

76 #i‚de‡
off64_t


77 
	#off64_t
 
ev_öt64_t


	)

80 
	~<zlib.h
>

82 
	göfûãr_ˇŒs
;

83 
	goutfûãr_ˇŒs
;

84 
	gªadcb_föished
;

85 
	gwrôecb_föished
;

86 
	gîr‹cb_övoked
;

93 
	$zlib_deÊ©e_‰ì
(*
˘x
)

95 
z_°ªamp
 
p
 = 
˘x
;

97 
	`as£π
(
	`deÊ©eEnd
(
p
Ë=
Z_OK
);

98 
	}
}

101 
	$zlib_öÊ©e_‰ì
(*
˘x
)

103 
z_°ªamp
 
p
 = 
˘x
;

105 
	`as£π
(
	`öÊ©eEnd
(
p
Ë=
Z_OK
);

106 
	}
}

109 
	$gë°©e
(
buf„ªvít_Êush_mode
 
°©e
)

111 
°©e
) {

112 
BEV_FINISHED
:

113  
Z_FINISH
;

114 
BEV_FLUSH
:

115  
Z_SYNC_FLUSH
;

116 
BEV_NORMAL
:

118  
Z_NO_FLUSH
;

120 
	}
}

127 
buf„ªvít_fûãr_ªsu…


128 
	$zlib_öput_fûãr
(
evbuf„r
 *
§c
, evbuf„∏*
d°
,

129 
ev_ssize_t
 
lim
, 
buf„ªvít_Êush_mode
 
°©e
, *
˘x
)

131 
evbuf„r_iovec
 
v_ö
[1];

132 
evbuf„r_iovec
 
v_out
[1];

133 
ƒód
, 
nwrôe
;

134 
ªs
, 
n
;

136 
z_°ªamp
 
p
 = 
˘x
;

140 
n
 = 
	`evbuf„r_≥ek
(
§c
, -1, 
NULL
, 
v_ö
, 1);

141 i‡(
n
) {

142 
p
->
avaû_ö
 = 
v_ö
[0].
iov_Àn
;

143 
p
->
√xt_ö
 = 
v_ö
[0].
iov_ba£
;

145 
p
->
avaû_ö
 = 0;

146 
p
->
√xt_ö
 = 0;

149 
	`evbuf„r_ª£rve_•a˚
(
d°
, 4096, 
v_out
, 1);

150 
p
->
√xt_out
 = 
v_out
[0].
iov_ba£
;

151 
p
->
avaû_out
 = 
v_out
[0].
iov_Àn
;

154 
ªs
 = 
	`öÊ©e
(
p
, 
	`gë°©e
(
°©e
));

157 
ƒód
 = 
v_ö
[0].
iov_Àn
 - 
p
->
avaû_ö
;

158 
nwrôe
 = 
v_out
[0].
iov_Àn
 - 
p
->
avaû_out
;

160 
	`evbuf„r_døö
(
§c
, 
ƒód
);

161 
v_out
[0].
iov_Àn
 = 
nwrôe
;

162 
	`evbuf„r_commô_•a˚
(
d°
, 
v_out
, 1);

164 i‡(
ªs
==
Z_BUF_ERROR
) {

168 i‡(
nwrôe
 == 0)

169  
BEV_NEED_MORE
;

171 
	`as£π
(
ªs
 =
Z_OK
 ||Ñe†=
Z_STREAM_END
);

174 } 
	`evbuf„r_gë_Àngth
(
§c
) > 0);

176 ++
öfûãr_ˇŒs
;

178  (
BEV_OK
);

179 
	}
}

181 
buf„ªvít_fûãr_ªsu…


182 
	$zlib_ouçut_fûãr
(
evbuf„r
 *
§c
, evbuf„∏*
d°
,

183 
ev_ssize_t
 
lim
, 
buf„ªvít_Êush_mode
 
°©e
, *
˘x
)

185 
evbuf„r_iovec
 
v_ö
[1];

186 
evbuf„r_iovec
 
v_out
[1];

187 
ƒód
, 
nwrôe
;

188 
ªs
, 
n
;

190 
z_°ªamp
 
p
 = 
˘x
;

194 
n
 = 
	`evbuf„r_≥ek
(
§c
, -1, 
NULL
, 
v_ö
, 1);

195 i‡(
n
) {

196 
p
->
avaû_ö
 = 
v_ö
[0].
iov_Àn
;

197 
p
->
√xt_ö
 = 
v_ö
[0].
iov_ba£
;

199 
p
->
avaû_ö
 = 0;

200 
p
->
√xt_ö
 = 0;

203 
	`evbuf„r_ª£rve_•a˚
(
d°
, 4096, 
v_out
, 1);

204 
p
->
√xt_out
 = 
v_out
[0].
iov_ba£
;

205 
p
->
avaû_out
 = 
v_out
[0].
iov_Àn
;

208 
ªs
 = 
	`deÊ©e
(
p
, 
	`gë°©e
(
°©e
));

211 
ƒód
 = 
v_ö
[0].
iov_Àn
 - 
p
->
avaû_ö
;

212 
nwrôe
 = 
v_out
[0].
iov_Àn
 - 
p
->
avaû_out
;

214 
	`evbuf„r_døö
(
§c
, 
ƒód
);

215 
v_out
[0].
iov_Àn
 = 
nwrôe
;

216 
	`evbuf„r_commô_•a˚
(
d°
, 
v_out
, 1);

218 i‡(
ªs
==
Z_BUF_ERROR
) {

222 i‡(
nwrôe
 == 0)

223  
BEV_NEED_MORE
;

225 
	`as£π
(
ªs
 =
Z_OK
 ||Ñe†=
Z_STREAM_END
);

228 } 
	`evbuf„r_gë_Àngth
(
§c
) > 0);

230 ++
outfûãr_ˇŒs
;

232  (
BEV_OK
);

233 
	}
}

240 
	$ªadcb
(
buf„ªvít
 *
bev
, *
¨g
)

242 i‡(
	`evbuf„r_gë_Àngth
(
	`buf„ªvít_gë_öput
(
bev
)) == 8333) {

243 
evbuf„r
 *
evbuf
 = 
	`evbuf„r_√w
();

244 
	`as£π
(
evbuf
 !
NULL
);

247 
	`buf„ªvít_ªad_buf„r
(
bev
, 
evbuf
);

249 
	`buf„ªvít_dißbÀ
(
bev
, 
EV_READ
);

251 i‡(
	`evbuf„r_gë_Àngth
(
evbuf
) == 8333) {

252 ++
ªadcb_föished
;

255 
	`evbuf„r_‰ì
(
evbuf
);

257 
	}
}

260 
	$wrôecb
(
buf„ªvít
 *
bev
, *
¨g
)

262 i‡(
	`evbuf„r_gë_Àngth
(
	`buf„ªvít_gë_ouçut
(
bev
)) == 0) {

263 ++
wrôecb_föished
;

265 
	}
}

268 
	$îr‹cb
(
buf„ªvít
 *
bev
, 
wh©
, *
¨g
)

270 
îr‹cb_övoked
 = 1;

271 
	}
}

274 
	$ã°_buf„ªvít_zlib
(*
¨g
)

276 
buf„ªvít
 *
bev1
=
NULL
, *
bev2
=NULL;

277 
buf„r
[8333];

278 
z_°ªam
 
z_öput
, 
z_ouçut
;

279 
i
, 
r
;

280 
evutû_sockë_t
 
∑ú
[2] = {-1, -1};

281 ()
¨g
;

283 
öfûãr_ˇŒs
 = 
outfûãr_ˇŒs
 = 
ªadcb_föished
 = 
wrôecb_föished


284 
îr‹cb_övoked
 = 0;

286 i‡(
	`evutû_sockë∑ú
(
AF_UNIX
, 
SOCK_STREAM
, 0, 
∑ú
) == -1) {

287 
	`â_ab‹t_≥º‹
("socketpair");

290 
	`evutû_make_sockë_n⁄blockög
(
∑ú
[0]);

291 
	`evutû_make_sockë_n⁄blockög
(
∑ú
[1]);

293 
bev1
 = 
	`buf„ªvít_sockë_√w
(
NULL
, 
∑ú
[0], 0);

294 
bev2
 = 
	`buf„ªvít_sockë_√w
(
NULL
, 
∑ú
[1], 0);

296 
	`mem£t
(&
z_ouçut
, 0, (z_output));

297 
r
 = 
	`deÊ©eInô
(&
z_ouçut
, 
Z_DEFAULT_COMPRESSION
);

298 
	`â_öt_›
(
r
, ==, 
Z_OK
);

299 
	`mem£t
(&
z_öput
, 0, (z_input));

300 
r
 = 
	`öÊ©eInô
(&
z_öput
);

301 
	`â_öt_›
(
r
, ==, 
Z_OK
);

304 
bev1
 = 
	`buf„ªvít_fûãr_√w
(bev1, 
NULL
, 
zlib_ouçut_fûãr
,

305 
BEV_OPT_CLOSE_ON_FREE
, 
zlib_deÊ©e_‰ì
, &
z_ouçut
);

306 
bev2
 = 
	`buf„ªvít_fûãr_√w
(bev2, 
zlib_öput_fûãr
,

307 
NULL
, 
BEV_OPT_CLOSE_ON_FREE
, 
zlib_öÊ©e_‰ì
, &
z_öput
);

308 
	`buf„ªvít_£tcb
(
bev1
, 
ªadcb
, 
wrôecb
, 
îr‹cb
, 
NULL
);

309 
	`buf„ªvít_£tcb
(
bev2
, 
ªadcb
, 
wrôecb
, 
îr‹cb
, 
NULL
);

311 
	`buf„ªvít_dißbÀ
(
bev1
, 
EV_READ
);

312 
	`buf„ªvít_íabÀ
(
bev1
, 
EV_WRITE
);

314 
	`buf„ªvít_íabÀ
(
bev2
, 
EV_READ
);

316 
i
 = 0; i < ()(
buf„r
); i++)

317 
buf„r
[
i
] = i;

320 
	`buf„ªvít_wrôe
(
bev1
, 
buf„r
, 1800);

321 
	`buf„ªvít_wrôe
(
bev1
, 
buf„r
 + 1800, (buffer) - 1800);

324 
	`buf„ªvít_Êush
(
bev1
, 
EV_WRITE
, 
BEV_FINISHED
);

326 
	`evít_di•©ch
();

328 
	`â_w™t
(
öfûãr_ˇŒs
);

329 
	`â_w™t
(
outfûãr_ˇŒs
);

330 
	`â_w™t
(
ªadcb_föished
);

331 
	`â_w™t
(
wrôecb_föished
);

332 
	`â_w™t
(!
îr‹cb_övoked
);

334 
ã°_ok
 = 1;

335 
íd
:

336 i‡(
bev1
)

337 
	`buf„ªvít_‰ì
(
bev1
);

338 i‡(
bev2
)

339 
	`buf„ªvít_‰ì
(
bev2
);

341 i‡(
∑ú
[0] >= 0)

342 
	`evutû_˛o£sockë
(
∑ú
[0]);

343 i‡(
∑ú
[1] >= 0)

344 
	`evutû_˛o£sockë
(
∑ú
[1]);

345 
	}
}

	@test/test-changelist.c

27 
	~"evít2/evít-c⁄fig.h
"

29 #ifde‡
WIN32


30 
	~<wösock2.h
>

31 
	~<wödows.h
>

33 
	~<uni°d.h
>

35 
	~<sys/ty≥s.h
>

36 
	~<sys/°©.h
>

37 #ifde‡
_EVENT_HAVE_SYS_TIME_H


38 
	~<sys/time.h
>

41 #ifde‡
_EVENT_HAVE_SYS_SOCKET_H


42 
	~<sys/sockë.h
>

44 
	~<f˙é.h
>

45 
	~<°dlib.h
>

46 
	~<°dio.h
>

47 
	~<°rög.h
>

48 
	~<î∫o.h
>

50 
	~"evít2/evít.h
"

51 
	~"evít2/utû.h
"

52 
	~<time.h
>

54 
	s˝u_ußge_timî
 {

55 #ifde‡
WIN32


56 
HANDLE
 
	mthªad
;

57 
FILETIME
 
	mu£πimeBegö
;

58 
FILETIME
 
	mkî√…imeBegö
;

60 
˛ock_t
 
	mticksBegö
;

62 
timevÆ
 
	mtimeBegö
;

65 
	$°¨t_˝u_ußge_timî
(
˝u_ußge_timî
 *
timî
)

67 #ifde‡
WIN32


68 
r
;

69 
FILETIME
 
¸óãtime
, 
exôtime
;

70 
timî
->
thªad
 = 
	`GëCuºítThªad
();

71 
r
 = 
	`GëThªadTimes
(
timî
->
thªad
, &
¸óãtime
, &
exôtime
,

72 &
timî
->
u£πimeBegö
, &timî->
kî√…imeBegö
);

73 i‡(
r
==0Ë
	`¥ötf
("GetThreadTimes failed.");

75 
timî
->
ticksBegö
 = 
	`˛ock
();

78 
	`evutû_gëtimeofday
(&
timî
->
timeBegö
, 
NULL
);

79 
	}
}

80 #ifde‡
WIN32


81 
ev_öt64_t


82 
	$fûëime_to_100n£c
(c⁄° 
FILETIME
 *
·
)

85 
ev_öt64_t
 
n
 = 
·
->
dwHighD©eTime
;

86 
n
 <<= 32;

87 
n
 +
·
->
dwLowD©eTime
;

88  
n
;

89 
	}
}

91 
	$fûëime_diff
(c⁄° 
FILETIME
 *
·Sèπ
, c⁄° FILETIME *
·End
)

93 
ev_öt64_t
 
s
, 
e
, 
diff
;

94 
r
;

95 
s
 = 
	`fûëime_to_100n£c
(
·Sèπ
);

96 
e
 = 
	`fûëime_to_100n£c
(
·End
);

97 
diff
 = 
e
 - 
s
;

98 
r
 = (Ë
diff
;

99  
r
 / 1.0e7;

100 
	}
}

104 
	$gë_˝u_ußge
(
˝u_ußge_timî
 *
timî
, *
£cEœp£dOut
,

105 *
£cU£dOut
, *
ußgeOut
)

107 #ifde‡
WIN32


108 
u£πime_£c⁄ds
, 
kî√…ime_£c⁄ds
;

109 
FILETIME
 
¸óãtime
, 
exôtime
, 
u£πimeEnd
, 
kî√…imeEnd
;

110 
r
;

112 
˛ock_t
 
ticksEnd
;

114 
timevÆ
 
timeEnd
, 
timeDiff
;

115 
£c⁄dsPas£d
, 
£c⁄dsU£d
;

117 #ifde‡
WIN32


118 
r
 = 
	`GëThªadTimes
(
timî
->
thªad
, &
¸óãtime
, &
exôtime
,

119 &
u£πimeEnd
, &
kî√…imeEnd
);

120 i‡(
r
==0Ë
	`¥ötf
("GetThreadTimes failed.");

121 
u£πime_£c⁄ds
 = 
	`fûëime_diff
(&
timî
->
u£πimeBegö
, &
u£πimeEnd
);

122 
kî√…ime_£c⁄ds
 = 
	`fûëime_diff
(&
timî
->
kî√…imeBegö
, &
kî√…imeEnd
);

123 
£c⁄dsU£d
 = 
kî√…ime_£c⁄ds
 + 
u£πime_£c⁄ds
;

125 
ticksEnd
 = 
	`˛ock
();

126 
£c⁄dsU£d
 = (
ticksEnd
 - 
timî
->
ticksBegö
Ë/ ()
CLOCKS_PER_SEC
;

128 
	`evutû_gëtimeofday
(&
timeEnd
, 
NULL
);

129 
	`evutû_timîsub
(&
timeEnd
, &
timî
->
timeBegö
, &
timeDiff
);

130 
£c⁄dsPas£d
 = 
timeDiff
.
tv_£c
 + (timeDiff.
tv_u£c
 / 1.0e6);

132 *
£cEœp£dOut
 = 
£c⁄dsPas£d
;

133 *
£cU£dOut
 = 
£c⁄dsU£d
;

134 *
ußgeOut
 = 
£c⁄dsU£d
 / 
£c⁄dsPas£d
;

135 
	}
}

138 
	$wrôe_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

140 
	`¥ötf
("write callback. should only seeÅhis once\n");

143 
	`evít_dñ
(*(
evít
**)
¨g
);

146 
	`evít_add
(*(
evít
**)
¨g
,
NULL
);

149 
	`evít_dñ
(*(
evít
**)
¨g
);

151 
	}
}

154 
	$timeout_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

156 
	`¥ötf
("timeout fired,ÅimeÅoÉndÅest\n");

157 
	`evít_dñ
(*(
evít
**)
¨g
);

159 
	}
}

162 
	$maö
(
¨gc
, **
¨gv
)

164 
evít
* 
ev
;

165 
evít
* 
timeout
;

166 
evít_ba£
* 
ba£
;

168 
evutû_sockë_t
 
∑ú
[2];

169 
timevÆ
 
tv
;

170 
˝u_ußge_timî
 
timî
;

172 
ußge
, 
£cPas£d
, 
£cU£d
;

174 #ifde‡
WIN32


175 
WORD
 
wVîsi⁄Reque°ed
;

176 
WSADATA
 
wßD©a
;

178 
wVîsi⁄Reque°ed
 = 
	`MAKEWORD
(2, 2);

180 (Ë
	`WSASèπup
(
wVîsi⁄Reque°ed
, &
wßD©a
);

182 i‡(
	`evutû_sockë∑ú
(
AF_UNIX
, 
SOCK_STREAM
, 0, 
∑ú
) == -1)

186 
ba£
 = 
	`evít_ba£_√w
();

189 
timeout
 = 
	`evtimî_√w
(
ba£
,
timeout_cb
,&timeout);

191 
ev
 = 
	`evít_√w
(
ba£
,
∑ú
[1],
EV_WRITE
 | 
EV_PERSIST
, 
wrôe_cb
, &ev);

193 
tv
.
tv_£c
 = 5;

194 
tv
.
tv_u£c
 = 0;

196 
	`evtimî_add
(
timeout
, &
tv
);

198 
	`evít_add
(
ev
, 
NULL
);

200 
	`°¨t_˝u_ußge_timî
(&
timî
);

202 
	`evít_ba£_di•©ch
(
ba£
);

204 
	`evít_‰ì
(
ev
);

205 
	`evít_‰ì
(
timeout
);

206 
	`evít_ba£_‰ì
(
ba£
);

208 
	`gë_˝u_ußge
(&
timî
, &
£cPas£d
, &
£cU£d
, &
ußge
);

213 
	`¥ötf
("usec used=%d, usecÖassed=%d, cpu usage=%.2f%%\n",

214 ()(
£cU£d
*1e6),

215 ()(
£cPas£d
*1e6),

216 
ußge
*100);

218 i‡(
ußge
 > 50.0)

222 
	}
}

	@test/test-eof.c

27 
	~"evít2/evít-c⁄fig.h
"

29 #ifde‡
WIN32


30 
	~<wösock2.h
>

32 
	~<uni°d.h
>

34 
	~<sys/ty≥s.h
>

35 
	~<sys/°©.h
>

36 #ifde‡
_EVENT_HAVE_SYS_TIME_H


37 
	~<sys/time.h
>

39 #ifde‡
_EVENT_HAVE_SYS_SOCKET_H


40 
	~<sys/sockë.h
>

42 
	~<f˙é.h
>

43 
	~<°dlib.h
>

44 
	~<°dio.h
>

45 
	~<°rög.h
>

46 
	~<î∫o.h
>

48 
	~<evít.h
>

49 
	~<evutû.h
>

51 #ifde‡
_EVENT___func__


52 
	#__func__
 
_EVENT___func__


	)

55 
	gã°_okay
 = 1;

56 
	gˇŒed
 = 0;

57 
timevÆ
 
	gtimeout
 = {60, 0};

60 
	$ªad_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

62 
buf
[256];

63 
Àn
;

65 i‡(
EV_TIMEOUT
 & 
evít
) {

66 
	`¥ötf
("%s: Timeout!\n", 
__func__
);

67 
	`exô
(1);

70 
Àn
 = 
	`ªcv
(
fd
, 
buf
, (buf), 0);

72 
	`¥ötf
("%s:Ñód %d%s\n", 
__func__
,

73 
Àn
,Üen ? "" : " - means EOF");

75 i‡(
Àn
) {

76 i‡(!
ˇŒed
)

77 
	`evít_add
(
¨g
, &
timeout
);

78 } i‡(
ˇŒed
 == 1)

79 
ã°_okay
 = 0;

81 
ˇŒed
++;

82 
	}
}

84 #i‚de‡
SHUT_WR


85 
	#SHUT_WR
 1

	)

89 
	$maö
(
¨gc
, **
¨gv
)

91 
evít
 
ev
;

92 c⁄° *
ã°
 = "test string";

93 
evutû_sockë_t
 
∑ú
[2];

95 #ifde‡
WIN32


96 
WORD
 
wVîsi⁄Reque°ed
;

97 
WSADATA
 
wßD©a
;

99 
wVîsi⁄Reque°ed
 = 
	`MAKEWORD
(2, 2);

101 (Ë
	`WSASèπup
(
wVîsi⁄Reque°ed
, &
wßD©a
);

104 i‡(
	`evutû_sockë∑ú
(
AF_UNIX
, 
SOCK_STREAM
, 0, 
∑ú
) == -1)

108 i‡(
	`£nd
(
∑ú
[0], 
ã°
, ()
	`°æí
(test)+1, 0) < 0)

110 
	`shutdown
(
∑ú
[0], 
SHUT_WR
);

113 
	`evít_öô
();

116 
	`evít_£t
(&
ev
, 
∑ú
[1], 
EV_READ
 | 
EV_TIMEOUT
, 
ªad_cb
, &ev);

118 
	`evít_add
(&
ev
, &
timeout
);

120 
	`evít_di•©ch
();

122  (
ã°_okay
);

123 
	}
}

	@test/test-init.c

27 
	~"evít2/evít-c⁄fig.h
"

29 
	~<sys/ty≥s.h
>

30 
	~<sys/°©.h
>

31 #ifde‡
_EVENT_HAVE_SYS_TIME_H


32 
	~<sys/time.h
>

34 #ifde‡
_EVENT_HAVE_SYS_SOCKET_H


35 
	~<sys/sockë.h
>

37 
	~<f˙é.h
>

38 
	~<°dlib.h
>

39 
	~<°dio.h
>

40 
	~<°rög.h
>

41 #i‚de‡
WIN32


42 
	~<uni°d.h
>

44 
	~<î∫o.h
>

46 
	~<evít.h
>

49 
	$maö
(
¨gc
, **
¨gv
)

51 #ifde‡
WIN32


52 
WORD
 
wVîsi⁄Reque°ed
;

53 
WSADATA
 
wßD©a
;

55 
wVîsi⁄Reque°ed
 = 
	`MAKEWORD
(2, 2);

57 (Ë
	`WSASèπup
(
wVîsi⁄Reque°ed
, &
wßD©a
);

61 
	`evít_öô
();

64 
	}
}

	@test/test-ratelim.c

27 
	~<°dio.h
>

28 
	~<°dlib.h
>

29 
	~<°rög.h
>

30 
	~<as£π.h
>

31 
	~<m©h.h
>

33 #ifde‡
WIN32


34 
	~<wösock2.h
>

35 
	~<ws2t˝ù.h
>

37 
	~<sys/sockë.h
>

38 
	~<√töë/ö.h
>

39 #ifde‡
_XOPEN_SOURCE_EXTENDED


40 
	~<¨∑/öë.h
>

43 
	~<sig«l.h
>

45 
	~"evít2/buf„ªvít.h
"

46 
	~"evít2/buf„r.h
"

47 
	~"evít2/evít.h
"

48 
	~"evít2/utû.h
"

49 
	~"evít2/li°íî.h
"

50 
	~"evít2/thªad.h
"

52 
	~"../utû-öã∫Æ.h
"

54 
	gcfg_vîbo£
 = 0;

55 
	gcfg_hñp
 = 0;

57 
	gcfg_n_c⁄√˘i⁄s
 = 30;

58 
	gcfg_duøti⁄
 = 5;

59 
	gcfg_c⁄∆imô
 = 0;

60 
	gcfg_grou∂imô
 = 0;

61 
	gcfg_tick_m£c
 = 1000;

62 
	gcfg_mö_sh¨e
 = -1;

64 
	gcfg_c⁄∆imô_tﬁî™˚
 = -1;

65 
	gcfg_grou∂imô_tﬁî™˚
 = -1;

66 
	gcfg_°ddev_tﬁî™˚
 = -1;

68 #ifde‡
_WIN32


69 
	gcfg_íabÀ_io˝
 = 0;

72 
timevÆ
 
	gcfg_tick
 = { 0, 500*1000 };

74 
ev_tokí_buckë_cfg
 *
	gc⁄n_buckë_cfg
 = 
NULL
;

75 
ev_tokí_buckë_cfg
 *
	ggroup_buckë_cfg
 = 
NULL
;

76 
buf„ªvít_øã_limô_group
 *
	gøãlim_group
 = 
NULL
;

77 
	g£c⁄ds_≥r_tick
 = 0.0;

79 
	s˛õ¡_°©e
 {

80 
size_t
 
	mqueued
;

81 
ev_uöt64_t
 
	mª˚ived
;

84 
	gn_echo_c⁄ns_›í
 = 0;

87 
	$loud_wrôecb
(
buf„ªvít
 *
bev
, *
˘x
)

89 
˛õ¡_°©e
 *
cs
 = 
˘x
;

90 
evbuf„r
 *
ouçut
 = 
	`buf„ªvít_gë_ouçut
(
bev
);

91 
buf
[1024];

92 #ifde‡
WIN32


93 
r
 = 
	`ønd
() % 256;

95 
r
 = 
	`øndom
() % 256;

97 
	`mem£t
(
buf
, 
r
, (buf));

98 
	`evbuf„r_gë_Àngth
(
ouçut
) < 8192) {

99 
	`evbuf„r_add
(
ouçut
, 
buf
, (buf));

100 
cs
->
queued
 +(
buf
);

102 
	}
}

105 
	$disˇrd_ªadcb
(
buf„ªvít
 *
bev
, *
˘x
)

107 
˛õ¡_°©e
 *
cs
 = 
˘x
;

108 
evbuf„r
 *
öput
 = 
	`buf„ªvít_gë_öput
(
bev
);

109 
size_t
 
Àn
 = 
	`evbuf„r_gë_Àngth
(
öput
);

110 
	`evbuf„r_døö
(
öput
, 
Àn
);

111 
cs
->
ª˚ived
 +
Àn
;

112 
	}
}

115 
	$wrôe_⁄_c⁄√˘edcb
(
buf„ªvít
 *
bev
, 
wh©
, *
˘x
)

117 i‡(
wh©
 & 
BEV_EVENT_CONNECTED
) {

118 
	`loud_wrôecb
(
bev
, 
˘x
);

120 
	`buf„ªvít_íabÀ
(
bev
, 
EV_READ
|
EV_WRITE
);

122 
	}
}

125 
	$echo_ªadcb
(
buf„ªvít
 *
bev
, *
˘x
)

127 
evbuf„r
 *
öput
 = 
	`buf„ªvít_gë_öput
(
bev
);

128 
evbuf„r
 *
ouçut
 = 
	`buf„ªvít_gë_ouçut
(
bev
);

130 
	`evbuf„r_add_buf„r
(
ouçut
, 
öput
);

131 i‡(
	`evbuf„r_gë_Àngth
(
ouçut
) > 1024000)

132 
	`buf„ªvít_dißbÀ
(
bev
, 
EV_READ
);

133 
	}
}

136 
	$echo_wrôecb
(
buf„ªvít
 *
bev
, *
˘x
)

138 
evbuf„r
 *
ouçut
 = 
	`buf„ªvít_gë_ouçut
(
bev
);

139 i‡(
	`evbuf„r_gë_Àngth
(
ouçut
) < 512000)

140 
	`buf„ªvít_íabÀ
(
bev
, 
EV_READ
);

141 
	}
}

144 
	$echo_evítcb
(
buf„ªvít
 *
bev
, 
wh©
, *
˘x
)

146 i‡(
wh©
 & (
BEV_EVENT_EOF
|
BEV_EVENT_ERROR
)) {

147 --
n_echo_c⁄ns_›í
;

148 
	`buf„ªvít_‰ì
(
bev
);

150 
	}
}

153 
	$echo_li°íîcb
(
evc⁄∆i°íî
 *
li°íî
, 
evutû_sockë_t
 
√wsock
,

154 
sockaddr
 *
sour˚addr
, 
sockÀn
, *
˘x
)

156 
evít_ba£
 *
ba£
 = 
˘x
;

157 
Êags
 = 
BEV_OPT_CLOSE_ON_FREE
|
BEV_OPT_THREADSAFE
;

158 
buf„ªvít
 *
bev
;

160 
bev
 = 
	`buf„ªvít_sockë_√w
(
ba£
, 
√wsock
, 
Êags
);

161 
	`buf„ªvít_£tcb
(
bev
, 
echo_ªadcb
, 
echo_wrôecb
, 
echo_evítcb
, 
NULL
);

162 i‡(
c⁄n_buckë_cfg
)

163 
	`buf„ªvít_£t_øã_limô
(
bev
, 
c⁄n_buckë_cfg
);

164 i‡(
øãlim_group
)

165 
	`buf„ªvít_add_to_øã_limô_group
(
bev
, 
øãlim_group
);

166 ++
n_echo_c⁄ns_›í
;

167 
	`buf„ªvít_íabÀ
(
bev
, 
EV_READ
|
EV_WRITE
);

168 
	}
}

171 
	$ã°_øãlimôög
()

173 
evít_ba£
 *
ba£
;

174 
sockaddr_ö
 
sö
;

175 
evc⁄∆i°íî
 *
li°íî
;

177 
sockaddr_°‹age
 
ss
;

178 
ev_sockÀn_t
 
¶í
;

180 
buf„ªvít
 **
bevs
;

181 
˛õ¡_°©e
 *
°©es
;

182 
buf„ªvít_øã_limô_group
 *
group
 = 
NULL
;

184 
i
;

186 
timevÆ
 
tv
;

188 
ev_uöt64_t
 
tŸÆ_ª˚ived
;

189 
tŸÆ_sq_≥r£c
, 
tŸÆ_≥r£c
;

190 
v¨ün˚
;

191 
ex≥˘ed_tŸÆ_≥r£c
 = -1.0, 
ex≥˘ed_avg_≥r£c
 = -1.0;

192 
ok
 = 1;

193 
evít_c⁄fig
 *
ba£_cfg
;

195 
	`mem£t
(&
sö
, 0, (sin));

196 
sö
.
sö_Ámûy
 = 
AF_INET
;

197 
sö
.
sö_addr
.
s_addr
 = 
	`ht⁄l
(0x7f000001);

198 
sö
.
sö_p‹t
 = 0;

201 
	`evít_íabÀ_debug_mode
();

203 
ba£_cfg
 = 
	`evít_c⁄fig_√w
();

205 #ifde‡
_WIN32


206 i‡(
cfg_íabÀ_io˝
) {

207 
	`evthªad_u£_wödows_thªads
();

208 
	`evít_c⁄fig_£t_Êag
(
ba£_cfg
, 
EVENT_BASE_FLAG_STARTUP_IOCP
);

212 
ba£
 = 
	`evít_ba£_√w_wôh_c⁄fig
(
ba£_cfg
);

213 
	`evít_c⁄fig_‰ì
(
ba£_cfg
);

215 
li°íî
 = 
	`evc⁄∆i°íî_√w_böd
(
ba£
, 
echo_li°íîcb
, base,

216 
LEV_OPT_CLOSE_ON_FREE
|
LEV_OPT_REUSEABLE
, -1,

217 (
sockaddr
 *)&
sö
, (sin));

219 
¶í
 = (
ss
);

220 i‡(
	`gësock«me
(
	`evc⁄∆i°íî_gë_fd
(
li°íî
), (
sockaddr
 *)&
ss
,

221 &
¶í
) < 0) {

222 
	`≥º‹
("getsockname");

226 i‡(
cfg_c⁄∆imô
 > 0) {

227 
c⁄n_buckë_cfg
 = 
	`ev_tokí_buckë_cfg_√w
(

228 
cfg_c⁄∆imô
, cfg_connlimit * 4,

229 
cfg_c⁄∆imô
, cfg_connlimit * 4,

230 &
cfg_tick
);

231 
	`as£π
(
c⁄n_buckë_cfg
);

234 i‡(
cfg_grou∂imô
 > 0) {

235 
group_buckë_cfg
 = 
	`ev_tokí_buckë_cfg_√w
(

236 
cfg_grou∂imô
, cfg_grouplimit * 4,

237 
cfg_grou∂imô
, cfg_grouplimit * 4,

238 &
cfg_tick
);

239 
group
 = 
øãlim_group
 = 
	`buf„ªvít_øã_limô_group_√w
(

240 
ba£
, 
group_buckë_cfg
);

241 
ex≥˘ed_tŸÆ_≥r£c
 = 
cfg_grou∂imô
;

242 
ex≥˘ed_avg_≥r£c
 = 
cfg_grou∂imô
 / 
cfg_n_c⁄√˘i⁄s
;

243 i‡(
cfg_c⁄∆imô
 > 0 && 
ex≥˘ed_avg_≥r£c
 > cfg_connlimit)

244 
ex≥˘ed_avg_≥r£c
 = 
cfg_c⁄∆imô
;

245 i‡(
cfg_mö_sh¨e
 >= 0)

246 
	`buf„ªvít_øã_limô_group_£t_mö_sh¨e
(

247 
øãlim_group
, 
cfg_mö_sh¨e
);

250 i‡(
ex≥˘ed_avg_≥r£c
 < 0 && 
cfg_c⁄∆imô
 > 0)

251 
ex≥˘ed_avg_≥r£c
 = 
cfg_c⁄∆imô
;

253 i‡(
ex≥˘ed_avg_≥r£c
 > 0)

254 
ex≥˘ed_avg_≥r£c
 /
£c⁄ds_≥r_tick
;

255 i‡(
ex≥˘ed_tŸÆ_≥r£c
 > 0)

256 
ex≥˘ed_tŸÆ_≥r£c
 /
£c⁄ds_≥r_tick
;

258 
bevs
 = 
	`ˇŒoc
(
cfg_n_c⁄√˘i⁄s
, (
buf„ªvít
 *));

259 
°©es
 = 
	`ˇŒoc
(
cfg_n_c⁄√˘i⁄s
, (
˛õ¡_°©e
));

261 
i
 = 0; i < 
cfg_n_c⁄√˘i⁄s
; ++i) {

262 
bevs
[
i
] = 
	`buf„ªvít_sockë_√w
(
ba£
, -1,

263 
BEV_OPT_CLOSE_ON_FREE
|
BEV_OPT_THREADSAFE
);

264 
	`as£π
(
bevs
[
i
]);

265 
	`buf„ªvít_£tcb
(
bevs
[
i
], 
disˇrd_ªadcb
, 
loud_wrôecb
,

266 
wrôe_⁄_c⁄√˘edcb
, &
°©es
[
i
]);

267 
	`buf„ªvít_íabÀ
(
bevs
[
i
], 
EV_READ
|
EV_WRITE
);

268 
	`buf„ªvít_sockë_c⁄√˘
(
bevs
[
i
], (
sockaddr
 *)&
ss
,

269 
¶í
);

272 
tv
.
tv_£c
 = 
cfg_duøti⁄
 - 1;

273 
tv
.
tv_u£c
 = 995000;

275 
	`evít_ba£_lo›exô
(
ba£
, &
tv
);

277 
	`evít_ba£_di•©ch
(
ba£
);

279 
øãlim_group
 = 
NULL
;

281 
i
 = 0; i < 
cfg_n_c⁄√˘i⁄s
; ++i) {

282 
	`buf„ªvít_‰ì
(
bevs
[
i
]);

284 
	`evc⁄∆i°íî_‰ì
(
li°íî
);

287 
øãlim_group
 = 
NULL
;

290 
n_echo_c⁄ns_›í
) {

291 
	`¥ötf
("waôög f‹ %d c⁄ns\n", 
n_echo_c⁄ns_›í
);

292 
tv
.
tv_£c
 = 0;

293 
tv
.
tv_u£c
 = 300000;

294 
	`evít_ba£_lo›exô
(
ba£
, &
tv
);

295 
	`evít_ba£_di•©ch
(
ba£
);

298 i‡(
group
)

299 
	`buf„ªvít_øã_limô_group_‰ì
(
group
);

301 
tŸÆ_ª˚ived
 = 0;

302 
tŸÆ_≥r£c
 = 0.0;

303 
tŸÆ_sq_≥r£c
 = 0.0;

304 
i
=0; i < 
cfg_n_c⁄√˘i⁄s
; ++i) {

305 
≥r£c
 = 
°©es
[
i
].
ª˚ived
;

306 
≥r£c
 /
cfg_duøti⁄
;

307 
tŸÆ_ª˚ived
 +
°©es
[
i
].
ª˚ived
;

308 
tŸÆ_≥r£c
 +
≥r£c
;

309 
tŸÆ_sq_≥r£c
 +
≥r£c
*persec;

310 
	`¥ötf
("%d: %‡≥∏£c⁄d\n", 
i
+1, 
≥r£c
);

312 
	`¥ötf
("Åotal: %fÖer second\n",

313 (()
tŸÆ_ª˚ived
)/
cfg_duøti⁄
);

314 i‡(
ex≥˘ed_tŸÆ_≥r£c
 > 0) {

315 
diff
 = 
ex≥˘ed_tŸÆ_≥r£c
 -

316 (()
tŸÆ_ª˚ived
/
cfg_duøti⁄
);

317 
	`¥ötf
(" [Of‡by %lf]\n", 
diff
);

318 i‡(
cfg_grou∂imô_tﬁî™˚
 > 0 &&

319 
	`Ábs
(
diff
Ë> 
cfg_grou∂imô_tﬁî™˚
) {

320 
	`Ârötf
(
°dîr
, "Group bandwidth out of bounds\n");

321 
ok
 = 0;

325 
	`¥ötf
("áverage: %fÖer second\n",

326 ((()
tŸÆ_ª˚ived
)/
cfg_duøti⁄
)/
cfg_n_c⁄√˘i⁄s
);

327 i‡(
ex≥˘ed_avg_≥r£c
 > 0) {

328 
diff
 = 
ex≥˘ed_avg_≥r£c
 - ((()
tŸÆ_ª˚ived
)/
cfg_duøti⁄
)/
cfg_n_c⁄√˘i⁄s
;

329 
	`¥ötf
(" [Of‡by %lf]\n", 
diff
);

330 i‡(
cfg_c⁄∆imô_tﬁî™˚
 > 0 &&

331 
	`Ábs
(
diff
Ë> 
cfg_c⁄∆imô_tﬁî™˚
) {

332 
	`Ârötf
(
°dîr
, "Connection bandwidth out of bounds\n");

333 
ok
 = 0;

337 
v¨ün˚
 = 
tŸÆ_sq_≥r£c
/
cfg_n_c⁄√˘i⁄s
 - 
tŸÆ_≥r£c
*total_persec/(cfg_n_connections*cfg_n_connections);

339 
	`¥ötf
(" stddev: %‡≥∏£c⁄d\n", 
	`sqπ
(
v¨ün˚
));

340 i‡(
cfg_°ddev_tﬁî™˚
 > 0 &&

341 
	`sqπ
(
v¨ün˚
Ë> 
cfg_°ddev_tﬁî™˚
) {

342 
	`Ârötf
(
°dîr
, "Connection variance out of bounds\n");

343 
ok
 = 0;

346 
	`evít_ba£_‰ì
(
ba£
);

347 
	`‰ì
(
bevs
);

348 
	`‰ì
(
°©es
);

350  
ok
 ? 0 : 1;

351 
	}
}

353 
	s›ti⁄
 {

354 c⁄° *
	m«me
; *
	m±r
; 
	mmö
; 
	misboﬁ
;

355 } 
	g›ti⁄s
[] = {

356 { "-v", &
cfg_vîbo£
, 0, 1 },

357 { "-h", &
cfg_hñp
, 0, 1 },

358 { "-n", &
cfg_n_c⁄√˘i⁄s
, 1, 0 },

359 { "-d", &
cfg_duøti⁄
, 1, 0 },

360 { "-c", &
cfg_c⁄∆imô
, 0, 0 },

361 { "-g", &
cfg_grou∂imô
, 0, 0 },

362 { "-t", &
cfg_tick_m£c
, 10, 0 },

363 { "--mö-sh¨e", &
cfg_mö_sh¨e
, 0, 0 },

364 { "--check-c⁄∆imô", &
cfg_c⁄∆imô_tﬁî™˚
, 0, 0 },

365 { "--check-grou∂imô", &
cfg_grou∂imô_tﬁî™˚
, 0, 0 },

366 { "--check-°ddev", &
cfg_°ddev_tﬁî™˚
, 0, 0 },

367 #ifde‡
_WIN32


368 { "--io˝", &
cfg_íabÀ_io˝
, 0, 1 },

370 { 
NULL
, NULL, -1, 0 },

374 
	$h™dÀ_›ti⁄
(
¨gc
, **
¨gv
, *
i
, c⁄° 
›ti⁄
 *
›t
)

376 
vÆ
;

377 *
íd±r
 = 
NULL
;

378 i‡(
›t
->
isboﬁ
) {

379 *
›t
->
±r
 = 1;

382 i‡(*
i
 + 1 =
¨gc
) {

383 
	`Ârötf
(
°dîr
, "Toÿ„wárgumít†tÿ'%s'\n",
¨gv
[*
i
]);

386 
vÆ
 = 
	`°πﬁ
(
¨gv
[*
i
+1], &
íd±r
, 10);

387 i‡(*
¨gv
[*
i
+1] ='\0' || !
íd±r
 || *endptr != '\0') {

388 
	`Ârötf
(
°dîr
, "Couldn'tÖarseÇumeric value '%s'\n",

389 
¨gv
[*
i
+1]);

392 i‡(
vÆ
 < 
›t
->
mö
 || val > 0x7fffffff) {

393 
	`Ârötf
(
°dîr
, "Value '%s' is out-of-range'\n",

394 
¨gv
[*
i
+1]);

397 *
›t
->
±r
 = ()
vÆ
;

398 ++*
i
;

400 
	}
}

403 
	$ußge
()

405 
	`Ârötf
(
°dîr
,

411 
	`Ârötf
(
°dîr
,

417 
	}
}

420 
	$maö
(
¨gc
, **
¨gv
)

422 
i
,
j
;

423 
øtio
;

425 #ifde‡
WIN32


426 
WORD
 
wVîsi⁄Reque°ed
 = 
	`MAKEWORD
(2,2);

427 
WSADATA
 
wßD©a
;

429 (Ë
	`WSASèπup
(
wVîsi⁄Reque°ed
, &
wßD©a
);

432 #i‚de‡
WIN32


433 i‡(
	`sig«l
(
SIGPIPE
, 
SIG_IGN
Ë=
SIG_ERR
)

436 
i
 = 1; i < 
¨gc
; ++i) {

437 
j
 = 0; 
›ti⁄s
[j].
«me
; ++j) {

438 i‡(!
	`°rcmp
(
¨gv
[
i
],
›ti⁄s
[
j
].
«me
)) {

439 i‡(
	`h™dÀ_›ti⁄
(
¨gc
,
¨gv
,&
i
,&
›ti⁄s
[
j
])<0)

441 
agaö
;

444 
	`Ârötf
(
°dîr
, "Unknow¿›ti⁄ '%s'\n", 
¨gv
[
i
]);

445 
	`ußge
();

447 
agaö
:

450 i‡(
cfg_hñp
) {

451 
	`ußge
();

455 
cfg_tick
.
tv_£c
 = 
cfg_tick_m£c
 / 1000;

456 
cfg_tick
.
tv_u£c
 = (
cfg_tick_m£c
 % 1000)*1000;

458 
£c⁄ds_≥r_tick
 = 
øtio
 = 
cfg_tick_m£c
 / 1000.0;

460 
cfg_c⁄∆imô
 *
øtio
;

461 
cfg_grou∂imô
 *
øtio
;

464 
timevÆ
 
tv
;

465 
	`evutû_gëtimeofday
(&
tv
, 
NULL
);

466 #ifde‡
WIN32


467 
	`§™d
(
tv
.
tv_u£c
);

469 
	`§™dom
(
tv
.
tv_u£c
);

473 #i‚de‡
_EVENT_DISABLE_THREAD_SUPPORT


474 
	`evthªad_íabÀ_lock_debugög
();

477  
	`ã°_øãlimôög
();

478 
	}
}

	@test/test-time.c

27 
	~"evít2/evít-c⁄fig.h
"

29 
	~<sys/ty≥s.h
>

30 
	~<sys/°©.h
>

31 
	~<f˙é.h
>

32 
	~<°dlib.h
>

33 
	~<°dio.h
>

34 
	~<°rög.h
>

35 #i‚de‡
WIN32


36 
	~<uni°d.h
>

37 
	~<sys/time.h
>

39 
	~<î∫o.h
>

41 
	~"evít2/evít.h
"

42 
	~"evít2/evít_com∑t.h
"

43 
	~"evít2/evít_°ru˘.h
"

45 
	gˇŒed
 = 0;

47 
	#NEVENT
 20000

	)

49 
evít
 *
	gev
[
NEVENT
];

52 
	$ønd_öt
(
n
)

54 #ifde‡
WIN32


55  ()(
	`ønd
(Ë% 
n
);

57  ()(
	`øndom
(Ë% 
n
);

59 
	}
}

62 
	$time_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

64 
timevÆ
 
tv
;

65 
i
, 
j
;

67 
ˇŒed
++;

69 i‡(
ˇŒed
 < 10*
NEVENT
) {

70 
i
 = 0; i < 10; i++) {

71 
j
 = 
	`ønd_öt
(
NEVENT
);

72 
tv
.
tv_£c
 = 0;

73 
tv
.
tv_u£c
 = 
	`ønd_öt
(50000);

74 i‡(
tv
.
tv_u£c
 % 2)

75 
	`evtimî_add
(
ev
[
j
], &
tv
);

77 
	`evtimî_dñ
(
ev
[
j
]);

80 
	}
}

83 
	$maö
(
¨gc
, **
¨gv
)

85 
timevÆ
 
tv
;

86 
i
;

87 #ifde‡
WIN32


88 
WORD
 
wVîsi⁄Reque°ed
;

89 
WSADATA
 
wßD©a
;

91 
wVîsi⁄Reque°ed
 = 
	`MAKEWORD
(2, 2);

93 (Ë
	`WSASèπup
(
wVîsi⁄Reque°ed
, &
wßD©a
);

97 
	`evít_öô
();

99 
i
 = 0; i < 
NEVENT
; i++) {

100 
ev
[
i
] = 
	`mÆloc
((
evít
));

103 
	`evtimî_£t
(
ev
[
i
], 
time_cb
,Év[i]);

104 
tv
.
tv_£c
 = 0;

105 
tv
.
tv_u£c
 = 
	`ønd_öt
(50000);

106 
	`evtimî_add
(
ev
[
i
], &
tv
);

109 
	`evít_di•©ch
();

111  (
ˇŒed
 < 
NEVENT
);

112 
	}
}

	@test/test-weof.c

27 
	~"evít2/evít-c⁄fig.h
"

29 #ifde‡
WIN32


30 
	~<wösock2.h
>

32 
	~<uni°d.h
>

34 
	~<sys/ty≥s.h
>

35 
	~<sys/°©.h
>

36 #ifde‡
_EVENT_HAVE_SYS_TIME_H


37 
	~<sys/time.h
>

39 #ifde‡
_EVENT_HAVE_SYS_SOCKET_H


40 
	~<sys/sockë.h
>

42 
	~<f˙é.h
>

43 
	~<°dlib.h
>

44 
	~<°dio.h
>

45 
	~<°rög.h
>

46 
	~<sig«l.h
>

47 
	~<î∫o.h
>

49 
	~"evít2/evít.h
"

50 
	~"evít2/evít_°ru˘.h
"

51 
	~"evít2/evít_com∑t.h
"

52 
	~"evít2/utû.h
"

54 #ifde‡
_EVENT___func__


55 
	#__func__
 
_EVENT___func__


	)

58 
evutû_sockë_t
 
	g∑ú
[2];

59 
	gã°_okay
 = 1;

60 
	gˇŒed
 = 0;

63 
	$wrôe_cb
(
evutû_sockë_t
 
fd
, 
evít
, *
¨g
)

65 c⁄° *
ã°
 = "test string";

66 
Àn
;

68 
Àn
 = 
	`£nd
(
fd
, 
ã°
, ()
	`°æí
(test) + 1, 0);

70 
	`¥ötf
("%s: wrôê%d%s\n", 
__func__
,

71 
Àn
,Üen ? "" : " - means EOF");

73 i‡(
Àn
 > 0) {

74 i‡(!
ˇŒed
)

75 
	`evít_add
(
¨g
, 
NULL
);

76 
	`evutû_˛o£sockë
(
∑ú
[0]);

77 } i‡(
ˇŒed
 == 1)

78 
ã°_okay
 = 0;

80 
ˇŒed
++;

81 
	}
}

84 
	$maö
(
¨gc
, **
¨gv
)

86 
evít
 
ev
;

88 #ifde‡
WIN32


89 
WORD
 
wVîsi⁄Reque°ed
;

90 
WSADATA
 
wßD©a
;

92 
wVîsi⁄Reque°ed
 = 
	`MAKEWORD
(2, 2);

94 (Ë
	`WSASèπup
(
wVîsi⁄Reque°ed
, &
wßD©a
);

97 #i‚de‡
WIN32


98 i‡(
	`sig«l
(
SIGPIPE
, 
SIG_IGN
Ë=
SIG_ERR
)

102 i‡(
	`evutû_sockë∑ú
(
AF_UNIX
, 
SOCK_STREAM
, 0, 
∑ú
) == -1)

106 
	`evít_öô
();

109 
	`evít_£t
(&
ev
, 
∑ú
[1], 
EV_WRITE
, 
wrôe_cb
, &ev);

111 
	`evít_add
(&
ev
, 
NULL
);

113 
	`evít_di•©ch
();

115  (
ã°_okay
);

116 
	}
}

	@test/tinytest.c

26 
	~<°dio.h
>

27 
	~<°dlib.h
>

28 
	~<°rög.h
>

29 
	~<as£π.h
>

31 #ifde‡
TINYTEST_LOCAL


32 
	~"töyã°_loˇl.h
"

35 #ifde‡
WIN32


36 
	~<wödows.h
>

38 
	~<sys/ty≥s.h
>

39 
	~<sys/waô.h
>

40 
	~<uni°d.h
>

43 #i‡
deföed
(
__APPLE__
Ë&& deföed(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
)

44 #i‡(
__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
 >= 1060 && \

45 
	g__ENVIRONMENT_MAC_OS_X_VERSION_MIN_REQUIRED__
 < 1070)

47 
	#FORK_BREAKS_GCOV


	)

48 
	~<v¥oc.h
>

52 #i‚de‡
__GNUC__


53 
	#__©åibuã__
(
x
)

	)

56 
	~"töyã°.h
"

57 
	~"töyã°_ma¸os.h
"

59 
	#LONGEST_TEST_NAME
 16384

	)

61 
	gö_töyã°_maö
 = 0;

62 
	gn_ok
 = 0;

63 
	gn_bad
 = 0;

64 
	gn_skù≥d
 = 0;

66 
	g›t_f‹ked
 = 0;

67 
	g›t_nof‹k
 = 0;

68 
	g›t_vîbosôy
 = 1;

69 c⁄° *
	gvîbosôy_Êag
 = "";

71 
	eoutcome
 { 
	mSKIP
=2, 
	mOK
=1, 
	mFAIL
=0 };

72 
outcome
 
	gcur_ã°_outcome
 = 0;

73 c⁄° *
	gcur_ã°_¥efix
 = 
NULL
;

75 c⁄° *
	gcur_ã°_«me
 = 
NULL
;

77 #ifde‡
WIN32


79 
	gcomm™d«me
[
MAX_PATH
+1];

82 
	$ußge
(
ã°group_t
 *
groups
, 
li°_groups
)

83 
	`__©åibuã__
((
n‹ëu∫
));

85 
outcome


86 
	$_ã°ˇ£_run_b¨e
(c⁄° 
ã°ˇ£_t
 *
ã°ˇ£
)

88 *
ív
 = 
NULL
;

89 
outcome
;

90 i‡(
ã°ˇ£
->
£tup
) {

91 
ív
 = 
ã°ˇ£
->
£tup
->
	`£tup_‚
(testcase);

92 i‡(!
ív
)

93  
FAIL
;

94 i‡(
ív
 =(*)
TT_SKIP
)

95  
SKIP
;

98 
cur_ã°_outcome
 = 
OK
;

99 
ã°ˇ£
->
	`‚
(
ív
);

100 
outcome
 = 
cur_ã°_outcome
;

102 i‡(
ã°ˇ£
->
£tup
) {

103 i‡(
ã°ˇ£
->
£tup
->
	`˛ónup_‚
—e°ˇ£, 
ív
) == 0)

104 
outcome
 = 
FAIL
;

107  
outcome
;

108 
	}
}

110 
	#MAGIC_EXITCODE
 42

	)

112 
outcome


113 
	$_ã°ˇ£_run_f‹ked
(c⁄° 
ã°group_t
 *
group
,

114 c⁄° 
ã°ˇ£_t
 *
ã°ˇ£
)

116 #ifde‡
WIN32


125 
ok
;

126 
buf„r
[
LONGEST_TEST_NAME
+256];

127 
STARTUPINFOA
 
si
;

128 
PROCESS_INFORMATION
 
öfo
;

129 
DWORD
 
exôcode
;

131 i‡(!
ö_töyã°_maö
) {

132 
	`¥ötf
("\nERROR. On Windows, _testcase_run_forked must be"

134 
	`ab‹t
();

136 i‡(
›t_vîbosôy
>0)

137 
	`¥ötf
("[forking] ");

139 
	`¢¥ötf
(
buf„r
, (buffer), "%s --RUNNING-FORKED %s %s%s",

140 
comm™d«me
, 
vîbosôy_Êag
, 
group
->
¥efix
, 
ã°ˇ£
->
«me
);

142 
	`mem£t
(&
si
, 0, (si));

143 
	`mem£t
(&
öfo
, 0, (info));

144 
si
.
cb
 = (si);

146 
ok
 = 
	`Cª©ePro˚ssA
(
comm™d«me
, 
buf„r
, 
NULL
, NULL, 0,

147 0, 
NULL
, NULL, &
si
, &
öfo
);

148 i‡(!
ok
) {

149 
	`¥ötf
("CreateProcess failed!\n");

152 
	`WaôF‹SögÀObje˘
(
öfo
.
hPro˚ss
, 
INFINITE
);

153 
	`GëExôCodePro˚ss
(
öfo
.
hPro˚ss
, &
exôcode
);

154 
	`Clo£H™dÀ
(
öfo
.
hPro˚ss
);

155 
	`Clo£H™dÀ
(
öfo
.
hThªad
);

156 i‡(
exôcode
 == 0)

157  
OK
;

158 i‡(
exôcode
 =
MAGIC_EXITCODE
)

159  
SKIP
;

161  
FAIL
;

163 
outcome_pùe
[2];

164 
pid_t
 
pid
;

165 ()
group
;

167 i‡(
	`pùe
(
outcome_pùe
))

168 
	`≥º‹
("openingÖipe");

170 i‡(
›t_vîbosôy
>0)

171 
	`¥ötf
("[forking] ");

172 
pid
 = 
	`f‹k
();

173 #ifde‡
FORK_BREAKS_GCOV


174 
	`v¥oc_å™ß˘i⁄_begö
(0);

176 i‡(!
pid
) {

178 
ã°_r
, 
wrôe_r
;

179 
b
[1];

180 
	`˛o£
(
outcome_pùe
[0]);

181 
ã°_r
 = 
	`_ã°ˇ£_run_b¨e
(
ã°ˇ£
);

182 
	`as£π
(0<=()
ã°_r
 && ()test_r<=2);

183 
b
[0] = "NYS"[
ã°_r
];

184 
wrôe_r
 = ()
	`wrôe
(
outcome_pùe
[1], 
b
, 1);

185 i‡(
wrôe_r
 != 1) {

186 
	`≥º‹
("write outcomeÅoÖipe");

187 
	`exô
(1);

189 
	`exô
(0);

190  
FAIL
;

193 
°©us
, 
r
;

194 
b
[1];

197 
	`˛o£
(
outcome_pùe
[1]);

198 
r
 = ()
	`ªad
(
outcome_pùe
[0], 
b
, 1);

199 i‡(
r
 == 0) {

200 
	`¥ötf
("[Lost connection!] ");

202 } i‡(
r
 != 1) {

203 
	`≥º‹
("read outcome fromÖipe");

205 
	`waôpid
(
pid
, &
°©us
, 0);

206 
	`˛o£
(
outcome_pùe
[0]);

207  
b
[0]=='Y' ? 
OK
 : (b[0]=='S' ? 
SKIP
 : 
FAIL
);

210 
	}
}

213 
	$ã°ˇ£_run_⁄e
(c⁄° 
ã°group_t
 *
group
,

214 c⁄° 
ã°ˇ£_t
 *
ã°ˇ£
)

216 
outcome
 outcome;

218 i‡(
ã°ˇ£
->
Êags
 & 
TT_SKIP
) {

219 i‡(
›t_vîbosôy
>0)

220 
	`¥ötf
("%s%s: SKIPPED\n",

221 
group
->
¥efix
, 
ã°ˇ£
->
«me
);

222 ++
n_skù≥d
;

223  
SKIP
;

226 i‡(
›t_vîbosôy
>0 && !
›t_f‹ked
) {

227 
	`¥ötf
("%s%s: ", 
group
->
¥efix
, 
ã°ˇ£
->
«me
);

229 i‡(
›t_vîbosôy
==0Ë
	`¥ötf
(".");

230 
cur_ã°_¥efix
 = 
group
->
¥efix
;

231 
cur_ã°_«me
 = 
ã°ˇ£
->
«me
;

234 i‡((
ã°ˇ£
->
Êags
 & 
TT_FORK
Ë&& !(
›t_f‹ked
||
›t_nof‹k
)) {

235 
outcome
 = 
	`_ã°ˇ£_run_f‹ked
(
group
, 
ã°ˇ£
);

237 
outcome
 = 
	`_ã°ˇ£_run_b¨e
(
ã°ˇ£
);

240 i‡(
outcome
 =
OK
) {

241 ++
n_ok
;

242 i‡(
›t_vîbosôy
>0 && !
›t_f‹ked
)

243 
	`puts
(
›t_vîbosôy
==1?"OK":"");

244 } i‡(
outcome
 =
SKIP
) {

245 ++
n_skù≥d
;

246 i‡(
›t_vîbosôy
>0 && !
›t_f‹ked
)

247 
	`puts
("SKIPPED");

249 ++
n_bad
;

250 i‡(!
›t_f‹ked
)

251 
	`¥ötf
("\¿ [%†FAILED]\n", 
ã°ˇ£
->
«me
);

254 i‡(
›t_f‹ked
) {

255 
	`exô
(
outcome
==
OK
 ? 0 : (outcome==
SKIP
?
MAGIC_EXITCODE
 : 1));

258  ()
outcome
;

260 
	}
}

263 
	$_töyã°_£t_Êag
(
ã°group_t
 *
groups
, c⁄° *
¨g
, 
Êag
)

265 
i
, 
j
;

266 
size_t
 
Àngth
 = 
LONGEST_TEST_NAME
;

267 
fuŒ«me
[
LONGEST_TEST_NAME
];

268 
found
=0;

269 i‡(
	`°r°r
(
¨g
, ".."))

270 
Àngth
 = 
	`°r°r
(
¨g
,"..")-arg;

271 
i
=0; 
groups
[i].
¥efix
; ++i) {

272 
j
=0; 
groups
[
i
].
ˇ£s
[j].
«me
; ++j) {

273 
	`¢¥ötf
(
fuŒ«me
, (fullname), "%s%s",

274 
groups
[
i
].
¥efix
, groups[i].
ˇ£s
[
j
].
«me
);

275 i‡(!
Êag
)

276 
	`¥ötf
(" %s\n", 
fuŒ«me
);

277 i‡(!
	`°∫cmp
(
fuŒ«me
, 
¨g
, 
Àngth
)) {

278 
groups
[
i
].
ˇ£s
[
j
].
Êags
 |
Êag
;

279 ++
found
;

283  
found
;

284 
	}
}

287 
	$ußge
(
ã°group_t
 *
groups
, 
li°_groups
)

289 
	`puts
("Optionsáre: [--verbose|--quiet|--terse] [--no-fork]");

290 
	`puts
(" SpecifyÅests byÇame, or usingáÖrefixÉnding with '..'");

291 
	`puts
(" To skipáÅest,Üist give itsÇameÖrefixed withá colon.");

292 
	`puts
(" Use --list-tests foráÜist ofÅests.");

293 i‡(
li°_groups
) {

294 
	`puts
("KnownÅestsáre:");

295 
	`_töyã°_£t_Êag
(
groups
, "..", 0);

297 
	`exô
(0);

298 
	}
}

301 
	$töyã°_maö
(
c
, c⁄° **
v
, 
ã°group_t
 *
groups
)

303 
i
, 
j
, 
n
=0;

305 #ifde‡
WIN32


306 c⁄° *
•
 = 
	`°ºchr
(
v
[0], '.');

307 c⁄° *
exãnsi⁄
 = "";

308 i‡(!
•
 || 
	`°ricmp
(sp, ".exe"))

309 
exãnsi⁄
 = ".exe";

310 
	`¢¥ötf
(
comm™d«me
, (comm™d«me), "%s%s", 
v
[0], 
exãnsi⁄
);

311 
comm™d«me
[
MAX_PATH
]='\0';

313 
i
=1; i<
c
; ++i) {

314 i‡(
v
[
i
][0] == '-') {

315 i‡(!
	`°rcmp
(
v
[
i
], "--RUNNING-FORKED")) {

316 
›t_f‹ked
 = 1;

317 } i‡(!
	`°rcmp
(
v
[
i
], "--no-fork")) {

318 
›t_nof‹k
 = 1;

319 } i‡(!
	`°rcmp
(
v
[
i
], "--quiet")) {

320 
›t_vîbosôy
 = -1;

321 
vîbosôy_Êag
 = "--quiet";

322 } i‡(!
	`°rcmp
(
v
[
i
], "--verbose")) {

323 
›t_vîbosôy
 = 2;

324 
vîbosôy_Êag
 = "--verbose";

325 } i‡(!
	`°rcmp
(
v
[
i
], "--terse")) {

326 
›t_vîbosôy
 = 0;

327 
vîbosôy_Êag
 = "--terse";

328 } i‡(!
	`°rcmp
(
v
[
i
], "--help")) {

329 
	`ußge
(
groups
, 0);

330 } i‡(!
	`°rcmp
(
v
[
i
], "--list-tests")) {

331 
	`ußge
(
groups
, 1);

333 
	`¥ötf
("Unknow¿›ti⁄ %s. Try --hñp\n",
v
[
i
]);

337 c⁄° *
ã°
 = 
v
[
i
];

338 
Êag
 = 
_TT_ENABLED
;

339 i‡(
ã°
[0] == ':') {

340 ++
ã°
;

341 
Êag
 = 
TT_SKIP
;

343 ++
n
;

345 i‡(!
	`_töyã°_£t_Êag
(
groups
, 
ã°
, 
Êag
)) {

346 
	`¥ötf
("NÿsuchÅe°á†%s!\n", 
v
[
i
]);

351 i‡(!
n
)

352 
	`_töyã°_£t_Êag
(
groups
, "..", 
_TT_ENABLED
);

354 
	`£tvbuf
(
°dout
, 
NULL
, 
_IONBF
, 0);

356 ++
ö_töyã°_maö
;

357 
i
=0; 
groups
[i].
¥efix
; ++i)

358 
j
=0; 
groups
[
i
].
ˇ£s
[j].
«me
; ++j)

359 i‡(
groups
[
i
].
ˇ£s
[
j
].
Êags
 & 
_TT_ENABLED
)

360 
	`ã°ˇ£_run_⁄e
(&
groups
[
i
],

361 &
groups
[
i
].
ˇ£s
[
j
]);

363 --
ö_töyã°_maö
;

365 i‡(
›t_vîbosôy
==0)

366 
	`puts
("");

368 i‡(
n_bad
)

369 
	`¥ötf
("%d/%d TESTS FAILED. (%d skù≥d)\n", 
n_bad
,

370 
n_bad
+
n_ok
,
n_skù≥d
);

371 i‡(
›t_vîbosôy
 >= 1)

372 
	`¥ötf
("%dÅe°†ok. (%d skù≥d)\n", 
n_ok
, 
n_skù≥d
);

374  (
n_bad
 == 0) ? 0 : 1;

375 
	}
}

378 
	$_töyã°_gë_vîbosôy
()

380  
›t_vîbosôy
;

381 
	}
}

384 
	$_töyã°_£t_ã°_Áûed
()

386 i‡(
›t_vîbosôy
 <0 && 
cur_ã°_«me
) {

387 i‡(
›t_vîbosôy
==0Ë
	`puts
("");

388 
	`¥ötf
("%s%s: ", 
cur_ã°_¥efix
, 
cur_ã°_«me
);

389 
cur_ã°_«me
 = 
NULL
;

391 
cur_ã°_outcome
 = 0;

392 
	}
}

395 
	$_töyã°_£t_ã°_skù≥d
()

397 i‡(
cur_ã°_outcome
==
OK
)

398 
cur_ã°_outcome
 = 
SKIP
;

399 
	}
}

	@test/tinytest.h

26 #i‚de‡
_TINYTEST_H


27 
	#_TINYTEST_H


	)

30 
	#TT_FORK
 (1<<0)

	)

32 
	#TT_SKIP
 (1<<1)

	)

34 
	#_TT_ENABLED
 (1<<2)

	)

36 
	#TT_FIRST_USER_FLAG
 (1<<3)

	)

38 (*
	tã°ˇ£_‚
)(*);

40 
ã°ˇ£_t
;

43 
	sã°ˇ£_£tup_t
 {

45 *(*
£tup_‚
)(c⁄° 
ã°ˇ£_t
 *);

47 (*
˛ónup_‚
)(c⁄° 
ã°ˇ£_t
 *, *);

51 
	sã°ˇ£_t
 {

52 c⁄° *
«me
;

53 
ã°ˇ£_‚
 
‚
;

54 
Êags
;

55 c⁄° 
ã°ˇ£_£tup_t
 *
£tup
;

56 *
£tup_d©a
;

58 
	#END_OF_TESTCASES
 { 
NULL
, NULL, 0, NULL, NULL 
	}

	)
}

61 
	sã°group_t
 {

62 c⁄° *
	m¥efix
;

63 
ã°ˇ£_t
 *
	mˇ£s
;

65 
	#END_OF_GROUPS
 { 
NULL
, NULL}

	)

68 
_töyã°_£t_ã°_Áûed
();

70 
_töyã°_£t_ã°_skù≥d
();

72 
_töyã°_gë_vîbosôy
();

75 
_töyã°_£t_Êag
(
ã°group_t
 *, const *, );

78 
	#töyã°_skù
(
groups
, 
«med
) \

79 
	`_töyã°_£t_Êag
(
groups
, 
«med
, 
TT_SKIP
)

	)

82 
ã°ˇ£_run_⁄e
(c⁄° 
ã°group_t
 *,c⁄° 
ã°ˇ£_t
 *);

85 
töyã°_maö
(
¨gc
, c⁄° **
¨gv
, 
ã°group_t
 *
groups
);

	@test/tinytest_local.h

2 #ifde‡
WIN32


3 
	~<wösock2.h
>

6 
	~"evít2/utû.h
"

7 
	~"utû-öã∫Æ.h
"

9 #ifde‡
¢¥ötf


10 #unde‡
¢¥ötf


12 
	#¢¥ötf
 
evutû_¢¥ötf


	)

	@test/tinytest_macros.h

26 #i‚de‡
_TINYTEST_MACROS_H


27 
	#_TINYTEST_MACROS_H


	)

30 
	#TT_STMT_BEGIN
 dÿ{

	)

31 
	#TT_STMT_END
 } 0)

	)

35 #i‚de‡
TT_EXIT_TEST_FUNCTION


36 
	#TT_EXIT_TEST_FUNCTION
 
TT_STMT_BEGIN
 
íd
; 
TT_STMT_END


	)

40 #i‚de‡
TT_DECLARE


41 
	#TT_DECLARE
(
¥efix
, 
¨gs
) \

42 
TT_STMT_BEGIN
 \

43 
	`¥ötf
("\¿ %†%s:%d: ",
¥efix
,
__FILE__
,
__LINE__
); \

44 
¥ötf
 
¨gs
 ; \

45 
TT_STMT_END


	)

49 
	#TT_GRIPE
(
¨gs
Ë
	`TT_DECLARE
("FAIL",árgs)

	)

52 
	#TT_BLATHER
(
¨gs
) \

53 
TT_STMT_BEGIN
 \

54 i‡(
	`_töyã°_gë_vîbosôy
()>1Ë
	`TT_DECLARE
(" OK", 
¨gs
); \

55 
TT_STMT_END


	)

57 
	#TT_DIE
(
¨gs
) \

58 
TT_STMT_BEGIN
 \

59 
	`_töyã°_£t_ã°_Áûed
(); \

60 
	`TT_GRIPE
(
¨gs
); \

61 
TT_EXIT_TEST_FUNCTION
; \

62 
TT_STMT_END


	)

64 
	#TT_FAIL
(
¨gs
) \

65 
TT_STMT_BEGIN
 \

66 
	`_töyã°_£t_ã°_Áûed
(); \

67 
	`TT_GRIPE
(
¨gs
); \

68 
TT_STMT_END


	)

71 
	#â_ab‹t_¥ötf
(
msg
Ë
	`TT_DIE
(msg)

	)

72 
	#â_ab‹t_≥º‹
(
›
Ë
	`TT_DIE
(("%s: %†[%d]",(›),
	`°ªº‹
(
î∫o
),Éºno))

	)

73 
	#â_ab‹t_msg
(
msg
Ë
	`TT_DIE
(("%s", msg))

	)

74 
	#â_ab‹t
(Ë
	`TT_DIE
(("%s", "(Faûed.)"))

	)

77 
	#â_Áû_¥ötf
(
msg
Ë
	`TT_FAIL
(msg)

	)

78 
	#â_Áû_≥º‹
(
›
Ë
	`TT_FAIL
(("%s: %†[%d]",(›),
	`°ªº‹
(
î∫o
),Éºno))

	)

79 
	#â_Áû_msg
(
msg
Ë
	`TT_FAIL
(("%s", msg))

	)

80 
	#â_Áû
(Ë
	`TT_FAIL
(("%s", "(Faûed.)"))

	)

83 
	#â_skù
() \

84 
TT_STMT_BEGIN
 \

85 
	`_töyã°_£t_ã°_skù≥d
(); \

86 
TT_EXIT_TEST_FUNCTION
; \

87 
TT_STMT_END


	)

89 
	#_â_w™t
(
b
, 
msg
, 
Áû
) \

90 
TT_STMT_BEGIN
 \

91 i‡(!(
b
)) { \

92 
	`_töyã°_£t_ã°_Áûed
(); \

93 
	`TT_GRIPE
(("%s",
msg
)); \

94 
Áû
; \

96 
	`TT_BLATHER
(("%s",
msg
)); \

98 
TT_STMT_END


	)

101 
	#â_w™t_msg
(
b
, 
msg
) \

102 
	`_â_w™t
(
b
, 
msg
, );

	)

105 
	#â_as£π_msg
(
b
, 
msg
) \

106 
	`_â_w™t
(
b
, 
msg
, 
TT_EXIT_TEST_FUNCTION
);

	)

109 
	#â_w™t
(
b
Ë
	`â_w™t_msg
–(b), "w™t("#b")")

	)

111 
	#â_as£π
(
b
Ë
	`â_as£π_msg
((b), "as£π("#b")")

	)

113 
	#â_as£π_ã°_fmt_ty≥
(
a
,
b
,
°r_ã°
,
ty≥
,
ã°
,
¥ötf_ty≥
,
¥ötf_fmt
, \

114 
£tup_block
,
˛ónup_block
,
dõ_⁄_Áû
) \

115 
TT_STMT_BEGIN
 \

116 
ty≥
 
_vÆ1
 = (ty≥)(
a
); \

117 
ty≥
 
_vÆ2
 = (ty≥)(
b
); \

118 
_â_°©us
 = (
ã°
); \

119 i‡(!
_â_°©us
 || 
	`_töyã°_gë_vîbosôy
()>1) { \

120 
¥ötf_ty≥
 
_¥öt
; \

121 
¥ötf_ty≥
 
_¥öt1
; \

122 
¥ötf_ty≥
 
_¥öt2
; \

123 
ty≥
 
_vÆue
 = 
_vÆ1
; \

124 
£tup_block
; \

125 
_¥öt1
 = 
_¥öt
; \

126 
_vÆue
 = 
_vÆ2
; \

127 
£tup_block
; \

128 
_¥öt2
 = 
_¥öt
; \

129 
	`TT_DECLARE
(
_â_°©us
?" OK":"FAIL", \

130 ("as£π(%s): "
¥ötf_fmt
" vs "printf_fmt, \

131 
°r_ã°
, 
_¥öt1
, 
_¥öt2
)); \

132 
_¥öt
 = 
_¥öt1
; \

133 
˛ónup_block
; \

134 
_¥öt
 = 
_¥öt2
; \

135 
˛ónup_block
; \

136 i‡(!
_â_°©us
) { \

137 
	`_töyã°_£t_ã°_Áûed
(); \

138 
dõ_⁄_Áû
 ; \

141 
TT_STMT_END


	)

143 
	#â_as£π_ã°_ty≥
(
a
,
b
,
°r_ã°
,
ty≥
,
ã°
,
fmt
,
dõ_⁄_Áû
) \

144 
	`â_as£π_ã°_fmt_ty≥
(
a
,
b
,
°r_ã°
,
ty≥
,
ã°
,ty≥,
fmt
, \

145 {
_¥öt
=
_vÆue
;},{},
dõ_⁄_Áû
)

	)

149 
	#â_as£π_›_ty≥
(
a
,
›
,
b
,
ty≥
,
fmt
) \

150 
	`â_as£π_ã°_ty≥
(
a
,
b
,#a" "#›" "#b,
ty≥
,(
_vÆ1
 
›
 
_vÆ2
),
fmt
, \

151 
TT_EXIT_TEST_FUNCTION
)

	)

153 
	#â_öt_›
(
a
,
›
,
b
) \

154 
	`â_as£π_ã°_ty≥
(
a
,
b
,#a" "#›" "#b,,(
_vÆ1
 
›
 
_vÆ2
), \

155 "%ld",
TT_EXIT_TEST_FUNCTION
)

	)

157 
	#â_uöt_›
(
a
,
›
,
b
) \

158 
	`â_as£π_ã°_ty≥
(
a
,
b
,#a" "#op" "#b,, \

159 (
_vÆ1
 
›
 
_vÆ2
),"%lu",
TT_EXIT_TEST_FUNCTION
)

	)

161 
	#â_±r_›
(
a
,
›
,
b
) \

162 
	`â_as£π_ã°_ty≥
(
a
,
b
,#a" "#op" "#b,*, \

163 (
_vÆ1
 
›
 
_vÆ2
),"%p",
TT_EXIT_TEST_FUNCTION
)

	)

165 
	#â_°r_›
(
a
,
›
,
b
) \

166 
	`â_as£π_ã°_ty≥
(
a
,
b
,#a" "#op" "#b,const *, \

167 (
	`°rcmp
(
_vÆ1
,
_vÆ2
Ë
›
 0),"<%s>",
TT_EXIT_TEST_FUNCTION
)

	)

169 
	#â_w™t_öt_›
(
a
,
›
,
b
) \

170 
	`â_as£π_ã°_ty≥
(
a
,
b
,#a" "#›" "#b,,(
_vÆ1
 
›
 
_vÆ2
),"%ld",()0)

	)

172 
	#â_w™t_uöt_›
(
a
,
›
,
b
) \

173 
	`â_as£π_ã°_ty≥
(
a
,
b
,#a" "#op" "#b,, \

174 (
_vÆ1
 
›
 
_vÆ2
),"%lu",()0)

	)

176 
	#â_w™t_±r_›
(
a
,
›
,
b
) \

177 
	`â_as£π_ã°_ty≥
(
a
,
b
,#a" "#op" "#b,*, \

178 (
_vÆ1
 
›
 
_vÆ2
),"%p",()0)

	)

180 
	#â_w™t_°r_›
(
a
,
›
,
b
) \

181 
	`â_as£π_ã°_ty≥
(
a
,
b
,#a" "#op" "#b,const *, \

182 (
	`°rcmp
(
_vÆ1
,
_vÆ2
Ë
›
 0),"<%s>",()0)

	)

	@util-internal.h

26 #i‚de‡
_EVENT_UTIL_INTERNAL_H


27 
	#_EVENT_UTIL_INTERNAL_H


	)

29 
	~"evít2/evít-c⁄fig.h
"

30 
	~<î∫o.h
>

33 
	~"log-öã∫Æ.h
"

34 
	~<°dio.h
>

35 
	~<°dlib.h
>

36 #ifde‡
_EVENT_HAVE_SYS_SOCKET_H


37 
	~<sys/sockë.h
>

39 
	~"evít2/utû.h
"

41 
	~"ùv6-öã∫Æ.h
"

43 #ifde‡
__˝lu•lus


48 #ifde‡
_EVENT_ölöe


49 
	#ölöe
 
_EVENT_ölöe


	)

51 #ifde‡
_EVENT___func__


52 
	#__func__
 
_EVENT___func__


	)

56 
	#_EVUTIL_NIL_STMT
 (()0)

	)

62 
	#_EVUTIL_NIL_CONDITION
(
c⁄dôi⁄
) do { \

63 ()(!(
c⁄dôi⁄
)); \

64 } 0)

	)

74 #i‚de‡
WIN32


77 
	#EVUTIL_ERR_RW_RETRIABLE
(
e
) \

78 ((
e
Ë=
EINTR
 || (eË=
EAGAIN
)

	)

80 
	#EVUTIL_ERR_CONNECT_RETRIABLE
(
e
) \

81 ((
e
Ë=
EINTR
 || (eË=
EINPROGRESS
)

	)

83 
	#EVUTIL_ERR_ACCEPT_RETRIABLE
(
e
) \

84 ((
e
Ë=
EINTR
 || (eË=
EAGAIN
 || (eË=
ECONNABORTED
)

	)

87 
	#EVUTIL_ERR_CONNECT_REFUSED
(
e
) \

88 ((
e
Ë=
ECONNREFUSED
)

	)

92 
	#EVUTIL_ERR_RW_RETRIABLE
(
e
) \

93 ((
e
Ë=
WSAEWOULDBLOCK
 || \

94 (
e
Ë=
WSAEINTR
)

	)

96 
	#EVUTIL_ERR_CONNECT_RETRIABLE
(
e
) \

97 ((
e
Ë=
WSAEWOULDBLOCK
 || \

98 (
e
Ë=
WSAEINTR
 || \

99 (
e
Ë=
WSAEINPROGRESS
 || \

100 (
e
Ë=
WSAEINVAL
)

	)

102 
	#EVUTIL_ERR_ACCEPT_RETRIABLE
(
e
) \

103 
	`EVUTIL_ERR_RW_RETRIABLE
(
e
)

	)

105 
	#EVUTIL_ERR_CONNECT_REFUSED
(
e
) \

106 ((
e
Ë=
WSAECONNREFUSED
)

	)

110 #ifde‡
_EVENT_sockÀn_t


111 
	#sockÀn_t
 
_EVENT_sockÀn_t


	)

115 #ifde‡
SHUT_RD


116 
	#EVUTIL_SHUT_RD
 
SHUT_RD


	)

118 
	#EVUTIL_SHUT_RD
 0

	)

120 #ifde‡
SHUT_WR


121 
	#EVUTIL_SHUT_WR
 
SHUT_WR


	)

123 
	#EVUTIL_SHUT_WR
 1

	)

125 #ifde‡
SHUT_BOTH


126 
	#EVUTIL_SHUT_BOTH
 
SHUT_BOTH


	)

128 
	#EVUTIL_SHUT_BOTH
 2

	)

135 
EVUTIL_ISALPHA
(
c
);

136 
EVUTIL_ISALNUM
(
c
);

137 
EVUTIL_ISSPACE
(
c
);

138 
EVUTIL_ISDIGIT
(
c
);

139 
EVUTIL_ISXDIGIT
(
c
);

140 
EVUTIL_ISPRINT
(
c
);

141 
EVUTIL_ISLOWER
(
c
);

142 
EVUTIL_ISUPPER
(
c
);

143 
EVUTIL_TOUPPER
(
c
);

144 
EVUTIL_TOLOWER
(
c
);

161 
	#EVUTIL_UPCAST
(
±r
, 
ty≥
, 
fõld
) \

162 ((
ty≥
 *)(((*)(
±r
)Ë- 
	`evutû_off£tof
—y≥, 
fõld
)))

	)

167 
evutû_›í_˛o£⁄exec
(c⁄° *
∑th«me
, 
Êags
, 
mode
);

169 
evutû_ªad_fûe
(c⁄° *
fûíame
, **
c⁄ã¡_out
, 
size_t
 *
Àn_out
,

170 
is_bö¨y
);

172 
evutû_sockë_c⁄√˘
(
evutû_sockë_t
 *
fd_±r
, 
sockaddr
 *
ß
, 
sockÀn
);

174 
evutû_sockë_föished_c⁄√˘ög
(
evutû_sockë_t
 
fd
);

176 
evutû_îßtz_sockë∑ú
(, , , 
evutû_sockë_t
[]);

178 
evutû_ªsﬁve
(
Ámûy
, c⁄° *
ho°«me
, 
sockaddr
 *
ß
,

179 
ev_sockÀn_t
 *
sockÀn
, 
p‹t
);

181 c⁄° *
evutû_gëív
(c⁄° *
«me
);

183 
_evutû_wókønd
();

187 #i‡
deföed
(
__GNUC__
) && __GNUC__ >= 3

188 
	#EVUTIL_UNLIKELY
(
p
Ë
	`__buûtö_ex≥˘
(!!’),0)

	)

190 
	#EVUTIL_UNLIKELY
(
p
Ë’)

	)

194 #ifde‡
NDEBUG


195 
	#EVUTIL_ASSERT
(
c⁄d
Ë
	`_EVUTIL_NIL_CONDITION
(c⁄d)

	)

196 
	#EVUTIL_FAILURE_CHECK
(
c⁄d
Ë0

	)

198 
	#EVUTIL_ASSERT
(
c⁄d
) \

200 i‡(
	`EVUTIL_UNLIKELY
(!(
c⁄d
))) { \

201 
	`evít_îrx
(
_EVENT_ERR_ABORT
, \

203 
__FILE__
,
__LINE__
,#c⁄d,
__func__
); \

206 ()
	`Ârötf
(
°dîr
, \

208 
__FILE__
,
__LINE__
,#c⁄d,
__func__
); \

209 
	`ab‹t
(); \

211 } 0)

	)

212 
	#EVUTIL_FAILURE_CHECK
(
c⁄d
Ë
	`EVUTIL_UNLIKELY
(c⁄d)

	)

215 #i‚de‡
_EVENT_HAVE_STRUCT_SOCKADDR_STORAGE


219 
	ssockaddr_°‹age
 {

221 
sockaddr
 
ss_ß
;

222 
sockaddr_ö
 
ss_sö
;

223 
sockaddr_ö6
 
ss_sö6
;

224 
ss_∑ddög
[128];

225 } 
ss_uni⁄
;

227 
	#ss_Ámûy
 
ss_uni⁄
.
ss_ß
.
ß_Ámûy


	)

233 
	#EVUTIL_EAI_NEED_RESOLVE
 -90002

	)

235 
evdns_ba£
;

236 
evdns_gëaddröfo_ªque°
;

237 
evdns_gëaddröfo_ªque°
* (*
	tevdns_gëaddröfo_‚
)(

238 
	tevdns_ba£
 *
	tba£
,

239 c⁄° *
	tnodíame
, c⁄° *
	t£rv«me
,

240 c⁄° 
	tevutû_addröfo
 *
	thöts_ö
,

241 (*
	tcb
)(, 
	tevutû_addröfo
 *, *), *
	t¨g
);

243 
evutû_£t_evdns_gëaddröfo_‚
(
evdns_gëaddröfo_‚
 
‚
);

245 
evutû_addröfo
 *
evutû_√w_addröfo
(
sockaddr
 *
ß
,

246 
ev_sockÀn_t
 
sockÀn
, c⁄° 
evutû_addröfo
 *
höts
);

247 
evutû_addröfo
 *
evutû_addröfo_≠≥nd
(evutû_addröfÿ*
fú°
,

248 
evutû_addröfo
 *
≠≥nd
);

249 
evutû_adju°_höts_f‹_addrc⁄fig
(
evutû_addröfo
 *
höts
);

250 
evutû_gëaddröfo_comm⁄
(c⁄° *
nodíame
, c⁄° *
£rv«me
,

251 
evutû_addröfo
 *
höts
, evutû_addröfÿ**
ªs
, *
p‹äum
);

253 
evutû_gëaddröfo_async
(
evdns_ba£
 *
dns_ba£
,

254 c⁄° *
nodíame
, c⁄° *
£rv«me
,

255 c⁄° 
evutû_addröfo
 *
höts_ö
,

256 (*
cb
)(, 
evutû_addröfo
 *, *), *
¨g
);

260 
evutû_sockaddr_is_lo›back
(c⁄° 
sockaddr
 *
ß
);

268 c⁄° *
evutû_f‹m©_sockaddr_p‹t
(c⁄° 
sockaddr
 *
ß
, *
out
, 
size_t
 
ouéí
);

270 
evutû_tv_to_m£c
(c⁄° 
timevÆ
 *
tv
);

272 
evutû_hex_ch¨_to_öt
(
c
);

274 #ifde‡
WIN32


275 
HANDLE
 
evutû_lﬂd_wödows_sy°em_libøry
(c⁄° 
TCHAR
 *
libøry_«me
);

278 #i‚de‡
EV_SIZE_FMT


279 #i‡
deföed
(
_MSC_VER
Ë|| deföed(
__MINGW32__
Ë|| deföed(
__MINGW64__
)

280 
	#EV_U64_FMT
 "%I64u"

	)

281 
	#EV_I64_FMT
 "%I64d"

	)

282 
	#EV_I64_ARG
(
x
Ë((
__öt64
)(x))

	)

283 
	#EV_U64_ARG
(
x
Ë((
__öt64
)(x))

	)

285 
	#EV_U64_FMT
 "%Œu"

	)

286 
	#EV_I64_FMT
 "%Œd"

	)

287 
	#EV_I64_ARG
(
x
Ë(()(x))

	)

288 
	#EV_U64_ARG
(
x
Ë(()(x))

	)

292 #ifde‡
_WIN32


293 
	#EV_SOCK_FMT
 
EV_I64_FMT


	)

294 
	#EV_SOCK_ARG
(
x
Ë
	`EV_I64_ARG
((x))

	)

296 
	#EV_SOCK_FMT
 "%d"

	)

297 
	#EV_SOCK_ARG
(
x
Ë(x)

	)

300 #i‡
deföed
(
__STDC__
Ë&& deföed(
__STDC_VERSION__
)

301 #i‡(
__STDC_VERSION__
 >= 199901L)

302 
	#EV_SIZE_FMT
 "%zu"

	)

303 
	#EV_SSIZE_FMT
 "%zd"

	)

304 
	#EV_SIZE_ARG
(
x
Ë(x)

	)

305 
	#EV_SSIZE_ARG
(
x
Ë(x)

	)

309 #i‚de‡
EV_SIZE_FMT


310 #i‡(
_EVENT_SIZEOF_SIZE_T
 <
_EVENT_SIZEOF_LONG
)

311 
	#EV_SIZE_FMT
 "%lu"

	)

312 
	#EV_SSIZE_FMT
 "%ld"

	)

313 
	#EV_SIZE_ARG
(
x
Ë(()(x))

	)

314 
	#EV_SSIZE_ARG
(
x
Ë(()(x))

	)

316 
	#EV_SIZE_FMT
 
EV_U64_FMT


	)

317 
	#EV_SSIZE_FMT
 
EV_I64_FMT


	)

318 
	#EV_SIZE_ARG
(
x
Ë
	`EV_U64_ARG
(x)

	)

319 
	#EV_SSIZE_ARG
(
x
Ë
	`EV_I64_ARG
(x)

	)

323 #ifde‡
__˝lu•lus


	@win32select.c

29 
	~<wösock2.h
>

30 
	~<wödows.h
>

31 
	~<sys/ty≥s.h
>

32 
	~<sys/queue.h
>

33 
	~<limôs.h
>

34 
	~<sig«l.h
>

35 
	~<°dio.h
>

36 
	~<°dlib.h
>

37 
	~<°rög.h
>

38 
	~<î∫o.h
>

40 
	~"evít2/utû.h
"

41 
	~"evít2/evít-c⁄fig.h
"

42 
	~"utû-öã∫Æ.h
"

43 
	~"log-öã∫Æ.h
"

44 
	~"evít2/evít.h
"

45 
	~"evít-öã∫Æ.h
"

46 
	~"evm≠-öã∫Æ.h
"

47 
	~"evít2/thªad.h
"

48 
	~"evthªad-öã∫Æ.h
"

50 
	#XFREE
(
±r
Ëdÿ{ i‡’åË
	`mm_‰ì
’å); } 0)

	)

52 
evít_li°
 
timequeue
;

53 
evít_li°
 
addqueue
;

55 
	swö_fd_£t
 {

56 
u_öt
 
	mfd_cou¡
;

57 
SOCKET
 
	mfd_¨øy
[1];

61 vﬁ©ûê
	gSIGFPE_REQ
 = 0.0f;

63 
	sidx_öfo
 {

64 
	mªad_pos_∂us1
;

65 
	mwrôe_pos_∂us1
;

68 
	swö32›
 {

69 
	mnum_fds_ö_fd_£ts
;

70 
	mªsize_out_£ts
;

71 
wö_fd_£t
 *
	mªad£t_ö
;

72 
wö_fd_£t
 *
	mwrôe£t_ö
;

73 
wö_fd_£t
 *
	mªad£t_out
;

74 
wö_fd_£t
 *
	mwrôe£t_out
;

75 
wö_fd_£t
 *
	mex£t_out
;

76 
	msig«ls_¨e_brokí
 : 1;

79 *
wö32_öô
(
evít_ba£
 *);

80 
wö32_add
(
evít_ba£
 *, 
evutû_sockë_t
, 
ﬁd
, 
evíts
, *
_idx
);

81 
wö32_dñ
(
evít_ba£
 *, 
evutû_sockë_t
, 
ﬁd
, 
evíts
, *
_idx
);

82 
wö32_di•©ch
(
evít_ba£
 *
ba£
, 
timevÆ
 *);

83 
wö32_dóŒoc
(
evít_ba£
 *);

85 
evít›
 
	gwö32›s
 = {

87 
wö32_öô
,

88 
wö32_add
,

89 
wö32_dñ
,

90 
wö32_di•©ch
,

91 
wö32_dóŒoc
,

94 (
idx_öfo
),

97 
	#FD_SET_ALLOC_SIZE
(
n
Ë(((
wö_fd_£t
Ë+ (“)-1)*(
SOCKET
)))

	)

100 
	$grow_fd_£ts
(
wö32›
 *
›
, 
√w_num_fds
)

102 
size_t
 
size
;

104 
	`EVUTIL_ASSERT
(
√w_num_fds
 >
›
->
ªad£t_ö
->
fd_cou¡
 &&

105 
√w_num_fds
 >
›
->
wrôe£t_ö
->
fd_cou¡
);

106 
	`EVUTIL_ASSERT
(
√w_num_fds
 >= 1);

108 
size
 = 
	`FD_SET_ALLOC_SIZE
(
√w_num_fds
);

109 i‡(!(
›
->
ªad£t_ö
 = 
	`mm_ªÆloc
(›->ªad£t_ö, 
size
)))

111 i‡(!(
›
->
wrôe£t_ö
 = 
	`mm_ªÆloc
(›->wrôe£t_ö, 
size
)))

113 
›
->
ªsize_out_£ts
 = 1;

114 
›
->
num_fds_ö_fd_£ts
 = 
√w_num_fds
;

116 
	}
}

119 
	$do_fd_£t
(
wö32›
 *
›
, 
idx_öfo
 *
ít
, 
evutû_sockë_t
 
s
, 
ªad
)

121 
wö_fd_£t
 *
£t
 = 
ªad
 ? 
›
->
ªad£t_ö
 : op->
wrôe£t_ö
;

122 i‡(
ªad
) {

123 i‡(
ít
->
ªad_pos_∂us1
 > 0)

126 i‡(
ít
->
wrôe_pos_∂us1
 > 0)

129 i‡(
£t
->
fd_cou¡
 =
›
->
num_fds_ö_fd_£ts
) {

130 i‡(
	`grow_fd_£ts
(
›
, op->
num_fds_ö_fd_£ts
*2))

133 
£t
 = 
ªad
 ? 
›
->
ªad£t_ö
 : op->
wrôe£t_ö
;

135 
£t
->
fd_¨øy
[£t->
fd_cou¡
] = 
s
;

136 i‡(
ªad
)

137 
ít
->
ªad_pos_∂us1
 = 
£t
->
fd_cou¡
+1;

139 
ít
->
wrôe_pos_∂us1
 = 
£t
->
fd_cou¡
+1;

140  (
£t
->
fd_cou¡
++);

141 
	}
}

144 
	$do_fd_˛ór
(
evít_ba£
 *
ba£
,

145 
wö32›
 *
›
, 
idx_öfo
 *
ít
, 
ªad
)

147 
i
;

148 
wö_fd_£t
 *
£t
 = 
ªad
 ? 
›
->
ªad£t_ö
 : op->
wrôe£t_ö
;

149 i‡(
ªad
) {

150 
i
 = 
ít
->
ªad_pos_∂us1
 - 1;

151 
ít
->
ªad_pos_∂us1
 = 0;

153 
i
 = 
ít
->
wrôe_pos_∂us1
 - 1;

154 
ít
->
wrôe_pos_∂us1
 = 0;

156 i‡(
i
 < 0)

158 i‡(--
£t
->
fd_cou¡
 !()
i
) {

159 
idx_öfo
 *
ít2
;

160 
SOCKET
 
s2
;

161 
s2
 = 
£t
->
fd_¨øy
[
i
] = së->fd_¨øy[£t->
fd_cou¡
];

163 
ít2
 = 
	`evm≠_io_gë_fdöfo
(&
ba£
->
io
, 
s2
);

165 i‡(!
ít2
)

167 i‡(
ªad
)

168 
ít2
->
ªad_pos_∂us1
 = 
i
+1;

170 
ít2
->
wrôe_pos_∂us1
 = 
i
+1;

173 
	}
}

175 
	#NEVENT
 32

	)

177 
	$wö32_öô
(
evít_ba£
 *
_ba£
)

179 
wö32›
 *
wö›
;

180 
size_t
 
size
;

181 i‡(!(
wö›
 = 
	`mm_ˇŒoc
(1, (
wö32›
))))

182  
NULL
;

183 
wö›
->
num_fds_ö_fd_£ts
 = 
NEVENT
;

184 
size
 = 
	`FD_SET_ALLOC_SIZE
(
NEVENT
);

185 i‡(!(
wö›
->
ªad£t_ö
 = 
	`mm_mÆloc
(
size
)))

186 
îr
;

187 i‡(!(
wö›
->
wrôe£t_ö
 = 
	`mm_mÆloc
(
size
)))

188 
îr
;

189 i‡(!(
wö›
->
ªad£t_out
 = 
	`mm_mÆloc
(
size
)))

190 
îr
;

191 i‡(!(
wö›
->
wrôe£t_out
 = 
	`mm_mÆloc
(
size
)))

192 
îr
;

193 i‡(!(
wö›
->
ex£t_out
 = 
	`mm_mÆloc
(
size
)))

194 
îr
;

195 
wö›
->
ªad£t_ö
->
fd_cou¡
 = wö›->
wrôe£t_ö
->fd_count = 0;

196 
wö›
->
ªad£t_out
->
fd_cou¡
 = wö›->
wrôe£t_out
->fd_count

197 
wö›
->
ex£t_out
->
fd_cou¡
 = 0;

199 i‡(
	`evsig_öô
(
_ba£
) < 0)

200 
wö›
->
sig«ls_¨e_brokí
 = 1;

202  (
wö›
);

203 
îr
:

204 
	`XFREE
(
wö›
->
ªad£t_ö
);

205 
	`XFREE
(
wö›
->
wrôe£t_ö
);

206 
	`XFREE
(
wö›
->
ªad£t_out
);

207 
	`XFREE
(
wö›
->
wrôe£t_out
);

208 
	`XFREE
(
wö›
->
ex£t_out
);

209 
	`XFREE
(
wö›
);

210  (
NULL
);

211 
	}
}

214 
	$wö32_add
(
evít_ba£
 *
ba£
, 
evutû_sockë_t
 
fd
,

215 
ﬁd
, 
evíts
, *
_idx
)

217 
wö32›
 *wö32› = 
ba£
->
evba£
;

218 
idx_öfo
 *
idx
 = 
_idx
;

220 i‡((
evíts
 & 
EV_SIGNAL
Ë&& 
wö32›
->
sig«ls_¨e_brokí
)

223 i‡(!(
evíts
 & (
EV_READ
|
EV_WRITE
)))

226 
	`evít_debug
(("%s:áddögÉvíàf‹ %d", 
__func__
, ()
fd
));

227 i‡(
evíts
 & 
EV_READ
) {

228 i‡(
	`do_fd_£t
(
wö32›
, 
idx
, 
fd
, 1)<0)

231 i‡(
evíts
 & 
EV_WRITE
) {

232 i‡(
	`do_fd_£t
(
wö32›
, 
idx
, 
fd
, 0)<0)

236 
	}
}

239 
	$wö32_dñ
(
evít_ba£
 *
ba£
, 
evutû_sockë_t
 
fd
, 
ﬁd
, 
evíts
,

240 *
_idx
)

242 
wö32›
 *wö32› = 
ba£
->
evba£
;

243 
idx_öfo
 *
idx
 = 
_idx
;

245 
	`evít_debug
(("%s: RemovögÉvíàf‹ "
EV_SOCK_FMT
,

246 
__func__
, 
	`EV_SOCK_ARG
(
fd
)));

247 i‡(
evíts
 & 
EV_READ
)

248 
	`do_fd_˛ór
(
ba£
, 
wö32›
, 
idx
, 1);

249 i‡(
evíts
 & 
EV_WRITE
)

250 
	`do_fd_˛ór
(
ba£
, 
wö32›
, 
idx
, 0);

253 
	}
}

256 
	$fd_£t_c›y
(
wö_fd_£t
 *
out
, c⁄° wö_fd_£à*
ö
)

258 
out
->
fd_cou¡
 = 
ö
->fd_count;

259 
	`mem˝y
(
out
->
fd_¨øy
, 
ö
->fd_¨øy, in->
fd_cou¡
 * ((
SOCKET
)));

260 
	}
}

274 
	$wö32_di•©ch
(
evít_ba£
 *
ba£
, 
timevÆ
 *
tv
)

276 
wö32›
 *wö32› = 
ba£
->
evba£
;

277 
ªs
 = 0;

278 
j
, 
i
;

279 
fd_cou¡
;

280 
SOCKET
 
s
;

282 i‡(
wö32›
->
ªsize_out_£ts
) {

283 
size_t
 
size
 = 
	`FD_SET_ALLOC_SIZE
(
wö32›
->
num_fds_ö_fd_£ts
);

284 i‡(!(
wö32›
->
ªad£t_out
 = 
	`mm_ªÆloc
(wö32›->ªad£t_out, 
size
)))

286 i‡(!(
wö32›
->
ex£t_out
 = 
	`mm_ªÆloc
(wö32›->ex£t_out, 
size
)))

288 i‡(!(
wö32›
->
wrôe£t_out
 = 
	`mm_ªÆloc
(wö32›->wrôe£t_out, 
size
)))

290 
wö32›
->
ªsize_out_£ts
 = 0;

293 
	`fd_£t_c›y
(
wö32›
->
ªad£t_out
, wö32›->
ªad£t_ö
);

294 
	`fd_£t_c›y
(
wö32›
->
ex£t_out
, wö32›->
wrôe£t_ö
);

295 
	`fd_£t_c›y
(
wö32›
->
wrôe£t_out
, wö32›->
wrôe£t_ö
);

297 
fd_cou¡
 =

298 (
wö32›
->
ªad£t_out
->
fd_cou¡
 > wö32›->
wrôe£t_out
->fd_count) ?

299 
wö32›
->
ªad£t_out
->
fd_cou¡
 : wö32›->
wrôe£t_out
->fd_count;

301 i‡(!
fd_cou¡
) {

302 
m£c
 = 
tv
 ? 
	`evutû_tv_to_m£c
—vË: 
LONG_MAX
;

304 i‡(
m£c
 < 0)

305 
m£c
 = 
LONG_MAX
;

307 
	`SÀï
(
m£c
);

311 
	`EVBASE_RELEASE_LOCK
(
ba£
, 
th_ba£_lock
);

313 
ªs
 = 
	`£À˘
(
fd_cou¡
,

314 (
fd_£t
*)
wö32›
->
ªad£t_out
,

315 (
fd_£t
*)
wö32›
->
wrôe£t_out
,

316 (
fd_£t
*)
wö32›
->
ex£t_out
, 
tv
);

318 
	`EVBASE_ACQUIRE_LOCK
(
ba£
, 
th_ba£_lock
);

320 
	`evít_debug
(("%s: sñe˘Ñëu∫ed %d", 
__func__
, 
ªs
));

322 i‡(
ªs
 <= 0) {

323  
ªs
;

326 i‡(
wö32›
->
ªad£t_out
->
fd_cou¡
) {

327 
i
 = 
	`ønd
(Ë% 
wö32›
->
ªad£t_out
->
fd_cou¡
;

328 
j
=0; j<
wö32›
->
ªad£t_out
->
fd_cou¡
; ++j) {

329 i‡(++
i
 >
wö32›
->
ªad£t_out
->
fd_cou¡
)

330 
i
 = 0;

331 
s
 = 
wö32›
->
ªad£t_out
->
fd_¨øy
[
i
];

332 
	`evm≠_io_a˘ive
(
ba£
, 
s
, 
EV_READ
);

335 i‡(
wö32›
->
ex£t_out
->
fd_cou¡
) {

336 
i
 = 
	`ønd
(Ë% 
wö32›
->
ex£t_out
->
fd_cou¡
;

337 
j
=0; j<
wö32›
->
ex£t_out
->
fd_cou¡
; ++j) {

338 i‡(++
i
 >
wö32›
->
ex£t_out
->
fd_cou¡
)

339 
i
 = 0;

340 
s
 = 
wö32›
->
ex£t_out
->
fd_¨øy
[
i
];

341 
	`evm≠_io_a˘ive
(
ba£
, 
s
, 
EV_WRITE
);

344 i‡(
wö32›
->
wrôe£t_out
->
fd_cou¡
) {

345 
SOCKET
 
s
;

346 
i
 = 
	`ønd
(Ë% 
wö32›
->
wrôe£t_out
->
fd_cou¡
;

347 
j
=0; j<
wö32›
->
wrôe£t_out
->
fd_cou¡
; ++j) {

348 i‡(++
i
 >
wö32›
->
wrôe£t_out
->
fd_cou¡
)

349 
i
 = 0;

350 
s
 = 
wö32›
->
wrôe£t_out
->
fd_¨øy
[
i
];

351 
	`evm≠_io_a˘ive
(
ba£
, 
s
, 
EV_WRITE
);

355 
	}
}

358 
	$wö32_dóŒoc
(
evít_ba£
 *
_ba£
)

360 
wö32›
 *wö32› = 
_ba£
->
evba£
;

362 
	`evsig_dóŒoc
(
_ba£
);

363 i‡(
wö32›
->
ªad£t_ö
)

364 
	`mm_‰ì
(
wö32›
->
ªad£t_ö
);

365 i‡(
wö32›
->
wrôe£t_ö
)

366 
	`mm_‰ì
(
wö32›
->
wrôe£t_ö
);

367 i‡(
wö32›
->
ªad£t_out
)

368 
	`mm_‰ì
(
wö32›
->
ªad£t_out
);

369 i‡(
wö32›
->
wrôe£t_out
)

370 
	`mm_‰ì
(
wö32›
->
wrôe£t_out
);

371 i‡(
wö32›
->
ex£t_out
)

372 
	`mm_‰ì
(
wö32›
->
ex£t_out
);

375 
	`mem£t
(
wö32›
, 0, (win32op));

376 
	`mm_‰ì
(
wö32›
);

377 
	}
}

	@
1
.
0
128
2387
WIN32-Code/event2/event-config.h
WIN32-Code/tree.h
arc4random.c
buffer.c
buffer_iocp.c
bufferevent-internal.h
bufferevent.c
bufferevent_async.c
bufferevent_filter.c
bufferevent_openssl.c
bufferevent_pair.c
bufferevent_ratelim.c
bufferevent_sock.c
changelist-internal.h
compat/sys/queue.h
config.h
defer-internal.h
devpoll.c
epoll.c
epoll_sub.c
evbuffer-internal.h
evdns.c
evdns.h
event-internal.h
event.c
event.h
event_iocp.c
event_tagging.c
evhttp.h
evmap-internal.h
evmap.c
evport.c
evrpc-internal.h
evrpc.c
evrpc.h
evsignal-internal.h
evthread-internal.h
evthread.c
evthread_pthread.c
evthread_win32.c
evutil.c
evutil.h
evutil_rand.c
ht-internal.h
http-internal.h
http.c
include/event2/buffer.h
include/event2/buffer_compat.h
include/event2/bufferevent.h
include/event2/bufferevent_compat.h
include/event2/bufferevent_ssl.h
include/event2/bufferevent_struct.h
include/event2/dns.h
include/event2/dns_compat.h
include/event2/dns_struct.h
include/event2/event-config.h
include/event2/event.h
include/event2/event_compat.h
include/event2/event_struct.h
include/event2/http.h
include/event2/http_compat.h
include/event2/http_struct.h
include/event2/keyvalq_struct.h
include/event2/listener.h
include/event2/rpc.h
include/event2/rpc_compat.h
include/event2/rpc_struct.h
include/event2/tag.h
include/event2/tag_compat.h
include/event2/thread.h
include/event2/util.h
iocp-internal.h
ipv6-internal.h
kqueue.c
listener.c
log-internal.h
log.c
minheap-internal.h
mm-internal.h
poll.c
ratelim-internal.h
sample/dns-example.c
sample/event-test.c
sample/hello-world.c
sample/http-server.c
sample/le-proxy.c
sample/signal-test.c
sample/time-test.c
select.c
signal.c
strlcpy-internal.h
strlcpy.c
test/bench.c
test/bench_cascade.c
test/bench_http.c
test/bench_httpclient.c
test/regress.c
test/regress.gen.c
test/regress.gen.h
test/regress.h
test/regress_buffer.c
test/regress_bufferevent.c
test/regress_dns.c
test/regress_et.c
test/regress_http.c
test/regress_iocp.c
test/regress_listener.c
test/regress_main.c
test/regress_minheap.c
test/regress_rpc.c
test/regress_ssl.c
test/regress_testutils.c
test/regress_testutils.h
test/regress_thread.c
test/regress_util.c
test/regress_zlib.c
test/test-changelist.c
test/test-eof.c
test/test-init.c
test/test-ratelim.c
test/test-time.c
test/test-weof.c
test/tinytest.c
test/tinytest.h
test/tinytest_local.h
test/tinytest_macros.h
util-internal.h
win32select.c
